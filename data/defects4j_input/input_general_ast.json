[{"id": 1, "mappings": {"item": "VAR_1", "index": "VAR_2", "SortOrder": "VAR_3", "i": "VAR_4", "result": "VAR_5", "ASCENDING": "VAR_6", "plot": "VAR_7", "seriesCount": "VAR_8", "dataset": "VAR_9", "LegendItemCollection": "TYPE_1", "LegendItem": "TYPE_2", "CategoryDataset": "TYPE_3", "add": "METHOD_1", "getRowCount": "METHOD_2", "getLegendItems": "METHOD_3", "getRowRenderingOrder": "METHOD_4", "getDataset": "METHOD_5", "getIndexOf": "METHOD_6", "getLegendItem": "METHOD_7", "equals": "METHOD_8", "isSeriesVisibleInLegend": "METHOD_9", "0": "INT_1", "1": "INT_2"}, "nodes": ["MethodDeclaration", "public", "ReferenceType", "LegendItemCollection", "getLegendItems", "LocalVariableDeclaration", "ReferenceType", "LegendItemCollection", "VariableDeclarator", "result", "ClassCreator", "ReferenceType", "LegendItemCollection", "IfStatement", "BinaryOperation", "This", "MemberReference", "plot", "==", "Literal", "null", "BlockStatement", "ReturnStatement", "MemberReference", "result", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "index", "This", "MemberReference", "plot", "MethodInvocation", "getIndexOf", "This", "LocalVariableDeclaration", "ReferenceType", "CategoryDataset", "VariableDeclarator", "dataset", "This", "MemberReference", "plot", "MethodInvocation", "getDataset", "MemberReference", "index", "IfStatement", "BinaryOperation", "MemberReference", "dataset", "!=", "Literal", "null", "BlockStatement", "ReturnStatement", "MemberReference", "result", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "seriesCount", "MethodInvocation", "dataset", "getRowCount", "IfStatement", "MethodInvocation", "plot", "getRowRenderingOrder", "MethodInvocation", "equals", "MemberReference", "SortOrder", "ASCENDING", "BlockStatement", "ForStatement", "ForControl", "VariableDeclaration", "BasicType", "int", "VariableDeclarator", "i", "Literal", "0", "BinaryOperation", "MemberReference", "i", "<", "MemberReference", "seriesCount", "MemberReference", "i", "++", "BlockStatement", "IfStatement", "MethodInvocation", "isSeriesVisibleInLegend", "MemberReference", "i", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "LegendItem", "VariableDeclarator", "item", "MethodInvocation", "getLegendItem", "MemberReference", "index", "MemberReference", "i", "IfStatement", "BinaryOperation", "MemberReference", "item", "!=", "Literal", "null", "BlockStatement", "StatementExpression", "MethodInvocation", "result", "add", "MemberReference", "item", "BlockStatement", "ForStatement", "ForControl", "VariableDeclaration", "BasicType", "int", "VariableDeclarator", "i", "BinaryOperation", "MemberReference", "seriesCount", "-", "Literal", "1", "BinaryOperation", "MemberReference", "i", ">=", "Literal", "0", "MemberReference", "i", "--", "BlockStatement", "IfStatement", "MethodInvocation", "isSeriesVisibleInLegend", "MemberReference", "i", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "LegendItem", "VariableDeclarator", "item", "MethodInvocation", "getLegendItem", "MemberReference", "index", "MemberReference", "i", "IfStatement", "BinaryOperation", "MemberReference", "item", "!=", "Literal", "null", "BlockStatement", "StatementExpression", "MethodInvocation", "result", "add", "MemberReference", "item", "ReturnStatement", "MemberReference", "result"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "body"], [5, 6, "type"], [6, 7, "name"], [5, 8, "declarators"], [8, 9, "name"], [8, 10, "initializer"], [10, 11, "type"], [11, 12, "name"], [0, 13, "body"], [13, 14, "condition"], [14, 15, "operandl"], [15, 16, "selectors"], [16, 17, "member"], [14, 18, "operator"], [14, 19, "operandr"], [19, 20, "value"], [13, 21, "then_statement"], [21, 22, "statements"], [22, 23, "expression"], [23, 24, "member"], [0, 25, "body"], [25, 26, "type"], [26, 27, "name"], [25, 28, "declarators"], [28, 29, "name"], [28, 30, "initializer"], [30, 31, "selectors"], [31, 32, "member"], [30, 33, "selectors"], [33, 34, "member"], [33, 35, "arguments"], [0, 36, "body"], [36, 37, "type"], [37, 38, "name"], [36, 39, "declarators"], [39, 40, "name"], [39, 41, "initializer"], [41, 42, "selectors"], [42, 43, "member"], [41, 44, "selectors"], [44, 45, "member"], [44, 46, "arguments"], [46, 47, "member"], [0, 48, "body"], [48, 49, "condition"], [49, 50, "operandl"], [50, 51, "member"], [49, 52, "operator"], [49, 53, "operandr"], [53, 54, "value"], [48, 55, "then_statement"], [55, 56, "statements"], [56, 57, "expression"], [57, 58, "member"], [0, 59, "body"], [59, 60, "type"], [60, 61, "name"], [59, 62, "declarators"], [62, 63, "name"], [62, 64, "initializer"], [64, 65, "qualifier"], [64, 66, "member"], [0, 67, "body"], [67, 68, "condition"], [68, 69, "qualifier"], [68, 70, "member"], [68, 71, "selectors"], [71, 72, "member"], [71, 73, "arguments"], [73, 74, "qualifier"], [73, 75, "member"], [67, 76, "then_statement"], [76, 77, "statements"], [77, 78, "control"], [78, 79, "init"], [79, 80, "type"], [80, 81, "name"], [79, 82, "declarators"], [82, 83, "name"], [82, 84, "initializer"], [84, 85, "value"], [78, 86, "condition"], [86, 87, "operandl"], [87, 88, "member"], [86, 89, "operator"], [86, 90, "operandr"], [90, 91, "member"], [78, 92, "update"], [92, 93, "member"], [92, 94, "postfix_operators"], [77, 95, "body"], [95, 96, "statements"], [96, 97, "condition"], [97, 98, "member"], [97, 99, "arguments"], [99, 100, "member"], [96, 101, "then_statement"], [101, 102, "statements"], [102, 103, "type"], [103, 104, "name"], [102, 105, "declarators"], [105, 106, "name"], [105, 107, "initializer"], [107, 108, "member"], [107, 109, "arguments"], [109, 110, "member"], [107, 111, "arguments"], [111, 112, "member"], [101, 113, "statements"], [113, 114, "condition"], [114, 115, "operandl"], [115, 116, "member"], [114, 117, "operator"], [114, 118, "operandr"], [118, 119, "value"], [113, 120, "then_statement"], [120, 121, "statements"], [121, 122, "expression"], [122, 123, "qualifier"], [122, 124, "member"], [122, 125, "arguments"], [125, 126, "member"], [67, 127, "else_statement"], [127, 128, "statements"], [128, 129, "control"], [129, 130, "init"], [130, 131, "type"], [131, 132, "name"], [130, 133, "declarators"], [133, 134, "name"], [133, 135, "initializer"], [135, 136, "operandl"], [136, 137, "member"], [135, 138, "operator"], [135, 139, "operandr"], [139, 140, "value"], [129, 141, "condition"], [141, 142, "operandl"], [142, 143, "member"], [141, 144, "operator"], [141, 145, "operandr"], [145, 146, "value"], [129, 147, "update"], [147, 148, "member"], [147, 149, "postfix_operators"], [128, 150, "body"], [150, 151, "statements"], [151, 152, "condition"], [152, 153, "member"], [152, 154, "arguments"], [154, 155, "member"], [151, 156, "then_statement"], [156, 157, "statements"], [157, 158, "type"], [158, 159, "name"], [157, 160, "declarators"], [160, 161, "name"], [160, 162, "initializer"], [162, 163, "member"], [162, 164, "arguments"], [164, 165, "member"], [162, 166, "arguments"], [166, 167, "member"], [156, 168, "statements"], [168, 169, "condition"], [169, 170, "operandl"], [170, 171, "member"], [169, 172, "operator"], [169, 173, "operandr"], [173, 174, "value"], [168, 175, "then_statement"], [175, 176, "statements"], [176, 177, "expression"], [177, 178, "qualifier"], [177, 179, "member"], [177, 180, "arguments"], [180, 181, "member"], [0, 182, "body"], [182, 183, "expression"], [183, 184, "member"]], "rem_roots": [49], "add_roots": []}, {"id": 2, "mappings": {"toolTipText": "VAR_1", "String": "TYPE_1", "generateToolTipFragment": "METHOD_1", "\"\\\" alt=\\\"\\\"\"": "STRING_1", "\" title=\\\"\"": "STRING_2"}, "nodes": ["MethodDeclaration", "public", "ReferenceType", "String", "generateToolTipFragment", "FormalParameter", "ReferenceType", "String", "toolTipText", "ReturnStatement", "BinaryOperation", "BinaryOperation", "Literal", "\" title=\\\"\"", "+", "MemberReference", "toolTipText", "+", "Literal", "\"\\\" alt=\\\"\\\"\""], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [5, 8, "name"], [0, 9, "body"], [9, 10, "expression"], [10, 11, "operandl"], [11, 12, "operandl"], [12, 13, "value"], [11, 14, "operator"], [11, 15, "operandr"], [15, 16, "member"], [10, 17, "operator"], [10, 18, "operandr"], [18, 19, "value"]], "rem_roots": [11], "add_roots": []}, {"id": 3, "mappings": {"p1": "VAR_1", "iterator2": "VAR_2", "p2": "VAR_3", "iterator1": "VAR_4", "seg2": "VAR_5", "seg1": "VAR_6", "d1": "VAR_7", "done": "VAR_8", "d2": "VAR_9", "GeneralPath": "TYPE_1", "PathIterator": "TYPE_2", "Arrays": "TYPE_3", "next": "METHOD_1", "isDone": "METHOD_2", "equal": "METHOD_3", "getPathIterator": "METHOD_4", "getWindingRule": "METHOD_5", "equals": "METHOD_6", "currentSegment": "METHOD_7", "6": "INT_1"}, "nodes": ["MethodDeclaration", "public static", "BasicType", "boolean", "equal", "FormalParameter", "ReferenceType", "GeneralPath", "p1", "FormalParameter", "ReferenceType", "GeneralPath", "p2", "IfStatement", "BinaryOperation", "MemberReference", "p1", "==", "Literal", "null", "BlockStatement", "ReturnStatement", "BinaryOperation", "MemberReference", "p2", "==", "Literal", "null", "IfStatement", "BinaryOperation", "MemberReference", "p2", "==", "Literal", "null", "BlockStatement", "ReturnStatement", "Literal", "false", "IfStatement", "BinaryOperation", "MethodInvocation", "p1", "getWindingRule", "!=", "MethodInvocation", "p2", "getWindingRule", "BlockStatement", "ReturnStatement", "Literal", "false", "LocalVariableDeclaration", "ReferenceType", "PathIterator", "VariableDeclarator", "iterator1", "MethodInvocation", "p1", "getPathIterator", "Literal", "null", "LocalVariableDeclaration", "ReferenceType", "PathIterator", "VariableDeclarator", "iterator2", "MethodInvocation", "p1", "getPathIterator", "Literal", "null", "LocalVariableDeclaration", "BasicType", "double", "None", "VariableDeclarator", "d1", "ArrayCreator", "BasicType", "double", "Literal", "6", "LocalVariableDeclaration", "BasicType", "double", "None", "VariableDeclarator", "d2", "ArrayCreator", "BasicType", "double", "Literal", "6", "LocalVariableDeclaration", "BasicType", "boolean", "VariableDeclarator", "done", "BinaryOperation", "MethodInvocation", "iterator1", "isDone", "&&", "MethodInvocation", "iterator2", "isDone", "WhileStatement", "MemberReference", "!", "done", "BlockStatement", "IfStatement", "BinaryOperation", "MethodInvocation", "iterator1", "isDone", "!=", "MethodInvocation", "iterator2", "isDone", "BlockStatement", "ReturnStatement", "Literal", "false", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "seg1", "MethodInvocation", "iterator1", "currentSegment", "MemberReference", "d1", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "seg2", "MethodInvocation", "iterator2", "currentSegment", "MemberReference", "d2", "IfStatement", "BinaryOperation", "MemberReference", "seg1", "!=", "MemberReference", "seg2", "BlockStatement", "ReturnStatement", "Literal", "false", "IfStatement", "MethodInvocation", "!", "Arrays", "equals", "MemberReference", "d1", "MemberReference", "d2", "BlockStatement", "ReturnStatement", "Literal", "false", "StatementExpression", "MethodInvocation", "iterator1", "next", "StatementExpression", "MethodInvocation", "iterator2", "next", "StatementExpression", "Assignment", "MemberReference", "done", "=", "BinaryOperation", "MethodInvocation", "iterator1", "isDone", "&&", "MethodInvocation", "iterator2", "isDone", "ReturnStatement", "Literal", "true"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [5, 8, "name"], [0, 9, "parameters"], [9, 10, "type"], [10, 11, "name"], [9, 12, "name"], [0, 13, "body"], [13, 14, "condition"], [14, 15, "operandl"], [15, 16, "member"], [14, 17, "operator"], [14, 18, "operandr"], [18, 19, "value"], [13, 20, "then_statement"], [20, 21, "statements"], [21, 22, "expression"], [22, 23, "operandl"], [23, 24, "member"], [22, 25, "operator"], [22, 26, "operandr"], [26, 27, "value"], [0, 28, "body"], [28, 29, "condition"], [29, 30, "operandl"], [30, 31, "member"], [29, 32, "operator"], [29, 33, "operandr"], [33, 34, "value"], [28, 35, "then_statement"], [35, 36, "statements"], [36, 37, "expression"], [37, 38, "value"], [0, 39, "body"], [39, 40, "condition"], [40, 41, "operandl"], [41, 42, "qualifier"], [41, 43, "member"], [40, 44, "operator"], [40, 45, "operandr"], [45, 46, "qualifier"], [45, 47, "member"], [39, 48, "then_statement"], [48, 49, "statements"], [49, 50, "expression"], [50, 51, "value"], [0, 52, "body"], [52, 53, "type"], [53, 54, "name"], [52, 55, "declarators"], [55, 56, "name"], [55, 57, "initializer"], [57, 58, "qualifier"], [57, 59, "member"], [57, 60, "arguments"], [60, 61, "value"], [0, 62, "body"], [62, 63, "type"], [63, 64, "name"], [62, 65, "declarators"], [65, 66, "name"], [65, 67, "initializer"], [67, 68, "qualifier"], [67, 69, "member"], [67, 70, "arguments"], [70, 71, "value"], [0, 72, "body"], [72, 73, "type"], [73, 74, "name"], [73, 75, "dimensions"], [72, 76, "declarators"], [76, 77, "name"], [76, 78, "initializer"], [78, 79, "type"], [79, 80, "name"], [78, 81, "dimensions"], [81, 82, "value"], [0, 83, "body"], [83, 84, "type"], [84, 85, "name"], [84, 86, "dimensions"], [83, 87, "declarators"], [87, 88, "name"], [87, 89, "initializer"], [89, 90, "type"], [90, 91, "name"], [89, 92, "dimensions"], [92, 93, "value"], [0, 94, "body"], [94, 95, "type"], [95, 96, "name"], [94, 97, "declarators"], [97, 98, "name"], [97, 99, "initializer"], [99, 100, "operandl"], [100, 101, "qualifier"], [100, 102, "member"], [99, 103, "operator"], [99, 104, "operandr"], [104, 105, "qualifier"], [104, 106, "member"], [0, 107, "body"], [107, 108, "condition"], [108, 109, "prefix_operators"], [108, 110, "member"], [107, 111, "body"], [111, 112, "statements"], [112, 113, "condition"], [113, 114, "operandl"], [114, 115, "qualifier"], [114, 116, "member"], [113, 117, "operator"], [113, 118, "operandr"], [118, 119, "qualifier"], [118, 120, "member"], [112, 121, "then_statement"], [121, 122, "statements"], [122, 123, "expression"], [123, 124, "value"], [111, 125, "statements"], [125, 126, "type"], [126, 127, "name"], [125, 128, "declarators"], [128, 129, "name"], [128, 130, "initializer"], [130, 131, "qualifier"], [130, 132, "member"], [130, 133, "arguments"], [133, 134, "member"], [111, 135, "statements"], [135, 136, "type"], [136, 137, "name"], [135, 138, "declarators"], [138, 139, "name"], [138, 140, "initializer"], [140, 141, "qualifier"], [140, 142, "member"], [140, 143, "arguments"], [143, 144, "member"], [111, 145, "statements"], [145, 146, "condition"], [146, 147, "operandl"], [147, 148, "member"], [146, 149, "operator"], [146, 150, "operandr"], [150, 151, "member"], [145, 152, "then_statement"], [152, 153, "statements"], [153, 154, "expression"], [154, 155, "value"], [111, 156, "statements"], [156, 157, "condition"], [157, 158, "prefix_operators"], [157, 159, "qualifier"], [157, 160, "member"], [157, 161, "arguments"], [161, 162, "member"], [157, 163, "arguments"], [163, 164, "member"], [156, 165, "then_statement"], [165, 166, "statements"], [166, 167, "expression"], [167, 168, "value"], [111, 169, "statements"], [169, 170, "expression"], [170, 171, "qualifier"], [170, 172, "member"], [111, 173, "statements"], [173, 174, "expression"], [174, 175, "qualifier"], [174, 176, "member"], [111, 177, "statements"], [177, 178, "expression"], [178, 179, "expressionl"], [179, 180, "member"], [178, 181, "type"], [178, 182, "value"], [182, 183, "operandl"], [183, 184, "qualifier"], [183, 185, "member"], [182, 186, "operator"], [182, 187, "operandr"], [187, 188, "qualifier"], [187, 189, "member"], [0, 190, "body"], [190, 191, "expression"], [191, 192, "value"]], "rem_roots": [62], "add_roots": []}, {"id": 4, "mappings": {"lightGray": "VAR_1", "TableOrder": "VAR_2", "BOTTOM": "VAR_3", "sectionPaints": "VAR_4", "seriesTitle": "VAR_5", "BY_COLUMN": "VAR_6", "piePlot": "VAR_7", "BOLD": "VAR_8", "aggregatedItemsKey": "VAR_9", "pieChart": "VAR_10", "aggregatedItemsPaint": "VAR_11", "dataExtractOrder": "VAR_12", "MultiplePiePlot": "VAR_13", "Color": "VAR_14", "dataset": "VAR_15", "RectangleEdge": "VAR_16", "HashMap": "TYPE_1", "Font": "TYPE_2", "CategoryDataset": "TYPE_3", "JFreeChart": "TYPE_4", "TextTitle": "TYPE_5", "PiePlot": "TYPE_6", "setPosition": "METHOD_1", "removeLegend": "METHOD_2", "setTitle": "METHOD_3", "setBackgroundPaint": "METHOD_4", "12": "INT_1", "\"SansSerif\"": "STRING_1", "\"Other\"": "STRING_2", "\"Series Title\"": "STRING_3"}, "nodes": ["ConstructorDeclaration", "public", "MultiplePiePlot", "FormalParameter", "ReferenceType", "CategoryDataset", "dataset", "StatementExpression", "SuperConstructorInvocation", "StatementExpression", "Assignment", "This", "MemberReference", "dataset", "=", "MemberReference", "dataset", "LocalVariableDeclaration", "ReferenceType", "PiePlot", "VariableDeclarator", "piePlot", "ClassCreator", "ReferenceType", "PiePlot", "Literal", "null", "StatementExpression", "Assignment", "This", "MemberReference", "pieChart", "=", "ClassCreator", "ReferenceType", "JFreeChart", "MemberReference", "piePlot", "StatementExpression", "This", "MemberReference", "pieChart", "MethodInvocation", "removeLegend", "StatementExpression", "Assignment", "This", "MemberReference", "dataExtractOrder", "=", "MemberReference", "TableOrder", "BY_COLUMN", "StatementExpression", "This", "MemberReference", "pieChart", "MethodInvocation", "setBackgroundPaint", "Literal", "null", "LocalVariableDeclaration", "ReferenceType", "TextTitle", "VariableDeclarator", "seriesTitle", "ClassCreator", "ReferenceType", "TextTitle", "Literal", "\"Series Title\"", "ClassCreator", "ReferenceType", "Font", "Literal", "\"SansSerif\"", "MemberReference", "Font", "BOLD", "Literal", "12", "StatementExpression", "MethodInvocation", "seriesTitle", "setPosition", "MemberReference", "RectangleEdge", "BOTTOM", "StatementExpression", "This", "MemberReference", "pieChart", "MethodInvocation", "setTitle", "MemberReference", "seriesTitle", "StatementExpression", "Assignment", "This", "MemberReference", "aggregatedItemsKey", "=", "Literal", "\"Other\"", "StatementExpression", "Assignment", "This", "MemberReference", "aggregatedItemsPaint", "=", "MemberReference", "Color", "lightGray", "StatementExpression", "Assignment", "This", "MemberReference", "sectionPaints", "=", "ClassCreator", "ReferenceType", "HashMap"], "edges": [[0, 1, "modifiers"], [0, 2, "name"], [0, 3, "parameters"], [3, 4, "type"], [4, 5, "name"], [3, 6, "name"], [0, 7, "body"], [7, 8, "expression"], [0, 9, "body"], [9, 10, "expression"], [10, 11, "expressionl"], [11, 12, "selectors"], [12, 13, "member"], [10, 14, "type"], [10, 15, "value"], [15, 16, "member"], [0, 17, "body"], [17, 18, "type"], [18, 19, "name"], [17, 20, "declarators"], [20, 21, "name"], [20, 22, "initializer"], [22, 23, "type"], [23, 24, "name"], [22, 25, "arguments"], [25, 26, "value"], [0, 27, "body"], [27, 28, "expression"], [28, 29, "expressionl"], [29, 30, "selectors"], [30, 31, "member"], [28, 32, "type"], [28, 33, "value"], [33, 34, "type"], [34, 35, "name"], [33, 36, "arguments"], [36, 37, "member"], [0, 38, "body"], [38, 39, "expression"], [39, 40, "selectors"], [40, 41, "member"], [39, 42, "selectors"], [42, 43, "member"], [0, 44, "body"], [44, 45, "expression"], [45, 46, "expressionl"], [46, 47, "selectors"], [47, 48, "member"], [45, 49, "type"], [45, 50, "value"], [50, 51, "qualifier"], [50, 52, "member"], [0, 53, "body"], [53, 54, "expression"], [54, 55, "selectors"], [55, 56, "member"], [54, 57, "selectors"], [57, 58, "member"], [57, 59, "arguments"], [59, 60, "value"], [0, 61, "body"], [61, 62, "type"], [62, 63, "name"], [61, 64, "declarators"], [64, 65, "name"], [64, 66, "initializer"], [66, 67, "type"], [67, 68, "name"], [66, 69, "arguments"], [69, 70, "value"], [66, 71, "arguments"], [71, 72, "type"], [72, 73, "name"], [71, 74, "arguments"], [74, 75, "value"], [71, 76, "arguments"], [76, 77, "qualifier"], [76, 78, "member"], [71, 79, "arguments"], [79, 80, "value"], [0, 81, "body"], [81, 82, "expression"], [82, 83, "qualifier"], [82, 84, "member"], [82, 85, "arguments"], [85, 86, "qualifier"], [85, 87, "member"], [0, 88, "body"], [88, 89, "expression"], [89, 90, "selectors"], [90, 91, "member"], [89, 92, "selectors"], [92, 93, "member"], [92, 94, "arguments"], [94, 95, "member"], [0, 96, "body"], [96, 97, "expression"], [97, 98, "expressionl"], [98, 99, "selectors"], [99, 100, "member"], [97, 101, "type"], [97, 102, "value"], [102, 103, "value"], [0, 104, "body"], [104, 105, "expression"], [105, 106, "expressionl"], [106, 107, "selectors"], [107, 108, "member"], [105, 109, "type"], [105, 110, "value"], [110, 111, "qualifier"], [110, 112, "member"], [0, 113, "body"], [113, 114, "expression"], [114, 115, "expressionl"], [115, 116, "selectors"], [116, 117, "member"], [114, 118, "type"], [114, 119, "value"], [119, 120, "type"], [120, 121, "name"]], "rem_roots": [9], "add_roots": []}, {"id": 5, "mappings": {"index": "VAR_1", "backgroundDomainMarkers": "VAR_2", "layer": "VAR_3", "notify": "VAR_4", "FOREGROUND": "VAR_5", "removed": "VAR_6", "marker": "VAR_7", "markers": "VAR_8", "foregroundDomainMarkers": "VAR_9", "ArrayList": "TYPE_1", "Marker": "TYPE_2", "Layer": "TYPE_3", "Integer": "TYPE_4", "fireChangeEvent": "METHOD_1", "remove": "METHOD_2", "removeDomainMarker": "METHOD_3", "get": "METHOD_4"}, "nodes": ["MethodDeclaration", "public", "BasicType", "boolean", "removeDomainMarker", "FormalParameter", "BasicType", "int", "index", "FormalParameter", "ReferenceType", "Marker", "marker", "FormalParameter", "ReferenceType", "Layer", "layer", "FormalParameter", "BasicType", "boolean", "notify", "LocalVariableDeclaration", "ReferenceType", "ArrayList", "VariableDeclarator", "markers", "IfStatement", "BinaryOperation", "MemberReference", "layer", "==", "MemberReference", "Layer", "FOREGROUND", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "markers", "=", "Cast", "ReferenceType", "ArrayList", "This", "MemberReference", "foregroundDomainMarkers", "MethodInvocation", "get", "ClassCreator", "ReferenceType", "Integer", "MemberReference", "index", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "markers", "=", "Cast", "ReferenceType", "ArrayList", "This", "MemberReference", "backgroundDomainMarkers", "MethodInvocation", "get", "ClassCreator", "ReferenceType", "Integer", "MemberReference", "index", "LocalVariableDeclaration", "BasicType", "boolean", "VariableDeclarator", "removed", "MethodInvocation", "markers", "remove", "MemberReference", "marker", "IfStatement", "BinaryOperation", "MemberReference", "removed", "&&", "MemberReference", "notify", "BlockStatement", "StatementExpression", "MethodInvocation", "fireChangeEvent", "ReturnStatement", "MemberReference", "removed"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [5, 8, "name"], [0, 9, "parameters"], [9, 10, "type"], [10, 11, "name"], [9, 12, "name"], [0, 13, "parameters"], [13, 14, "type"], [14, 15, "name"], [13, 16, "name"], [0, 17, "parameters"], [17, 18, "type"], [18, 19, "name"], [17, 20, "name"], [0, 21, "body"], [21, 22, "type"], [22, 23, "name"], [21, 24, "declarators"], [24, 25, "name"], [0, 26, "body"], [26, 27, "condition"], [27, 28, "operandl"], [28, 29, "member"], [27, 30, "operator"], [27, 31, "operandr"], [31, 32, "qualifier"], [31, 33, "member"], [26, 34, "then_statement"], [34, 35, "statements"], [35, 36, "expression"], [36, 37, "expressionl"], [37, 38, "member"], [36, 39, "type"], [36, 40, "value"], [40, 41, "type"], [41, 42, "name"], [40, 43, "expression"], [43, 44, "selectors"], [44, 45, "member"], [43, 46, "selectors"], [46, 47, "member"], [46, 48, "arguments"], [48, 49, "type"], [49, 50, "name"], [48, 51, "arguments"], [51, 52, "member"], [26, 53, "else_statement"], [53, 54, "statements"], [54, 55, "expression"], [55, 56, "expressionl"], [56, 57, "member"], [55, 58, "type"], [55, 59, "value"], [59, 60, "type"], [60, 61, "name"], [59, 62, "expression"], [62, 63, "selectors"], [63, 64, "member"], [62, 65, "selectors"], [65, 66, "member"], [65, 67, "arguments"], [67, 68, "type"], [68, 69, "name"], [67, 70, "arguments"], [70, 71, "member"], [0, 72, "body"], [72, 73, "type"], [73, 74, "name"], [72, 75, "declarators"], [75, 76, "name"], [75, 77, "initializer"], [77, 78, "qualifier"], [77, 79, "member"], [77, 80, "arguments"], [80, 81, "member"], [0, 82, "body"], [82, 83, "condition"], [83, 84, "operandl"], [84, 85, "member"], [83, 86, "operator"], [83, 87, "operandr"], [87, 88, "member"], [82, 89, "then_statement"], [89, 90, "statements"], [90, 91, "expression"], [91, 92, "member"], [0, 93, "body"], [93, 94, "expression"], [94, 95, "member"]], "rem_roots": [72], "add_roots": []}, {"id": 6, "mappings": {"outlinePaint": "VAR_1", "outlineStroke": "VAR_2", "alpha": "VAR_3", "paint": "VAR_4", "ValueMarker": "VAR_5", "value": "VAR_6", "stroke": "VAR_7", "Stroke": "TYPE_1", "Paint": "TYPE_2"}, "nodes": ["ConstructorDeclaration", "public", "ValueMarker", "FormalParameter", "BasicType", "double", "value", "FormalParameter", "ReferenceType", "Paint", "paint", "FormalParameter", "ReferenceType", "Stroke", "stroke", "FormalParameter", "ReferenceType", "Paint", "outlinePaint", "FormalParameter", "ReferenceType", "Stroke", "outlineStroke", "FormalParameter", "BasicType", "float", "alpha", "StatementExpression", "SuperConstructorInvocation", "MemberReference", "paint", "MemberReference", "stroke", "MemberReference", "paint", "MemberReference", "stroke", "MemberReference", "alpha", "StatementExpression", "Assignment", "This", "MemberReference", "value", "=", "MemberReference", "value"], "edges": [[0, 1, "modifiers"], [0, 2, "name"], [0, 3, "parameters"], [3, 4, "type"], [4, 5, "name"], [3, 6, "name"], [0, 7, "parameters"], [7, 8, "type"], [8, 9, "name"], [7, 10, "name"], [0, 11, "parameters"], [11, 12, "type"], [12, 13, "name"], [11, 14, "name"], [0, 15, "parameters"], [15, 16, "type"], [16, 17, "name"], [15, 18, "name"], [0, 19, "parameters"], [19, 20, "type"], [20, 21, "name"], [19, 22, "name"], [0, 23, "parameters"], [23, 24, "type"], [24, 25, "name"], [23, 26, "name"], [0, 27, "body"], [27, 28, "expression"], [28, 29, "arguments"], [29, 30, "member"], [28, 31, "arguments"], [31, 32, "member"], [28, 33, "arguments"], [33, 34, "member"], [28, 35, "arguments"], [35, 36, "member"], [28, 37, "arguments"], [37, 38, "member"], [0, 39, "body"], [39, 40, "expression"], [40, 41, "expressionl"], [41, 42, "selectors"], [42, 43, "member"], [40, 44, "type"], [40, 45, "value"], [45, 46, "member"]], "rem_roots": [27], "add_roots": []}, {"id": 7, "mappings": {"upperBound": "VAR_1", "v": "VAR_2", "g": "VAR_3", "lowerBound": "VAR_4", "value": "VAR_5", "Color": "TYPE_1", "Paint": "TYPE_2", "Math": "TYPE_3", "min": "METHOD_1", "max": "METHOD_2", "getPaint": "METHOD_3", "255.0": "FLOAT_1"}, "nodes": ["MethodDeclaration", "public", "ReferenceType", "Paint", "getPaint", "FormalParameter", "BasicType", "double", "value", "LocalVariableDeclaration", "BasicType", "double", "VariableDeclarator", "v", "MethodInvocation", "Math", "max", "MemberReference", "value", "This", "MemberReference", "lowerBound", "StatementExpression", "Assignment", "MemberReference", "v", "=", "MethodInvocation", "Math", "min", "MemberReference", "v", "This", "MemberReference", "upperBound", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "g", "Cast", "BasicType", "int", "BinaryOperation", "BinaryOperation", "BinaryOperation", "MemberReference", "value", "-", "This", "MemberReference", "lowerBound", "/", "BinaryOperation", "This", "MemberReference", "upperBound", "-", "This", "MemberReference", "lowerBound", "*", "Literal", "255.0", "ReturnStatement", "ClassCreator", "ReferenceType", "Color", "MemberReference", "g", "MemberReference", "g", "MemberReference", "g"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [5, 8, "name"], [0, 9, "body"], [9, 10, "type"], [10, 11, "name"], [9, 12, "declarators"], [12, 13, "name"], [12, 14, "initializer"], [14, 15, "qualifier"], [14, 16, "member"], [14, 17, "arguments"], [17, 18, "member"], [14, 19, "arguments"], [19, 20, "selectors"], [20, 21, "member"], [0, 22, "body"], [22, 23, "expression"], [23, 24, "expressionl"], [24, 25, "member"], [23, 26, "type"], [23, 27, "value"], [27, 28, "qualifier"], [27, 29, "member"], [27, 30, "arguments"], [30, 31, "member"], [27, 32, "arguments"], [32, 33, "selectors"], [33, 34, "member"], [0, 35, "body"], [35, 36, "type"], [36, 37, "name"], [35, 38, "declarators"], [38, 39, "name"], [38, 40, "initializer"], [40, 41, "type"], [41, 42, "name"], [40, 43, "expression"], [43, 44, "operandl"], [44, 45, "operandl"], [45, 46, "operandl"], [46, 47, "member"], [45, 48, "operator"], [45, 49, "operandr"], [49, 50, "selectors"], [50, 51, "member"], [44, 52, "operator"], [44, 53, "operandr"], [53, 54, "operandl"], [54, 55, "selectors"], [55, 56, "member"], [53, 57, "operator"], [53, 58, "operandr"], [58, 59, "selectors"], [59, 60, "member"], [43, 61, "operator"], [43, 62, "operandr"], [62, 63, "value"], [0, 64, "body"], [64, 65, "expression"], [65, 66, "type"], [66, 67, "name"], [65, 68, "arguments"], [68, 69, "member"], [65, 70, "arguments"], [70, 71, "member"], [65, 72, "arguments"], [72, 73, "member"]], "rem_roots": [35], "add_roots": []}, {"id": 8, "mappings": {"rangeIndex": "VAR_1", "annotations": "VAR_2", "axis": "VAR_3", "result": "VAR_4", "domainIndex": "VAR_5", "iterator": "VAR_6", "xyabi": "VAR_7", "mappedDatasets": "VAR_8", "annotation": "VAR_9", "a": "VAR_10", "c": "VAR_11", "d": "VAR_12", "i": "VAR_13", "includedAnnotations": "VAR_14", "it": "VAR_15", "isDomainAxis": "VAR_16", "r": "VAR_17", "ArrayList": "TYPE_1", "ValueAxis": "TYPE_2", "Iterator": "TYPE_3", "List": "TYPE_4", "XYItemRenderer": "TYPE_5", "DatasetUtilities": "TYPE_6", "XYAnnotation": "TYPE_7", "XYAnnotationBoundsInfo": "TYPE_8", "Range": "TYPE_9", "Integer": "TYPE_10", "Collection": "TYPE_11", "XYDataset": "TYPE_12", "next": "METHOD_1", "getRangeAxisIndex": "METHOD_2", "getRendererForDataset": "METHOD_3", "findDomainBounds": "METHOD_4", "getXRange": "METHOD_5", "getDomainAxisIndex": "METHOD_6", "combine": "METHOD_7", "add": "METHOD_8", "hasNext": "METHOD_9", "findRangeBounds": "METHOD_10", "getAnnotations": "METHOD_11", "addAll": "METHOD_12", "getDataRange": "METHOD_13", "getYRange": "METHOD_14", "getDatasetsMappedToRangeAxis": "METHOD_15", "getIncludeInDataBounds": "METHOD_16", "getDatasetsMappedToDomainAxis": "METHOD_17", "0": "INT_1"}, "nodes": ["MethodDeclaration", "public", "ReferenceType", "Range", "getDataRange", "FormalParameter", "ReferenceType", "ValueAxis", "axis", "LocalVariableDeclaration", "ReferenceType", "Range", "VariableDeclarator", "result", "Literal", "null", "LocalVariableDeclaration", "ReferenceType", "List", "VariableDeclarator", "mappedDatasets", "ClassCreator", "ReferenceType", "ArrayList", "LocalVariableDeclaration", "ReferenceType", "List", "VariableDeclarator", "includedAnnotations", "ClassCreator", "ReferenceType", "ArrayList", "LocalVariableDeclaration", "BasicType", "boolean", "VariableDeclarator", "isDomainAxis", "Literal", "true", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "domainIndex", "MethodInvocation", "getDomainAxisIndex", "MemberReference", "axis", "IfStatement", "BinaryOperation", "MemberReference", "domainIndex", ">=", "Literal", "0", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "isDomainAxis", "=", "Literal", "true", "StatementExpression", "MethodInvocation", "mappedDatasets", "addAll", "MethodInvocation", "getDatasetsMappedToDomainAxis", "ClassCreator", "ReferenceType", "Integer", "MemberReference", "domainIndex", "IfStatement", "BinaryOperation", "MemberReference", "domainIndex", "==", "Literal", "0", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "Iterator", "VariableDeclarator", "iterator", "This", "MemberReference", "annotations", "MethodInvocation", "iterator", "WhileStatement", "MethodInvocation", "iterator", "hasNext", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "XYAnnotation", "VariableDeclarator", "annotation", "Cast", "ReferenceType", "XYAnnotation", "MethodInvocation", "iterator", "next", "IfStatement", "BinaryOperation", "MemberReference", "annotation", "instanceof", "ReferenceType", "XYAnnotationBoundsInfo", "BlockStatement", "StatementExpression", "MethodInvocation", "includedAnnotations", "add", "MemberReference", "annotation", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "rangeIndex", "MethodInvocation", "getRangeAxisIndex", "MemberReference", "axis", "IfStatement", "BinaryOperation", "MemberReference", "rangeIndex", ">=", "Literal", "0", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "isDomainAxis", "=", "Literal", "false", "StatementExpression", "MethodInvocation", "mappedDatasets", "addAll", "MethodInvocation", "getDatasetsMappedToRangeAxis", "ClassCreator", "ReferenceType", "Integer", "MemberReference", "rangeIndex", "IfStatement", "BinaryOperation", "MemberReference", "rangeIndex", "==", "Literal", "0", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "Iterator", "VariableDeclarator", "iterator", "This", "MemberReference", "annotations", "MethodInvocation", "iterator", "WhileStatement", "MethodInvocation", "iterator", "hasNext", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "XYAnnotation", "VariableDeclarator", "annotation", "Cast", "ReferenceType", "XYAnnotation", "MethodInvocation", "iterator", "next", "IfStatement", "BinaryOperation", "MemberReference", "annotation", "instanceof", "ReferenceType", "XYAnnotationBoundsInfo", "BlockStatement", "StatementExpression", "MethodInvocation", "includedAnnotations", "add", "MemberReference", "annotation", "LocalVariableDeclaration", "ReferenceType", "Iterator", "VariableDeclarator", "iterator", "MethodInvocation", "mappedDatasets", "iterator", "WhileStatement", "MethodInvocation", "iterator", "hasNext", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "XYDataset", "VariableDeclarator", "d", "Cast", "ReferenceType", "XYDataset", "MethodInvocation", "iterator", "next", "IfStatement", "BinaryOperation", "MemberReference", "d", "!=", "Literal", "null", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "XYItemRenderer", "VariableDeclarator", "r", "MethodInvocation", "getRendererForDataset", "MemberReference", "d", "IfStatement", "MemberReference", "isDomainAxis", "BlockStatement", "IfStatement", "BinaryOperation", "MemberReference", "r", "!=", "Literal", "null", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "result", "=", "MethodInvocation", "Range", "combine", "MemberReference", "result", "MethodInvocation", "r", "findDomainBounds", "MemberReference", "d", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "result", "=", "MethodInvocation", "Range", "combine", "MemberReference", "result", "MethodInvocation", "DatasetUtilities", "findDomainBounds", "MemberReference", "d", "BlockStatement", "IfStatement", "BinaryOperation", "MemberReference", "r", "!=", "Literal", "null", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "result", "=", "MethodInvocation", "Range", "combine", "MemberReference", "result", "MethodInvocation", "r", "findRangeBounds", "MemberReference", "d", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "result", "=", "MethodInvocation", "Range", "combine", "MemberReference", "result", "MethodInvocation", "DatasetUtilities", "findRangeBounds", "MemberReference", "d", "LocalVariableDeclaration", "ReferenceType", "Collection", "VariableDeclarator", "c", "MethodInvocation", "r", "getAnnotations", "LocalVariableDeclaration", "ReferenceType", "Iterator", "VariableDeclarator", "i", "MethodInvocation", "c", "iterator", "WhileStatement", "MethodInvocation", "i", "hasNext", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "XYAnnotation", "VariableDeclarator", "a", "Cast", "ReferenceType", "XYAnnotation", "MethodInvocation", "i", "next", "IfStatement", "BinaryOperation", "MemberReference", "a", "instanceof", "ReferenceType", "XYAnnotationBoundsInfo", "BlockStatement", "StatementExpression", "MethodInvocation", "includedAnnotations", "add", "MemberReference", "a", "LocalVariableDeclaration", "ReferenceType", "Iterator", "VariableDeclarator", "it", "MethodInvocation", "includedAnnotations", "iterator", "WhileStatement", "MethodInvocation", "it", "hasNext", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "XYAnnotationBoundsInfo", "VariableDeclarator", "xyabi", "Cast", "ReferenceType", "XYAnnotationBoundsInfo", "MethodInvocation", "it", "next", "IfStatement", "MethodInvocation", "xyabi", "getIncludeInDataBounds", "BlockStatement", "IfStatement", "MemberReference", "isDomainAxis", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "result", "=", "MethodInvocation", "Range", "combine", "MemberReference", "result", "MethodInvocation", "xyabi", "getXRange", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "result", "=", "MethodInvocation", "Range", "combine", "MemberReference", "result", "MethodInvocation", "xyabi", "getYRange", "ReturnStatement", "MemberReference", "result"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [5, 8, "name"], [0, 9, "body"], [9, 10, "type"], [10, 11, "name"], [9, 12, "declarators"], [12, 13, "name"], [12, 14, "initializer"], [14, 15, "value"], [0, 16, "body"], [16, 17, "type"], [17, 18, "name"], [16, 19, "declarators"], [19, 20, "name"], [19, 21, "initializer"], [21, 22, "type"], [22, 23, "name"], [0, 24, "body"], [24, 25, "type"], [25, 26, "name"], [24, 27, "declarators"], [27, 28, "name"], [27, 29, "initializer"], [29, 30, "type"], [30, 31, "name"], [0, 32, "body"], [32, 33, "type"], [33, 34, "name"], [32, 35, "declarators"], [35, 36, "name"], [35, 37, "initializer"], [37, 38, "value"], [0, 39, "body"], [39, 40, "type"], [40, 41, "name"], [39, 42, "declarators"], [42, 43, "name"], [42, 44, "initializer"], [44, 45, "member"], [44, 46, "arguments"], [46, 47, "member"], [0, 48, "body"], [48, 49, "condition"], [49, 50, "operandl"], [50, 51, "member"], [49, 52, "operator"], [49, 53, "operandr"], [53, 54, "value"], [48, 55, "then_statement"], [55, 56, "statements"], [56, 57, "expression"], [57, 58, "expressionl"], [58, 59, "member"], [57, 60, "type"], [57, 61, "value"], [61, 62, "value"], [55, 63, "statements"], [63, 64, "expression"], [64, 65, "qualifier"], [64, 66, "member"], [64, 67, "arguments"], [67, 68, "member"], [67, 69, "arguments"], [69, 70, "type"], [70, 71, "name"], [69, 72, "arguments"], [72, 73, "member"], [55, 74, "statements"], [74, 75, "condition"], [75, 76, "operandl"], [76, 77, "member"], [75, 78, "operator"], [75, 79, "operandr"], [79, 80, "value"], [74, 81, "then_statement"], [81, 82, "statements"], [82, 83, "type"], [83, 84, "name"], [82, 85, "declarators"], [85, 86, "name"], [85, 87, "initializer"], [87, 88, "selectors"], [88, 89, "member"], [87, 90, "selectors"], [90, 91, "member"], [81, 92, "statements"], [92, 93, "condition"], [93, 94, "qualifier"], [93, 95, "member"], [92, 96, "body"], [96, 97, "statements"], [97, 98, "type"], [98, 99, "name"], [97, 100, "declarators"], [100, 101, "name"], [100, 102, "initializer"], [102, 103, "type"], [103, 104, "name"], [102, 105, "expression"], [105, 106, "qualifier"], [105, 107, "member"], [96, 108, "statements"], [108, 109, "condition"], [109, 110, "operandl"], [110, 111, "member"], [109, 112, "operator"], [109, 113, "operandr"], [113, 114, "name"], [108, 115, "then_statement"], [115, 116, "statements"], [116, 117, "expression"], [117, 118, "qualifier"], [117, 119, "member"], [117, 120, "arguments"], [120, 121, "member"], [0, 122, "body"], [122, 123, "type"], [123, 124, "name"], [122, 125, "declarators"], [125, 126, "name"], [125, 127, "initializer"], [127, 128, "member"], [127, 129, "arguments"], [129, 130, "member"], [0, 131, "body"], [131, 132, "condition"], [132, 133, "operandl"], [133, 134, "member"], [132, 135, "operator"], [132, 136, "operandr"], [136, 137, "value"], [131, 138, "then_statement"], [138, 139, "statements"], [139, 140, "expression"], [140, 141, "expressionl"], [141, 142, "member"], [140, 143, "type"], [140, 144, "value"], [144, 145, "value"], [138, 146, "statements"], [146, 147, "expression"], [147, 148, "qualifier"], [147, 149, "member"], [147, 150, "arguments"], [150, 151, "member"], [150, 152, "arguments"], [152, 153, "type"], [153, 154, "name"], [152, 155, "arguments"], [155, 156, "member"], [138, 157, "statements"], [157, 158, "condition"], [158, 159, "operandl"], [159, 160, "member"], [158, 161, "operator"], [158, 162, "operandr"], [162, 163, "value"], [157, 164, "then_statement"], [164, 165, "statements"], [165, 166, "type"], [166, 167, "name"], [165, 168, "declarators"], [168, 169, "name"], [168, 170, "initializer"], [170, 171, "selectors"], [171, 172, "member"], [170, 173, "selectors"], [173, 174, "member"], [164, 175, "statements"], [175, 176, "condition"], [176, 177, "qualifier"], [176, 178, "member"], [175, 179, "body"], [179, 180, "statements"], [180, 181, "type"], [181, 182, "name"], [180, 183, "declarators"], [183, 184, "name"], [183, 185, "initializer"], [185, 186, "type"], [186, 187, "name"], [185, 188, "expression"], [188, 189, "qualifier"], [188, 190, "member"], [179, 191, "statements"], [191, 192, "condition"], [192, 193, "operandl"], [193, 194, "member"], [192, 195, "operator"], [192, 196, "operandr"], [196, 197, "name"], [191, 198, "then_statement"], [198, 199, "statements"], [199, 200, "expression"], [200, 201, "qualifier"], [200, 202, "member"], [200, 203, "arguments"], [203, 204, "member"], [0, 205, "body"], [205, 206, "type"], [206, 207, "name"], [205, 208, "declarators"], [208, 209, "name"], [208, 210, "initializer"], [210, 211, "qualifier"], [210, 212, "member"], [0, 213, "body"], [213, 214, "condition"], [214, 215, "qualifier"], [214, 216, "member"], [213, 217, "body"], [217, 218, "statements"], [218, 219, "type"], [219, 220, "name"], [218, 221, "declarators"], [221, 222, "name"], [221, 223, "initializer"], [223, 224, "type"], [224, 225, "name"], [223, 226, "expression"], [226, 227, "qualifier"], [226, 228, "member"], [217, 229, "statements"], [229, 230, "condition"], [230, 231, "operandl"], [231, 232, "member"], [230, 233, "operator"], [230, 234, "operandr"], [234, 235, "value"], [229, 236, "then_statement"], [236, 237, "statements"], [237, 238, "type"], [238, 239, "name"], [237, 240, "declarators"], [240, 241, "name"], [240, 242, "initializer"], [242, 243, "member"], [242, 244, "arguments"], [244, 245, "member"], [236, 246, "statements"], [246, 247, "condition"], [247, 248, "member"], [246, 249, "then_statement"], [249, 250, "statements"], [250, 251, "condition"], [251, 252, "operandl"], [252, 253, "member"], [251, 254, "operator"], [251, 255, "operandr"], [255, 256, "value"], [250, 257, "then_statement"], [257, 258, "statements"], [258, 259, "expression"], [259, 260, "expressionl"], [260, 261, "member"], [259, 262, "type"], [259, 263, "value"], [263, 264, "qualifier"], [263, 265, "member"], [263, 266, "arguments"], [266, 267, "member"], [263, 268, "arguments"], [268, 269, "qualifier"], [268, 270, "member"], [268, 271, "arguments"], [271, 272, "member"], [250, 273, "else_statement"], [273, 274, "statements"], [274, 275, "expression"], [275, 276, "expressionl"], [276, 277, "member"], [275, 278, "type"], [275, 279, "value"], [279, 280, "qualifier"], [279, 281, "member"], [279, 282, "arguments"], [282, 283, "member"], [279, 284, "arguments"], [284, 285, "qualifier"], [284, 286, "member"], [284, 287, "arguments"], [287, 288, "member"], [246, 289, "else_statement"], [289, 290, "statements"], [290, 291, "condition"], [291, 292, "operandl"], [292, 293, "member"], [291, 294, "operator"], [291, 295, "operandr"], [295, 296, "value"], [290, 297, "then_statement"], [297, 298, "statements"], [298, 299, "expression"], [299, 300, "expressionl"], [300, 301, "member"], [299, 302, "type"], [299, 303, "value"], [303, 304, "qualifier"], [303, 305, "member"], [303, 306, "arguments"], [306, 307, "member"], [303, 308, "arguments"], [308, 309, "qualifier"], [308, 310, "member"], [308, 311, "arguments"], [311, 312, "member"], [290, 313, "else_statement"], [313, 314, "statements"], [314, 315, "expression"], [315, 316, "expressionl"], [316, 317, "member"], [315, 318, "type"], [315, 319, "value"], [319, 320, "qualifier"], [319, 321, "member"], [319, 322, "arguments"], [322, 323, "member"], [319, 324, "arguments"], [324, 325, "qualifier"], [324, 326, "member"], [324, 327, "arguments"], [327, 328, "member"], [236, 329, "statements"], [329, 330, "type"], [330, 331, "name"], [329, 332, "declarators"], [332, 333, "name"], [332, 334, "initializer"], [334, 335, "qualifier"], [334, 336, "member"], [236, 337, "statements"], [337, 338, "type"], [338, 339, "name"], [337, 340, "declarators"], [340, 341, "name"], [340, 342, "initializer"], [342, 343, "qualifier"], [342, 344, "member"], [236, 345, "statements"], [345, 346, "condition"], [346, 347, "qualifier"], [346, 348, "member"], [345, 349, "body"], [349, 350, "statements"], [350, 351, "type"], [351, 352, "name"], [350, 353, "declarators"], [353, 354, "name"], [353, 355, "initializer"], [355, 356, "type"], [356, 357, "name"], [355, 358, "expression"], [358, 359, "qualifier"], [358, 360, "member"], [349, 361, "statements"], [361, 362, "condition"], [362, 363, "operandl"], [363, 364, "member"], [362, 365, "operator"], [362, 366, "operandr"], [366, 367, "name"], [361, 368, "then_statement"], [368, 369, "statements"], [369, 370, "expression"], [370, 371, "qualifier"], [370, 372, "member"], [370, 373, "arguments"], [373, 374, "member"], [0, 375, "body"], [375, 376, "type"], [376, 377, "name"], [375, 378, "declarators"], [378, 379, "name"], [378, 380, "initializer"], [380, 381, "qualifier"], [380, 382, "member"], [0, 383, "body"], [383, 384, "condition"], [384, 385, "qualifier"], [384, 386, "member"], [383, 387, "body"], [387, 388, "statements"], [388, 389, "type"], [389, 390, "name"], [388, 391, "declarators"], [391, 392, "name"], [391, 393, "initializer"], [393, 394, "type"], [394, 395, "name"], [393, 396, "expression"], [396, 397, "qualifier"], [396, 398, "member"], [387, 399, "statements"], [399, 400, "condition"], [400, 401, "qualifier"], [400, 402, "member"], [399, 403, "then_statement"], [403, 404, "statements"], [404, 405, "condition"], [405, 406, "member"], [404, 407, "then_statement"], [407, 408, "statements"], [408, 409, "expression"], [409, 410, "expressionl"], [410, 411, "member"], [409, 412, "type"], [409, 413, "value"], [413, 414, "qualifier"], [413, 415, "member"], [413, 416, "arguments"], [416, 417, "member"], [413, 418, "arguments"], [418, 419, "qualifier"], [418, 420, "member"], [404, 421, "else_statement"], [421, 422, "statements"], [422, 423, "expression"], [423, 424, "expressionl"], [424, 425, "member"], [423, 426, "type"], [423, 427, "value"], [427, 428, "qualifier"], [427, 429, "member"], [427, 430, "arguments"], [430, 431, "member"], [427, 432, "arguments"], [432, 433, "qualifier"], [432, 434, "member"], [0, 435, "body"], [435, 436, "expression"], [436, 437, "member"]], "rem_roots": [329], "add_roots": []}, {"id": 9, "mappings": {"zone": "VAR_1", "DEFAULT_TIME_ZONE": "VAR_2", "time": "VAR_3", "RegularTimePeriod": "VAR_4", "Week": "VAR_5", "Locale": "TYPE_1", "TimeZone": "TYPE_2", "Date": "TYPE_3", "getDefault": "METHOD_1"}, "nodes": ["ConstructorDeclaration", "public", "Week", "FormalParameter", "ReferenceType", "Date", "time", "FormalParameter", "ReferenceType", "TimeZone", "zone", "StatementExpression", "ExplicitConstructorInvocation", "MemberReference", "time", "MemberReference", "RegularTimePeriod", "DEFAULT_TIME_ZONE", "MethodInvocation", "Locale", "getDefault"], "edges": [[0, 1, "modifiers"], [0, 2, "name"], [0, 3, "parameters"], [3, 4, "type"], [4, 5, "name"], [3, 6, "name"], [0, 7, "parameters"], [7, 8, "type"], [8, 9, "name"], [7, 10, "name"], [0, 11, "body"], [11, 12, "expression"], [12, 13, "arguments"], [13, 14, "member"], [12, 15, "arguments"], [15, 16, "qualifier"], [15, 17, "member"], [12, 18, "arguments"], [18, 19, "qualifier"], [18, 20, "member"]], "rem_roots": [11], "add_roots": []}, {"id": 10, "mappings": {"data": "VAR_1", "start": "VAR_2", "emptyRange": "VAR_3", "startIndex": "VAR_4", "endIndex": "VAR_5", "end": "VAR_6", "copy": "VAR_7", "TimeSeries": "TYPE_1", "ArrayList": "TYPE_2", "java": "TYPE_3", "util": "TYPE_4", "RegularTimePeriod": "TYPE_5", "IllegalArgumentException": "TYPE_6", "CloneNotSupportedException": "TYPE_7", "getIndex": "METHOD_1", "createCopy": "METHOD_2", "compareTo": "METHOD_3", "size": "METHOD_4", "clone": "METHOD_5", "0": "INT_1", "1": "INT_2", "\"Null 'start' argument.\"": "STRING_1", "\"Requires start on or before end.\"": "STRING_2", "\"Null 'end' argument.\"": "STRING_3"}, "nodes": ["MethodDeclaration", "public", "ReferenceType", "TimeSeries", "createCopy", "FormalParameter", "ReferenceType", "RegularTimePeriod", "start", "FormalParameter", "ReferenceType", "RegularTimePeriod", "end", "CloneNotSupportedException", "IfStatement", "BinaryOperation", "MemberReference", "start", "==", "Literal", "null", "BlockStatement", "ThrowStatement", "ClassCreator", "ReferenceType", "IllegalArgumentException", "Literal", "\"Null 'start' argument.\"", "IfStatement", "BinaryOperation", "MemberReference", "end", "==", "Literal", "null", "BlockStatement", "ThrowStatement", "ClassCreator", "ReferenceType", "IllegalArgumentException", "Literal", "\"Null 'end' argument.\"", "IfStatement", "BinaryOperation", "MethodInvocation", "start", "compareTo", "MemberReference", "end", ">", "Literal", "0", "BlockStatement", "ThrowStatement", "ClassCreator", "ReferenceType", "IllegalArgumentException", "Literal", "\"Requires start on or before end.\"", "LocalVariableDeclaration", "BasicType", "boolean", "VariableDeclarator", "emptyRange", "Literal", "false", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "startIndex", "MethodInvocation", "getIndex", "MemberReference", "start", "IfStatement", "BinaryOperation", "MemberReference", "startIndex", "<", "Literal", "0", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "startIndex", "=", "BinaryOperation", "-", "MemberReference", "startIndex", "+", "Literal", "1", "IfStatement", "BinaryOperation", "MemberReference", "startIndex", "==", "This", "MemberReference", "data", "MethodInvocation", "size", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "emptyRange", "=", "Literal", "true", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "endIndex", "MethodInvocation", "getIndex", "MemberReference", "end", "IfStatement", "BinaryOperation", "MemberReference", "endIndex", "<", "Literal", "0", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "endIndex", "=", "BinaryOperation", "-", "MemberReference", "endIndex", "+", "Literal", "1", "StatementExpression", "Assignment", "MemberReference", "endIndex", "=", "BinaryOperation", "MemberReference", "endIndex", "-", "Literal", "1", "IfStatement", "BinaryOperation", "MemberReference", "endIndex", "<", "Literal", "0", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "emptyRange", "=", "Literal", "true", "IfStatement", "MemberReference", "emptyRange", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "TimeSeries", "VariableDeclarator", "copy", "Cast", "ReferenceType", "TimeSeries", "SuperMethodInvocation", "clone", "StatementExpression", "Assignment", "MemberReference", "copy", "data", "=", "ClassCreator", "ReferenceType", "java", "ReferenceType", "util", "ReferenceType", "ArrayList", "ReturnStatement", "MemberReference", "copy", "BlockStatement", "ReturnStatement", "MethodInvocation", "createCopy", "MemberReference", "startIndex", "MemberReference", "endIndex"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [5, 8, "name"], [0, 9, "parameters"], [9, 10, "type"], [10, 11, "name"], [9, 12, "name"], [0, 13, "throws"], [0, 14, "body"], [14, 15, "condition"], [15, 16, "operandl"], [16, 17, "member"], [15, 18, "operator"], [15, 19, "operandr"], [19, 20, "value"], [14, 21, "then_statement"], [21, 22, "statements"], [22, 23, "expression"], [23, 24, "type"], [24, 25, "name"], [23, 26, "arguments"], [26, 27, "value"], [0, 28, "body"], [28, 29, "condition"], [29, 30, "operandl"], [30, 31, "member"], [29, 32, "operator"], [29, 33, "operandr"], [33, 34, "value"], [28, 35, "then_statement"], [35, 36, "statements"], [36, 37, "expression"], [37, 38, "type"], [38, 39, "name"], [37, 40, "arguments"], [40, 41, "value"], [0, 42, "body"], [42, 43, "condition"], [43, 44, "operandl"], [44, 45, "qualifier"], [44, 46, "member"], [44, 47, "arguments"], [47, 48, "member"], [43, 49, "operator"], [43, 50, "operandr"], [50, 51, "value"], [42, 52, "then_statement"], [52, 53, "statements"], [53, 54, "expression"], [54, 55, "type"], [55, 56, "name"], [54, 57, "arguments"], [57, 58, "value"], [0, 59, "body"], [59, 60, "type"], [60, 61, "name"], [59, 62, "declarators"], [62, 63, "name"], [62, 64, "initializer"], [64, 65, "value"], [0, 66, "body"], [66, 67, "type"], [67, 68, "name"], [66, 69, "declarators"], [69, 70, "name"], [69, 71, "initializer"], [71, 72, "member"], [71, 73, "arguments"], [73, 74, "member"], [0, 75, "body"], [75, 76, "condition"], [76, 77, "operandl"], [77, 78, "member"], [76, 79, "operator"], [76, 80, "operandr"], [80, 81, "value"], [75, 82, "then_statement"], [82, 83, "statements"], [83, 84, "expression"], [84, 85, "expressionl"], [85, 86, "member"], [84, 87, "type"], [84, 88, "value"], [88, 89, "prefix_operators"], [88, 90, "operandl"], [90, 91, "member"], [88, 92, "operator"], [88, 93, "operandr"], [93, 94, "value"], [82, 95, "statements"], [95, 96, "condition"], [96, 97, "operandl"], [97, 98, "member"], [96, 99, "operator"], [96, 100, "operandr"], [100, 101, "selectors"], [101, 102, "member"], [100, 103, "selectors"], [103, 104, "member"], [95, 105, "then_statement"], [105, 106, "statements"], [106, 107, "expression"], [107, 108, "expressionl"], [108, 109, "member"], [107, 110, "type"], [107, 111, "value"], [111, 112, "value"], [0, 113, "body"], [113, 114, "type"], [114, 115, "name"], [113, 116, "declarators"], [116, 117, "name"], [116, 118, "initializer"], [118, 119, "member"], [118, 120, "arguments"], [120, 121, "member"], [0, 122, "body"], [122, 123, "condition"], [123, 124, "operandl"], [124, 125, "member"], [123, 126, "operator"], [123, 127, "operandr"], [127, 128, "value"], [122, 129, "then_statement"], [129, 130, "statements"], [130, 131, "expression"], [131, 132, "expressionl"], [132, 133, "member"], [131, 134, "type"], [131, 135, "value"], [135, 136, "prefix_operators"], [135, 137, "operandl"], [137, 138, "member"], [135, 139, "operator"], [135, 140, "operandr"], [140, 141, "value"], [129, 142, "statements"], [142, 143, "expression"], [143, 144, "expressionl"], [144, 145, "member"], [143, 146, "type"], [143, 147, "value"], [147, 148, "operandl"], [148, 149, "member"], [147, 150, "operator"], [147, 151, "operandr"], [151, 152, "value"], [0, 153, "body"], [153, 154, "condition"], [154, 155, "operandl"], [155, 156, "member"], [154, 157, "operator"], [154, 158, "operandr"], [158, 159, "value"], [153, 160, "then_statement"], [160, 161, "statements"], [161, 162, "expression"], [162, 163, "expressionl"], [163, 164, "member"], [162, 165, "type"], [162, 166, "value"], [166, 167, "value"], [0, 168, "body"], [168, 169, "condition"], [169, 170, "member"], [168, 171, "then_statement"], [171, 172, "statements"], [172, 173, "type"], [173, 174, "name"], [172, 175, "declarators"], [175, 176, "name"], [175, 177, "initializer"], [177, 178, "type"], [178, 179, "name"], [177, 180, "expression"], [180, 181, "member"], [171, 182, "statements"], [182, 183, "expression"], [183, 184, "expressionl"], [184, 185, "qualifier"], [184, 186, "member"], [183, 187, "type"], [183, 188, "value"], [188, 189, "type"], [189, 190, "name"], [189, 191, "sub_type"], [191, 192, "name"], [191, 193, "sub_type"], [193, 194, "name"], [171, 195, "statements"], [195, 196, "expression"], [196, 197, "member"], [168, 198, "else_statement"], [198, 199, "statements"], [199, 200, "expression"], [200, 201, "member"], [200, 202, "arguments"], [202, 203, "member"], [200, 204, "arguments"], [204, 205, "member"]], "rem_roots": [154], "add_roots": []}, {"id": 11, "mappings": {"required": "VAR_1", "buff": "VAR_2", "option": "VAR_3", "StringBuffer": "TYPE_1", "Option": "TYPE_2", "getArgName": "METHOD_1", "appendOption": "METHOD_2", "getOpt": "METHOD_3", "getLongOpt": "METHOD_4", "hasArg": "METHOD_5", "append": "METHOD_6", "\">\"": "STRING_1", "\"]\"": "STRING_2", "\"[\"": "STRING_3", "\" <\"": "STRING_4", "\"--\"": "STRING_5", "\"-\"": "STRING_6"}, "nodes": ["MethodDeclaration", "static private", "void", "appendOption", "FormalParameter", "ReferenceType", "StringBuffer", "buff", "FormalParameter", "ReferenceType", "Option", "option", "FormalParameter", "BasicType", "boolean", "required", "IfStatement", "MemberReference", "!", "required", "BlockStatement", "StatementExpression", "MethodInvocation", "buff", "append", "Literal", "\"[\"", "IfStatement", "BinaryOperation", "MethodInvocation", "option", "getOpt", "!=", "Literal", "null", "BlockStatement", "StatementExpression", "MethodInvocation", "buff", "append", "Literal", "\"-\"", "MethodInvocation", "append", "MethodInvocation", "option", "getOpt", "BlockStatement", "StatementExpression", "MethodInvocation", "buff", "append", "Literal", "\"--\"", "MethodInvocation", "append", "MethodInvocation", "option", "getLongOpt", "IfStatement", "BinaryOperation", "MethodInvocation", "option", "hasArg", "&&", "BinaryOperation", "MethodInvocation", "option", "getArgName", "!=", "Literal", "null", "BlockStatement", "StatementExpression", "MethodInvocation", "buff", "append", "Literal", "\" <\"", "MethodInvocation", "append", "MethodInvocation", "option", "getArgName", "MethodInvocation", "append", "Literal", "\">\"", "IfStatement", "MemberReference", "!", "required", "BlockStatement", "StatementExpression", "MethodInvocation", "buff", "append", "Literal", "\"]\""], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [0, 3, "name"], [0, 4, "parameters"], [4, 5, "type"], [5, 6, "name"], [4, 7, "name"], [0, 8, "parameters"], [8, 9, "type"], [9, 10, "name"], [8, 11, "name"], [0, 12, "parameters"], [12, 13, "type"], [13, 14, "name"], [12, 15, "name"], [0, 16, "body"], [16, 17, "condition"], [17, 18, "prefix_operators"], [17, 19, "member"], [16, 20, "then_statement"], [20, 21, "statements"], [21, 22, "expression"], [22, 23, "qualifier"], [22, 24, "member"], [22, 25, "arguments"], [25, 26, "value"], [0, 27, "body"], [27, 28, "condition"], [28, 29, "operandl"], [29, 30, "qualifier"], [29, 31, "member"], [28, 32, "operator"], [28, 33, "operandr"], [33, 34, "value"], [27, 35, "then_statement"], [35, 36, "statements"], [36, 37, "expression"], [37, 38, "qualifier"], [37, 39, "member"], [37, 40, "arguments"], [40, 41, "value"], [37, 42, "selectors"], [42, 43, "member"], [42, 44, "arguments"], [44, 45, "qualifier"], [44, 46, "member"], [27, 47, "else_statement"], [47, 48, "statements"], [48, 49, "expression"], [49, 50, "qualifier"], [49, 51, "member"], [49, 52, "arguments"], [52, 53, "value"], [49, 54, "selectors"], [54, 55, "member"], [54, 56, "arguments"], [56, 57, "qualifier"], [56, 58, "member"], [0, 59, "body"], [59, 60, "condition"], [60, 61, "operandl"], [61, 62, "qualifier"], [61, 63, "member"], [60, 64, "operator"], [60, 65, "operandr"], [65, 66, "operandl"], [66, 67, "qualifier"], [66, 68, "member"], [65, 69, "operator"], [65, 70, "operandr"], [70, 71, "value"], [59, 72, "then_statement"], [72, 73, "statements"], [73, 74, "expression"], [74, 75, "qualifier"], [74, 76, "member"], [74, 77, "arguments"], [77, 78, "value"], [74, 79, "selectors"], [79, 80, "member"], [79, 81, "arguments"], [81, 82, "qualifier"], [81, 83, "member"], [74, 84, "selectors"], [84, 85, "member"], [84, 86, "arguments"], [86, 87, "value"], [0, 88, "body"], [88, 89, "condition"], [89, 90, "prefix_operators"], [89, 91, "member"], [88, 92, "then_statement"], [92, 93, "statements"], [93, 94, "expression"], [94, 95, "qualifier"], [94, 96, "member"], [94, 97, "arguments"], [97, 98, "value"]], "rem_roots": [60], "add_roots": []}, {"id": 12, "mappings": {"padding": "VAR_1", "nextLineTabStop": "VAR_2", "sb": "VAR_3", "pos": "VAR_4", "width": "VAR_5", "text": "VAR_6", "defaultNewLine": "VAR_7", "IllegalStateException": "TYPE_1", "String": "TYPE_2", "StringBuffer": "TYPE_3", "createPadding": "METHOD_1", "rtrim": "METHOD_2", "length": "METHOD_3", "substring": "METHOD_4", "trim": "METHOD_5", "renderWrappedText": "METHOD_6", "findWrapPos": "METHOD_7", "append": "METHOD_8", "0": "INT_1", "1": "INT_2", "\"Total width is less than the width of the argument and indent \"": "STRING_1", "\"- no room for the description\"": "STRING_2"}, "nodes": ["MethodDeclaration", "protected", "ReferenceType", "StringBuffer", "renderWrappedText", "FormalParameter", "ReferenceType", "StringBuffer", "sb", "FormalParameter", "BasicType", "int", "width", "FormalParameter", "BasicType", "int", "nextLineTabStop", "FormalParameter", "ReferenceType", "String", "text", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "pos", "MethodInvocation", "findWrapPos", "MemberReference", "text", "MemberReference", "width", "Literal", "0", "IfStatement", "BinaryOperation", "MemberReference", "pos", "==", "Literal", "-", "1", "BlockStatement", "StatementExpression", "MethodInvocation", "sb", "append", "MethodInvocation", "rtrim", "MemberReference", "text", "ReturnStatement", "MemberReference", "sb", "StatementExpression", "MethodInvocation", "sb", "append", "MethodInvocation", "rtrim", "MethodInvocation", "text", "substring", "Literal", "0", "MemberReference", "pos", "MethodInvocation", "append", "MemberReference", "defaultNewLine", "IfStatement", "BinaryOperation", "MemberReference", "nextLineTabStop", ">=", "MemberReference", "width", "BlockStatement", "ThrowStatement", "ClassCreator", "ReferenceType", "IllegalStateException", "BinaryOperation", "Literal", "\"Total width is less than the width of the argument and indent \"", "+", "Literal", "\"- no room for the description\"", "LocalVariableDeclaration", "final", "ReferenceType", "String", "VariableDeclarator", "padding", "MethodInvocation", "createPadding", "MemberReference", "nextLineTabStop", "WhileStatement", "Literal", "true", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "text", "=", "BinaryOperation", "MemberReference", "padding", "+", "MethodInvocation", "text", "substring", "MemberReference", "pos", "MethodInvocation", "trim", "StatementExpression", "Assignment", "MemberReference", "pos", "=", "MethodInvocation", "findWrapPos", "MemberReference", "text", "MemberReference", "width", "Literal", "0", "IfStatement", "BinaryOperation", "MemberReference", "pos", "==", "Literal", "-", "1", "BlockStatement", "StatementExpression", "MethodInvocation", "sb", "append", "MemberReference", "text", "ReturnStatement", "MemberReference", "sb", "IfStatement", "BinaryOperation", "BinaryOperation", "MethodInvocation", "text", "length", ">", "MemberReference", "width", "&&", "BinaryOperation", "MemberReference", "pos", "==", "BinaryOperation", "MemberReference", "nextLineTabStop", "-", "Literal", "1", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "pos", "=", "MemberReference", "width", "StatementExpression", "MethodInvocation", "sb", "append", "MethodInvocation", "rtrim", "MethodInvocation", "text", "substring", "Literal", "0", "MemberReference", "pos", "MethodInvocation", "append", "MemberReference", "defaultNewLine"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [5, 8, "name"], [0, 9, "parameters"], [9, 10, "type"], [10, 11, "name"], [9, 12, "name"], [0, 13, "parameters"], [13, 14, "type"], [14, 15, "name"], [13, 16, "name"], [0, 17, "parameters"], [17, 18, "type"], [18, 19, "name"], [17, 20, "name"], [0, 21, "body"], [21, 22, "type"], [22, 23, "name"], [21, 24, "declarators"], [24, 25, "name"], [24, 26, "initializer"], [26, 27, "member"], [26, 28, "arguments"], [28, 29, "member"], [26, 30, "arguments"], [30, 31, "member"], [26, 32, "arguments"], [32, 33, "value"], [0, 34, "body"], [34, 35, "condition"], [35, 36, "operandl"], [36, 37, "member"], [35, 38, "operator"], [35, 39, "operandr"], [39, 40, "prefix_operators"], [39, 41, "value"], [34, 42, "then_statement"], [42, 43, "statements"], [43, 44, "expression"], [44, 45, "qualifier"], [44, 46, "member"], [44, 47, "arguments"], [47, 48, "member"], [47, 49, "arguments"], [49, 50, "member"], [42, 51, "statements"], [51, 52, "expression"], [52, 53, "member"], [0, 54, "body"], [54, 55, "expression"], [55, 56, "qualifier"], [55, 57, "member"], [55, 58, "arguments"], [58, 59, "member"], [58, 60, "arguments"], [60, 61, "qualifier"], [60, 62, "member"], [60, 63, "arguments"], [63, 64, "value"], [60, 65, "arguments"], [65, 66, "member"], [55, 67, "selectors"], [67, 68, "member"], [67, 69, "arguments"], [69, 70, "member"], [0, 71, "body"], [71, 72, "condition"], [72, 73, "operandl"], [73, 74, "member"], [72, 75, "operator"], [72, 76, "operandr"], [76, 77, "member"], [71, 78, "then_statement"], [78, 79, "statements"], [79, 80, "expression"], [80, 81, "type"], [81, 82, "name"], [80, 83, "arguments"], [83, 84, "operandl"], [84, 85, "value"], [83, 86, "operator"], [83, 87, "operandr"], [87, 88, "value"], [0, 89, "body"], [89, 90, "modifiers"], [89, 91, "type"], [91, 92, "name"], [89, 93, "declarators"], [93, 94, "name"], [93, 95, "initializer"], [95, 96, "member"], [95, 97, "arguments"], [97, 98, "member"], [0, 99, "body"], [99, 100, "condition"], [100, 101, "value"], [99, 102, "body"], [102, 103, "statements"], [103, 104, "expression"], [104, 105, "expressionl"], [105, 106, "member"], [104, 107, "type"], [104, 108, "value"], [108, 109, "operandl"], [109, 110, "member"], [108, 111, "operator"], [108, 112, "operandr"], [112, 113, "qualifier"], [112, 114, "member"], [112, 115, "arguments"], [115, 116, "member"], [112, 117, "selectors"], [117, 118, "member"], [102, 119, "statements"], [119, 120, "expression"], [120, 121, "expressionl"], [121, 122, "member"], [120, 123, "type"], [120, 124, "value"], [124, 125, "member"], [124, 126, "arguments"], [126, 127, "member"], [124, 128, "arguments"], [128, 129, "member"], [124, 130, "arguments"], [130, 131, "value"], [102, 132, "statements"], [132, 133, "condition"], [133, 134, "operandl"], [134, 135, "member"], [133, 136, "operator"], [133, 137, "operandr"], [137, 138, "prefix_operators"], [137, 139, "value"], [132, 140, "then_statement"], [140, 141, "statements"], [141, 142, "expression"], [142, 143, "qualifier"], [142, 144, "member"], [142, 145, "arguments"], [145, 146, "member"], [140, 147, "statements"], [147, 148, "expression"], [148, 149, "member"], [102, 150, "statements"], [150, 151, "condition"], [151, 152, "operandl"], [152, 153, "operandl"], [153, 154, "qualifier"], [153, 155, "member"], [152, 156, "operator"], [152, 157, "operandr"], [157, 158, "member"], [151, 159, "operator"], [151, 160, "operandr"], [160, 161, "operandl"], [161, 162, "member"], [160, 163, "operator"], [160, 164, "operandr"], [164, 165, "operandl"], [165, 166, "member"], [164, 167, "operator"], [164, 168, "operandr"], [168, 169, "value"], [150, 170, "then_statement"], [170, 171, "statements"], [171, 172, "expression"], [172, 173, "expressionl"], [173, 174, "member"], [172, 175, "type"], [172, 176, "value"], [176, 177, "member"], [102, 178, "statements"], [178, 179, "expression"], [179, 180, "qualifier"], [179, 181, "member"], [179, 182, "arguments"], [182, 183, "member"], [182, 184, "arguments"], [184, 185, "qualifier"], [184, 186, "member"], [184, 187, "arguments"], [187, 188, "value"], [184, 189, "arguments"], [189, 190, "member"], [179, 191, "selectors"], [191, 192, "member"], [191, 193, "arguments"], [193, 194, "member"]], "rem_roots": [79], "add_roots": []}, {"id": 13, "mappings": {"padding": "VAR_1", "nextLineTabStop": "VAR_2", "sb": "VAR_3", "pos": "VAR_4", "width": "VAR_5", "text": "VAR_6", "defaultNewLine": "VAR_7", "String": "TYPE_1", "StringBuffer": "TYPE_2", "createPadding": "METHOD_1", "rtrim": "METHOD_2", "length": "METHOD_3", "substring": "METHOD_4", "trim": "METHOD_5", "renderWrappedText": "METHOD_6", "findWrapPos": "METHOD_7", "append": "METHOD_8", "0": "INT_1", "1": "INT_2"}, "nodes": ["MethodDeclaration", "protected", "ReferenceType", "StringBuffer", "renderWrappedText", "FormalParameter", "ReferenceType", "StringBuffer", "sb", "FormalParameter", "BasicType", "int", "width", "FormalParameter", "BasicType", "int", "nextLineTabStop", "FormalParameter", "ReferenceType", "String", "text", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "pos", "MethodInvocation", "findWrapPos", "MemberReference", "text", "MemberReference", "width", "Literal", "0", "IfStatement", "BinaryOperation", "MemberReference", "pos", "==", "Literal", "-", "1", "BlockStatement", "StatementExpression", "MethodInvocation", "sb", "append", "MethodInvocation", "rtrim", "MemberReference", "text", "ReturnStatement", "MemberReference", "sb", "StatementExpression", "MethodInvocation", "sb", "append", "MethodInvocation", "rtrim", "MethodInvocation", "text", "substring", "Literal", "0", "MemberReference", "pos", "MethodInvocation", "append", "MemberReference", "defaultNewLine", "IfStatement", "BinaryOperation", "MemberReference", "nextLineTabStop", ">=", "MemberReference", "width", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "nextLineTabStop", "=", "BinaryOperation", "MemberReference", "width", "-", "Literal", "1", "LocalVariableDeclaration", "final", "ReferenceType", "String", "VariableDeclarator", "padding", "MethodInvocation", "createPadding", "MemberReference", "nextLineTabStop", "WhileStatement", "Literal", "true", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "text", "=", "BinaryOperation", "MemberReference", "padding", "+", "MethodInvocation", "text", "substring", "MemberReference", "pos", "MethodInvocation", "trim", "StatementExpression", "Assignment", "MemberReference", "pos", "=", "MethodInvocation", "findWrapPos", "MemberReference", "text", "MemberReference", "width", "Literal", "0", "IfStatement", "BinaryOperation", "MemberReference", "pos", "==", "Literal", "-", "1", "BlockStatement", "StatementExpression", "MethodInvocation", "sb", "append", "MemberReference", "text", "ReturnStatement", "MemberReference", "sb", "IfStatement", "BinaryOperation", "BinaryOperation", "MethodInvocation", "text", "length", ">", "MemberReference", "width", "&&", "BinaryOperation", "MemberReference", "pos", "==", "BinaryOperation", "MemberReference", "nextLineTabStop", "-", "Literal", "1", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "pos", "=", "MemberReference", "width", "StatementExpression", "MethodInvocation", "sb", "append", "MethodInvocation", "rtrim", "MethodInvocation", "text", "substring", "Literal", "0", "MemberReference", "pos", "MethodInvocation", "append", "MemberReference", "defaultNewLine"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [5, 8, "name"], [0, 9, "parameters"], [9, 10, "type"], [10, 11, "name"], [9, 12, "name"], [0, 13, "parameters"], [13, 14, "type"], [14, 15, "name"], [13, 16, "name"], [0, 17, "parameters"], [17, 18, "type"], [18, 19, "name"], [17, 20, "name"], [0, 21, "body"], [21, 22, "type"], [22, 23, "name"], [21, 24, "declarators"], [24, 25, "name"], [24, 26, "initializer"], [26, 27, "member"], [26, 28, "arguments"], [28, 29, "member"], [26, 30, "arguments"], [30, 31, "member"], [26, 32, "arguments"], [32, 33, "value"], [0, 34, "body"], [34, 35, "condition"], [35, 36, "operandl"], [36, 37, "member"], [35, 38, "operator"], [35, 39, "operandr"], [39, 40, "prefix_operators"], [39, 41, "value"], [34, 42, "then_statement"], [42, 43, "statements"], [43, 44, "expression"], [44, 45, "qualifier"], [44, 46, "member"], [44, 47, "arguments"], [47, 48, "member"], [47, 49, "arguments"], [49, 50, "member"], [42, 51, "statements"], [51, 52, "expression"], [52, 53, "member"], [0, 54, "body"], [54, 55, "expression"], [55, 56, "qualifier"], [55, 57, "member"], [55, 58, "arguments"], [58, 59, "member"], [58, 60, "arguments"], [60, 61, "qualifier"], [60, 62, "member"], [60, 63, "arguments"], [63, 64, "value"], [60, 65, "arguments"], [65, 66, "member"], [55, 67, "selectors"], [67, 68, "member"], [67, 69, "arguments"], [69, 70, "member"], [0, 71, "body"], [71, 72, "condition"], [72, 73, "operandl"], [73, 74, "member"], [72, 75, "operator"], [72, 76, "operandr"], [76, 77, "member"], [71, 78, "then_statement"], [78, 79, "statements"], [79, 80, "expression"], [80, 81, "expressionl"], [81, 82, "member"], [80, 83, "type"], [80, 84, "value"], [84, 85, "operandl"], [85, 86, "member"], [84, 87, "operator"], [84, 88, "operandr"], [88, 89, "value"], [0, 90, "body"], [90, 91, "modifiers"], [90, 92, "type"], [92, 93, "name"], [90, 94, "declarators"], [94, 95, "name"], [94, 96, "initializer"], [96, 97, "member"], [96, 98, "arguments"], [98, 99, "member"], [0, 100, "body"], [100, 101, "condition"], [101, 102, "value"], [100, 103, "body"], [103, 104, "statements"], [104, 105, "expression"], [105, 106, "expressionl"], [106, 107, "member"], [105, 108, "type"], [105, 109, "value"], [109, 110, "operandl"], [110, 111, "member"], [109, 112, "operator"], [109, 113, "operandr"], [113, 114, "qualifier"], [113, 115, "member"], [113, 116, "arguments"], [116, 117, "member"], [113, 118, "selectors"], [118, 119, "member"], [103, 120, "statements"], [120, 121, "expression"], [121, 122, "expressionl"], [122, 123, "member"], [121, 124, "type"], [121, 125, "value"], [125, 126, "member"], [125, 127, "arguments"], [127, 128, "member"], [125, 129, "arguments"], [129, 130, "member"], [125, 131, "arguments"], [131, 132, "value"], [103, 133, "statements"], [133, 134, "condition"], [134, 135, "operandl"], [135, 136, "member"], [134, 137, "operator"], [134, 138, "operandr"], [138, 139, "prefix_operators"], [138, 140, "value"], [133, 141, "then_statement"], [141, 142, "statements"], [142, 143, "expression"], [143, 144, "qualifier"], [143, 145, "member"], [143, 146, "arguments"], [146, 147, "member"], [141, 148, "statements"], [148, 149, "expression"], [149, 150, "member"], [103, 151, "statements"], [151, 152, "condition"], [152, 153, "operandl"], [153, 154, "operandl"], [154, 155, "qualifier"], [154, 156, "member"], [153, 157, "operator"], [153, 158, "operandr"], [158, 159, "member"], [152, 160, "operator"], [152, 161, "operandr"], [161, 162, "operandl"], [162, 163, "member"], [161, 164, "operator"], [161, 165, "operandr"], [165, 166, "operandl"], [166, 167, "member"], [165, 168, "operator"], [165, 169, "operandr"], [169, 170, "value"], [151, 171, "then_statement"], [171, 172, "statements"], [172, 173, "expression"], [173, 174, "expressionl"], [174, 175, "member"], [173, 176, "type"], [173, 177, "value"], [177, 178, "member"], [103, 179, "statements"], [179, 180, "expression"], [180, 181, "qualifier"], [180, 182, "member"], [180, 183, "arguments"], [183, 184, "member"], [183, 185, "arguments"], [185, 186, "qualifier"], [185, 187, "member"], [185, 188, "arguments"], [188, 189, "value"], [185, 190, "arguments"], [190, 191, "member"], [180, 192, "selectors"], [192, 193, "member"], [192, 194, "arguments"], [194, 195, "member"]], "rem_roots": [79], "add_roots": []}, {"id": 14, "mappings": {"exp": "VAR_1", "value": "VAR_2", "e": "VAR_3", "length": "VAR_4", "opt": "VAR_5", "cmd": "VAR_6", "properties": "VAR_7", "option": "VAR_8", "String": "TYPE_1", "Properties": "TYPE_2", "RuntimeException": "TYPE_3", "Enumeration": "TYPE_4", "Option": "TYPE_5", "processProperties": "METHOD_1", "getOption": "METHOD_2", "hasOption": "METHOD_3", "addValueForProcessing": "METHOD_4", "hasMoreElements": "METHOD_5", "hasArg": "METHOD_6", "getProperty": "METHOD_7", "getValues": "METHOD_8", "addOption": "METHOD_9", "propertyNames": "METHOD_10", "toString": "METHOD_11", "getOptions": "METHOD_12", "nextElement": "METHOD_13", "0": "INT_1", "\"yes\"": "STRING_1", "\"true\"": "STRING_2", "\"1\"": "STRING_3"}, "nodes": ["MethodDeclaration", "protected", "void", "processProperties", "FormalParameter", "ReferenceType", "Properties", "properties", "IfStatement", "BinaryOperation", "MemberReference", "properties", "==", "Literal", "null", "BlockStatement", "ReturnStatement", "ForStatement", "ForControl", "VariableDeclaration", "ReferenceType", "Enumeration", "VariableDeclarator", "e", "MethodInvocation", "properties", "propertyNames", "MethodInvocation", "e", "hasMoreElements", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "String", "VariableDeclarator", "option", "MethodInvocation", "e", "nextElement", "MethodInvocation", "toString", "IfStatement", "MethodInvocation", "!", "cmd", "hasOption", "MemberReference", "option", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "Option", "VariableDeclarator", "opt", "MethodInvocation", "getOptions", "MethodInvocation", "getOption", "MemberReference", "option", "LocalVariableDeclaration", "ReferenceType", "String", "VariableDeclarator", "value", "MethodInvocation", "properties", "getProperty", "MemberReference", "option", "IfStatement", "MethodInvocation", "opt", "hasArg", "BlockStatement", "IfStatement", "BinaryOperation", "BinaryOperation", "MethodInvocation", "opt", "getValues", "==", "Literal", "null", "||", "BinaryOperation", "MethodInvocation", "opt", "getValues", "MemberReference", "length", "==", "Literal", "0", "BlockStatement", "TryStatement", "StatementExpression", "MethodInvocation", "opt", "addValueForProcessing", "MemberReference", "value", "CatchClause", "CatchClauseParameter", "RuntimeException", "exp", "IfStatement", "BinaryOperation", "!", "BinaryOperation", "Literal", "\"yes\"", "||", "Literal", "\"true\"", "||", "Literal", "\"1\"", "BlockStatement", "BreakStatement", "StatementExpression", "MethodInvocation", "cmd", "addOption", "MemberReference", "opt"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [0, 3, "name"], [0, 4, "parameters"], [4, 5, "type"], [5, 6, "name"], [4, 7, "name"], [0, 8, "body"], [8, 9, "condition"], [9, 10, "operandl"], [10, 11, "member"], [9, 12, "operator"], [9, 13, "operandr"], [13, 14, "value"], [8, 15, "then_statement"], [15, 16, "statements"], [0, 17, "body"], [17, 18, "control"], [18, 19, "init"], [19, 20, "type"], [20, 21, "name"], [19, 22, "declarators"], [22, 23, "name"], [22, 24, "initializer"], [24, 25, "qualifier"], [24, 26, "member"], [18, 27, "condition"], [27, 28, "qualifier"], [27, 29, "member"], [17, 30, "body"], [30, 31, "statements"], [31, 32, "type"], [32, 33, "name"], [31, 34, "declarators"], [34, 35, "name"], [34, 36, "initializer"], [36, 37, "qualifier"], [36, 38, "member"], [36, 39, "selectors"], [39, 40, "member"], [30, 41, "statements"], [41, 42, "condition"], [42, 43, "prefix_operators"], [42, 44, "qualifier"], [42, 45, "member"], [42, 46, "arguments"], [46, 47, "member"], [41, 48, "then_statement"], [48, 49, "statements"], [49, 50, "type"], [50, 51, "name"], [49, 52, "declarators"], [52, 53, "name"], [52, 54, "initializer"], [54, 55, "member"], [54, 56, "selectors"], [56, 57, "member"], [56, 58, "arguments"], [58, 59, "member"], [48, 60, "statements"], [60, 61, "type"], [61, 62, "name"], [60, 63, "declarators"], [63, 64, "name"], [63, 65, "initializer"], [65, 66, "qualifier"], [65, 67, "member"], [65, 68, "arguments"], [68, 69, "member"], [48, 70, "statements"], [70, 71, "condition"], [71, 72, "qualifier"], [71, 73, "member"], [70, 74, "then_statement"], [74, 75, "statements"], [75, 76, "condition"], [76, 77, "operandl"], [77, 78, "operandl"], [78, 79, "qualifier"], [78, 80, "member"], [77, 81, "operator"], [77, 82, "operandr"], [82, 83, "value"], [76, 84, "operator"], [76, 85, "operandr"], [85, 86, "operandl"], [86, 87, "qualifier"], [86, 88, "member"], [86, 89, "selectors"], [89, 90, "member"], [85, 91, "operator"], [85, 92, "operandr"], [92, 93, "value"], [75, 94, "then_statement"], [94, 95, "statements"], [95, 96, "block"], [96, 97, "expression"], [97, 98, "qualifier"], [97, 99, "member"], [97, 100, "arguments"], [100, 101, "member"], [95, 102, "catches"], [102, 103, "parameter"], [103, 104, "types"], [103, 105, "name"], [70, 106, "else_statement"], [106, 107, "condition"], [107, 108, "prefix_operators"], [107, 109, "operandl"], [109, 110, "operandl"], [110, 111, "value"], [109, 112, "operator"], [109, 113, "operandr"], [113, 114, "value"], [107, 115, "operator"], [107, 116, "operandr"], [116, 117, "value"], [106, 118, "then_statement"], [118, 119, "statements"], [48, 120, "statements"], [120, 121, "expression"], [121, 122, "qualifier"], [121, 123, "member"], [121, 124, "arguments"], [124, 125, "member"]], "rem_roots": [119], "add_roots": []}, {"id": 15, "mappings": {"padding": "VAR_1", "nextLineTabStop": "VAR_2", "sb": "VAR_3", "pos": "VAR_4", "width": "VAR_5", "text": "VAR_6", "defaultNewLine": "VAR_7", "String": "TYPE_1", "StringBuffer": "TYPE_2", "createPadding": "METHOD_1", "rtrim": "METHOD_2", "substring": "METHOD_3", "trim": "METHOD_4", "renderWrappedText": "METHOD_5", "findWrapPos": "METHOD_6", "append": "METHOD_7", "0": "INT_1", "1": "INT_2"}, "nodes": ["MethodDeclaration", "protected", "ReferenceType", "StringBuffer", "renderWrappedText", "FormalParameter", "ReferenceType", "StringBuffer", "sb", "FormalParameter", "BasicType", "int", "width", "FormalParameter", "BasicType", "int", "nextLineTabStop", "FormalParameter", "ReferenceType", "String", "text", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "pos", "MethodInvocation", "findWrapPos", "MemberReference", "text", "MemberReference", "width", "Literal", "0", "IfStatement", "BinaryOperation", "MemberReference", "pos", "==", "Literal", "-", "1", "BlockStatement", "StatementExpression", "MethodInvocation", "sb", "append", "MethodInvocation", "rtrim", "MemberReference", "text", "ReturnStatement", "MemberReference", "sb", "StatementExpression", "MethodInvocation", "sb", "append", "MethodInvocation", "rtrim", "MethodInvocation", "text", "substring", "Literal", "0", "MemberReference", "pos", "MethodInvocation", "append", "MemberReference", "defaultNewLine", "LocalVariableDeclaration", "final", "ReferenceType", "String", "VariableDeclarator", "padding", "MethodInvocation", "createPadding", "MemberReference", "nextLineTabStop", "WhileStatement", "Literal", "true", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "text", "=", "BinaryOperation", "MemberReference", "padding", "+", "MethodInvocation", "text", "substring", "MemberReference", "pos", "MethodInvocation", "trim", "StatementExpression", "Assignment", "MemberReference", "pos", "=", "MethodInvocation", "findWrapPos", "MemberReference", "text", "MemberReference", "width", "MemberReference", "nextLineTabStop", "IfStatement", "BinaryOperation", "MemberReference", "pos", "==", "Literal", "-", "1", "BlockStatement", "StatementExpression", "MethodInvocation", "sb", "append", "MemberReference", "text", "ReturnStatement", "MemberReference", "sb", "StatementExpression", "MethodInvocation", "sb", "append", "MethodInvocation", "rtrim", "MethodInvocation", "text", "substring", "Literal", "0", "MemberReference", "pos", "MethodInvocation", "append", "MemberReference", "defaultNewLine"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [5, 8, "name"], [0, 9, "parameters"], [9, 10, "type"], [10, 11, "name"], [9, 12, "name"], [0, 13, "parameters"], [13, 14, "type"], [14, 15, "name"], [13, 16, "name"], [0, 17, "parameters"], [17, 18, "type"], [18, 19, "name"], [17, 20, "name"], [0, 21, "body"], [21, 22, "type"], [22, 23, "name"], [21, 24, "declarators"], [24, 25, "name"], [24, 26, "initializer"], [26, 27, "member"], [26, 28, "arguments"], [28, 29, "member"], [26, 30, "arguments"], [30, 31, "member"], [26, 32, "arguments"], [32, 33, "value"], [0, 34, "body"], [34, 35, "condition"], [35, 36, "operandl"], [36, 37, "member"], [35, 38, "operator"], [35, 39, "operandr"], [39, 40, "prefix_operators"], [39, 41, "value"], [34, 42, "then_statement"], [42, 43, "statements"], [43, 44, "expression"], [44, 45, "qualifier"], [44, 46, "member"], [44, 47, "arguments"], [47, 48, "member"], [47, 49, "arguments"], [49, 50, "member"], [42, 51, "statements"], [51, 52, "expression"], [52, 53, "member"], [0, 54, "body"], [54, 55, "expression"], [55, 56, "qualifier"], [55, 57, "member"], [55, 58, "arguments"], [58, 59, "member"], [58, 60, "arguments"], [60, 61, "qualifier"], [60, 62, "member"], [60, 63, "arguments"], [63, 64, "value"], [60, 65, "arguments"], [65, 66, "member"], [55, 67, "selectors"], [67, 68, "member"], [67, 69, "arguments"], [69, 70, "member"], [0, 71, "body"], [71, 72, "modifiers"], [71, 73, "type"], [73, 74, "name"], [71, 75, "declarators"], [75, 76, "name"], [75, 77, "initializer"], [77, 78, "member"], [77, 79, "arguments"], [79, 80, "member"], [0, 81, "body"], [81, 82, "condition"], [82, 83, "value"], [81, 84, "body"], [84, 85, "statements"], [85, 86, "expression"], [86, 87, "expressionl"], [87, 88, "member"], [86, 89, "type"], [86, 90, "value"], [90, 91, "operandl"], [91, 92, "member"], [90, 93, "operator"], [90, 94, "operandr"], [94, 95, "qualifier"], [94, 96, "member"], [94, 97, "arguments"], [97, 98, "member"], [94, 99, "selectors"], [99, 100, "member"], [84, 101, "statements"], [101, 102, "expression"], [102, 103, "expressionl"], [103, 104, "member"], [102, 105, "type"], [102, 106, "value"], [106, 107, "member"], [106, 108, "arguments"], [108, 109, "member"], [106, 110, "arguments"], [110, 111, "member"], [106, 112, "arguments"], [112, 113, "member"], [84, 114, "statements"], [114, 115, "condition"], [115, 116, "operandl"], [116, 117, "member"], [115, 118, "operator"], [115, 119, "operandr"], [119, 120, "prefix_operators"], [119, 121, "value"], [114, 122, "then_statement"], [122, 123, "statements"], [123, 124, "expression"], [124, 125, "qualifier"], [124, 126, "member"], [124, 127, "arguments"], [127, 128, "member"], [122, 129, "statements"], [129, 130, "expression"], [130, 131, "member"], [84, 132, "statements"], [132, 133, "expression"], [133, 134, "qualifier"], [133, 135, "member"], [133, 136, "arguments"], [136, 137, "member"], [136, 138, "arguments"], [138, 139, "qualifier"], [138, 140, "member"], [138, 141, "arguments"], [141, 142, "value"], [138, 143, "arguments"], [143, 144, "member"], [133, 145, "selectors"], [145, 146, "member"], [145, 147, "arguments"], [147, 148, "member"]], "rem_roots": [101], "add_roots": []}, {"id": 17, "mappings": {"recurse": "VAR_1", "MAY_BE_STRING_PREDICATE": "VAR_2", "n": "VAR_3", "Node": "TYPE_1", "mayBeString": "METHOD_1", "mayBeStringHelper": "METHOD_2", "allResultsMatch": "METHOD_3"}, "nodes": ["MethodDeclaration", "static", "BasicType", "boolean", "mayBeString", "FormalParameter", "ReferenceType", "Node", "n", "FormalParameter", "BasicType", "boolean", "recurse", "IfStatement", "MemberReference", "recurse", "BlockStatement", "ReturnStatement", "MethodInvocation", "allResultsMatch", "MemberReference", "n", "MemberReference", "MAY_BE_STRING_PREDICATE", "BlockStatement", "ReturnStatement", "MethodInvocation", "mayBeStringHelper", "MemberReference", "n"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [5, 8, "name"], [0, 9, "parameters"], [9, 10, "type"], [10, 11, "name"], [9, 12, "name"], [0, 13, "body"], [13, 14, "condition"], [14, 15, "member"], [13, 16, "then_statement"], [16, 17, "statements"], [17, 18, "expression"], [18, 19, "member"], [18, 20, "arguments"], [20, 21, "member"], [18, 22, "arguments"], [22, 23, "member"], [13, 24, "else_statement"], [24, 25, "statements"], [25, 26, "expression"], [26, 27, "member"], [26, 28, "arguments"], [28, 29, "member"]], "rem_roots": [17], "add_roots": []}, {"id": 18, "mappings": {"registry": "VAR_1", "otherAlternate": "VAR_2", "alternate": "VAR_3", "JSTypeNative": "VAR_4", "alternates": "VAR_5", "NO_TYPE": "VAR_6", "result": "VAR_7", "that": "VAR_8", "builder": "VAR_9", "NO_OBJECT_TYPE": "VAR_10", "UnionType": "TYPE_1", "JSType": "TYPE_2", "UnionTypeBuilder": "TYPE_3", "getNativeType": "METHOD_1", "addAlternate": "METHOD_2", "isObject": "METHOD_3", "isSubtype": "METHOD_4", "meet": "METHOD_5", "build": "METHOD_6"}, "nodes": ["MethodDeclaration", "ReferenceType", "JSType", "meet", "FormalParameter", "ReferenceType", "JSType", "that", "LocalVariableDeclaration", "ReferenceType", "UnionTypeBuilder", "VariableDeclarator", "builder", "ClassCreator", "ReferenceType", "UnionTypeBuilder", "MemberReference", "registry", "ForStatement", "EnhancedForControl", "VariableDeclaration", "ReferenceType", "JSType", "VariableDeclarator", "alternate", "MemberReference", "alternates", "BlockStatement", "IfStatement", "MethodInvocation", "alternate", "isSubtype", "MemberReference", "that", "BlockStatement", "StatementExpression", "MethodInvocation", "builder", "addAlternate", "MemberReference", "alternate", "IfStatement", "BinaryOperation", "MemberReference", "that", "instanceof", "ReferenceType", "UnionType", "BlockStatement", "ForStatement", "EnhancedForControl", "VariableDeclaration", "ReferenceType", "JSType", "VariableDeclarator", "otherAlternate", "Cast", "ReferenceType", "UnionType", "MemberReference", "that", "MemberReference", "alternates", "BlockStatement", "IfStatement", "MethodInvocation", "otherAlternate", "isSubtype", "This", "BlockStatement", "StatementExpression", "MethodInvocation", "builder", "addAlternate", "MemberReference", "otherAlternate", "IfStatement", "MethodInvocation", "that", "isSubtype", "This", "BlockStatement", "StatementExpression", "MethodInvocation", "builder", "addAlternate", "MemberReference", "that", "LocalVariableDeclaration", "ReferenceType", "JSType", "VariableDeclarator", "result", "MethodInvocation", "builder", "build", "IfStatement", "BinaryOperation", "MemberReference", "result", "!=", "Literal", "null", "BlockStatement", "ReturnStatement", "MemberReference", "result", "IfStatement", "BinaryOperation", "This", "MethodInvocation", "isObject", "&&", "MethodInvocation", "that", "isObject", "BlockStatement", "ReturnStatement", "MethodInvocation", "getNativeType", "MemberReference", "JSTypeNative", "NO_OBJECT_TYPE", "BlockStatement", "ReturnStatement", "MethodInvocation", "getNativeType", "MemberReference", "JSTypeNative", "NO_TYPE"], "edges": [[0, 1, "return_type"], [1, 2, "name"], [0, 3, "name"], [0, 4, "parameters"], [4, 5, "type"], [5, 6, "name"], [4, 7, "name"], [0, 8, "body"], [8, 9, "type"], [9, 10, "name"], [8, 11, "declarators"], [11, 12, "name"], [11, 13, "initializer"], [13, 14, "type"], [14, 15, "name"], [13, 16, "arguments"], [16, 17, "member"], [0, 18, "body"], [18, 19, "control"], [19, 20, "var"], [20, 21, "type"], [21, 22, "name"], [20, 23, "declarators"], [23, 24, "name"], [19, 25, "iterable"], [25, 26, "member"], [18, 27, "body"], [27, 28, "statements"], [28, 29, "condition"], [29, 30, "qualifier"], [29, 31, "member"], [29, 32, "arguments"], [32, 33, "member"], [28, 34, "then_statement"], [34, 35, "statements"], [35, 36, "expression"], [36, 37, "qualifier"], [36, 38, "member"], [36, 39, "arguments"], [39, 40, "member"], [0, 41, "body"], [41, 42, "condition"], [42, 43, "operandl"], [43, 44, "member"], [42, 45, "operator"], [42, 46, "operandr"], [46, 47, "name"], [41, 48, "then_statement"], [48, 49, "statements"], [49, 50, "control"], [50, 51, "var"], [51, 52, "type"], [52, 53, "name"], [51, 54, "declarators"], [54, 55, "name"], [50, 56, "iterable"], [56, 57, "type"], [57, 58, "name"], [56, 59, "expression"], [59, 60, "member"], [56, 61, "selectors"], [61, 62, "member"], [49, 63, "body"], [63, 64, "statements"], [64, 65, "condition"], [65, 66, "qualifier"], [65, 67, "member"], [65, 68, "arguments"], [64, 69, "then_statement"], [69, 70, "statements"], [70, 71, "expression"], [71, 72, "qualifier"], [71, 73, "member"], [71, 74, "arguments"], [74, 75, "member"], [41, 76, "else_statement"], [76, 77, "condition"], [77, 78, "qualifier"], [77, 79, "member"], [77, 80, "arguments"], [76, 81, "then_statement"], [81, 82, "statements"], [82, 83, "expression"], [83, 84, "qualifier"], [83, 85, "member"], [83, 86, "arguments"], [86, 87, "member"], [0, 88, "body"], [88, 89, "type"], [89, 90, "name"], [88, 91, "declarators"], [91, 92, "name"], [91, 93, "initializer"], [93, 94, "qualifier"], [93, 95, "member"], [0, 96, "body"], [96, 97, "condition"], [97, 98, "operandl"], [98, 99, "member"], [97, 100, "operator"], [97, 101, "operandr"], [101, 102, "value"], [96, 103, "then_statement"], [103, 104, "statements"], [104, 105, "expression"], [105, 106, "member"], [96, 107, "else_statement"], [107, 108, "condition"], [108, 109, "operandl"], [109, 110, "selectors"], [110, 111, "member"], [108, 112, "operator"], [108, 113, "operandr"], [113, 114, "qualifier"], [113, 115, "member"], [107, 116, "then_statement"], [116, 117, "statements"], [117, 118, "expression"], [118, 119, "member"], [118, 120, "arguments"], [120, 121, "qualifier"], [120, 122, "member"], [107, 123, "else_statement"], [123, 124, "statements"], [124, 125, "expression"], [125, 126, "member"], [125, 127, "arguments"], [127, 128, "qualifier"], [127, 129, "member"]], "rem_roots": [97], "add_roots": []}, {"id": 19, "mappings": {"parent": "VAR_1", "validator": "VAR_2", "OBJECT_TYPE": "VAR_3", "objNode": "VAR_4", "TypeValidator": "VAR_5", "property": "VAR_6", "childType": "VAR_7", "n": "VAR_8", "t": "VAR_9", "ILLEGAL_PROPERTY_ACCESS": "VAR_10", "Node": "TYPE_1", "JSType": "TYPE_2", "NodeTraversal": "TYPE_3", "isAssign": "METHOD_1", "getJSType": "METHOD_2", "visitGetProp": "METHOD_3", "getFirstChild": "METHOD_4", "getNativeType": "METHOD_5", "checkPropertyAccess": "METHOD_6", "isDict": "METHOD_7", "ensureTyped": "METHOD_8", "getString": "METHOD_9", "getLastChild": "METHOD_10", "expectNotNullOrUndefined": "METHOD_11", "report": "METHOD_12", "\"No properties on this expression\"": "STRING_1", "\"'.'\"": "STRING_2", "\"dict\"": "STRING_3"}, "nodes": ["MethodDeclaration", "private", "void", "visitGetProp", "FormalParameter", "ReferenceType", "NodeTraversal", "t", "FormalParameter", "ReferenceType", "Node", "n", "FormalParameter", "ReferenceType", "Node", "parent", "LocalVariableDeclaration", "ReferenceType", "Node", "VariableDeclarator", "property", "MethodInvocation", "n", "getLastChild", "LocalVariableDeclaration", "ReferenceType", "Node", "VariableDeclarator", "objNode", "MethodInvocation", "n", "getFirstChild", "LocalVariableDeclaration", "ReferenceType", "JSType", "VariableDeclarator", "childType", "MethodInvocation", "getJSType", "MemberReference", "objNode", "IfStatement", "MethodInvocation", "childType", "isDict", "BlockStatement", "StatementExpression", "MethodInvocation", "report", "MemberReference", "t", "MemberReference", "property", "MemberReference", "TypeValidator", "ILLEGAL_PROPERTY_ACCESS", "Literal", "\"'.'\"", "Literal", "\"dict\"", "IfStatement", "BinaryOperation", "BinaryOperation", "MethodInvocation", "n", "getJSType", "!=", "Literal", "null", "&&", "MethodInvocation", "parent", "isAssign", "BlockStatement", "ReturnStatement", "IfStatement", "MethodInvocation", "validator", "expectNotNullOrUndefined", "MemberReference", "t", "MemberReference", "n", "MemberReference", "childType", "Literal", "\"No properties on this expression\"", "MethodInvocation", "getNativeType", "MemberReference", "OBJECT_TYPE", "BlockStatement", "StatementExpression", "MethodInvocation", "checkPropertyAccess", "MemberReference", "childType", "MethodInvocation", "property", "getString", "MemberReference", "t", "MemberReference", "n", "StatementExpression", "MethodInvocation", "ensureTyped", "MemberReference", "t", "MemberReference", "n"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [0, 3, "name"], [0, 4, "parameters"], [4, 5, "type"], [5, 6, "name"], [4, 7, "name"], [0, 8, "parameters"], [8, 9, "type"], [9, 10, "name"], [8, 11, "name"], [0, 12, "parameters"], [12, 13, "type"], [13, 14, "name"], [12, 15, "name"], [0, 16, "body"], [16, 17, "type"], [17, 18, "name"], [16, 19, "declarators"], [19, 20, "name"], [19, 21, "initializer"], [21, 22, "qualifier"], [21, 23, "member"], [0, 24, "body"], [24, 25, "type"], [25, 26, "name"], [24, 27, "declarators"], [27, 28, "name"], [27, 29, "initializer"], [29, 30, "qualifier"], [29, 31, "member"], [0, 32, "body"], [32, 33, "type"], [33, 34, "name"], [32, 35, "declarators"], [35, 36, "name"], [35, 37, "initializer"], [37, 38, "member"], [37, 39, "arguments"], [39, 40, "member"], [0, 41, "body"], [41, 42, "condition"], [42, 43, "qualifier"], [42, 44, "member"], [41, 45, "then_statement"], [45, 46, "statements"], [46, 47, "expression"], [47, 48, "member"], [47, 49, "arguments"], [49, 50, "member"], [47, 51, "arguments"], [51, 52, "member"], [47, 53, "arguments"], [53, 54, "qualifier"], [53, 55, "member"], [47, 56, "arguments"], [56, 57, "value"], [47, 58, "arguments"], [58, 59, "value"], [41, 60, "else_statement"], [60, 61, "condition"], [61, 62, "operandl"], [62, 63, "operandl"], [63, 64, "qualifier"], [63, 65, "member"], [62, 66, "operator"], [62, 67, "operandr"], [67, 68, "value"], [61, 69, "operator"], [61, 70, "operandr"], [70, 71, "qualifier"], [70, 72, "member"], [60, 73, "then_statement"], [73, 74, "statements"], [60, 75, "else_statement"], [75, 76, "condition"], [76, 77, "qualifier"], [76, 78, "member"], [76, 79, "arguments"], [79, 80, "member"], [76, 81, "arguments"], [81, 82, "member"], [76, 83, "arguments"], [83, 84, "member"], [76, 85, "arguments"], [85, 86, "value"], [76, 87, "arguments"], [87, 88, "member"], [87, 89, "arguments"], [89, 90, "member"], [75, 91, "then_statement"], [91, 92, "statements"], [92, 93, "expression"], [93, 94, "member"], [93, 95, "arguments"], [95, 96, "member"], [93, 97, "arguments"], [97, 98, "qualifier"], [97, 99, "member"], [93, 100, "arguments"], [100, 101, "member"], [93, 102, "arguments"], [102, 103, "member"], [0, 104, "body"], [104, 105, "expression"], [105, 106, "member"], [105, 107, "arguments"], [107, 108, "member"], [105, 109, "arguments"], [109, 110, "member"]], "rem_roots": [60], "add_roots": []}, {"id": 20, "mappings": {"type": "VAR_1", "prop": "VAR_2", "compiler": "VAR_3", "propertiesToErrorFor": "VAR_4", "n": "VAR_5", "typeSystem": "VAR_6", "t": "VAR_7", "name": "VAR_8", "INVALIDATION": "VAR_9", "Warnings": "VAR_10", "child": "VAR_11", "Node": "TYPE_1", "String": "TYPE_2", "JSError": "TYPE_3", "T": "TYPE_4", "Property": "TYPE_5", "NodeTraversal": "TYPE_6", "getSourceName": "METHOD_1", "processProperty": "METHOD_2", "get": "METHOD_3", "getFirstChild": "METHOD_4", "make": "METHOD_5", "getProperty": "METHOD_6", "containsKey": "METHOD_7", "handleObjectLit": "METHOD_8", "getNext": "METHOD_9", "getString": "METHOD_10", "scheduleRenaming": "METHOD_11", "getType": "METHOD_12", "report": "METHOD_13", "toString": "METHOD_14", "getScope": "METHOD_15", "\"\"": "STRING_1", "\"null\"": "STRING_2"}, "nodes": ["MethodDeclaration", "private", "void", "handleObjectLit", "FormalParameter", "ReferenceType", "NodeTraversal", "t", "FormalParameter", "ReferenceType", "Node", "n", "ForStatement", "ForControl", "VariableDeclaration", "ReferenceType", "Node", "VariableDeclarator", "child", "MethodInvocation", "n", "getFirstChild", "BinaryOperation", "MemberReference", "child", "!=", "Literal", "null", "Assignment", "MemberReference", "child", "=", "MethodInvocation", "child", "getNext", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "String", "VariableDeclarator", "name", "MethodInvocation", "child", "getString", "LocalVariableDeclaration", "ReferenceType", "T", "VariableDeclarator", "type", "MethodInvocation", "typeSystem", "getType", "MethodInvocation", "getScope", "MemberReference", "n", "MemberReference", "name", "LocalVariableDeclaration", "ReferenceType", "Property", "VariableDeclarator", "prop", "MethodInvocation", "getProperty", "MemberReference", "name", "IfStatement", "MethodInvocation", "!", "prop", "scheduleRenaming", "MemberReference", "child", "MethodInvocation", "processProperty", "MemberReference", "t", "MemberReference", "prop", "MemberReference", "type", "Literal", "null", "BlockStatement", "IfStatement", "MethodInvocation", "propertiesToErrorFor", "containsKey", "MemberReference", "name", "BlockStatement", "StatementExpression", "MethodInvocation", "compiler", "report", "MethodInvocation", "JSError", "make", "MethodInvocation", "t", "getSourceName", "MemberReference", "child", "MethodInvocation", "propertiesToErrorFor", "get", "MemberReference", "name", "MemberReference", "Warnings", "INVALIDATION", "MemberReference", "name", "TernaryExpression", "BinaryOperation", "MemberReference", "type", "==", "Literal", "null", "Literal", "\"null\"", "MethodInvocation", "type", "toString", "MethodInvocation", "n", "toString", "Literal", "\"\""], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [0, 3, "name"], [0, 4, "parameters"], [4, 5, "type"], [5, 6, "name"], [4, 7, "name"], [0, 8, "parameters"], [8, 9, "type"], [9, 10, "name"], [8, 11, "name"], [0, 12, "body"], [12, 13, "control"], [13, 14, "init"], [14, 15, "type"], [15, 16, "name"], [14, 17, "declarators"], [17, 18, "name"], [17, 19, "initializer"], [19, 20, "qualifier"], [19, 21, "member"], [13, 22, "condition"], [22, 23, "operandl"], [23, 24, "member"], [22, 25, "operator"], [22, 26, "operandr"], [26, 27, "value"], [13, 28, "update"], [28, 29, "expressionl"], [29, 30, "member"], [28, 31, "type"], [28, 32, "value"], [32, 33, "qualifier"], [32, 34, "member"], [12, 35, "body"], [35, 36, "statements"], [36, 37, "type"], [37, 38, "name"], [36, 39, "declarators"], [39, 40, "name"], [39, 41, "initializer"], [41, 42, "qualifier"], [41, 43, "member"], [35, 44, "statements"], [44, 45, "type"], [45, 46, "name"], [44, 47, "declarators"], [47, 48, "name"], [47, 49, "initializer"], [49, 50, "qualifier"], [49, 51, "member"], [49, 52, "arguments"], [52, 53, "member"], [49, 54, "arguments"], [54, 55, "member"], [49, 56, "arguments"], [56, 57, "member"], [35, 58, "statements"], [58, 59, "type"], [59, 60, "name"], [58, 61, "declarators"], [61, 62, "name"], [61, 63, "initializer"], [63, 64, "member"], [63, 65, "arguments"], [65, 66, "member"], [35, 67, "statements"], [67, 68, "condition"], [68, 69, "prefix_operators"], [68, 70, "qualifier"], [68, 71, "member"], [68, 72, "arguments"], [72, 73, "member"], [68, 74, "arguments"], [74, 75, "member"], [74, 76, "arguments"], [76, 77, "member"], [74, 78, "arguments"], [78, 79, "member"], [74, 80, "arguments"], [80, 81, "member"], [74, 82, "arguments"], [82, 83, "value"], [67, 84, "then_statement"], [84, 85, "statements"], [85, 86, "condition"], [86, 87, "qualifier"], [86, 88, "member"], [86, 89, "arguments"], [89, 90, "member"], [85, 91, "then_statement"], [91, 92, "statements"], [92, 93, "expression"], [93, 94, "qualifier"], [93, 95, "member"], [93, 96, "arguments"], [96, 97, "qualifier"], [96, 98, "member"], [96, 99, "arguments"], [99, 100, "qualifier"], [99, 101, "member"], [96, 102, "arguments"], [102, 103, "member"], [96, 104, "arguments"], [104, 105, "qualifier"], [104, 106, "member"], [104, 107, "arguments"], [107, 108, "member"], [96, 109, "arguments"], [109, 110, "qualifier"], [109, 111, "member"], [96, 112, "arguments"], [112, 113, "member"], [96, 114, "arguments"], [114, 115, "condition"], [115, 116, "operandl"], [116, 117, "member"], [115, 118, "operator"], [115, 119, "operandr"], [119, 120, "value"], [114, 121, "if_true"], [121, 122, "value"], [114, 123, "if_false"], [123, 124, "qualifier"], [123, 125, "member"], [96, 126, "arguments"], [126, 127, "qualifier"], [126, 128, "member"], [96, 129, "arguments"], [129, 130, "value"]], "rem_roots": [35], "add_roots": []}, {"id": 22, "mappings": {"SUSPICIOUS_COMMENT_WARNING": "VAR_1", "errorReporter": "VAR_2", "comment": "VAR_3", "sourceName": "VAR_4", "Comment": "TYPE_1", "handleBlockComment": "METHOD_1", "getValue": "METHOD_2", "getLineno": "METHOD_3", "warning": "METHOD_4", "indexOf": "METHOD_5", "0": "INT_1", "1": "INT_2", "\"\"": "STRING_1", "\"/* @\"": "STRING_2", "\"\\n * @\"": "STRING_3"}, "nodes": ["MethodDeclaration", "private", "void", "handleBlockComment", "FormalParameter", "ReferenceType", "Comment", "comment", "IfStatement", "BinaryOperation", "BinaryOperation", "MethodInvocation", "comment", "getValue", "MethodInvocation", "indexOf", "Literal", "\"/* @\"", "!=", "Literal", "-", "1", "||", "BinaryOperation", "MethodInvocation", "comment", "getValue", "MethodInvocation", "indexOf", "Literal", "\"\\n * @\"", "!=", "Literal", "-", "1", "BlockStatement", "StatementExpression", "MethodInvocation", "errorReporter", "warning", "MemberReference", "SUSPICIOUS_COMMENT_WARNING", "MemberReference", "sourceName", "MethodInvocation", "comment", "getLineno", "Literal", "\"\"", "Literal", "0"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [0, 3, "name"], [0, 4, "parameters"], [4, 5, "type"], [5, 6, "name"], [4, 7, "name"], [0, 8, "body"], [8, 9, "condition"], [9, 10, "operandl"], [10, 11, "operandl"], [11, 12, "qualifier"], [11, 13, "member"], [11, 14, "selectors"], [14, 15, "member"], [14, 16, "arguments"], [16, 17, "value"], [10, 18, "operator"], [10, 19, "operandr"], [19, 20, "prefix_operators"], [19, 21, "value"], [9, 22, "operator"], [9, 23, "operandr"], [23, 24, "operandl"], [24, 25, "qualifier"], [24, 26, "member"], [24, 27, "selectors"], [27, 28, "member"], [27, 29, "arguments"], [29, 30, "value"], [23, 31, "operator"], [23, 32, "operandr"], [32, 33, "prefix_operators"], [32, 34, "value"], [8, 35, "then_statement"], [35, 36, "statements"], [36, 37, "expression"], [37, 38, "qualifier"], [37, 39, "member"], [37, 40, "arguments"], [40, 41, "member"], [37, 42, "arguments"], [42, 43, "member"], [37, 44, "arguments"], [44, 45, "qualifier"], [44, 46, "member"], [37, 47, "arguments"], [47, 48, "value"], [37, 49, "arguments"], [49, 50, "value"]], "rem_roots": [9], "add_roots": []}, {"id": 23, "mappings": {"THROW": "VAR_1", "ARRAYLIT": "VAR_2", "EXPR_RESULT": "VAR_3", "needsParens": "VAR_4", "GETTER_DEF": "VAR_5", "LanguageMode": "VAR_6", "STRING_KEY": "VAR_7", "IN_FOR_INIT_CLAUSE": "VAR_8", "ambiguousElseClause": "VAR_9", "POS": "VAR_10", "SETTER_DEF": "VAR_11", "CALL": "VAR_12", "languageMode": "VAR_13", "key": "VAR_14", "cc": "VAR_15", "c": "VAR_16", "d": "VAR_17", "childCount": "VAR_18", "BITNOT": "VAR_19", "n": "VAR_20", "o": "VAR_21", "p": "VAR_22", "OTHER": "VAR_23", "CONTINUE": "VAR_24", "STRING": "VAR_25", "STATEMENT": "VAR_26", "DO": "VAR_27", "LABEL": "VAR_28", "preserveBlock": "VAR_29", "PARAM_LIST": "VAR_30", "funcNeedsParens": "VAR_31", "NUMBER": "VAR_32", "last": "VAR_33", "FOR": "VAR_34", "BEFORE_DANGLING_ELSE": "VAR_35", "NAME": "VAR_36", "NOT": "VAR_37", "name": "VAR_38", "THIS": "VAR_39", "parameters": "VAR_40", "next": "VAR_41", "catchblock": "VAR_42", "fn": "VAR_43", "RETURN": "VAR_44", "REGEXP": "VAR_45", "EMPTY": "VAR_46", "opstr": "VAR_47", "ECMASCRIPT3": "VAR_48", "WITH": "VAR_49", "TYPEOF": "VAR_50", "DELPROP": "VAR_51", "FALSE": "VAR_52", "outputCharsetEncoder": "VAR_53", "HOOK": "VAR_54", "VAR": "VAR_55", "Token": "VAR_56", "type": "VAR_57", "BREAK": "VAR_58", "context": "VAR_59", "IF": "VAR_60", "PRESERVE_BLOCK": "VAR_61", "CAST": "VAR_62", "preferLineBreaks": "VAR_63", "FUNCTION": "VAR_64", "CASE": "VAR_65", "postProp": "VAR_66", "regexp": "VAR_67", "ASSIGN": "VAR_68", "MATCH_NOT_FUNCTION": "VAR_69", "LABEL_NAME": "VAR_70", "CATCH": "VAR_71", "START_OF_EXPR": "VAR_72", "COMMA": "VAR_73", "rhsContext": "VAR_74", "DEBUGGER": "VAR_75", "hasElse": "VAR_76", "NEG": "VAR_77", "first": "VAR_78", "NEW": "VAR_79", "body": "VAR_80", "precedence": "VAR_81", "OBJECTLIT": "VAR_82", "DEFAULT_CASE": "VAR_83", "TRY": "VAR_84", "GETELEM": "VAR_85", "NULL": "VAR_86", "BLOCK": "VAR_87", "TRUE": "VAR_88", "FREE_CALL": "VAR_89", "SCRIPT": "VAR_90", "SWITCH": "VAR_91", "VOID": "VAR_92", "INC": "VAR_93", "GETPROP": "VAR_94", "DEC": "VAR_95", "INCRDECR_PROP": "VAR_96", "WHILE": "VAR_97", "Node": "TYPE_1", "String": "TYPE_2", "Context": "TYPE_3", "TokenStream": "TYPE_4", "NodeUtil": "TYPE_5", "Double": "TYPE_6", "Preconditions": "TYPE_7", "Error": "TYPE_8", "getBooleanProp": "METHOD_1", "listSeparator": "METHOD_2", "addAllSiblings": "METHOD_3", "hasOneChild": "METHOD_4", "checkState": "METHOD_5", "addArrayList": "METHOD_6", "unrollBinaryOperator": "METHOD_7", "isFunction": "METHOD_8", "isSetterDef": "METHOD_9", "getChildCount": "METHOD_10", "isGet": "METHOD_11", "getType": "METHOD_12", "getSimpleNumber": "METHOD_13", "isJSIdentifier": "METHOD_14", "isVar": "METHOD_15", "getParent": "METHOD_16", "getContextForNonEmptyExpression": "METHOD_17", "isStringKey": "METHOD_18", "regexpEscape": "METHOD_19", "hasChildren": "METHOD_20", "isScript": "METHOD_21", "isQuotedString": "METHOD_22", "isNaN": "METHOD_23", "addIdentifier": "METHOD_24", "toStringTree": "METHOD_25", "add": "METHOD_26", "addJsString": "METHOD_27", "getLastChild": "METHOD_28", "opToStrNoFail": "METHOD_29", "maybeLineBreak": "METHOD_30", "getDouble": "METHOD_31", "startSourceMapping": "METHOD_32", "isString": "METHOD_33", "addNumber": "METHOD_34", "isAssignmentOp": "METHOD_35", "isEmpty": "METHOD_36", "getNext": "METHOD_37", "getString": "METHOD_38", "isLatin": "METHOD_39", "isBlock": "METHOD_40", "breakAfterBlockFor": "METHOD_41", "getChildAtIndex": "METHOD_42", "getContextForNoInOperator": "METHOD_43", "isComma": "METHOD_44", "isIndirectEval": "METHOD_45", "notePreferredLineBreak": "METHOD_46", "endBlock": "METHOD_47", "isGetterDef": "METHOD_48", "getFirstChild": "METHOD_49", "addList": "METHOD_50", "addConstant": "METHOD_51", "isAssociative": "METHOD_52", "endFunction": "METHOD_53", "getClass": "METHOD_54", "opToStr": "METHOD_55", "isLabelName": "METHOD_56", "isNumber": "METHOD_57", "addCaseBody": "METHOD_58", "hasMoreThanOneChild": "METHOD_59", "containsType": "METHOD_60", "addExpr": "METHOD_61", "isKeyword": "METHOD_62", "isObjectLit": "METHOD_63", "endSourceMapping": "METHOD_64", "addNonEmptyStatement": "METHOD_65", "getIntProp": "METHOD_66", "beginBlock": "METHOD_67", "continueProcessing": "METHOD_68", "endStatement": "METHOD_69", "addOp": "METHOD_70", "0": "INT_1", "1": "INT_2", "2": "INT_3", "3": "INT_4", "4": "INT_5", "\"function\"": "STRING_1", "\"Bad binary operator \\\"%s\\\": expected 2 arguments but got %s\"": "STRING_2", "\"in\"": "STRING_3", "\"false\"": "STRING_4", "\"var \"": "STRING_5", "\"(0,\"": "STRING_6", "\"Bad GETPROP: RHS should be STRING\"": "STRING_7", "\"Unexpected token type. Should be LABEL_NAME.\"": "STRING_8", "\"new \"": "STRING_9", "\"(\"": "STRING_10", "\"{\"": "STRING_11", "\")\"": "STRING_12", "\"A string may not have children\"": "STRING_13", "\"Bad GETELEM: expected 2 children but got %s\"": "STRING_14", "\"case \"": "STRING_15", "\"[\"": "STRING_16", "\":\"": "STRING_17", "\"null\"": "STRING_18", "\"else\"": "STRING_19", "\"Expected children to be strings\"": "STRING_20", "\"}\"": "STRING_21", "\";\"": "STRING_22", "\"throw\"": "STRING_23", "\"this\"": "STRING_24", "\"try\"": "STRING_25", "\"delete \"": "STRING_26", "\"]\"": "STRING_27", "\"Unexpected Node subclass.\"": "STRING_28", "\",\"": "STRING_29", "\"=\"": "STRING_30", "\"Object lit key must have 1 child\"": "STRING_31", "\"get \"": "STRING_32", "\"--\"": "STRING_33", "\"with(\"": "STRING_34", "\"switch(\"": "STRING_35", "\".\"": "STRING_36", "\"finally\"": "STRING_37", "\"default\"": "STRING_38", "\"?\"": "STRING_39", "\"++\"": "STRING_40", "\"for(\"": "STRING_41", "\"\\n\"": "STRING_42", "\"do\"": "STRING_43", "\"set \"": "STRING_44", "\"Unknown type \"": "STRING_45", "\"catch(\"": "STRING_46", "\"Bad GETPROP: expected 2 children, but got %s\"": "STRING_47", "\" \"": "STRING_48", "\"debugger\"": "STRING_49", "\"continue\"": "STRING_50", "\"while(\"": "STRING_51", "\"break\"": "STRING_52", "\"if(\"": "STRING_53", "\"true\"": "STRING_54", "\"return\"": "STRING_55"}, "nodes": ["MethodDeclaration", "void", "add", "FormalParameter", "ReferenceType", "Node", "n", "FormalParameter", "ReferenceType", "Context", "context", "IfStatement", "MethodInvocation", "!", "cc", "continueProcessing", "BlockStatement", "ReturnStatement", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "type", "MethodInvocation", "n", "getType", "LocalVariableDeclaration", "ReferenceType", "String", "VariableDeclarator", "opstr", "MethodInvocation", "NodeUtil", "opToStr", "MemberReference", "type", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "childCount", "MethodInvocation", "n", "getChildCount", "LocalVariableDeclaration", "ReferenceType", "Node", "VariableDeclarator", "first", "MethodInvocation", "n", "getFirstChild", "LocalVariableDeclaration", "ReferenceType", "Node", "VariableDeclarator", "last", "MethodInvocation", "n", "getLastChild", "IfStatement", "BinaryOperation", "BinaryOperation", "MemberReference", "opstr", "!=", "Literal", "null", "&&", "BinaryOperation", "MemberReference", "first", "!=", "MemberReference", "last", "BlockStatement", "StatementExpression", "MethodInvocation", "Preconditions", "checkState", "BinaryOperation", "MemberReference", "childCount", "==", "Literal", "2", "Literal", "\"Bad binary operator \\\"%s\\\": expected 2 arguments but got %s\"", "MemberReference", "opstr", "MemberReference", "childCount", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "p", "MethodInvocation", "NodeUtil", "precedence", "MemberReference", "type", "LocalVariableDeclaration", "ReferenceType", "Context", "VariableDeclarator", "rhsContext", "MethodInvocation", "getContextForNoInOperator", "MemberReference", "context", "IfStatement", "BinaryOperation", "BinaryOperation", "MethodInvocation", "last", "getType", "==", "MemberReference", "type", "&&", "MethodInvocation", "NodeUtil", "isAssociative", "MemberReference", "type", "BlockStatement", "StatementExpression", "MethodInvocation", "addExpr", "MemberReference", "first", "MemberReference", "p", "MemberReference", "context", "StatementExpression", "MethodInvocation", "cc", "addOp", "MemberReference", "opstr", "Literal", "true", "StatementExpression", "MethodInvocation", "addExpr", "MemberReference", "last", "MemberReference", "p", "MemberReference", "rhsContext", "IfStatement", "BinaryOperation", "MethodInvocation", "NodeUtil", "isAssignmentOp", "MemberReference", "n", "&&", "MethodInvocation", "NodeUtil", "isAssignmentOp", "MemberReference", "last", "BlockStatement", "StatementExpression", "MethodInvocation", "addExpr", "MemberReference", "first", "MemberReference", "p", "MemberReference", "context", "StatementExpression", "MethodInvocation", "cc", "addOp", "MemberReference", "opstr", "Literal", "true", "StatementExpression", "MethodInvocation", "addExpr", "MemberReference", "last", "MemberReference", "p", "MemberReference", "rhsContext", "BlockStatement", "StatementExpression", "MethodInvocation", "unrollBinaryOperator", "MemberReference", "n", "MemberReference", "type", "MemberReference", "opstr", "MemberReference", "context", "MemberReference", "rhsContext", "MemberReference", "p", "BinaryOperation", "MemberReference", "p", "+", "Literal", "1", "ReturnStatement", "StatementExpression", "MethodInvocation", "cc", "startSourceMapping", "MemberReference", "n", "SwitchStatement", "MemberReference", "type", "SwitchStatementCase", "MemberReference", "Token", "TRY", "BlockStatement", "StatementExpression", "MethodInvocation", "Preconditions", "checkState", "BinaryOperation", "MethodInvocation", "first", "getNext", "MethodInvocation", "isBlock", "&&", "MethodInvocation", "!", "first", "getNext", "MethodInvocation", "hasMoreThanOneChild", "StatementExpression", "MethodInvocation", "Preconditions", "checkState", "BinaryOperation", "BinaryOperation", "MemberReference", "childCount", ">=", "Literal", "2", "&&", "BinaryOperation", "MemberReference", "childCount", "<=", "Literal", "3", "StatementExpression", "MethodInvocation", "add", "Literal", "\"try\"", "StatementExpression", "MethodInvocation", "add", "MemberReference", "first", "MemberReference", "Context", "PRESERVE_BLOCK", "LocalVariableDeclaration", "ReferenceType", "Node", "VariableDeclarator", "catchblock", "MethodInvocation", "first", "getNext", "MethodInvocation", "getFirstChild", "IfStatement", "BinaryOperation", "MemberReference", "catchblock", "!=", "Literal", "null", "BlockStatement", "StatementExpression", "MethodInvocation", "add", "MemberReference", "catchblock", "IfStatement", "BinaryOperation", "MemberReference", "childCount", "==", "Literal", "3", "BlockStatement", "StatementExpression", "MethodInvocation", "add", "Literal", "\"finally\"", "StatementExpression", "MethodInvocation", "add", "MemberReference", "last", "MemberReference", "Context", "PRESERVE_BLOCK", "BreakStatement", "SwitchStatementCase", "MemberReference", "Token", "CATCH", "StatementExpression", "MethodInvocation", "Preconditions", "checkState", "BinaryOperation", "MemberReference", "childCount", "==", "Literal", "2", "StatementExpression", "MethodInvocation", "add", "Literal", "\"catch(\"", "StatementExpression", "MethodInvocation", "add", "MemberReference", "first", "StatementExpression", "MethodInvocation", "add", "Literal", "\")\"", "StatementExpression", "MethodInvocation", "add", "MemberReference", "last", "MemberReference", "Context", "PRESERVE_BLOCK", "BreakStatement", "SwitchStatementCase", "MemberReference", "Token", "THROW", "StatementExpression", "MethodInvocation", "Preconditions", "checkState", "BinaryOperation", "MemberReference", "childCount", "==", "Literal", "1", "StatementExpression", "MethodInvocation", "add", "Literal", "\"throw\"", "StatementExpression", "MethodInvocation", "add", "MemberReference", "first", "StatementExpression", "MethodInvocation", "cc", "endStatement", "Literal", "true", "BreakStatement", "SwitchStatementCase", "MemberReference", "Token", "RETURN", "StatementExpression", "MethodInvocation", "add", "Literal", "\"return\"", "IfStatement", "BinaryOperation", "MemberReference", "childCount", "==", "Literal", "1", "BlockStatement", "StatementExpression", "MethodInvocation", "add", "MemberReference", "first", "BlockStatement", "StatementExpression", "MethodInvocation", "Preconditions", "checkState", "BinaryOperation", "MemberReference", "childCount", "==", "Literal", "0", "StatementExpression", "MethodInvocation", "cc", "endStatement", "BreakStatement", "SwitchStatementCase", "MemberReference", "Token", "VAR", "IfStatement", "BinaryOperation", "MemberReference", "first", "!=", "Literal", "null", "BlockStatement", "StatementExpression", "MethodInvocation", "add", "Literal", "\"var \"", "StatementExpression", "MethodInvocation", "addList", "MemberReference", "first", "Literal", "false", "MethodInvocation", "getContextForNoInOperator", "MemberReference", "context", "BreakStatement", "SwitchStatementCase", "MemberReference", "Token", "LABEL_NAME", "StatementExpression", "MethodInvocation", "Preconditions", "checkState", "MethodInvocation", "!", "n", "getString", "MethodInvocation", "isEmpty", "StatementExpression", "MethodInvocation", "addIdentifier", "MethodInvocation", "n", "getString", "BreakStatement", "SwitchStatementCase", "MemberReference", "Token", "NAME", "IfStatement", "BinaryOperation", "BinaryOperation", "MemberReference", "first", "==", "Literal", "null", "||", "MethodInvocation", "first", "isEmpty", "BlockStatement", "StatementExpression", "MethodInvocation", "addIdentifier", "MethodInvocation", "n", "getString", "BlockStatement", "StatementExpression", "MethodInvocation", "Preconditions", "checkState", "BinaryOperation", "MemberReference", "childCount", "==", "Literal", "1", "StatementExpression", "MethodInvocation", "addIdentifier", "MethodInvocation", "n", "getString", "StatementExpression", "MethodInvocation", "cc", "addOp", "Literal", "\"=\"", "Literal", "true", "IfStatement", "MethodInvocation", "first", "isComma", "BlockStatement", "StatementExpression", "MethodInvocation", "addExpr", "MemberReference", "first", "MethodInvocation", "NodeUtil", "precedence", "MemberReference", "Token", "ASSIGN", "MemberReference", "Context", "OTHER", "BlockStatement", "StatementExpression", "MethodInvocation", "addExpr", "MemberReference", "first", "Literal", "0", "MethodInvocation", "getContextForNoInOperator", "MemberReference", "context", "BreakStatement", "SwitchStatementCase", "MemberReference", "Token", "ARRAYLIT", "StatementExpression", "MethodInvocation", "add", "Literal", "\"[\"", "StatementExpression", "MethodInvocation", "addArrayList", "MemberReference", "first", "StatementExpression", "MethodInvocation", "add", "Literal", "\"]\"", "BreakStatement", "SwitchStatementCase", "MemberReference", "Token", "PARAM_LIST", "StatementExpression", "MethodInvocation", "add", "Literal", "\"(\"", "StatementExpression", "MethodInvocation", "addList", "MemberReference", "first", "StatementExpression", "MethodInvocation", "add", "Literal", "\")\"", "BreakStatement", "SwitchStatementCase", "MemberReference", "Token", "COMMA", "StatementExpression", "MethodInvocation", "Preconditions", "checkState", "BinaryOperation", "MemberReference", "childCount", "==", "Literal", "2", "StatementExpression", "MethodInvocation", "unrollBinaryOperator", "MemberReference", "n", "MemberReference", "Token", "COMMA", "Literal", "\",\"", "MemberReference", "context", "MethodInvocation", "getContextForNoInOperator", "MemberReference", "context", "Literal", "0", "Literal", "0", "BreakStatement", "SwitchStatementCase", "MemberReference", "Token", "NUMBER", "StatementExpression", "MethodInvocation", "Preconditions", "checkState", "BinaryOperation", "MemberReference", "childCount", "==", "Literal", "0", "StatementExpression", "MethodInvocation", "cc", "addNumber", "MethodInvocation", "n", "getDouble", "BreakStatement", "SwitchStatementCase", "MemberReference", "Token", "TYPEOF", "MemberReference", "Token", "VOID", "MemberReference", "Token", "NOT", "MemberReference", "Token", "BITNOT", "MemberReference", "Token", "POS", "BlockStatement", "StatementExpression", "MethodInvocation", "Preconditions", "checkState", "BinaryOperation", "MemberReference", "childCount", "==", "Literal", "1", "StatementExpression", "MethodInvocation", "cc", "addOp", "MethodInvocation", "NodeUtil", "opToStrNoFail", "MemberReference", "type", "Literal", "false", "StatementExpression", "MethodInvocation", "addExpr", "MemberReference", "first", "MethodInvocation", "NodeUtil", "precedence", "MemberReference", "type", "MemberReference", "Context", "OTHER", "BreakStatement", "SwitchStatementCase", "MemberReference", "Token", "NEG", "BlockStatement", "StatementExpression", "MethodInvocation", "Preconditions", "checkState", "BinaryOperation", "MemberReference", "childCount", "==", "Literal", "1", "IfStatement", "MethodInvocation", "n", "getFirstChild", "MethodInvocation", "isNumber", "BlockStatement", "StatementExpression", "MethodInvocation", "cc", "addNumber", "MethodInvocation", "-", "n", "getFirstChild", "MethodInvocation", "getDouble", "BlockStatement", "StatementExpression", "MethodInvocation", "cc", "addOp", "MethodInvocation", "NodeUtil", "opToStrNoFail", "MemberReference", "type", "Literal", "false", "StatementExpression", "MethodInvocation", "addExpr", "MemberReference", "first", "MethodInvocation", "NodeUtil", "precedence", "MemberReference", "type", "MemberReference", "Context", "OTHER", "BreakStatement", "SwitchStatementCase", "MemberReference", "Token", "HOOK", "BlockStatement", "StatementExpression", "MethodInvocation", "Preconditions", "checkState", "BinaryOperation", "MemberReference", "childCount", "==", "Literal", "3", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "p", "MethodInvocation", "NodeUtil", "precedence", "MemberReference", "type", "LocalVariableDeclaration", "ReferenceType", "Context", "VariableDeclarator", "rhsContext", "MemberReference", "Context", "OTHER", "StatementExpression", "MethodInvocation", "addExpr", "MemberReference", "first", "BinaryOperation", "MemberReference", "p", "+", "Literal", "1", "MemberReference", "context", "StatementExpression", "MethodInvocation", "cc", "addOp", "Literal", "\"?\"", "Literal", "true", "StatementExpression", "MethodInvocation", "addExpr", "MethodInvocation", "first", "getNext", "Literal", "1", "MemberReference", "rhsContext", "StatementExpression", "MethodInvocation", "cc", "addOp", "Literal", "\":\"", "Literal", "true", "StatementExpression", "MethodInvocation", "addExpr", "MemberReference", "last", "Literal", "1", "MemberReference", "rhsContext", "BreakStatement", "SwitchStatementCase", "MemberReference", "Token", "REGEXP", "IfStatement", "BinaryOperation", "MethodInvocation", "!", "first", "isString", "||", "MethodInvocation", "!", "last", "isString", "BlockStatement", "ThrowStatement", "ClassCreator", "ReferenceType", "Error", "Literal", "\"Expected children to be strings\"", "LocalVariableDeclaration", "ReferenceType", "String", "VariableDeclarator", "regexp", "MethodInvocation", "regexpEscape", "MethodInvocation", "first", "getString", "MemberReference", "outputCharsetEncoder", "IfStatement", "BinaryOperation", "MemberReference", "childCount", "==", "Literal", "2", "BlockStatement", "StatementExpression", "MethodInvocation", "add", "BinaryOperation", "MemberReference", "regexp", "+", "MethodInvocation", "last", "getString", "BlockStatement", "StatementExpression", "MethodInvocation", "Preconditions", "checkState", "BinaryOperation", "MemberReference", "childCount", "==", "Literal", "1", "StatementExpression", "MethodInvocation", "add", "MemberReference", "regexp", "BreakStatement", "SwitchStatementCase", "MemberReference", "Token", "FUNCTION", "IfStatement", "BinaryOperation", "MethodInvocation", "n", "getClass", "!=", "ClassReference", "ReferenceType", "Node", "BlockStatement", "ThrowStatement", "ClassCreator", "ReferenceType", "Error", "Literal", "\"Unexpected Node subclass.\"", "StatementExpression", "MethodInvocation", "Preconditions", "checkState", "BinaryOperation", "MemberReference", "childCount", "==", "Literal", "3", "LocalVariableDeclaration", "BasicType", "boolean", "VariableDeclarator", "funcNeedsParens", "BinaryOperation", "MemberReference", "context", "==", "MemberReference", "Context", "START_OF_EXPR", "IfStatement", "MemberReference", "funcNeedsParens", "BlockStatement", "StatementExpression", "MethodInvocation", "add", "Literal", "\"(\"", "StatementExpression", "MethodInvocation", "add", "Literal", "\"function\"", "StatementExpression", "MethodInvocation", "add", "MemberReference", "first", "StatementExpression", "MethodInvocation", "add", "MethodInvocation", "first", "getNext", "StatementExpression", "MethodInvocation", "add", "MemberReference", "last", "MemberReference", "Context", "PRESERVE_BLOCK", "StatementExpression", "MethodInvocation", "cc", "endFunction", "BinaryOperation", "MemberReference", "context", "==", "MemberReference", "Context", "STATEMENT", "IfStatement", "MemberReference", "funcNeedsParens", "BlockStatement", "StatementExpression", "MethodInvocation", "add", "Literal", "\")\"", "BreakStatement", "SwitchStatementCase", "MemberReference", "Token", "GETTER_DEF", "MemberReference", "Token", "SETTER_DEF", "StatementExpression", "MethodInvocation", "Preconditions", "checkState", "MethodInvocation", "n", "getParent", "MethodInvocation", "isObjectLit", "StatementExpression", "MethodInvocation", "Preconditions", "checkState", "BinaryOperation", "MemberReference", "childCount", "==", "Literal", "1", "StatementExpression", "MethodInvocation", "Preconditions", "checkState", "MethodInvocation", "first", "isFunction", "StatementExpression", "MethodInvocation", "Preconditions", "checkState", "MethodInvocation", "first", "getFirstChild", "MethodInvocation", "getString", "MethodInvocation", "isEmpty", "IfStatement", "BinaryOperation", "MemberReference", "type", "==", "MemberReference", "Token", "GETTER_DEF", "BlockStatement", "StatementExpression", "MethodInvocation", "Preconditions", "checkState", "MethodInvocation", "!", "first", "getChildAtIndex", "Literal", "1", "MethodInvocation", "hasChildren", "StatementExpression", "MethodInvocation", "add", "Literal", "\"get \"", "BlockStatement", "StatementExpression", "MethodInvocation", "Preconditions", "checkState", "MethodInvocation", "first", "getChildAtIndex", "Literal", "1", "MethodInvocation", "hasOneChild", "StatementExpression", "MethodInvocation", "add", "Literal", "\"set \"", "LocalVariableDeclaration", "ReferenceType", "String", "VariableDeclarator", "name", "MethodInvocation", "n", "getString", "LocalVariableDeclaration", "ReferenceType", "Node", "VariableDeclarator", "fn", "MemberReference", "first", "LocalVariableDeclaration", "ReferenceType", "Node", "VariableDeclarator", "parameters", "MethodInvocation", "fn", "getChildAtIndex", "Literal", "1", "LocalVariableDeclaration", "ReferenceType", "Node", "VariableDeclarator", "body", "MethodInvocation", "fn", "getLastChild", "IfStatement", "BinaryOperation", "BinaryOperation", "MethodInvocation", "!", "n", "isQuotedString", "&&", "MethodInvocation", "TokenStream", "isJSIdentifier", "MemberReference", "name", "&&", "MethodInvocation", "NodeUtil", "isLatin", "MemberReference", "name", "BlockStatement", "StatementExpression", "MethodInvocation", "add", "MemberReference", "name", "BlockStatement", "LocalVariableDeclaration", "BasicType", "double", "VariableDeclarator", "d", "MethodInvocation", "getSimpleNumber", "MemberReference", "name", "IfStatement", "MethodInvocation", "!", "Double", "isNaN", "MemberReference", "d", "BlockStatement", "StatementExpression", "MethodInvocation", "cc", "addNumber", "MemberReference", "d", "BlockStatement", "StatementExpression", "MethodInvocation", "addJsString", "MemberReference", "n", "StatementExpression", "MethodInvocation", "add", "MemberReference", "parameters", "StatementExpression", "MethodInvocation", "add", "MemberReference", "body", "MemberReference", "Context", "PRESERVE_BLOCK", "BreakStatement", "SwitchStatementCase", "MemberReference", "Token", "SCRIPT", "MemberReference", "Token", "BLOCK", "BlockStatement", "IfStatement", "BinaryOperation", "MethodInvocation", "n", "getClass", "!=", "ClassReference", "ReferenceType", "Node", "BlockStatement", "ThrowStatement", "ClassCreator", "ReferenceType", "Error", "Literal", "\"Unexpected Node subclass.\"", "LocalVariableDeclaration", "BasicType", "boolean", "VariableDeclarator", "preserveBlock", "BinaryOperation", "MemberReference", "context", "==", "MemberReference", "Context", "PRESERVE_BLOCK", "IfStatement", "MemberReference", "preserveBlock", "BlockStatement", "StatementExpression", "MethodInvocation", "cc", "beginBlock", "LocalVariableDeclaration", "BasicType", "boolean", "VariableDeclarator", "preferLineBreaks", "BinaryOperation", "BinaryOperation", "MemberReference", "type", "==", "MemberReference", "Token", "SCRIPT", "||", "BinaryOperation", "BinaryOperation", "BinaryOperation", "BinaryOperation", "MemberReference", "type", "==", "MemberReference", "Token", "BLOCK", "&&", "MemberReference", "!", "preserveBlock", "&&", "BinaryOperation", "MethodInvocation", "n", "getParent", "!=", "Literal", "null", "&&", "MethodInvocation", "n", "getParent", "MethodInvocation", "isScript", "ForStatement", "ForControl", "VariableDeclaration", "ReferenceType", "Node", "VariableDeclarator", "c", "MemberReference", "first", "BinaryOperation", "MemberReference", "c", "!=", "Literal", "null", "Assignment", "MemberReference", "c", "=", "MethodInvocation", "c", "getNext", "BlockStatement", "StatementExpression", "MethodInvocation", "add", "MemberReference", "c", "MemberReference", "Context", "STATEMENT", "IfStatement", "MethodInvocation", "c", "isVar", "BlockStatement", "StatementExpression", "MethodInvocation", "cc", "endStatement", "IfStatement", "MethodInvocation", "c", "isFunction", "BlockStatement", "StatementExpression", "MethodInvocation", "cc", "maybeLineBreak", "IfStatement", "MemberReference", "preferLineBreaks", "BlockStatement", "StatementExpression", "MethodInvocation", "cc", "notePreferredLineBreak", "IfStatement", "MemberReference", "preserveBlock", "BlockStatement", "StatementExpression", "MethodInvocation", "cc", "endBlock", "MethodInvocation", "cc", "breakAfterBlockFor", "MemberReference", "n", "BinaryOperation", "MemberReference", "context", "==", "MemberReference", "Context", "STATEMENT", "BreakStatement", "SwitchStatementCase", "MemberReference", "Token", "FOR", "IfStatement", "BinaryOperation", "MemberReference", "childCount", "==", "Literal", "4", "BlockStatement", "StatementExpression", "MethodInvocation", "add", "Literal", "\"for(\"", "IfStatement", "MethodInvocation", "first", "isVar", "BlockStatement", "StatementExpression", "MethodInvocation", "add", "MemberReference", "first", "MemberReference", "Context", "IN_FOR_INIT_CLAUSE", "BlockStatement", "StatementExpression", "MethodInvocation", "addExpr", "MemberReference", "first", "Literal", "0", "MemberReference", "Context", "IN_FOR_INIT_CLAUSE", "StatementExpression", "MethodInvocation", "add", "Literal", "\";\"", "StatementExpression", "MethodInvocation", "add", "MethodInvocation", "first", "getNext", "StatementExpression", "MethodInvocation", "add", "Literal", "\";\"", "StatementExpression", "MethodInvocation", "add", "MethodInvocation", "first", "getNext", "MethodInvocation", "getNext", "StatementExpression", "MethodInvocation", "add", "Literal", "\")\"", "StatementExpression", "MethodInvocation", "addNonEmptyStatement", "MemberReference", "last", "MethodInvocation", "getContextForNonEmptyExpression", "MemberReference", "context", "Literal", "false", "BlockStatement", "StatementExpression", "MethodInvocation", "Preconditions", "checkState", "BinaryOperation", "MemberReference", "childCount", "==", "Literal", "3", "StatementExpression", "MethodInvocation", "add", "Literal", "\"for(\"", "StatementExpression", "MethodInvocation", "add", "MemberReference", "first", "StatementExpression", "MethodInvocation", "add", "Literal", "\"in\"", "StatementExpression", "MethodInvocation", "add", "MethodInvocation", "first", "getNext", "StatementExpression", "MethodInvocation", "add", "Literal", "\")\"", "StatementExpression", "MethodInvocation", "addNonEmptyStatement", "MemberReference", "last", "MethodInvocation", "getContextForNonEmptyExpression", "MemberReference", "context", "Literal", "false", "BreakStatement", "SwitchStatementCase", "MemberReference", "Token", "DO", "StatementExpression", "MethodInvocation", "Preconditions", "checkState", "BinaryOperation", "MemberReference", "childCount", "==", "Literal", "2", "StatementExpression", "MethodInvocation", "add", "Literal", "\"do\"", "StatementExpression", "MethodInvocation", "addNonEmptyStatement", "MemberReference", "first", "MemberReference", "Context", "OTHER", "Literal", "false", "StatementExpression", "MethodInvocation", "add", "Literal", "\"while(\"", "StatementExpression", "MethodInvocation", "add", "MemberReference", "last", "StatementExpression", "MethodInvocation", "add", "Literal", "\")\"", "StatementExpression", "MethodInvocation", "cc", "endStatement", "BreakStatement", "SwitchStatementCase", "MemberReference", "Token", "WHILE", "StatementExpression", "MethodInvocation", "Preconditions", "checkState", "BinaryOperation", "MemberReference", "childCount", "==", "Literal", "2", "StatementExpression", "MethodInvocation", "add", "Literal", "\"while(\"", "StatementExpression", "MethodInvocation", "add", "MemberReference", "first", "StatementExpression", "MethodInvocation", "add", "Literal", "\")\"", "StatementExpression", "MethodInvocation", "addNonEmptyStatement", "MemberReference", "last", "MethodInvocation", "getContextForNonEmptyExpression", "MemberReference", "context", "Literal", "false", "BreakStatement", "SwitchStatementCase", "MemberReference", "Token", "EMPTY", "StatementExpression", "MethodInvocation", "Preconditions", "checkState", "BinaryOperation", "MemberReference", "childCount", "==", "Literal", "0", "BreakStatement", "SwitchStatementCase", "MemberReference", "Token", "GETPROP", "BlockStatement", "StatementExpression", "MethodInvocation", "Preconditions", "checkState", "BinaryOperation", "MemberReference", "childCount", "==", "Literal", "2", "Literal", "\"Bad GETPROP: expected 2 children, but got %s\"", "MemberReference", "childCount", "StatementExpression", "MethodInvocation", "Preconditions", "checkState", "MethodInvocation", "last", "isString", "Literal", "\"Bad GETPROP: RHS should be STRING\"", "LocalVariableDeclaration", "BasicType", "boolean", "VariableDeclarator", "needsParens", "MethodInvocation", "first", "isNumber", "IfStatement", "MemberReference", "needsParens", "BlockStatement", "StatementExpression", "MethodInvocation", "add", "Literal", "\"(\"", "StatementExpression", "MethodInvocation", "addExpr", "MemberReference", "first", "MethodInvocation", "NodeUtil", "precedence", "MemberReference", "type", "MemberReference", "context", "IfStatement", "MemberReference", "needsParens", "BlockStatement", "StatementExpression", "MethodInvocation", "add", "Literal", "\")\"", "IfStatement", "BinaryOperation", "BinaryOperation", "This", "MemberReference", "languageMode", "==", "MemberReference", "LanguageMode", "ECMASCRIPT3", "&&", "MethodInvocation", "TokenStream", "isKeyword", "MethodInvocation", "last", "getString", "BlockStatement", "StatementExpression", "MethodInvocation", "add", "Literal", "\"[\"", "StatementExpression", "MethodInvocation", "add", "MemberReference", "last", "StatementExpression", "MethodInvocation", "add", "Literal", "\"]\"", "BlockStatement", "StatementExpression", "MethodInvocation", "add", "Literal", "\".\"", "StatementExpression", "MethodInvocation", "addIdentifier", "MethodInvocation", "last", "getString", "BreakStatement", "SwitchStatementCase", "MemberReference", "Token", "GETELEM", "StatementExpression", "MethodInvocation", "Preconditions", "checkState", "BinaryOperation", "MemberReference", "childCount", "==", "Literal", "2", "Literal", "\"Bad GETELEM: expected 2 children but got %s\"", "MemberReference", "childCount", "StatementExpression", "MethodInvocation", "addExpr", "MemberReference", "first", "MethodInvocation", "NodeUtil", "precedence", "MemberReference", "type", "MemberReference", "context", "StatementExpression", "MethodInvocation", "add", "Literal", "\"[\"", "StatementExpression", "MethodInvocation", "add", "MethodInvocation", "first", "getNext", "StatementExpression", "MethodInvocation", "add", "Literal", "\"]\"", "BreakStatement", "SwitchStatementCase", "MemberReference", "Token", "WITH", "StatementExpression", "MethodInvocation", "Preconditions", "checkState", "BinaryOperation", "MemberReference", "childCount", "==", "Literal", "2", "StatementExpression", "MethodInvocation", "add", "Literal", "\"with(\"", "StatementExpression", "MethodInvocation", "add", "MemberReference", "first", "StatementExpression", "MethodInvocation", "add", "Literal", "\")\"", "StatementExpression", "MethodInvocation", "addNonEmptyStatement", "MemberReference", "last", "MethodInvocation", "getContextForNonEmptyExpression", "MemberReference", "context", "Literal", "false", "BreakStatement", "SwitchStatementCase", "MemberReference", "Token", "INC", "MemberReference", "Token", "DEC", "BlockStatement", "StatementExpression", "MethodInvocation", "Preconditions", "checkState", "BinaryOperation", "MemberReference", "childCount", "==", "Literal", "1", "LocalVariableDeclaration", "ReferenceType", "String", "VariableDeclarator", "o", "TernaryExpression", "BinaryOperation", "MemberReference", "type", "==", "MemberReference", "Token", "INC", "Literal", "\"++\"", "Literal", "\"--\"", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "postProp", "MethodInvocation", "n", "getIntProp", "MemberReference", "Node", "INCRDECR_PROP", "IfStatement", "BinaryOperation", "MemberReference", "postProp", "!=", "Literal", "0", "BlockStatement", "StatementExpression", "MethodInvocation", "addExpr", "MemberReference", "first", "MethodInvocation", "NodeUtil", "precedence", "MemberReference", "type", "MemberReference", "context", "StatementExpression", "MethodInvocation", "cc", "addOp", "MemberReference", "o", "Literal", "false", "BlockStatement", "StatementExpression", "MethodInvocation", "cc", "addOp", "MemberReference", "o", "Literal", "false", "StatementExpression", "MethodInvocation", "add", "MemberReference", "first", "BreakStatement", "SwitchStatementCase", "MemberReference", "Token", "CALL", "IfStatement", "BinaryOperation", "MethodInvocation", "isIndirectEval", "MemberReference", "first", "||", "BinaryOperation", "MethodInvocation", "n", "getBooleanProp", "MemberReference", "Node", "FREE_CALL", "&&", "MethodInvocation", "NodeUtil", "isGet", "MemberReference", "first", "BlockStatement", "StatementExpression", "MethodInvocation", "add", "Literal", "\"(0,\"", "StatementExpression", "MethodInvocation", "addExpr", "MemberReference", "first", "MethodInvocation", "NodeUtil", "precedence", "MemberReference", "Token", "COMMA", "MemberReference", "Context", "OTHER", "StatementExpression", "MethodInvocation", "add", "Literal", "\")\"", "BlockStatement", "StatementExpression", "MethodInvocation", "addExpr", "MemberReference", "first", "MethodInvocation", "NodeUtil", "precedence", "MemberReference", "type", "MemberReference", "context", "StatementExpression", "MethodInvocation", "add", "Literal", "\"(\"", "StatementExpression", "MethodInvocation", "addList", "MethodInvocation", "first", "getNext", "StatementExpression", "MethodInvocation", "add", "Literal", "\")\"", "BreakStatement", "SwitchStatementCase", "MemberReference", "Token", "IF", "LocalVariableDeclaration", "BasicType", "boolean", "VariableDeclarator", "hasElse", "BinaryOperation", "MemberReference", "childCount", "==", "Literal", "3", "LocalVariableDeclaration", "BasicType", "boolean", "VariableDeclarator", "ambiguousElseClause", "BinaryOperation", "BinaryOperation", "MemberReference", "context", "==", "MemberReference", "Context", "BEFORE_DANGLING_ELSE", "&&", "MemberReference", "!", "hasElse", "IfStatement", "MemberReference", "ambiguousElseClause", "BlockStatement", "StatementExpression", "MethodInvocation", "cc", "beginBlock", "StatementExpression", "MethodInvocation", "add", "Literal", "\"if(\"", "StatementExpression", "MethodInvocation", "add", "MemberReference", "first", "StatementExpression", "MethodInvocation", "add", "Literal", "\")\"", "IfStatement", "MemberReference", "hasElse", "BlockStatement", "StatementExpression", "MethodInvocation", "addNonEmptyStatement", "MethodInvocation", "first", "getNext", "MemberReference", "Context", "BEFORE_DANGLING_ELSE", "Literal", "false", "StatementExpression", "MethodInvocation", "add", "Literal", "\"else\"", "StatementExpression", "MethodInvocation", "addNonEmptyStatement", "MemberReference", "last", "MethodInvocation", "getContextForNonEmptyExpression", "MemberReference", "context", "Literal", "false", "BlockStatement", "StatementExpression", "MethodInvocation", "addNonEmptyStatement", "MethodInvocation", "first", "getNext", "MemberReference", "Context", "OTHER", "Literal", "false", "StatementExpression", "MethodInvocation", "Preconditions", "checkState", "BinaryOperation", "MemberReference", "childCount", "==", "Literal", "2", "IfStatement", "MemberReference", "ambiguousElseClause", "BlockStatement", "StatementExpression", "MethodInvocation", "cc", "endBlock", "BreakStatement", "SwitchStatementCase", "MemberReference", "Token", "NULL", "StatementExpression", "MethodInvocation", "Preconditions", "checkState", "BinaryOperation", "MemberReference", "childCount", "==", "Literal", "0", "StatementExpression", "MethodInvocation", "cc", "addConstant", "Literal", "\"null\"", "BreakStatement", "SwitchStatementCase", "MemberReference", "Token", "THIS", "StatementExpression", "MethodInvocation", "Preconditions", "checkState", "BinaryOperation", "MemberReference", "childCount", "==", "Literal", "0", "StatementExpression", "MethodInvocation", "add", "Literal", "\"this\"", "BreakStatement", "SwitchStatementCase", "MemberReference", "Token", "FALSE", "StatementExpression", "MethodInvocation", "Preconditions", "checkState", "BinaryOperation", "MemberReference", "childCount", "==", "Literal", "0", "StatementExpression", "MethodInvocation", "cc", "addConstant", "Literal", "\"false\"", "BreakStatement", "SwitchStatementCase", "MemberReference", "Token", "TRUE", "StatementExpression", "MethodInvocation", "Preconditions", "checkState", "BinaryOperation", "MemberReference", "childCount", "==", "Literal", "0", "StatementExpression", "MethodInvocation", "cc", "addConstant", "Literal", "\"true\"", "BreakStatement", "SwitchStatementCase", "MemberReference", "Token", "CONTINUE", "StatementExpression", "MethodInvocation", "Preconditions", "checkState", "BinaryOperation", "MemberReference", "childCount", "<=", "Literal", "1", "StatementExpression", "MethodInvocation", "add", "Literal", "\"continue\"", "IfStatement", "BinaryOperation", "MemberReference", "childCount", "==", "Literal", "1", "BlockStatement", "IfStatement", "MethodInvocation", "!", "first", "isLabelName", "BlockStatement", "ThrowStatement", "ClassCreator", "ReferenceType", "Error", "Literal", "\"Unexpected token type. Should be LABEL_NAME.\"", "StatementExpression", "MethodInvocation", "add", "Literal", "\" \"", "StatementExpression", "MethodInvocation", "add", "MemberReference", "first", "StatementExpression", "MethodInvocation", "cc", "endStatement", "BreakStatement", "SwitchStatementCase", "MemberReference", "Token", "DEBUGGER", "StatementExpression", "MethodInvocation", "Preconditions", "checkState", "BinaryOperation", "MemberReference", "childCount", "==", "Literal", "0", "StatementExpression", "MethodInvocation", "add", "Literal", "\"debugger\"", "StatementExpression", "MethodInvocation", "cc", "endStatement", "BreakStatement", "SwitchStatementCase", "MemberReference", "Token", "BREAK", "StatementExpression", "MethodInvocation", "Preconditions", "checkState", "BinaryOperation", "MemberReference", "childCount", "<=", "Literal", "1", "StatementExpression", "MethodInvocation", "add", "Literal", "\"break\"", "IfStatement", "BinaryOperation", "MemberReference", "childCount", "==", "Literal", "1", "BlockStatement", "IfStatement", "MethodInvocation", "!", "first", "isLabelName", "BlockStatement", "ThrowStatement", "ClassCreator", "ReferenceType", "Error", "Literal", "\"Unexpected token type. Should be LABEL_NAME.\"", "StatementExpression", "MethodInvocation", "add", "Literal", "\" \"", "StatementExpression", "MethodInvocation", "add", "MemberReference", "first", "StatementExpression", "MethodInvocation", "cc", "endStatement", "BreakStatement", "SwitchStatementCase", "MemberReference", "Token", "EXPR_RESULT", "StatementExpression", "MethodInvocation", "Preconditions", "checkState", "BinaryOperation", "MemberReference", "childCount", "==", "Literal", "1", "StatementExpression", "MethodInvocation", "add", "MemberReference", "first", "MemberReference", "Context", "START_OF_EXPR", "StatementExpression", "MethodInvocation", "cc", "endStatement", "BreakStatement", "SwitchStatementCase", "MemberReference", "Token", "NEW", "StatementExpression", "MethodInvocation", "add", "Literal", "\"new \"", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "precedence", "MethodInvocation", "NodeUtil", "precedence", "MemberReference", "type", "IfStatement", "MethodInvocation", "NodeUtil", "containsType", "MemberReference", "first", "MemberReference", "Token", "CALL", "MemberReference", "NodeUtil", "MATCH_NOT_FUNCTION", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "precedence", "=", "BinaryOperation", "MethodInvocation", "NodeUtil", "precedence", "MethodInvocation", "first", "getType", "+", "Literal", "1", "StatementExpression", "MethodInvocation", "addExpr", "MemberReference", "first", "MemberReference", "precedence", "MemberReference", "Context", "OTHER", "LocalVariableDeclaration", "ReferenceType", "Node", "VariableDeclarator", "next", "MethodInvocation", "first", "getNext", "IfStatement", "BinaryOperation", "MemberReference", "next", "!=", "Literal", "null", "BlockStatement", "StatementExpression", "MethodInvocation", "add", "Literal", "\"(\"", "StatementExpression", "MethodInvocation", "addList", "MemberReference", "next", "StatementExpression", "MethodInvocation", "add", "Literal", "\")\"", "BreakStatement", "SwitchStatementCase", "MemberReference", "Token", "STRING_KEY", "StatementExpression", "MethodInvocation", "Preconditions", "checkState", "BinaryOperation", "MemberReference", "childCount", "==", "Literal", "1", "Literal", "\"Object lit key must have 1 child\"", "StatementExpression", "MethodInvocation", "addJsString", "MemberReference", "n", "BreakStatement", "SwitchStatementCase", "MemberReference", "Token", "STRING", "StatementExpression", "MethodInvocation", "Preconditions", "checkState", "BinaryOperation", "MemberReference", "childCount", "==", "Literal", "0", "Literal", "\"A string may not have children\"", "StatementExpression", "MethodInvocation", "addJsString", "MemberReference", "n", "BreakStatement", "SwitchStatementCase", "MemberReference", "Token", "DELPROP", "StatementExpression", "MethodInvocation", "Preconditions", "checkState", "BinaryOperation", "MemberReference", "childCount", "==", "Literal", "1", "StatementExpression", "MethodInvocation", "add", "Literal", "\"delete \"", "StatementExpression", "MethodInvocation", "add", "MemberReference", "first", "BreakStatement", "SwitchStatementCase", "MemberReference", "Token", "OBJECTLIT", "BlockStatement", "LocalVariableDeclaration", "BasicType", "boolean", "VariableDeclarator", "needsParens", "BinaryOperation", "MemberReference", "context", "==", "MemberReference", "Context", "START_OF_EXPR", "IfStatement", "MemberReference", "needsParens", "BlockStatement", "StatementExpression", "MethodInvocation", "add", "Literal", "\"(\"", "StatementExpression", "MethodInvocation", "add", "Literal", "\"{\"", "ForStatement", "ForControl", "VariableDeclaration", "ReferenceType", "Node", "VariableDeclarator", "c", "MemberReference", "first", "BinaryOperation", "MemberReference", "c", "!=", "Literal", "null", "Assignment", "MemberReference", "c", "=", "MethodInvocation", "c", "getNext", "BlockStatement", "IfStatement", "BinaryOperation", "MemberReference", "c", "!=", "MemberReference", "first", "BlockStatement", "StatementExpression", "MethodInvocation", "cc", "listSeparator", "IfStatement", "BinaryOperation", "MethodInvocation", "c", "isGetterDef", "||", "MethodInvocation", "c", "isSetterDef", "BlockStatement", "StatementExpression", "MethodInvocation", "add", "MemberReference", "c", "BlockStatement", "StatementExpression", "MethodInvocation", "Preconditions", "checkState", "MethodInvocation", "c", "isStringKey", "LocalVariableDeclaration", "ReferenceType", "String", "VariableDeclarator", "key", "MethodInvocation", "c", "getString", "IfStatement", "BinaryOperation", "BinaryOperation", "BinaryOperation", "MethodInvocation", "!", "c", "isQuotedString", "&&", "BinaryOperation", "!", "BinaryOperation", "MemberReference", "languageMode", "==", "MemberReference", "LanguageMode", "ECMASCRIPT3", "&&", "MethodInvocation", "TokenStream", "isKeyword", "MemberReference", "key", "&&", "MethodInvocation", "TokenStream", "isJSIdentifier", "MemberReference", "key", "&&", "MethodInvocation", "NodeUtil", "isLatin", "MemberReference", "key", "BlockStatement", "StatementExpression", "MethodInvocation", "add", "MemberReference", "key", "BlockStatement", "LocalVariableDeclaration", "BasicType", "double", "VariableDeclarator", "d", "MethodInvocation", "getSimpleNumber", "MemberReference", "key", "IfStatement", "MethodInvocation", "!", "Double", "isNaN", "MemberReference", "d", "BlockStatement", "StatementExpression", "MethodInvocation", "cc", "addNumber", "MemberReference", "d", "BlockStatement", "StatementExpression", "MethodInvocation", "addExpr", "MemberReference", "c", "Literal", "1", "MemberReference", "Context", "OTHER", "StatementExpression", "MethodInvocation", "add", "Literal", "\":\"", "StatementExpression", "MethodInvocation", "addExpr", "MethodInvocation", "c", "getFirstChild", "Literal", "1", "MemberReference", "Context", "OTHER", "StatementExpression", "MethodInvocation", "add", "Literal", "\"}\"", "IfStatement", "MemberReference", "needsParens", "BlockStatement", "StatementExpression", "MethodInvocation", "add", "Literal", "\")\"", "BreakStatement", "SwitchStatementCase", "MemberReference", "Token", "SWITCH", "StatementExpression", "MethodInvocation", "add", "Literal", "\"switch(\"", "StatementExpression", "MethodInvocation", "add", "MemberReference", "first", "StatementExpression", "MethodInvocation", "add", "Literal", "\")\"", "StatementExpression", "MethodInvocation", "cc", "beginBlock", "StatementExpression", "MethodInvocation", "addAllSiblings", "MethodInvocation", "first", "getNext", "StatementExpression", "MethodInvocation", "cc", "endBlock", "BinaryOperation", "MemberReference", "context", "==", "MemberReference", "Context", "STATEMENT", "BreakStatement", "SwitchStatementCase", "MemberReference", "Token", "CASE", "StatementExpression", "MethodInvocation", "Preconditions", "checkState", "BinaryOperation", "MemberReference", "childCount", "==", "Literal", "2", "StatementExpression", "MethodInvocation", "add", "Literal", "\"case \"", "StatementExpression", "MethodInvocation", "add", "MemberReference", "first", "StatementExpression", "MethodInvocation", "addCaseBody", "MemberReference", "last", "BreakStatement", "SwitchStatementCase", "MemberReference", "Token", "DEFAULT_CASE", "StatementExpression", "MethodInvocation", "Preconditions", "checkState", "BinaryOperation", "MemberReference", "childCount", "==", "Literal", "1", "StatementExpression", "MethodInvocation", "add", "Literal", "\"default\"", "StatementExpression", "MethodInvocation", "addCaseBody", "MemberReference", "first", "BreakStatement", "SwitchStatementCase", "MemberReference", "Token", "LABEL", "StatementExpression", "MethodInvocation", "Preconditions", "checkState", "BinaryOperation", "MemberReference", "childCount", "==", "Literal", "2", "IfStatement", "MethodInvocation", "!", "first", "isLabelName", "BlockStatement", "ThrowStatement", "ClassCreator", "ReferenceType", "Error", "Literal", "\"Unexpected token type. Should be LABEL_NAME.\"", "StatementExpression", "MethodInvocation", "add", "MemberReference", "first", "StatementExpression", "MethodInvocation", "add", "Literal", "\":\"", "StatementExpression", "MethodInvocation", "addNonEmptyStatement", "MemberReference", "last", "MethodInvocation", "getContextForNonEmptyExpression", "MemberReference", "context", "Literal", "true", "BreakStatement", "SwitchStatementCase", "MemberReference", "Token", "CAST", "StatementExpression", "MethodInvocation", "add", "Literal", "\"(\"", "StatementExpression", "MethodInvocation", "add", "MemberReference", "first", "StatementExpression", "MethodInvocation", "add", "Literal", "\")\"", "BreakStatement", "SwitchStatementCase", "ThrowStatement", "ClassCreator", "ReferenceType", "Error", "BinaryOperation", "BinaryOperation", "BinaryOperation", "Literal", "\"Unknown type \"", "+", "MemberReference", "type", "+", "Literal", "\"\\n\"", "+", "MethodInvocation", "n", "toStringTree", "StatementExpression", "MethodInvocation", "cc", "endSourceMapping", "MemberReference", "n"], "edges": [[0, 1, "return_type"], [0, 2, "name"], [0, 3, "parameters"], [3, 4, "type"], [4, 5, "name"], [3, 6, "name"], [0, 7, "parameters"], [7, 8, "type"], [8, 9, "name"], [7, 10, "name"], [0, 11, "body"], [11, 12, "condition"], [12, 13, "prefix_operators"], [12, 14, "qualifier"], [12, 15, "member"], [11, 16, "then_statement"], [16, 17, "statements"], [0, 18, "body"], [18, 19, "type"], [19, 20, "name"], [18, 21, "declarators"], [21, 22, "name"], [21, 23, "initializer"], [23, 24, "qualifier"], [23, 25, "member"], [0, 26, "body"], [26, 27, "type"], [27, 28, "name"], [26, 29, "declarators"], [29, 30, "name"], [29, 31, "initializer"], [31, 32, "qualifier"], [31, 33, "member"], [31, 34, "arguments"], [34, 35, "member"], [0, 36, "body"], [36, 37, "type"], [37, 38, "name"], [36, 39, "declarators"], [39, 40, "name"], [39, 41, "initializer"], [41, 42, "qualifier"], [41, 43, "member"], [0, 44, "body"], [44, 45, "type"], [45, 46, "name"], [44, 47, "declarators"], [47, 48, "name"], [47, 49, "initializer"], [49, 50, "qualifier"], [49, 51, "member"], [0, 52, "body"], [52, 53, "type"], [53, 54, "name"], [52, 55, "declarators"], [55, 56, "name"], [55, 57, "initializer"], [57, 58, "qualifier"], [57, 59, "member"], [0, 60, "body"], [60, 61, "condition"], [61, 62, "operandl"], [62, 63, "operandl"], [63, 64, "member"], [62, 65, "operator"], [62, 66, "operandr"], [66, 67, "value"], [61, 68, "operator"], [61, 69, "operandr"], [69, 70, "operandl"], [70, 71, "member"], [69, 72, "operator"], [69, 73, "operandr"], [73, 74, "member"], [60, 75, "then_statement"], [75, 76, "statements"], [76, 77, "expression"], [77, 78, "qualifier"], [77, 79, "member"], [77, 80, "arguments"], [80, 81, "operandl"], [81, 82, "member"], [80, 83, "operator"], [80, 84, "operandr"], [84, 85, "value"], [77, 86, "arguments"], [86, 87, "value"], [77, 88, "arguments"], [88, 89, "member"], [77, 90, "arguments"], [90, 91, "member"], [75, 92, "statements"], [92, 93, "type"], [93, 94, "name"], [92, 95, "declarators"], [95, 96, "name"], [95, 97, "initializer"], [97, 98, "qualifier"], [97, 99, "member"], [97, 100, "arguments"], [100, 101, "member"], [75, 102, "statements"], [102, 103, "type"], [103, 104, "name"], [102, 105, "declarators"], [105, 106, "name"], [105, 107, "initializer"], [107, 108, "member"], [107, 109, "arguments"], [109, 110, "member"], [75, 111, "statements"], [111, 112, "condition"], [112, 113, "operandl"], [113, 114, "operandl"], [114, 115, "qualifier"], [114, 116, "member"], [113, 117, "operator"], [113, 118, "operandr"], [118, 119, "member"], [112, 120, "operator"], [112, 121, "operandr"], [121, 122, "qualifier"], [121, 123, "member"], [121, 124, "arguments"], [124, 125, "member"], [111, 126, "then_statement"], [126, 127, "statements"], [127, 128, "expression"], [128, 129, "member"], [128, 130, "arguments"], [130, 131, "member"], [128, 132, "arguments"], [132, 133, "member"], [128, 134, "arguments"], [134, 135, "member"], [126, 136, "statements"], [136, 137, "expression"], [137, 138, "qualifier"], [137, 139, "member"], [137, 140, "arguments"], [140, 141, "member"], [137, 142, "arguments"], [142, 143, "value"], [126, 144, "statements"], [144, 145, "expression"], [145, 146, "member"], [145, 147, "arguments"], [147, 148, "member"], [145, 149, "arguments"], [149, 150, "member"], [145, 151, "arguments"], [151, 152, "member"], [111, 153, "else_statement"], [153, 154, "condition"], [154, 155, "operandl"], [155, 156, "qualifier"], [155, 157, "member"], [155, 158, "arguments"], [158, 159, "member"], [154, 160, "operator"], [154, 161, "operandr"], [161, 162, "qualifier"], [161, 163, "member"], [161, 164, "arguments"], [164, 165, "member"], [153, 166, "then_statement"], [166, 167, "statements"], [167, 168, "expression"], [168, 169, "member"], [168, 170, "arguments"], [170, 171, "member"], [168, 172, "arguments"], [172, 173, "member"], [168, 174, "arguments"], [174, 175, "member"], [166, 176, "statements"], [176, 177, "expression"], [177, 178, "qualifier"], [177, 179, "member"], [177, 180, "arguments"], [180, 181, "member"], [177, 182, "arguments"], [182, 183, "value"], [166, 184, "statements"], [184, 185, "expression"], [185, 186, "member"], [185, 187, "arguments"], [187, 188, "member"], [185, 189, "arguments"], [189, 190, "member"], [185, 191, "arguments"], [191, 192, "member"], [153, 193, "else_statement"], [193, 194, "statements"], [194, 195, "expression"], [195, 196, "member"], [195, 197, "arguments"], [197, 198, "member"], [195, 199, "arguments"], [199, 200, "member"], [195, 201, "arguments"], [201, 202, "member"], [195, 203, "arguments"], [203, 204, "member"], [195, 205, "arguments"], [205, 206, "member"], [195, 207, "arguments"], [207, 208, "member"], [195, 209, "arguments"], [209, 210, "operandl"], [210, 211, "member"], [209, 212, "operator"], [209, 213, "operandr"], [213, 214, "value"], [75, 215, "statements"], [0, 216, "body"], [216, 217, "expression"], [217, 218, "qualifier"], [217, 219, "member"], [217, 220, "arguments"], [220, 221, "member"], [0, 222, "body"], [222, 223, "expression"], [223, 224, "member"], [222, 225, "cases"], [225, 226, "case"], [226, 227, "qualifier"], [226, 228, "member"], [225, 229, "statements"], [229, 230, "statements"], [230, 231, "expression"], [231, 232, "qualifier"], [231, 233, "member"], [231, 234, "arguments"], [234, 235, "operandl"], [235, 236, "qualifier"], [235, 237, "member"], [235, 238, "selectors"], [238, 239, "member"], [234, 240, "operator"], [234, 241, "operandr"], [241, 242, "prefix_operators"], [241, 243, "qualifier"], [241, 244, "member"], [241, 245, "selectors"], [245, 246, "member"], [229, 247, "statements"], [247, 248, "expression"], [248, 249, "qualifier"], [248, 250, "member"], [248, 251, "arguments"], [251, 252, "operandl"], [252, 253, "operandl"], [253, 254, "member"], [252, 255, "operator"], [252, 256, "operandr"], [256, 257, "value"], [251, 258, "operator"], [251, 259, "operandr"], [259, 260, "operandl"], [260, 261, "member"], [259, 262, "operator"], [259, 263, "operandr"], [263, 264, "value"], [229, 265, "statements"], [265, 266, "expression"], [266, 267, "member"], [266, 268, "arguments"], [268, 269, "value"], [229, 270, "statements"], [270, 271, "expression"], [271, 272, "member"], [271, 273, "arguments"], [273, 274, "member"], [271, 275, "arguments"], [275, 276, "qualifier"], [275, 277, "member"], [229, 278, "statements"], [278, 279, "type"], [279, 280, "name"], [278, 281, "declarators"], [281, 282, "name"], [281, 283, "initializer"], [283, 284, "qualifier"], [283, 285, "member"], [283, 286, "selectors"], [286, 287, "member"], [229, 288, "statements"], [288, 289, "condition"], [289, 290, "operandl"], [290, 291, "member"], [289, 292, "operator"], [289, 293, "operandr"], [293, 294, "value"], [288, 295, "then_statement"], [295, 296, "statements"], [296, 297, "expression"], [297, 298, "member"], [297, 299, "arguments"], [299, 300, "member"], [229, 301, "statements"], [301, 302, "condition"], [302, 303, "operandl"], [303, 304, "member"], [302, 305, "operator"], [302, 306, "operandr"], [306, 307, "value"], [301, 308, "then_statement"], [308, 309, "statements"], [309, 310, "expression"], [310, 311, "member"], [310, 312, "arguments"], [312, 313, "value"], [308, 314, "statements"], [314, 315, "expression"], [315, 316, "member"], [315, 317, "arguments"], [317, 318, "member"], [315, 319, "arguments"], [319, 320, "qualifier"], [319, 321, "member"], [229, 322, "statements"], [222, 323, "cases"], [323, 324, "case"], [324, 325, "qualifier"], [324, 326, "member"], [323, 327, "statements"], [327, 328, "expression"], [328, 329, "qualifier"], [328, 330, "member"], [328, 331, "arguments"], [331, 332, "operandl"], [332, 333, "member"], [331, 334, "operator"], [331, 335, "operandr"], [335, 336, "value"], [323, 337, "statements"], [337, 338, "expression"], [338, 339, "member"], [338, 340, "arguments"], [340, 341, "value"], [323, 342, "statements"], [342, 343, "expression"], [343, 344, "member"], [343, 345, "arguments"], [345, 346, "member"], [323, 347, "statements"], [347, 348, "expression"], [348, 349, "member"], [348, 350, "arguments"], [350, 351, "value"], [323, 352, "statements"], [352, 353, "expression"], [353, 354, "member"], [353, 355, "arguments"], [355, 356, "member"], [353, 357, "arguments"], [357, 358, "qualifier"], [357, 359, "member"], [323, 360, "statements"], [222, 361, "cases"], [361, 362, "case"], [362, 363, "qualifier"], [362, 364, "member"], [361, 365, "statements"], [365, 366, "expression"], [366, 367, "qualifier"], [366, 368, "member"], [366, 369, "arguments"], [369, 370, "operandl"], [370, 371, "member"], [369, 372, "operator"], [369, 373, "operandr"], [373, 374, "value"], [361, 375, "statements"], [375, 376, "expression"], [376, 377, "member"], [376, 378, "arguments"], [378, 379, "value"], [361, 380, "statements"], [380, 381, "expression"], [381, 382, "member"], [381, 383, "arguments"], [383, 384, "member"], [361, 385, "statements"], [385, 386, "expression"], [386, 387, "qualifier"], [386, 388, "member"], [386, 389, "arguments"], [389, 390, "value"], [361, 391, "statements"], [222, 392, "cases"], [392, 393, "case"], [393, 394, "qualifier"], [393, 395, "member"], [392, 396, "statements"], [396, 397, "expression"], [397, 398, "member"], [397, 399, "arguments"], [399, 400, "value"], [392, 401, "statements"], [401, 402, "condition"], [402, 403, "operandl"], [403, 404, "member"], [402, 405, "operator"], [402, 406, "operandr"], [406, 407, "value"], [401, 408, "then_statement"], [408, 409, "statements"], [409, 410, "expression"], [410, 411, "member"], [410, 412, "arguments"], [412, 413, "member"], [401, 414, "else_statement"], [414, 415, "statements"], [415, 416, "expression"], [416, 417, "qualifier"], [416, 418, "member"], [416, 419, "arguments"], [419, 420, "operandl"], [420, 421, "member"], [419, 422, "operator"], [419, 423, "operandr"], [423, 424, "value"], [392, 425, "statements"], [425, 426, "expression"], [426, 427, "qualifier"], [426, 428, "member"], [392, 429, "statements"], [222, 430, "cases"], [430, 431, "case"], [431, 432, "qualifier"], [431, 433, "member"], [430, 434, "statements"], [434, 435, "condition"], [435, 436, "operandl"], [436, 437, "member"], [435, 438, "operator"], [435, 439, "operandr"], [439, 440, "value"], [434, 441, "then_statement"], [441, 442, "statements"], [442, 443, "expression"], [443, 444, "member"], [443, 445, "arguments"], [445, 446, "value"], [441, 447, "statements"], [447, 448, "expression"], [448, 449, "member"], [448, 450, "arguments"], [450, 451, "member"], [448, 452, "arguments"], [452, 453, "value"], [448, 454, "arguments"], [454, 455, "member"], [454, 456, "arguments"], [456, 457, "member"], [430, 458, "statements"], [222, 459, "cases"], [459, 460, "case"], [460, 461, "qualifier"], [460, 462, "member"], [459, 463, "statements"], [463, 464, "expression"], [464, 465, "qualifier"], [464, 466, "member"], [464, 467, "arguments"], [467, 468, "prefix_operators"], [467, 469, "qualifier"], [467, 470, "member"], [467, 471, "selectors"], [471, 472, "member"], [459, 473, "statements"], [473, 474, "expression"], [474, 475, "member"], [474, 476, "arguments"], [476, 477, "qualifier"], [476, 478, "member"], [459, 479, "statements"], [222, 480, "cases"], [480, 481, "case"], [481, 482, "qualifier"], [481, 483, "member"], [480, 484, "statements"], [484, 485, "condition"], [485, 486, "operandl"], [486, 487, "operandl"], [487, 488, "member"], [486, 489, "operator"], [486, 490, "operandr"], [490, 491, "value"], [485, 492, "operator"], [485, 493, "operandr"], [493, 494, "qualifier"], [493, 495, "member"], [484, 496, "then_statement"], [496, 497, "statements"], [497, 498, "expression"], [498, 499, "member"], [498, 500, "arguments"], [500, 501, "qualifier"], [500, 502, "member"], [484, 503, "else_statement"], [503, 504, "statements"], [504, 505, "expression"], [505, 506, "qualifier"], [505, 507, "member"], [505, 508, "arguments"], [508, 509, "operandl"], [509, 510, "member"], [508, 511, "operator"], [508, 512, "operandr"], [512, 513, "value"], [503, 514, "statements"], [514, 515, "expression"], [515, 516, "member"], [515, 517, "arguments"], [517, 518, "qualifier"], [517, 519, "member"], [503, 520, "statements"], [520, 521, "expression"], [521, 522, "qualifier"], [521, 523, "member"], [521, 524, "arguments"], [524, 525, "value"], [521, 526, "arguments"], [526, 527, "value"], [503, 528, "statements"], [528, 529, "condition"], [529, 530, "qualifier"], [529, 531, "member"], [528, 532, "then_statement"], [532, 533, "statements"], [533, 534, "expression"], [534, 535, "member"], [534, 536, "arguments"], [536, 537, "member"], [534, 538, "arguments"], [538, 539, "qualifier"], [538, 540, "member"], [538, 541, "arguments"], [541, 542, "qualifier"], [541, 543, "member"], [534, 544, "arguments"], [544, 545, "qualifier"], [544, 546, "member"], [528, 547, "else_statement"], [547, 548, "statements"], [548, 549, "expression"], [549, 550, "member"], [549, 551, "arguments"], [551, 552, "member"], [549, 553, "arguments"], [553, 554, "value"], [549, 555, "arguments"], [555, 556, "member"], [555, 557, "arguments"], [557, 558, "member"], [480, 559, "statements"], [222, 560, "cases"], [560, 561, "case"], [561, 562, "qualifier"], [561, 563, "member"], [560, 564, "statements"], [564, 565, "expression"], [565, 566, "member"], [565, 567, "arguments"], [567, 568, "value"], [560, 569, "statements"], [569, 570, "expression"], [570, 571, "member"], [570, 572, "arguments"], [572, 573, "member"], [560, 574, "statements"], [574, 575, "expression"], [575, 576, "member"], [575, 577, "arguments"], [577, 578, "value"], [560, 579, "statements"], [222, 580, "cases"], [580, 581, "case"], [581, 582, "qualifier"], [581, 583, "member"], [580, 584, "statements"], [584, 585, "expression"], [585, 586, "member"], [585, 587, "arguments"], [587, 588, "value"], [580, 589, "statements"], [589, 590, "expression"], [590, 591, "member"], [590, 592, "arguments"], [592, 593, "member"], [580, 594, "statements"], [594, 595, "expression"], [595, 596, "member"], [595, 597, "arguments"], [597, 598, "value"], [580, 599, "statements"], [222, 600, "cases"], [600, 601, "case"], [601, 602, "qualifier"], [601, 603, "member"], [600, 604, "statements"], [604, 605, "expression"], [605, 606, "qualifier"], [605, 607, "member"], [605, 608, "arguments"], [608, 609, "operandl"], [609, 610, "member"], [608, 611, "operator"], [608, 612, "operandr"], [612, 613, "value"], [600, 614, "statements"], [614, 615, "expression"], [615, 616, "member"], [615, 617, "arguments"], [617, 618, "member"], [615, 619, "arguments"], [619, 620, "qualifier"], [619, 621, "member"], [615, 622, "arguments"], [622, 623, "value"], [615, 624, "arguments"], [624, 625, "member"], [615, 626, "arguments"], [626, 627, "member"], [626, 628, "arguments"], [628, 629, "member"], [615, 630, "arguments"], [630, 631, "value"], [615, 632, "arguments"], [632, 633, "value"], [600, 634, "statements"], [222, 635, "cases"], [635, 636, "case"], [636, 637, "qualifier"], [636, 638, "member"], [635, 639, "statements"], [639, 640, "expression"], [640, 641, "qualifier"], [640, 642, "member"], [640, 643, "arguments"], [643, 644, "operandl"], [644, 645, "member"], [643, 646, "operator"], [643, 647, "operandr"], [647, 648, "value"], [635, 649, "statements"], [649, 650, "expression"], [650, 651, "qualifier"], [650, 652, "member"], [650, 653, "arguments"], [653, 654, "qualifier"], [653, 655, "member"], [635, 656, "statements"], [222, 657, "cases"], [657, 658, "case"], [658, 659, "qualifier"], [658, 660, "member"], [657, 661, "case"], [661, 662, "qualifier"], [661, 663, "member"], [657, 664, "case"], [664, 665, "qualifier"], [664, 666, "member"], [657, 667, "case"], [667, 668, "qualifier"], [667, 669, "member"], [657, 670, "case"], [670, 671, "qualifier"], [670, 672, "member"], [657, 673, "statements"], [673, 674, "statements"], [674, 675, "expression"], [675, 676, "qualifier"], [675, 677, "member"], [675, 678, "arguments"], [678, 679, "operandl"], [679, 680, "member"], [678, 681, "operator"], [678, 682, "operandr"], [682, 683, "value"], [673, 684, "statements"], [684, 685, "expression"], [685, 686, "qualifier"], [685, 687, "member"], [685, 688, "arguments"], [688, 689, "qualifier"], [688, 690, "member"], [688, 691, "arguments"], [691, 692, "member"], [685, 693, "arguments"], [693, 694, "value"], [673, 695, "statements"], [695, 696, "expression"], [696, 697, "member"], [696, 698, "arguments"], [698, 699, "member"], [696, 700, "arguments"], [700, 701, "qualifier"], [700, 702, "member"], [700, 703, "arguments"], [703, 704, "member"], [696, 705, "arguments"], [705, 706, "qualifier"], [705, 707, "member"], [673, 708, "statements"], [222, 709, "cases"], [709, 710, "case"], [710, 711, "qualifier"], [710, 712, "member"], [709, 713, "statements"], [713, 714, "statements"], [714, 715, "expression"], [715, 716, "qualifier"], [715, 717, "member"], [715, 718, "arguments"], [718, 719, "operandl"], [719, 720, "member"], [718, 721, "operator"], [718, 722, "operandr"], [722, 723, "value"], [713, 724, "statements"], [724, 725, "condition"], [725, 726, "qualifier"], [725, 727, "member"], [725, 728, "selectors"], [728, 729, "member"], [724, 730, "then_statement"], [730, 731, "statements"], [731, 732, "expression"], [732, 733, "qualifier"], [732, 734, "member"], [732, 735, "arguments"], [735, 736, "prefix_operators"], [735, 737, "qualifier"], [735, 738, "member"], [735, 739, "selectors"], [739, 740, "member"], [724, 741, "else_statement"], [741, 742, "statements"], [742, 743, "expression"], [743, 744, "qualifier"], [743, 745, "member"], [743, 746, "arguments"], [746, 747, "qualifier"], [746, 748, "member"], [746, 749, "arguments"], [749, 750, "member"], [743, 751, "arguments"], [751, 752, "value"], [741, 753, "statements"], [753, 754, "expression"], [754, 755, "member"], [754, 756, "arguments"], [756, 757, "member"], [754, 758, "arguments"], [758, 759, "qualifier"], [758, 760, "member"], [758, 761, "arguments"], [761, 762, "member"], [754, 763, "arguments"], [763, 764, "qualifier"], [763, 765, "member"], [713, 766, "statements"], [222, 767, "cases"], [767, 768, "case"], [768, 769, "qualifier"], [768, 770, "member"], [767, 771, "statements"], [771, 772, "statements"], [772, 773, "expression"], [773, 774, "qualifier"], [773, 775, "member"], [773, 776, "arguments"], [776, 777, "operandl"], [777, 778, "member"], [776, 779, "operator"], [776, 780, "operandr"], [780, 781, "value"], [771, 782, "statements"], [782, 783, "type"], [783, 784, "name"], [782, 785, "declarators"], [785, 786, "name"], [785, 787, "initializer"], [787, 788, "qualifier"], [787, 789, "member"], [787, 790, "arguments"], [790, 791, "member"], [771, 792, "statements"], [792, 793, "type"], [793, 794, "name"], [792, 795, "declarators"], [795, 796, "name"], [795, 797, "initializer"], [797, 798, "qualifier"], [797, 799, "member"], [771, 800, "statements"], [800, 801, "expression"], [801, 802, "member"], [801, 803, "arguments"], [803, 804, "member"], [801, 805, "arguments"], [805, 806, "operandl"], [806, 807, "member"], [805, 808, "operator"], [805, 809, "operandr"], [809, 810, "value"], [801, 811, "arguments"], [811, 812, "member"], [771, 813, "statements"], [813, 814, "expression"], [814, 815, "qualifier"], [814, 816, "member"], [814, 817, "arguments"], [817, 818, "value"], [814, 819, "arguments"], [819, 820, "value"], [771, 821, "statements"], [821, 822, "expression"], [822, 823, "member"], [822, 824, "arguments"], [824, 825, "qualifier"], [824, 826, "member"], [822, 827, "arguments"], [827, 828, "value"], [822, 829, "arguments"], [829, 830, "member"], [771, 831, "statements"], [831, 832, "expression"], [832, 833, "qualifier"], [832, 834, "member"], [832, 835, "arguments"], [835, 836, "value"], [832, 837, "arguments"], [837, 838, "value"], [771, 839, "statements"], [839, 840, "expression"], [840, 841, "member"], [840, 842, "arguments"], [842, 843, "member"], [840, 844, "arguments"], [844, 845, "value"], [840, 846, "arguments"], [846, 847, "member"], [771, 848, "statements"], [222, 849, "cases"], [849, 850, "case"], [850, 851, "qualifier"], [850, 852, "member"], [849, 853, "statements"], [853, 854, "condition"], [854, 855, "operandl"], [855, 856, "prefix_operators"], [855, 857, "qualifier"], [855, 858, "member"], [854, 859, "operator"], [854, 860, "operandr"], [860, 861, "prefix_operators"], [860, 862, "qualifier"], [860, 863, "member"], [853, 864, "then_statement"], [864, 865, "statements"], [865, 866, "expression"], [866, 867, "type"], [867, 868, "name"], [866, 869, "arguments"], [869, 870, "value"], [849, 871, "statements"], [871, 872, "type"], [872, 873, "name"], [871, 874, "declarators"], [874, 875, "name"], [874, 876, "initializer"], [876, 877, "member"], [876, 878, "arguments"], [878, 879, "qualifier"], [878, 880, "member"], [876, 881, "arguments"], [881, 882, "member"], [849, 883, "statements"], [883, 884, "condition"], [884, 885, "operandl"], [885, 886, "member"], [884, 887, "operator"], [884, 888, "operandr"], [888, 889, "value"], [883, 890, "then_statement"], [890, 891, "statements"], [891, 892, "expression"], [892, 893, "member"], [892, 894, "arguments"], [894, 895, "operandl"], [895, 896, "member"], [894, 897, "operator"], [894, 898, "operandr"], [898, 899, "qualifier"], [898, 900, "member"], [883, 901, "else_statement"], [901, 902, "statements"], [902, 903, "expression"], [903, 904, "qualifier"], [903, 905, "member"], [903, 906, "arguments"], [906, 907, "operandl"], [907, 908, "member"], [906, 909, "operator"], [906, 910, "operandr"], [910, 911, "value"], [901, 912, "statements"], [912, 913, "expression"], [913, 914, "member"], [913, 915, "arguments"], [915, 916, "member"], [849, 917, "statements"], [222, 918, "cases"], [918, 919, "case"], [919, 920, "qualifier"], [919, 921, "member"], [918, 922, "statements"], [922, 923, "condition"], [923, 924, "operandl"], [924, 925, "qualifier"], [924, 926, "member"], [923, 927, "operator"], [923, 928, "operandr"], [928, 929, "type"], [929, 930, "name"], [922, 931, "then_statement"], [931, 932, "statements"], [932, 933, "expression"], [933, 934, "type"], [934, 935, "name"], [933, 936, "arguments"], [936, 937, "value"], [918, 938, "statements"], [938, 939, "expression"], [939, 940, "qualifier"], [939, 941, "member"], [939, 942, "arguments"], [942, 943, "operandl"], [943, 944, "member"], [942, 945, "operator"], [942, 946, "operandr"], [946, 947, "value"], [918, 948, "statements"], [948, 949, "type"], [949, 950, "name"], [948, 951, "declarators"], [951, 952, "name"], [951, 953, "initializer"], [953, 954, "operandl"], [954, 955, "member"], [953, 956, "operator"], [953, 957, "operandr"], [957, 958, "qualifier"], [957, 959, "member"], [918, 960, "statements"], [960, 961, "condition"], [961, 962, "member"], [960, 963, "then_statement"], [963, 964, "statements"], [964, 965, "expression"], [965, 966, "member"], [965, 967, "arguments"], [967, 968, "value"], [918, 969, "statements"], [969, 970, "expression"], [970, 971, "member"], [970, 972, "arguments"], [972, 973, "value"], [918, 974, "statements"], [974, 975, "expression"], [975, 976, "member"], [975, 977, "arguments"], [977, 978, "member"], [918, 979, "statements"], [979, 980, "expression"], [980, 981, "member"], [980, 982, "arguments"], [982, 983, "qualifier"], [982, 984, "member"], [918, 985, "statements"], [985, 986, "expression"], [986, 987, "member"], [986, 988, "arguments"], [988, 989, "member"], [986, 990, "arguments"], [990, 991, "qualifier"], [990, 992, "member"], [918, 993, "statements"], [993, 994, "expression"], [994, 995, "qualifier"], [994, 996, "member"], [994, 997, "arguments"], [997, 998, "operandl"], [998, 999, "member"], [997, 1000, "operator"], [997, 1001, "operandr"], [1001, 1002, "qualifier"], [1001, 1003, "member"], [918, 1004, "statements"], [1004, 1005, "condition"], [1005, 1006, "member"], [1004, 1007, "then_statement"], [1007, 1008, "statements"], [1008, 1009, "expression"], [1009, 1010, "member"], [1009, 1011, "arguments"], [1011, 1012, "value"], [918, 1013, "statements"], [222, 1014, "cases"], [1014, 1015, "case"], [1015, 1016, "qualifier"], [1015, 1017, "member"], [1014, 1018, "case"], [1018, 1019, "qualifier"], [1018, 1020, "member"], [1014, 1021, "statements"], [1021, 1022, "expression"], [1022, 1023, "qualifier"], [1022, 1024, "member"], [1022, 1025, "arguments"], [1025, 1026, "qualifier"], [1025, 1027, "member"], [1025, 1028, "selectors"], [1028, 1029, "member"], [1014, 1030, "statements"], [1030, 1031, "expression"], [1031, 1032, "qualifier"], [1031, 1033, "member"], [1031, 1034, "arguments"], [1034, 1035, "operandl"], [1035, 1036, "member"], [1034, 1037, "operator"], [1034, 1038, "operandr"], [1038, 1039, "value"], [1014, 1040, "statements"], [1040, 1041, "expression"], [1041, 1042, "qualifier"], [1041, 1043, "member"], [1041, 1044, "arguments"], [1044, 1045, "qualifier"], [1044, 1046, "member"], [1014, 1047, "statements"], [1047, 1048, "expression"], [1048, 1049, "qualifier"], [1048, 1050, "member"], [1048, 1051, "arguments"], [1051, 1052, "qualifier"], [1051, 1053, "member"], [1051, 1054, "selectors"], [1054, 1055, "member"], [1051, 1056, "selectors"], [1056, 1057, "member"], [1014, 1058, "statements"], [1058, 1059, "condition"], [1059, 1060, "operandl"], [1060, 1061, "member"], [1059, 1062, "operator"], [1059, 1063, "operandr"], [1063, 1064, "qualifier"], [1063, 1065, "member"], [1058, 1066, "then_statement"], [1066, 1067, "statements"], [1067, 1068, "expression"], [1068, 1069, "qualifier"], [1068, 1070, "member"], [1068, 1071, "arguments"], [1071, 1072, "prefix_operators"], [1071, 1073, "qualifier"], [1071, 1074, "member"], [1071, 1075, "arguments"], [1075, 1076, "value"], [1071, 1077, "selectors"], [1077, 1078, "member"], [1066, 1079, "statements"], [1079, 1080, "expression"], [1080, 1081, "member"], [1080, 1082, "arguments"], [1082, 1083, "value"], [1058, 1084, "else_statement"], [1084, 1085, "statements"], [1085, 1086, "expression"], [1086, 1087, "qualifier"], [1086, 1088, "member"], [1086, 1089, "arguments"], [1089, 1090, "qualifier"], [1089, 1091, "member"], [1089, 1092, "arguments"], [1092, 1093, "value"], [1089, 1094, "selectors"], [1094, 1095, "member"], [1084, 1096, "statements"], [1096, 1097, "expression"], [1097, 1098, "member"], [1097, 1099, "arguments"], [1099, 1100, "value"], [1014, 1101, "statements"], [1101, 1102, "type"], [1102, 1103, "name"], [1101, 1104, "declarators"], [1104, 1105, "name"], [1104, 1106, "initializer"], [1106, 1107, "qualifier"], [1106, 1108, "member"], [1014, 1109, "statements"], [1109, 1110, "type"], [1110, 1111, "name"], [1109, 1112, "declarators"], [1112, 1113, "name"], [1112, 1114, "initializer"], [1114, 1115, "member"], [1014, 1116, "statements"], [1116, 1117, "type"], [1117, 1118, "name"], [1116, 1119, "declarators"], [1119, 1120, "name"], [1119, 1121, "initializer"], [1121, 1122, "qualifier"], [1121, 1123, "member"], [1121, 1124, "arguments"], [1124, 1125, "value"], [1014, 1126, "statements"], [1126, 1127, "type"], [1127, 1128, "name"], [1126, 1129, "declarators"], [1129, 1130, "name"], [1129, 1131, "initializer"], [1131, 1132, "qualifier"], [1131, 1133, "member"], [1014, 1134, "statements"], [1134, 1135, "condition"], [1135, 1136, "operandl"], [1136, 1137, "operandl"], [1137, 1138, "prefix_operators"], [1137, 1139, "qualifier"], [1137, 1140, "member"], [1136, 1141, "operator"], [1136, 1142, "operandr"], [1142, 1143, "qualifier"], [1142, 1144, "member"], [1142, 1145, "arguments"], [1145, 1146, "member"], [1135, 1147, "operator"], [1135, 1148, "operandr"], [1148, 1149, "qualifier"], [1148, 1150, "member"], [1148, 1151, "arguments"], [1151, 1152, "member"], [1134, 1153, "then_statement"], [1153, 1154, "statements"], [1154, 1155, "expression"], [1155, 1156, "member"], [1155, 1157, "arguments"], [1157, 1158, "member"], [1134, 1159, "else_statement"], [1159, 1160, "statements"], [1160, 1161, "type"], [1161, 1162, "name"], [1160, 1163, "declarators"], [1163, 1164, "name"], [1163, 1165, "initializer"], [1165, 1166, "member"], [1165, 1167, "arguments"], [1167, 1168, "member"], [1159, 1169, "statements"], [1169, 1170, "condition"], [1170, 1171, "prefix_operators"], [1170, 1172, "qualifier"], [1170, 1173, "member"], [1170, 1174, "arguments"], [1174, 1175, "member"], [1169, 1176, "then_statement"], [1176, 1177, "statements"], [1177, 1178, "expression"], [1178, 1179, "qualifier"], [1178, 1180, "member"], [1178, 1181, "arguments"], [1181, 1182, "member"], [1169, 1183, "else_statement"], [1183, 1184, "statements"], [1184, 1185, "expression"], [1185, 1186, "member"], [1185, 1187, "arguments"], [1187, 1188, "member"], [1014, 1189, "statements"], [1189, 1190, "expression"], [1190, 1191, "member"], [1190, 1192, "arguments"], [1192, 1193, "member"], [1014, 1194, "statements"], [1194, 1195, "expression"], [1195, 1196, "member"], [1195, 1197, "arguments"], [1197, 1198, "member"], [1195, 1199, "arguments"], [1199, 1200, "qualifier"], [1199, 1201, "member"], [1014, 1202, "statements"], [222, 1203, "cases"], [1203, 1204, "case"], [1204, 1205, "qualifier"], [1204, 1206, "member"], [1203, 1207, "case"], [1207, 1208, "qualifier"], [1207, 1209, "member"], [1203, 1210, "statements"], [1210, 1211, "statements"], [1211, 1212, "condition"], [1212, 1213, "operandl"], [1213, 1214, "qualifier"], [1213, 1215, "member"], [1212, 1216, "operator"], [1212, 1217, "operandr"], [1217, 1218, "type"], [1218, 1219, "name"], [1211, 1220, "then_statement"], [1220, 1221, "statements"], [1221, 1222, "expression"], [1222, 1223, "type"], [1223, 1224, "name"], [1222, 1225, "arguments"], [1225, 1226, "value"], [1210, 1227, "statements"], [1227, 1228, "type"], [1228, 1229, "name"], [1227, 1230, "declarators"], [1230, 1231, "name"], [1230, 1232, "initializer"], [1232, 1233, "operandl"], [1233, 1234, "member"], [1232, 1235, "operator"], [1232, 1236, "operandr"], [1236, 1237, "qualifier"], [1236, 1238, "member"], [1210, 1239, "statements"], [1239, 1240, "condition"], [1240, 1241, "member"], [1239, 1242, "then_statement"], [1242, 1243, "statements"], [1243, 1244, "expression"], [1244, 1245, "qualifier"], [1244, 1246, "member"], [1210, 1247, "statements"], [1247, 1248, "type"], [1248, 1249, "name"], [1247, 1250, "declarators"], [1250, 1251, "name"], [1250, 1252, "initializer"], [1252, 1253, "operandl"], [1253, 1254, "operandl"], [1254, 1255, "member"], [1253, 1256, "operator"], [1253, 1257, "operandr"], [1257, 1258, "qualifier"], [1257, 1259, "member"], [1252, 1260, "operator"], [1252, 1261, "operandr"], [1261, 1262, "operandl"], [1262, 1263, "operandl"], [1263, 1264, "operandl"], [1264, 1265, "operandl"], [1265, 1266, "member"], [1264, 1267, "operator"], [1264, 1268, "operandr"], [1268, 1269, "qualifier"], [1268, 1270, "member"], [1263, 1271, "operator"], [1263, 1272, "operandr"], [1272, 1273, "prefix_operators"], [1272, 1274, "member"], [1262, 1275, "operator"], [1262, 1276, "operandr"], [1276, 1277, "operandl"], [1277, 1278, "qualifier"], [1277, 1279, "member"], [1276, 1280, "operator"], [1276, 1281, "operandr"], [1281, 1282, "value"], [1261, 1283, "operator"], [1261, 1284, "operandr"], [1284, 1285, "qualifier"], [1284, 1286, "member"], [1284, 1287, "selectors"], [1287, 1288, "member"], [1210, 1289, "statements"], [1289, 1290, "control"], [1290, 1291, "init"], [1291, 1292, "type"], [1292, 1293, "name"], [1291, 1294, "declarators"], [1294, 1295, "name"], [1294, 1296, "initializer"], [1296, 1297, "member"], [1290, 1298, "condition"], [1298, 1299, "operandl"], [1299, 1300, "member"], [1298, 1301, "operator"], [1298, 1302, "operandr"], [1302, 1303, "value"], [1290, 1304, "update"], [1304, 1305, "expressionl"], [1305, 1306, "member"], [1304, 1307, "type"], [1304, 1308, "value"], [1308, 1309, "qualifier"], [1308, 1310, "member"], [1289, 1311, "body"], [1311, 1312, "statements"], [1312, 1313, "expression"], [1313, 1314, "member"], [1313, 1315, "arguments"], [1315, 1316, "member"], [1313, 1317, "arguments"], [1317, 1318, "qualifier"], [1317, 1319, "member"], [1311, 1320, "statements"], [1320, 1321, "condition"], [1321, 1322, "qualifier"], [1321, 1323, "member"], [1320, 1324, "then_statement"], [1324, 1325, "statements"], [1325, 1326, "expression"], [1326, 1327, "qualifier"], [1326, 1328, "member"], [1311, 1329, "statements"], [1329, 1330, "condition"], [1330, 1331, "qualifier"], [1330, 1332, "member"], [1329, 1333, "then_statement"], [1333, 1334, "statements"], [1334, 1335, "expression"], [1335, 1336, "qualifier"], [1335, 1337, "member"], [1311, 1338, "statements"], [1338, 1339, "condition"], [1339, 1340, "member"], [1338, 1341, "then_statement"], [1341, 1342, "statements"], [1342, 1343, "expression"], [1343, 1344, "qualifier"], [1343, 1345, "member"], [1210, 1346, "statements"], [1346, 1347, "condition"], [1347, 1348, "member"], [1346, 1349, "then_statement"], [1349, 1350, "statements"], [1350, 1351, "expression"], [1351, 1352, "qualifier"], [1351, 1353, "member"], [1351, 1354, "arguments"], [1354, 1355, "qualifier"], [1354, 1356, "member"], [1354, 1357, "arguments"], [1357, 1358, "member"], [1354, 1359, "arguments"], [1359, 1360, "operandl"], [1360, 1361, "member"], [1359, 1362, "operator"], [1359, 1363, "operandr"], [1363, 1364, "qualifier"], [1363, 1365, "member"], [1210, 1366, "statements"], [222, 1367, "cases"], [1367, 1368, "case"], [1368, 1369, "qualifier"], [1368, 1370, "member"], [1367, 1371, "statements"], [1371, 1372, "condition"], [1372, 1373, "operandl"], [1373, 1374, "member"], [1372, 1375, "operator"], [1372, 1376, "operandr"], [1376, 1377, "value"], [1371, 1378, "then_statement"], [1378, 1379, "statements"], [1379, 1380, "expression"], [1380, 1381, "member"], [1380, 1382, "arguments"], [1382, 1383, "value"], [1378, 1384, "statements"], [1384, 1385, "condition"], [1385, 1386, "qualifier"], [1385, 1387, "member"], [1384, 1388, "then_statement"], [1388, 1389, "statements"], [1389, 1390, "expression"], [1390, 1391, "member"], [1390, 1392, "arguments"], [1392, 1393, "member"], [1390, 1394, "arguments"], [1394, 1395, "qualifier"], [1394, 1396, "member"], [1384, 1397, "else_statement"], [1397, 1398, "statements"], [1398, 1399, "expression"], [1399, 1400, "member"], [1399, 1401, "arguments"], [1401, 1402, "member"], [1399, 1403, "arguments"], [1403, 1404, "value"], [1399, 1405, "arguments"], [1405, 1406, "qualifier"], [1405, 1407, "member"], [1378, 1408, "statements"], [1408, 1409, "expression"], [1409, 1410, "member"], [1409, 1411, "arguments"], [1411, 1412, "value"], [1378, 1413, "statements"], [1413, 1414, "expression"], [1414, 1415, "member"], [1414, 1416, "arguments"], [1416, 1417, "qualifier"], [1416, 1418, "member"], [1378, 1419, "statements"], [1419, 1420, "expression"], [1420, 1421, "member"], [1420, 1422, "arguments"], [1422, 1423, "value"], [1378, 1424, "statements"], [1424, 1425, "expression"], [1425, 1426, "member"], [1425, 1427, "arguments"], [1427, 1428, "qualifier"], [1427, 1429, "member"], [1427, 1430, "selectors"], [1430, 1431, "member"], [1378, 1432, "statements"], [1432, 1433, "expression"], [1433, 1434, "member"], [1433, 1435, "arguments"], [1435, 1436, "value"], [1378, 1437, "statements"], [1437, 1438, "expression"], [1438, 1439, "member"], [1438, 1440, "arguments"], [1440, 1441, "member"], [1438, 1442, "arguments"], [1442, 1443, "member"], [1442, 1444, "arguments"], [1444, 1445, "member"], [1438, 1446, "arguments"], [1446, 1447, "value"], [1371, 1448, "else_statement"], [1448, 1449, "statements"], [1449, 1450, "expression"], [1450, 1451, "qualifier"], [1450, 1452, "member"], [1450, 1453, "arguments"], [1453, 1454, "operandl"], [1454, 1455, "member"], [1453, 1456, "operator"], [1453, 1457, "operandr"], [1457, 1458, "value"], [1448, 1459, "statements"], [1459, 1460, "expression"], [1460, 1461, "member"], [1460, 1462, "arguments"], [1462, 1463, "value"], [1448, 1464, "statements"], [1464, 1465, "expression"], [1465, 1466, "member"], [1465, 1467, "arguments"], [1467, 1468, "member"], [1448, 1469, "statements"], [1469, 1470, "expression"], [1470, 1471, "member"], [1470, 1472, "arguments"], [1472, 1473, "value"], [1448, 1474, "statements"], [1474, 1475, "expression"], [1475, 1476, "member"], [1475, 1477, "arguments"], [1477, 1478, "qualifier"], [1477, 1479, "member"], [1448, 1480, "statements"], [1480, 1481, "expression"], [1481, 1482, "member"], [1481, 1483, "arguments"], [1483, 1484, "value"], [1448, 1485, "statements"], [1485, 1486, "expression"], [1486, 1487, "member"], [1486, 1488, "arguments"], [1488, 1489, "member"], [1486, 1490, "arguments"], [1490, 1491, "member"], [1490, 1492, "arguments"], [1492, 1493, "member"], [1486, 1494, "arguments"], [1494, 1495, "value"], [1367, 1496, "statements"], [222, 1497, "cases"], [1497, 1498, "case"], [1498, 1499, "qualifier"], [1498, 1500, "member"], [1497, 1501, "statements"], [1501, 1502, "expression"], [1502, 1503, "qualifier"], [1502, 1504, "member"], [1502, 1505, "arguments"], [1505, 1506, "operandl"], [1506, 1507, "member"], [1505, 1508, "operator"], [1505, 1509, "operandr"], [1509, 1510, "value"], [1497, 1511, "statements"], [1511, 1512, "expression"], [1512, 1513, "member"], [1512, 1514, "arguments"], [1514, 1515, "value"], [1497, 1516, "statements"], [1516, 1517, "expression"], [1517, 1518, "member"], [1517, 1519, "arguments"], [1519, 1520, "member"], [1517, 1521, "arguments"], [1521, 1522, "qualifier"], [1521, 1523, "member"], [1517, 1524, "arguments"], [1524, 1525, "value"], [1497, 1526, "statements"], [1526, 1527, "expression"], [1527, 1528, "member"], [1527, 1529, "arguments"], [1529, 1530, "value"], [1497, 1531, "statements"], [1531, 1532, "expression"], [1532, 1533, "member"], [1532, 1534, "arguments"], [1534, 1535, "member"], [1497, 1536, "statements"], [1536, 1537, "expression"], [1537, 1538, "member"], [1537, 1539, "arguments"], [1539, 1540, "value"], [1497, 1541, "statements"], [1541, 1542, "expression"], [1542, 1543, "qualifier"], [1542, 1544, "member"], [1497, 1545, "statements"], [222, 1546, "cases"], [1546, 1547, "case"], [1547, 1548, "qualifier"], [1547, 1549, "member"], [1546, 1550, "statements"], [1550, 1551, "expression"], [1551, 1552, "qualifier"], [1551, 1553, "member"], [1551, 1554, "arguments"], [1554, 1555, "operandl"], [1555, 1556, "member"], [1554, 1557, "operator"], [1554, 1558, "operandr"], [1558, 1559, "value"], [1546, 1560, "statements"], [1560, 1561, "expression"], [1561, 1562, "member"], [1561, 1563, "arguments"], [1563, 1564, "value"], [1546, 1565, "statements"], [1565, 1566, "expression"], [1566, 1567, "member"], [1566, 1568, "arguments"], [1568, 1569, "member"], [1546, 1570, "statements"], [1570, 1571, "expression"], [1571, 1572, "member"], [1571, 1573, "arguments"], [1573, 1574, "value"], [1546, 1575, "statements"], [1575, 1576, "expression"], [1576, 1577, "member"], [1576, 1578, "arguments"], [1578, 1579, "member"], [1576, 1580, "arguments"], [1580, 1581, "member"], [1580, 1582, "arguments"], [1582, 1583, "member"], [1576, 1584, "arguments"], [1584, 1585, "value"], [1546, 1586, "statements"], [222, 1587, "cases"], [1587, 1588, "case"], [1588, 1589, "qualifier"], [1588, 1590, "member"], [1587, 1591, "statements"], [1591, 1592, "expression"], [1592, 1593, "qualifier"], [1592, 1594, "member"], [1592, 1595, "arguments"], [1595, 1596, "operandl"], [1596, 1597, "member"], [1595, 1598, "operator"], [1595, 1599, "operandr"], [1599, 1600, "value"], [1587, 1601, "statements"], [222, 1602, "cases"], [1602, 1603, "case"], [1603, 1604, "qualifier"], [1603, 1605, "member"], [1602, 1606, "statements"], [1606, 1607, "statements"], [1607, 1608, "expression"], [1608, 1609, "qualifier"], [1608, 1610, "member"], [1608, 1611, "arguments"], [1611, 1612, "operandl"], [1612, 1613, "member"], [1611, 1614, "operator"], [1611, 1615, "operandr"], [1615, 1616, "value"], [1608, 1617, "arguments"], [1617, 1618, "value"], [1608, 1619, "arguments"], [1619, 1620, "member"], [1606, 1621, "statements"], [1621, 1622, "expression"], [1622, 1623, "qualifier"], [1622, 1624, "member"], [1622, 1625, "arguments"], [1625, 1626, "qualifier"], [1625, 1627, "member"], [1622, 1628, "arguments"], [1628, 1629, "value"], [1606, 1630, "statements"], [1630, 1631, "type"], [1631, 1632, "name"], [1630, 1633, "declarators"], [1633, 1634, "name"], [1633, 1635, "initializer"], [1635, 1636, "qualifier"], [1635, 1637, "member"], [1606, 1638, "statements"], [1638, 1639, "condition"], [1639, 1640, "member"], [1638, 1641, "then_statement"], [1641, 1642, "statements"], [1642, 1643, "expression"], [1643, 1644, "member"], [1643, 1645, "arguments"], [1645, 1646, "value"], [1606, 1647, "statements"], [1647, 1648, "expression"], [1648, 1649, "member"], [1648, 1650, "arguments"], [1650, 1651, "member"], [1648, 1652, "arguments"], [1652, 1653, "qualifier"], [1652, 1654, "member"], [1652, 1655, "arguments"], [1655, 1656, "member"], [1648, 1657, "arguments"], [1657, 1658, "member"], [1606, 1659, "statements"], [1659, 1660, "condition"], [1660, 1661, "member"], [1659, 1662, "then_statement"], [1662, 1663, "statements"], [1663, 1664, "expression"], [1664, 1665, "member"], [1664, 1666, "arguments"], [1666, 1667, "value"], [1606, 1668, "statements"], [1668, 1669, "condition"], [1669, 1670, "operandl"], [1670, 1671, "operandl"], [1671, 1672, "selectors"], [1672, 1673, "member"], [1670, 1674, "operator"], [1670, 1675, "operandr"], [1675, 1676, "qualifier"], [1675, 1677, "member"], [1669, 1678, "operator"], [1669, 1679, "operandr"], [1679, 1680, "qualifier"], [1679, 1681, "member"], [1679, 1682, "arguments"], [1682, 1683, "qualifier"], [1682, 1684, "member"], [1668, 1685, "then_statement"], [1685, 1686, "statements"], [1686, 1687, "expression"], [1687, 1688, "member"], [1687, 1689, "arguments"], [1689, 1690, "value"], [1685, 1691, "statements"], [1691, 1692, "expression"], [1692, 1693, "member"], [1692, 1694, "arguments"], [1694, 1695, "member"], [1685, 1696, "statements"], [1696, 1697, "expression"], [1697, 1698, "member"], [1697, 1699, "arguments"], [1699, 1700, "value"], [1668, 1701, "else_statement"], [1701, 1702, "statements"], [1702, 1703, "expression"], [1703, 1704, "member"], [1703, 1705, "arguments"], [1705, 1706, "value"], [1701, 1707, "statements"], [1707, 1708, "expression"], [1708, 1709, "member"], [1708, 1710, "arguments"], [1710, 1711, "qualifier"], [1710, 1712, "member"], [1606, 1713, "statements"], [222, 1714, "cases"], [1714, 1715, "case"], [1715, 1716, "qualifier"], [1715, 1717, "member"], [1714, 1718, "statements"], [1718, 1719, "expression"], [1719, 1720, "qualifier"], [1719, 1721, "member"], [1719, 1722, "arguments"], [1722, 1723, "operandl"], [1723, 1724, "member"], [1722, 1725, "operator"], [1722, 1726, "operandr"], [1726, 1727, "value"], [1719, 1728, "arguments"], [1728, 1729, "value"], [1719, 1730, "arguments"], [1730, 1731, "member"], [1714, 1732, "statements"], [1732, 1733, "expression"], [1733, 1734, "member"], [1733, 1735, "arguments"], [1735, 1736, "member"], [1733, 1737, "arguments"], [1737, 1738, "qualifier"], [1737, 1739, "member"], [1737, 1740, "arguments"], [1740, 1741, "member"], [1733, 1742, "arguments"], [1742, 1743, "member"], [1714, 1744, "statements"], [1744, 1745, "expression"], [1745, 1746, "member"], [1745, 1747, "arguments"], [1747, 1748, "value"], [1714, 1749, "statements"], [1749, 1750, "expression"], [1750, 1751, "member"], [1750, 1752, "arguments"], [1752, 1753, "qualifier"], [1752, 1754, "member"], [1714, 1755, "statements"], [1755, 1756, "expression"], [1756, 1757, "member"], [1756, 1758, "arguments"], [1758, 1759, "value"], [1714, 1760, "statements"], [222, 1761, "cases"], [1761, 1762, "case"], [1762, 1763, "qualifier"], [1762, 1764, "member"], [1761, 1765, "statements"], [1765, 1766, "expression"], [1766, 1767, "qualifier"], [1766, 1768, "member"], [1766, 1769, "arguments"], [1769, 1770, "operandl"], [1770, 1771, "member"], [1769, 1772, "operator"], [1769, 1773, "operandr"], [1773, 1774, "value"], [1761, 1775, "statements"], [1775, 1776, "expression"], [1776, 1777, "member"], [1776, 1778, "arguments"], [1778, 1779, "value"], [1761, 1780, "statements"], [1780, 1781, "expression"], [1781, 1782, "member"], [1781, 1783, "arguments"], [1783, 1784, "member"], [1761, 1785, "statements"], [1785, 1786, "expression"], [1786, 1787, "member"], [1786, 1788, "arguments"], [1788, 1789, "value"], [1761, 1790, "statements"], [1790, 1791, "expression"], [1791, 1792, "member"], [1791, 1793, "arguments"], [1793, 1794, "member"], [1791, 1795, "arguments"], [1795, 1796, "member"], [1795, 1797, "arguments"], [1797, 1798, "member"], [1791, 1799, "arguments"], [1799, 1800, "value"], [1761, 1801, "statements"], [222, 1802, "cases"], [1802, 1803, "case"], [1803, 1804, "qualifier"], [1803, 1805, "member"], [1802, 1806, "case"], [1806, 1807, "qualifier"], [1806, 1808, "member"], [1802, 1809, "statements"], [1809, 1810, "statements"], [1810, 1811, "expression"], [1811, 1812, "qualifier"], [1811, 1813, "member"], [1811, 1814, "arguments"], [1814, 1815, "operandl"], [1815, 1816, "member"], [1814, 1817, "operator"], [1814, 1818, "operandr"], [1818, 1819, "value"], [1809, 1820, "statements"], [1820, 1821, "type"], [1821, 1822, "name"], [1820, 1823, "declarators"], [1823, 1824, "name"], [1823, 1825, "initializer"], [1825, 1826, "condition"], [1826, 1827, "operandl"], [1827, 1828, "member"], [1826, 1829, "operator"], [1826, 1830, "operandr"], [1830, 1831, "qualifier"], [1830, 1832, "member"], [1825, 1833, "if_true"], [1833, 1834, "value"], [1825, 1835, "if_false"], [1835, 1836, "value"], [1809, 1837, "statements"], [1837, 1838, "type"], [1838, 1839, "name"], [1837, 1840, "declarators"], [1840, 1841, "name"], [1840, 1842, "initializer"], [1842, 1843, "qualifier"], [1842, 1844, "member"], [1842, 1845, "arguments"], [1845, 1846, "qualifier"], [1845, 1847, "member"], [1809, 1848, "statements"], [1848, 1849, "condition"], [1849, 1850, "operandl"], [1850, 1851, "member"], [1849, 1852, "operator"], [1849, 1853, "operandr"], [1853, 1854, "value"], [1848, 1855, "then_statement"], [1855, 1856, "statements"], [1856, 1857, "expression"], [1857, 1858, "member"], [1857, 1859, "arguments"], [1859, 1860, "member"], [1857, 1861, "arguments"], [1861, 1862, "qualifier"], [1861, 1863, "member"], [1861, 1864, "arguments"], [1864, 1865, "member"], [1857, 1866, "arguments"], [1866, 1867, "member"], [1855, 1868, "statements"], [1868, 1869, "expression"], [1869, 1870, "qualifier"], [1869, 1871, "member"], [1869, 1872, "arguments"], [1872, 1873, "member"], [1869, 1874, "arguments"], [1874, 1875, "value"], [1848, 1876, "else_statement"], [1876, 1877, "statements"], [1877, 1878, "expression"], [1878, 1879, "qualifier"], [1878, 1880, "member"], [1878, 1881, "arguments"], [1881, 1882, "member"], [1878, 1883, "arguments"], [1883, 1884, "value"], [1876, 1885, "statements"], [1885, 1886, "expression"], [1886, 1887, "member"], [1886, 1888, "arguments"], [1888, 1889, "member"], [1809, 1890, "statements"], [222, 1891, "cases"], [1891, 1892, "case"], [1892, 1893, "qualifier"], [1892, 1894, "member"], [1891, 1895, "statements"], [1895, 1896, "condition"], [1896, 1897, "operandl"], [1897, 1898, "member"], [1897, 1899, "arguments"], [1899, 1900, "member"], [1896, 1901, "operator"], [1896, 1902, "operandr"], [1902, 1903, "operandl"], [1903, 1904, "qualifier"], [1903, 1905, "member"], [1903, 1906, "arguments"], [1906, 1907, "qualifier"], [1906, 1908, "member"], [1902, 1909, "operator"], [1902, 1910, "operandr"], [1910, 1911, "qualifier"], [1910, 1912, "member"], [1910, 1913, "arguments"], [1913, 1914, "member"], [1895, 1915, "then_statement"], [1915, 1916, "statements"], [1916, 1917, "expression"], [1917, 1918, "member"], [1917, 1919, "arguments"], [1919, 1920, "value"], [1915, 1921, "statements"], [1921, 1922, "expression"], [1922, 1923, "member"], [1922, 1924, "arguments"], [1924, 1925, "member"], [1922, 1926, "arguments"], [1926, 1927, "qualifier"], [1926, 1928, "member"], [1926, 1929, "arguments"], [1929, 1930, "qualifier"], [1929, 1931, "member"], [1922, 1932, "arguments"], [1932, 1933, "qualifier"], [1932, 1934, "member"], [1915, 1935, "statements"], [1935, 1936, "expression"], [1936, 1937, "member"], [1936, 1938, "arguments"], [1938, 1939, "value"], [1895, 1940, "else_statement"], [1940, 1941, "statements"], [1941, 1942, "expression"], [1942, 1943, "member"], [1942, 1944, "arguments"], [1944, 1945, "member"], [1942, 1946, "arguments"], [1946, 1947, "qualifier"], [1946, 1948, "member"], [1946, 1949, "arguments"], [1949, 1950, "member"], [1942, 1951, "arguments"], [1951, 1952, "member"], [1891, 1953, "statements"], [1953, 1954, "expression"], [1954, 1955, "member"], [1954, 1956, "arguments"], [1956, 1957, "value"], [1891, 1958, "statements"], [1958, 1959, "expression"], [1959, 1960, "member"], [1959, 1961, "arguments"], [1961, 1962, "qualifier"], [1961, 1963, "member"], [1891, 1964, "statements"], [1964, 1965, "expression"], [1965, 1966, "member"], [1965, 1967, "arguments"], [1967, 1968, "value"], [1891, 1969, "statements"], [222, 1970, "cases"], [1970, 1971, "case"], [1971, 1972, "qualifier"], [1971, 1973, "member"], [1970, 1974, "statements"], [1974, 1975, "type"], [1975, 1976, "name"], [1974, 1977, "declarators"], [1977, 1978, "name"], [1977, 1979, "initializer"], [1979, 1980, "operandl"], [1980, 1981, "member"], [1979, 1982, "operator"], [1979, 1983, "operandr"], [1983, 1984, "value"], [1970, 1985, "statements"], [1985, 1986, "type"], [1986, 1987, "name"], [1985, 1988, "declarators"], [1988, 1989, "name"], [1988, 1990, "initializer"], [1990, 1991, "operandl"], [1991, 1992, "operandl"], [1992, 1993, "member"], [1991, 1994, "operator"], [1991, 1995, "operandr"], [1995, 1996, "qualifier"], [1995, 1997, "member"], [1990, 1998, "operator"], [1990, 1999, "operandr"], [1999, 2000, "prefix_operators"], [1999, 2001, "member"], [1970, 2002, "statements"], [2002, 2003, "condition"], [2003, 2004, "member"], [2002, 2005, "then_statement"], [2005, 2006, "statements"], [2006, 2007, "expression"], [2007, 2008, "qualifier"], [2007, 2009, "member"], [1970, 2010, "statements"], [2010, 2011, "expression"], [2011, 2012, "member"], [2011, 2013, "arguments"], [2013, 2014, "value"], [1970, 2015, "statements"], [2015, 2016, "expression"], [2016, 2017, "member"], [2016, 2018, "arguments"], [2018, 2019, "member"], [1970, 2020, "statements"], [2020, 2021, "expression"], [2021, 2022, "member"], [2021, 2023, "arguments"], [2023, 2024, "value"], [1970, 2025, "statements"], [2025, 2026, "condition"], [2026, 2027, "member"], [2025, 2028, "then_statement"], [2028, 2029, "statements"], [2029, 2030, "expression"], [2030, 2031, "member"], [2030, 2032, "arguments"], [2032, 2033, "qualifier"], [2032, 2034, "member"], [2030, 2035, "arguments"], [2035, 2036, "qualifier"], [2035, 2037, "member"], [2030, 2038, "arguments"], [2038, 2039, "value"], [2028, 2040, "statements"], [2040, 2041, "expression"], [2041, 2042, "member"], [2041, 2043, "arguments"], [2043, 2044, "value"], [2028, 2045, "statements"], [2045, 2046, "expression"], [2046, 2047, "member"], [2046, 2048, "arguments"], [2048, 2049, "member"], [2046, 2050, "arguments"], [2050, 2051, "member"], [2050, 2052, "arguments"], [2052, 2053, "member"], [2046, 2054, "arguments"], [2054, 2055, "value"], [2025, 2056, "else_statement"], [2056, 2057, "statements"], [2057, 2058, "expression"], [2058, 2059, "member"], [2058, 2060, "arguments"], [2060, 2061, "qualifier"], [2060, 2062, "member"], [2058, 2063, "arguments"], [2063, 2064, "qualifier"], [2063, 2065, "member"], [2058, 2066, "arguments"], [2066, 2067, "value"], [2056, 2068, "statements"], [2068, 2069, "expression"], [2069, 2070, "qualifier"], [2069, 2071, "member"], [2069, 2072, "arguments"], [2072, 2073, "operandl"], [2073, 2074, "member"], [2072, 2075, "operator"], [2072, 2076, "operandr"], [2076, 2077, "value"], [1970, 2078, "statements"], [2078, 2079, "condition"], [2079, 2080, "member"], [2078, 2081, "then_statement"], [2081, 2082, "statements"], [2082, 2083, "expression"], [2083, 2084, "qualifier"], [2083, 2085, "member"], [1970, 2086, "statements"], [222, 2087, "cases"], [2087, 2088, "case"], [2088, 2089, "qualifier"], [2088, 2090, "member"], [2087, 2091, "statements"], [2091, 2092, "expression"], [2092, 2093, "qualifier"], [2092, 2094, "member"], [2092, 2095, "arguments"], [2095, 2096, "operandl"], [2096, 2097, "member"], [2095, 2098, "operator"], [2095, 2099, "operandr"], [2099, 2100, "value"], [2087, 2101, "statements"], [2101, 2102, "expression"], [2102, 2103, "qualifier"], [2102, 2104, "member"], [2102, 2105, "arguments"], [2105, 2106, "value"], [2087, 2107, "statements"], [222, 2108, "cases"], [2108, 2109, "case"], [2109, 2110, "qualifier"], [2109, 2111, "member"], [2108, 2112, "statements"], [2112, 2113, "expression"], [2113, 2114, "qualifier"], [2113, 2115, "member"], [2113, 2116, "arguments"], [2116, 2117, "operandl"], [2117, 2118, "member"], [2116, 2119, "operator"], [2116, 2120, "operandr"], [2120, 2121, "value"], [2108, 2122, "statements"], [2122, 2123, "expression"], [2123, 2124, "member"], [2123, 2125, "arguments"], [2125, 2126, "value"], [2108, 2127, "statements"], [222, 2128, "cases"], [2128, 2129, "case"], [2129, 2130, "qualifier"], [2129, 2131, "member"], [2128, 2132, "statements"], [2132, 2133, "expression"], [2133, 2134, "qualifier"], [2133, 2135, "member"], [2133, 2136, "arguments"], [2136, 2137, "operandl"], [2137, 2138, "member"], [2136, 2139, "operator"], [2136, 2140, "operandr"], [2140, 2141, "value"], [2128, 2142, "statements"], [2142, 2143, "expression"], [2143, 2144, "qualifier"], [2143, 2145, "member"], [2143, 2146, "arguments"], [2146, 2147, "value"], [2128, 2148, "statements"], [222, 2149, "cases"], [2149, 2150, "case"], [2150, 2151, "qualifier"], [2150, 2152, "member"], [2149, 2153, "statements"], [2153, 2154, "expression"], [2154, 2155, "qualifier"], [2154, 2156, "member"], [2154, 2157, "arguments"], [2157, 2158, "operandl"], [2158, 2159, "member"], [2157, 2160, "operator"], [2157, 2161, "operandr"], [2161, 2162, "value"], [2149, 2163, "statements"], [2163, 2164, "expression"], [2164, 2165, "qualifier"], [2164, 2166, "member"], [2164, 2167, "arguments"], [2167, 2168, "value"], [2149, 2169, "statements"], [222, 2170, "cases"], [2170, 2171, "case"], [2171, 2172, "qualifier"], [2171, 2173, "member"], [2170, 2174, "statements"], [2174, 2175, "expression"], [2175, 2176, "qualifier"], [2175, 2177, "member"], [2175, 2178, "arguments"], [2178, 2179, "operandl"], [2179, 2180, "member"], [2178, 2181, "operator"], [2178, 2182, "operandr"], [2182, 2183, "value"], [2170, 2184, "statements"], [2184, 2185, "expression"], [2185, 2186, "member"], [2185, 2187, "arguments"], [2187, 2188, "value"], [2170, 2189, "statements"], [2189, 2190, "condition"], [2190, 2191, "operandl"], [2191, 2192, "member"], [2190, 2193, "operator"], [2190, 2194, "operandr"], [2194, 2195, "value"], [2189, 2196, "then_statement"], [2196, 2197, "statements"], [2197, 2198, "condition"], [2198, 2199, "prefix_operators"], [2198, 2200, "qualifier"], [2198, 2201, "member"], [2197, 2202, "then_statement"], [2202, 2203, "statements"], [2203, 2204, "expression"], [2204, 2205, "type"], [2205, 2206, "name"], [2204, 2207, "arguments"], [2207, 2208, "value"], [2196, 2209, "statements"], [2209, 2210, "expression"], [2210, 2211, "member"], [2210, 2212, "arguments"], [2212, 2213, "value"], [2196, 2214, "statements"], [2214, 2215, "expression"], [2215, 2216, "member"], [2215, 2217, "arguments"], [2217, 2218, "member"], [2170, 2219, "statements"], [2219, 2220, "expression"], [2220, 2221, "qualifier"], [2220, 2222, "member"], [2170, 2223, "statements"], [222, 2224, "cases"], [2224, 2225, "case"], [2225, 2226, "qualifier"], [2225, 2227, "member"], [2224, 2228, "statements"], [2228, 2229, "expression"], [2229, 2230, "qualifier"], [2229, 2231, "member"], [2229, 2232, "arguments"], [2232, 2233, "operandl"], [2233, 2234, "member"], [2232, 2235, "operator"], [2232, 2236, "operandr"], [2236, 2237, "value"], [2224, 2238, "statements"], [2238, 2239, "expression"], [2239, 2240, "member"], [2239, 2241, "arguments"], [2241, 2242, "value"], [2224, 2243, "statements"], [2243, 2244, "expression"], [2244, 2245, "qualifier"], [2244, 2246, "member"], [2224, 2247, "statements"], [222, 2248, "cases"], [2248, 2249, "case"], [2249, 2250, "qualifier"], [2249, 2251, "member"], [2248, 2252, "statements"], [2252, 2253, "expression"], [2253, 2254, "qualifier"], [2253, 2255, "member"], [2253, 2256, "arguments"], [2256, 2257, "operandl"], [2257, 2258, "member"], [2256, 2259, "operator"], [2256, 2260, "operandr"], [2260, 2261, "value"], [2248, 2262, "statements"], [2262, 2263, "expression"], [2263, 2264, "member"], [2263, 2265, "arguments"], [2265, 2266, "value"], [2248, 2267, "statements"], [2267, 2268, "condition"], [2268, 2269, "operandl"], [2269, 2270, "member"], [2268, 2271, "operator"], [2268, 2272, "operandr"], [2272, 2273, "value"], [2267, 2274, "then_statement"], [2274, 2275, "statements"], [2275, 2276, "condition"], [2276, 2277, "prefix_operators"], [2276, 2278, "qualifier"], [2276, 2279, "member"], [2275, 2280, "then_statement"], [2280, 2281, "statements"], [2281, 2282, "expression"], [2282, 2283, "type"], [2283, 2284, "name"], [2282, 2285, "arguments"], [2285, 2286, "value"], [2274, 2287, "statements"], [2287, 2288, "expression"], [2288, 2289, "member"], [2288, 2290, "arguments"], [2290, 2291, "value"], [2274, 2292, "statements"], [2292, 2293, "expression"], [2293, 2294, "member"], [2293, 2295, "arguments"], [2295, 2296, "member"], [2248, 2297, "statements"], [2297, 2298, "expression"], [2298, 2299, "qualifier"], [2298, 2300, "member"], [2248, 2301, "statements"], [222, 2302, "cases"], [2302, 2303, "case"], [2303, 2304, "qualifier"], [2303, 2305, "member"], [2302, 2306, "statements"], [2306, 2307, "expression"], [2307, 2308, "qualifier"], [2307, 2309, "member"], [2307, 2310, "arguments"], [2310, 2311, "operandl"], [2311, 2312, "member"], [2310, 2313, "operator"], [2310, 2314, "operandr"], [2314, 2315, "value"], [2302, 2316, "statements"], [2316, 2317, "expression"], [2317, 2318, "member"], [2317, 2319, "arguments"], [2319, 2320, "member"], [2317, 2321, "arguments"], [2321, 2322, "qualifier"], [2321, 2323, "member"], [2302, 2324, "statements"], [2324, 2325, "expression"], [2325, 2326, "qualifier"], [2325, 2327, "member"], [2302, 2328, "statements"], [222, 2329, "cases"], [2329, 2330, "case"], [2330, 2331, "qualifier"], [2330, 2332, "member"], [2329, 2333, "statements"], [2333, 2334, "expression"], [2334, 2335, "member"], [2334, 2336, "arguments"], [2336, 2337, "value"], [2329, 2338, "statements"], [2338, 2339, "type"], [2339, 2340, "name"], [2338, 2341, "declarators"], [2341, 2342, "name"], [2341, 2343, "initializer"], [2343, 2344, "qualifier"], [2343, 2345, "member"], [2343, 2346, "arguments"], [2346, 2347, "member"], [2329, 2348, "statements"], [2348, 2349, "condition"], [2349, 2350, "qualifier"], [2349, 2351, "member"], [2349, 2352, "arguments"], [2352, 2353, "member"], [2349, 2354, "arguments"], [2354, 2355, "qualifier"], [2354, 2356, "member"], [2349, 2357, "arguments"], [2357, 2358, "qualifier"], [2357, 2359, "member"], [2348, 2360, "then_statement"], [2360, 2361, "statements"], [2361, 2362, "expression"], [2362, 2363, "expressionl"], [2363, 2364, "member"], [2362, 2365, "type"], [2362, 2366, "value"], [2366, 2367, "operandl"], [2367, 2368, "qualifier"], [2367, 2369, "member"], [2367, 2370, "arguments"], [2370, 2371, "qualifier"], [2370, 2372, "member"], [2366, 2373, "operator"], [2366, 2374, "operandr"], [2374, 2375, "value"], [2329, 2376, "statements"], [2376, 2377, "expression"], [2377, 2378, "member"], [2377, 2379, "arguments"], [2379, 2380, "member"], [2377, 2381, "arguments"], [2381, 2382, "member"], [2377, 2383, "arguments"], [2383, 2384, "qualifier"], [2383, 2385, "member"], [2329, 2386, "statements"], [2386, 2387, "type"], [2387, 2388, "name"], [2386, 2389, "declarators"], [2389, 2390, "name"], [2389, 2391, "initializer"], [2391, 2392, "qualifier"], [2391, 2393, "member"], [2329, 2394, "statements"], [2394, 2395, "condition"], [2395, 2396, "operandl"], [2396, 2397, "member"], [2395, 2398, "operator"], [2395, 2399, "operandr"], [2399, 2400, "value"], [2394, 2401, "then_statement"], [2401, 2402, "statements"], [2402, 2403, "expression"], [2403, 2404, "member"], [2403, 2405, "arguments"], [2405, 2406, "value"], [2401, 2407, "statements"], [2407, 2408, "expression"], [2408, 2409, "member"], [2408, 2410, "arguments"], [2410, 2411, "member"], [2401, 2412, "statements"], [2412, 2413, "expression"], [2413, 2414, "member"], [2413, 2415, "arguments"], [2415, 2416, "value"], [2329, 2417, "statements"], [222, 2418, "cases"], [2418, 2419, "case"], [2419, 2420, "qualifier"], [2419, 2421, "member"], [2418, 2422, "statements"], [2422, 2423, "expression"], [2423, 2424, "qualifier"], [2423, 2425, "member"], [2423, 2426, "arguments"], [2426, 2427, "operandl"], [2427, 2428, "member"], [2426, 2429, "operator"], [2426, 2430, "operandr"], [2430, 2431, "value"], [2423, 2432, "arguments"], [2432, 2433, "value"], [2418, 2434, "statements"], [2434, 2435, "expression"], [2435, 2436, "member"], [2435, 2437, "arguments"], [2437, 2438, "member"], [2418, 2439, "statements"], [222, 2440, "cases"], [2440, 2441, "case"], [2441, 2442, "qualifier"], [2441, 2443, "member"], [2440, 2444, "statements"], [2444, 2445, "expression"], [2445, 2446, "qualifier"], [2445, 2447, "member"], [2445, 2448, "arguments"], [2448, 2449, "operandl"], [2449, 2450, "member"], [2448, 2451, "operator"], [2448, 2452, "operandr"], [2452, 2453, "value"], [2445, 2454, "arguments"], [2454, 2455, "value"], [2440, 2456, "statements"], [2456, 2457, "expression"], [2457, 2458, "member"], [2457, 2459, "arguments"], [2459, 2460, "member"], [2440, 2461, "statements"], [222, 2462, "cases"], [2462, 2463, "case"], [2463, 2464, "qualifier"], [2463, 2465, "member"], [2462, 2466, "statements"], [2466, 2467, "expression"], [2467, 2468, "qualifier"], [2467, 2469, "member"], [2467, 2470, "arguments"], [2470, 2471, "operandl"], [2471, 2472, "member"], [2470, 2473, "operator"], [2470, 2474, "operandr"], [2474, 2475, "value"], [2462, 2476, "statements"], [2476, 2477, "expression"], [2477, 2478, "member"], [2477, 2479, "arguments"], [2479, 2480, "value"], [2462, 2481, "statements"], [2481, 2482, "expression"], [2482, 2483, "member"], [2482, 2484, "arguments"], [2484, 2485, "member"], [2462, 2486, "statements"], [222, 2487, "cases"], [2487, 2488, "case"], [2488, 2489, "qualifier"], [2488, 2490, "member"], [2487, 2491, "statements"], [2491, 2492, "statements"], [2492, 2493, "type"], [2493, 2494, "name"], [2492, 2495, "declarators"], [2495, 2496, "name"], [2495, 2497, "initializer"], [2497, 2498, "operandl"], [2498, 2499, "member"], [2497, 2500, "operator"], [2497, 2501, "operandr"], [2501, 2502, "qualifier"], [2501, 2503, "member"], [2491, 2504, "statements"], [2504, 2505, "condition"], [2505, 2506, "member"], [2504, 2507, "then_statement"], [2507, 2508, "statements"], [2508, 2509, "expression"], [2509, 2510, "member"], [2509, 2511, "arguments"], [2511, 2512, "value"], [2491, 2513, "statements"], [2513, 2514, "expression"], [2514, 2515, "member"], [2514, 2516, "arguments"], [2516, 2517, "value"], [2491, 2518, "statements"], [2518, 2519, "control"], [2519, 2520, "init"], [2520, 2521, "type"], [2521, 2522, "name"], [2520, 2523, "declarators"], [2523, 2524, "name"], [2523, 2525, "initializer"], [2525, 2526, "member"], [2519, 2527, "condition"], [2527, 2528, "operandl"], [2528, 2529, "member"], [2527, 2530, "operator"], [2527, 2531, "operandr"], [2531, 2532, "value"], [2519, 2533, "update"], [2533, 2534, "expressionl"], [2534, 2535, "member"], [2533, 2536, "type"], [2533, 2537, "value"], [2537, 2538, "qualifier"], [2537, 2539, "member"], [2518, 2540, "body"], [2540, 2541, "statements"], [2541, 2542, "condition"], [2542, 2543, "operandl"], [2543, 2544, "member"], [2542, 2545, "operator"], [2542, 2546, "operandr"], [2546, 2547, "member"], [2541, 2548, "then_statement"], [2548, 2549, "statements"], [2549, 2550, "expression"], [2550, 2551, "qualifier"], [2550, 2552, "member"], [2540, 2553, "statements"], [2553, 2554, "condition"], [2554, 2555, "operandl"], [2555, 2556, "qualifier"], [2555, 2557, "member"], [2554, 2558, "operator"], [2554, 2559, "operandr"], [2559, 2560, "qualifier"], [2559, 2561, "member"], [2553, 2562, "then_statement"], [2562, 2563, "statements"], [2563, 2564, "expression"], [2564, 2565, "member"], [2564, 2566, "arguments"], [2566, 2567, "member"], [2553, 2568, "else_statement"], [2568, 2569, "statements"], [2569, 2570, "expression"], [2570, 2571, "qualifier"], [2570, 2572, "member"], [2570, 2573, "arguments"], [2573, 2574, "qualifier"], [2573, 2575, "member"], [2568, 2576, "statements"], [2576, 2577, "type"], [2577, 2578, "name"], [2576, 2579, "declarators"], [2579, 2580, "name"], [2579, 2581, "initializer"], [2581, 2582, "qualifier"], [2581, 2583, "member"], [2568, 2584, "statements"], [2584, 2585, "condition"], [2585, 2586, "operandl"], [2586, 2587, "operandl"], [2587, 2588, "operandl"], [2588, 2589, "prefix_operators"], [2588, 2590, "qualifier"], [2588, 2591, "member"], [2587, 2592, "operator"], [2587, 2593, "operandr"], [2593, 2594, "prefix_operators"], [2593, 2595, "operandl"], [2595, 2596, "operandl"], [2596, 2597, "member"], [2595, 2598, "operator"], [2595, 2599, "operandr"], [2599, 2600, "qualifier"], [2599, 2601, "member"], [2593, 2602, "operator"], [2593, 2603, "operandr"], [2603, 2604, "qualifier"], [2603, 2605, "member"], [2603, 2606, "arguments"], [2606, 2607, "member"], [2586, 2608, "operator"], [2586, 2609, "operandr"], [2609, 2610, "qualifier"], [2609, 2611, "member"], [2609, 2612, "arguments"], [2612, 2613, "member"], [2585, 2614, "operator"], [2585, 2615, "operandr"], [2615, 2616, "qualifier"], [2615, 2617, "member"], [2615, 2618, "arguments"], [2618, 2619, "member"], [2584, 2620, "then_statement"], [2620, 2621, "statements"], [2621, 2622, "expression"], [2622, 2623, "member"], [2622, 2624, "arguments"], [2624, 2625, "member"], [2584, 2626, "else_statement"], [2626, 2627, "statements"], [2627, 2628, "type"], [2628, 2629, "name"], [2627, 2630, "declarators"], [2630, 2631, "name"], [2630, 2632, "initializer"], [2632, 2633, "member"], [2632, 2634, "arguments"], [2634, 2635, "member"], [2626, 2636, "statements"], [2636, 2637, "condition"], [2637, 2638, "prefix_operators"], [2637, 2639, "qualifier"], [2637, 2640, "member"], [2637, 2641, "arguments"], [2641, 2642, "member"], [2636, 2643, "then_statement"], [2643, 2644, "statements"], [2644, 2645, "expression"], [2645, 2646, "qualifier"], [2645, 2647, "member"], [2645, 2648, "arguments"], [2648, 2649, "member"], [2636, 2650, "else_statement"], [2650, 2651, "statements"], [2651, 2652, "expression"], [2652, 2653, "member"], [2652, 2654, "arguments"], [2654, 2655, "member"], [2652, 2656, "arguments"], [2656, 2657, "value"], [2652, 2658, "arguments"], [2658, 2659, "qualifier"], [2658, 2660, "member"], [2568, 2661, "statements"], [2661, 2662, "expression"], [2662, 2663, "member"], [2662, 2664, "arguments"], [2664, 2665, "value"], [2568, 2666, "statements"], [2666, 2667, "expression"], [2667, 2668, "member"], [2667, 2669, "arguments"], [2669, 2670, "qualifier"], [2669, 2671, "member"], [2667, 2672, "arguments"], [2672, 2673, "value"], [2667, 2674, "arguments"], [2674, 2675, "qualifier"], [2674, 2676, "member"], [2491, 2677, "statements"], [2677, 2678, "expression"], [2678, 2679, "member"], [2678, 2680, "arguments"], [2680, 2681, "value"], [2491, 2682, "statements"], [2682, 2683, "condition"], [2683, 2684, "member"], [2682, 2685, "then_statement"], [2685, 2686, "statements"], [2686, 2687, "expression"], [2687, 2688, "member"], [2687, 2689, "arguments"], [2689, 2690, "value"], [2491, 2691, "statements"], [222, 2692, "cases"], [2692, 2693, "case"], [2693, 2694, "qualifier"], [2693, 2695, "member"], [2692, 2696, "statements"], [2696, 2697, "expression"], [2697, 2698, "member"], [2697, 2699, "arguments"], [2699, 2700, "value"], [2692, 2701, "statements"], [2701, 2702, "expression"], [2702, 2703, "member"], [2702, 2704, "arguments"], [2704, 2705, "member"], [2692, 2706, "statements"], [2706, 2707, "expression"], [2707, 2708, "member"], [2707, 2709, "arguments"], [2709, 2710, "value"], [2692, 2711, "statements"], [2711, 2712, "expression"], [2712, 2713, "qualifier"], [2712, 2714, "member"], [2692, 2715, "statements"], [2715, 2716, "expression"], [2716, 2717, "member"], [2716, 2718, "arguments"], [2718, 2719, "qualifier"], [2718, 2720, "member"], [2692, 2721, "statements"], [2721, 2722, "expression"], [2722, 2723, "qualifier"], [2722, 2724, "member"], [2722, 2725, "arguments"], [2725, 2726, "operandl"], [2726, 2727, "member"], [2725, 2728, "operator"], [2725, 2729, "operandr"], [2729, 2730, "qualifier"], [2729, 2731, "member"], [2692, 2732, "statements"], [222, 2733, "cases"], [2733, 2734, "case"], [2734, 2735, "qualifier"], [2734, 2736, "member"], [2733, 2737, "statements"], [2737, 2738, "expression"], [2738, 2739, "qualifier"], [2738, 2740, "member"], [2738, 2741, "arguments"], [2741, 2742, "operandl"], [2742, 2743, "member"], [2741, 2744, "operator"], [2741, 2745, "operandr"], [2745, 2746, "value"], [2733, 2747, "statements"], [2747, 2748, "expression"], [2748, 2749, "member"], [2748, 2750, "arguments"], [2750, 2751, "value"], [2733, 2752, "statements"], [2752, 2753, "expression"], [2753, 2754, "member"], [2753, 2755, "arguments"], [2755, 2756, "member"], [2733, 2757, "statements"], [2757, 2758, "expression"], [2758, 2759, "member"], [2758, 2760, "arguments"], [2760, 2761, "member"], [2733, 2762, "statements"], [222, 2763, "cases"], [2763, 2764, "case"], [2764, 2765, "qualifier"], [2764, 2766, "member"], [2763, 2767, "statements"], [2767, 2768, "expression"], [2768, 2769, "qualifier"], [2768, 2770, "member"], [2768, 2771, "arguments"], [2771, 2772, "operandl"], [2772, 2773, "member"], [2771, 2774, "operator"], [2771, 2775, "operandr"], [2775, 2776, "value"], [2763, 2777, "statements"], [2777, 2778, "expression"], [2778, 2779, "member"], [2778, 2780, "arguments"], [2780, 2781, "value"], [2763, 2782, "statements"], [2782, 2783, "expression"], [2783, 2784, "member"], [2783, 2785, "arguments"], [2785, 2786, "member"], [2763, 2787, "statements"], [222, 2788, "cases"], [2788, 2789, "case"], [2789, 2790, "qualifier"], [2789, 2791, "member"], [2788, 2792, "statements"], [2792, 2793, "expression"], [2793, 2794, "qualifier"], [2793, 2795, "member"], [2793, 2796, "arguments"], [2796, 2797, "operandl"], [2797, 2798, "member"], [2796, 2799, "operator"], [2796, 2800, "operandr"], [2800, 2801, "value"], [2788, 2802, "statements"], [2802, 2803, "condition"], [2803, 2804, "prefix_operators"], [2803, 2805, "qualifier"], [2803, 2806, "member"], [2802, 2807, "then_statement"], [2807, 2808, "statements"], [2808, 2809, "expression"], [2809, 2810, "type"], [2810, 2811, "name"], [2809, 2812, "arguments"], [2812, 2813, "value"], [2788, 2814, "statements"], [2814, 2815, "expression"], [2815, 2816, "member"], [2815, 2817, "arguments"], [2817, 2818, "member"], [2788, 2819, "statements"], [2819, 2820, "expression"], [2820, 2821, "member"], [2820, 2822, "arguments"], [2822, 2823, "value"], [2788, 2824, "statements"], [2824, 2825, "expression"], [2825, 2826, "member"], [2825, 2827, "arguments"], [2827, 2828, "member"], [2825, 2829, "arguments"], [2829, 2830, "member"], [2829, 2831, "arguments"], [2831, 2832, "member"], [2825, 2833, "arguments"], [2833, 2834, "value"], [2788, 2835, "statements"], [222, 2836, "cases"], [2836, 2837, "case"], [2837, 2838, "qualifier"], [2837, 2839, "member"], [2836, 2840, "statements"], [2840, 2841, "expression"], [2841, 2842, "member"], [2841, 2843, "arguments"], [2843, 2844, "value"], [2836, 2845, "statements"], [2845, 2846, "expression"], [2846, 2847, "member"], [2846, 2848, "arguments"], [2848, 2849, "member"], [2836, 2850, "statements"], [2850, 2851, "expression"], [2851, 2852, "member"], [2851, 2853, "arguments"], [2853, 2854, "value"], [2836, 2855, "statements"], [222, 2856, "cases"], [2856, 2857, "statements"], [2857, 2858, "expression"], [2858, 2859, "type"], [2859, 2860, "name"], [2858, 2861, "arguments"], [2861, 2862, "operandl"], [2862, 2863, "operandl"], [2863, 2864, "operandl"], [2864, 2865, "value"], [2863, 2866, "operator"], [2863, 2867, "operandr"], [2867, 2868, "member"], [2862, 2869, "operator"], [2862, 2870, "operandr"], [2870, 2871, "value"], [2861, 2872, "operator"], [2861, 2873, "operandr"], [2873, 2874, "qualifier"], [2873, 2875, "member"], [0, 2876, "body"], [2876, 2877, "expression"], [2877, 2878, "qualifier"], [2877, 2879, "member"], [2877, 2880, "arguments"], [2880, 2881, "member"]], "rem_roots": [792], "add_roots": []}, {"id": 24, "mappings": {"fnType": "VAR_1", "constructor": "VAR_2", "type": "VAR_3", "n": "VAR_4", "t": "VAR_5", "NOT_A_CONSTRUCTOR": "VAR_6", "JSType": "TYPE_1", "NodeTraversal": "TYPE_2", "Node": "TYPE_3", "FunctionType": "TYPE_4", "ensureTyped": "METHOD_1", "isUnknownType": "METHOD_2", "visitNew": "METHOD_3", "restrictByNotNullOrUndefined": "METHOD_4", "isEmptyType": "METHOD_5", "toMaybeFunctionType": "METHOD_6", "getJSType": "METHOD_7", "visitParameterList": "METHOD_8", "isConstructor": "METHOD_9", "report": "METHOD_10", "getFirstChild": "METHOD_11", "getInstanceType": "METHOD_12"}, "nodes": ["MethodDeclaration", "private", "void", "visitNew", "FormalParameter", "ReferenceType", "NodeTraversal", "t", "FormalParameter", "ReferenceType", "Node", "n", "LocalVariableDeclaration", "ReferenceType", "Node", "VariableDeclarator", "constructor", "MethodInvocation", "n", "getFirstChild", "LocalVariableDeclaration", "ReferenceType", "JSType", "VariableDeclarator", "type", "MethodInvocation", "getJSType", "MemberReference", "constructor", "MethodInvocation", "restrictByNotNullOrUndefined", "IfStatement", "BinaryOperation", "BinaryOperation", "MethodInvocation", "type", "isConstructor", "||", "MethodInvocation", "type", "isEmptyType", "||", "MethodInvocation", "type", "isUnknownType", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "FunctionType", "VariableDeclarator", "fnType", "MethodInvocation", "type", "toMaybeFunctionType", "IfStatement", "BinaryOperation", "MemberReference", "fnType", "!=", "Literal", "null", "BlockStatement", "StatementExpression", "MethodInvocation", "visitParameterList", "MemberReference", "t", "MemberReference", "n", "MemberReference", "fnType", "StatementExpression", "MethodInvocation", "ensureTyped", "MemberReference", "t", "MemberReference", "n", "MethodInvocation", "fnType", "getInstanceType", "BlockStatement", "StatementExpression", "MethodInvocation", "ensureTyped", "MemberReference", "t", "MemberReference", "n", "BlockStatement", "StatementExpression", "MethodInvocation", "report", "MemberReference", "t", "MemberReference", "n", "MemberReference", "NOT_A_CONSTRUCTOR", "StatementExpression", "MethodInvocation", "ensureTyped", "MemberReference", "t", "MemberReference", "n"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [0, 3, "name"], [0, 4, "parameters"], [4, 5, "type"], [5, 6, "name"], [4, 7, "name"], [0, 8, "parameters"], [8, 9, "type"], [9, 10, "name"], [8, 11, "name"], [0, 12, "body"], [12, 13, "type"], [13, 14, "name"], [12, 15, "declarators"], [15, 16, "name"], [15, 17, "initializer"], [17, 18, "qualifier"], [17, 19, "member"], [0, 20, "body"], [20, 21, "type"], [21, 22, "name"], [20, 23, "declarators"], [23, 24, "name"], [23, 25, "initializer"], [25, 26, "member"], [25, 27, "arguments"], [27, 28, "member"], [25, 29, "selectors"], [29, 30, "member"], [0, 31, "body"], [31, 32, "condition"], [32, 33, "operandl"], [33, 34, "operandl"], [34, 35, "qualifier"], [34, 36, "member"], [33, 37, "operator"], [33, 38, "operandr"], [38, 39, "qualifier"], [38, 40, "member"], [32, 41, "operator"], [32, 42, "operandr"], [42, 43, "qualifier"], [42, 44, "member"], [31, 45, "then_statement"], [45, 46, "statements"], [46, 47, "type"], [47, 48, "name"], [46, 49, "declarators"], [49, 50, "name"], [49, 51, "initializer"], [51, 52, "qualifier"], [51, 53, "member"], [45, 54, "statements"], [54, 55, "condition"], [55, 56, "operandl"], [56, 57, "member"], [55, 58, "operator"], [55, 59, "operandr"], [59, 60, "value"], [54, 61, "then_statement"], [61, 62, "statements"], [62, 63, "expression"], [63, 64, "member"], [63, 65, "arguments"], [65, 66, "member"], [63, 67, "arguments"], [67, 68, "member"], [63, 69, "arguments"], [69, 70, "member"], [61, 71, "statements"], [71, 72, "expression"], [72, 73, "member"], [72, 74, "arguments"], [74, 75, "member"], [72, 76, "arguments"], [76, 77, "member"], [72, 78, "arguments"], [78, 79, "qualifier"], [78, 80, "member"], [54, 81, "else_statement"], [81, 82, "statements"], [82, 83, "expression"], [83, 84, "member"], [83, 85, "arguments"], [85, 86, "member"], [83, 87, "arguments"], [87, 88, "member"], [31, 89, "else_statement"], [89, 90, "statements"], [90, 91, "expression"], [91, 92, "member"], [91, 93, "arguments"], [93, 94, "member"], [91, 95, "arguments"], [95, 96, "member"], [91, 97, "arguments"], [97, 98, "member"], [89, 99, "statements"], [99, 100, "expression"], [100, 101, "member"], [100, 102, "arguments"], [102, 103, "member"], [100, 104, "arguments"], [104, 105, "member"]], "rem_roots": [55], "add_roots": []}, {"id": 25, "mappings": {"exitType": "VAR_1", "finallyBlock": "VAR_2", "elseBlock": "VAR_3", "tryBlock": "VAR_4", "labelName": "VAR_5", "compiler": "VAR_6", "falseBlock": "VAR_7", "ifBlock": "VAR_8", "c": "VAR_9", "ifTree": "VAR_10", "labelBlock": "VAR_11", "n": "VAR_12", "trueBlock": "VAR_13", "allCatchNodes": "VAR_14", "catchNode": "VAR_15", "catchCodeBlock": "VAR_16", "Node": "TYPE_1", "String": "TYPE_2", "NodeUtil": "TYPE_3", "Preconditions": "TYPE_4", "hasFinally": "METHOD_1", "isBlock": "METHOD_2", "removeChild": "METHOD_3", "tryMinimizeIfBlockExits": "METHOD_4", "isTry": "METHOD_5", "hasOneChild": "METHOD_6", "children": "METHOD_7", "isIf": "METHOD_8", "matchingExitNode": "METHOD_9", "reportCodeChange": "METHOD_10", "checkState": "METHOD_11", "getFirstChild": "METHOD_12", "getParent": "METHOD_13", "isLabel": "METHOD_14", "hasCatchHandler": "METHOD_15", "getNext": "METHOD_16", "getLastChild": "METHOD_17", "getCatchBlock": "METHOD_18", "tryMinimizeExits": "METHOD_19"}, "nodes": ["MethodDeclaration", "void", "tryMinimizeExits", "FormalParameter", "ReferenceType", "Node", "n", "FormalParameter", "BasicType", "int", "exitType", "FormalParameter", "ReferenceType", "String", "labelName", "IfStatement", "MethodInvocation", "matchingExitNode", "MemberReference", "n", "MemberReference", "exitType", "MemberReference", "labelName", "BlockStatement", "StatementExpression", "MethodInvocation", "NodeUtil", "removeChild", "MethodInvocation", "n", "getParent", "MemberReference", "n", "StatementExpression", "MethodInvocation", "compiler", "reportCodeChange", "ReturnStatement", "IfStatement", "MethodInvocation", "n", "isIf", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "Node", "VariableDeclarator", "ifBlock", "MethodInvocation", "n", "getFirstChild", "MethodInvocation", "getNext", "StatementExpression", "MethodInvocation", "tryMinimizeExits", "MemberReference", "ifBlock", "MemberReference", "exitType", "MemberReference", "labelName", "LocalVariableDeclaration", "ReferenceType", "Node", "VariableDeclarator", "elseBlock", "MethodInvocation", "ifBlock", "getNext", "IfStatement", "BinaryOperation", "MemberReference", "elseBlock", "!=", "Literal", "null", "BlockStatement", "StatementExpression", "MethodInvocation", "tryMinimizeExits", "MemberReference", "elseBlock", "MemberReference", "exitType", "MemberReference", "labelName", "ReturnStatement", "IfStatement", "MethodInvocation", "n", "isTry", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "Node", "VariableDeclarator", "tryBlock", "MethodInvocation", "n", "getFirstChild", "StatementExpression", "MethodInvocation", "tryMinimizeExits", "MemberReference", "tryBlock", "MemberReference", "exitType", "MemberReference", "labelName", "LocalVariableDeclaration", "ReferenceType", "Node", "VariableDeclarator", "allCatchNodes", "MethodInvocation", "NodeUtil", "getCatchBlock", "MemberReference", "n", "IfStatement", "MethodInvocation", "NodeUtil", "hasCatchHandler", "MemberReference", "allCatchNodes", "BlockStatement", "StatementExpression", "MethodInvocation", "Preconditions", "checkState", "MethodInvocation", "allCatchNodes", "hasOneChild", "LocalVariableDeclaration", "ReferenceType", "Node", "VariableDeclarator", "catchNode", "MethodInvocation", "allCatchNodes", "getFirstChild", "LocalVariableDeclaration", "ReferenceType", "Node", "VariableDeclarator", "catchCodeBlock", "MethodInvocation", "catchNode", "getLastChild", "StatementExpression", "MethodInvocation", "tryMinimizeExits", "MemberReference", "catchCodeBlock", "MemberReference", "exitType", "MemberReference", "labelName", "IfStatement", "MethodInvocation", "NodeUtil", "hasFinally", "MemberReference", "n", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "Node", "VariableDeclarator", "finallyBlock", "MethodInvocation", "n", "getLastChild", "StatementExpression", "MethodInvocation", "tryMinimizeExits", "MemberReference", "finallyBlock", "MemberReference", "exitType", "MemberReference", "labelName", "IfStatement", "MethodInvocation", "n", "isLabel", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "Node", "VariableDeclarator", "labelBlock", "MethodInvocation", "n", "getLastChild", "StatementExpression", "MethodInvocation", "tryMinimizeExits", "MemberReference", "labelBlock", "MemberReference", "exitType", "MemberReference", "labelName", "IfStatement", "BinaryOperation", "MethodInvocation", "!", "n", "isBlock", "||", "BinaryOperation", "MethodInvocation", "n", "getLastChild", "==", "Literal", "null", "BlockStatement", "ReturnStatement", "ForStatement", "EnhancedForControl", "VariableDeclaration", "ReferenceType", "Node", "VariableDeclarator", "c", "MethodInvocation", "n", "children", "BlockStatement", "IfStatement", "MethodInvocation", "c", "isIf", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "Node", "VariableDeclarator", "ifTree", "MemberReference", "c", "LocalVariableDeclaration", "ReferenceType", "Node", "VariableDeclarator", "trueBlock", "VariableDeclarator", "falseBlock", "StatementExpression", "Assignment", "MemberReference", "trueBlock", "=", "MethodInvocation", "ifTree", "getFirstChild", "MethodInvocation", "getNext", "StatementExpression", "Assignment", "MemberReference", "falseBlock", "=", "MethodInvocation", "trueBlock", "getNext", "StatementExpression", "MethodInvocation", "tryMinimizeIfBlockExits", "MemberReference", "trueBlock", "MemberReference", "falseBlock", "MemberReference", "ifTree", "MemberReference", "exitType", "MemberReference", "labelName", "StatementExpression", "Assignment", "MemberReference", "trueBlock", "=", "MethodInvocation", "ifTree", "getFirstChild", "MethodInvocation", "getNext", "StatementExpression", "Assignment", "MemberReference", "falseBlock", "=", "MethodInvocation", "trueBlock", "getNext", "IfStatement", "BinaryOperation", "MemberReference", "falseBlock", "!=", "Literal", "null", "BlockStatement", "StatementExpression", "MethodInvocation", "tryMinimizeIfBlockExits", "MemberReference", "falseBlock", "MemberReference", "trueBlock", "MemberReference", "ifTree", "MemberReference", "exitType", "MemberReference", "labelName", "IfStatement", "BinaryOperation", "MemberReference", "c", "==", "MethodInvocation", "n", "getLastChild", "BlockStatement", "BreakStatement", "ForStatement", "ForControl", "VariableDeclaration", "ReferenceType", "Node", "VariableDeclarator", "c", "MethodInvocation", "n", "getLastChild", "BinaryOperation", "MemberReference", "c", "!=", "Literal", "null", "Assignment", "MemberReference", "c", "=", "MethodInvocation", "n", "getLastChild", "BlockStatement", "StatementExpression", "MethodInvocation", "tryMinimizeExits", "MemberReference", "c", "MemberReference", "exitType", "MemberReference", "labelName", "IfStatement", "BinaryOperation", "MemberReference", "c", "==", "MethodInvocation", "n", "getLastChild", "BlockStatement", "BreakStatement"], "edges": [[0, 1, "return_type"], [0, 2, "name"], [0, 3, "parameters"], [3, 4, "type"], [4, 5, "name"], [3, 6, "name"], [0, 7, "parameters"], [7, 8, "type"], [8, 9, "name"], [7, 10, "name"], [0, 11, "parameters"], [11, 12, "type"], [12, 13, "name"], [11, 14, "name"], [0, 15, "body"], [15, 16, "condition"], [16, 17, "member"], [16, 18, "arguments"], [18, 19, "member"], [16, 20, "arguments"], [20, 21, "member"], [16, 22, "arguments"], [22, 23, "member"], [15, 24, "then_statement"], [24, 25, "statements"], [25, 26, "expression"], [26, 27, "qualifier"], [26, 28, "member"], [26, 29, "arguments"], [29, 30, "qualifier"], [29, 31, "member"], [26, 32, "arguments"], [32, 33, "member"], [24, 34, "statements"], [34, 35, "expression"], [35, 36, "qualifier"], [35, 37, "member"], [24, 38, "statements"], [0, 39, "body"], [39, 40, "condition"], [40, 41, "qualifier"], [40, 42, "member"], [39, 43, "then_statement"], [43, 44, "statements"], [44, 45, "type"], [45, 46, "name"], [44, 47, "declarators"], [47, 48, "name"], [47, 49, "initializer"], [49, 50, "qualifier"], [49, 51, "member"], [49, 52, "selectors"], [52, 53, "member"], [43, 54, "statements"], [54, 55, "expression"], [55, 56, "member"], [55, 57, "arguments"], [57, 58, "member"], [55, 59, "arguments"], [59, 60, "member"], [55, 61, "arguments"], [61, 62, "member"], [43, 63, "statements"], [63, 64, "type"], [64, 65, "name"], [63, 66, "declarators"], [66, 67, "name"], [66, 68, "initializer"], [68, 69, "qualifier"], [68, 70, "member"], [43, 71, "statements"], [71, 72, "condition"], [72, 73, "operandl"], [73, 74, "member"], [72, 75, "operator"], [72, 76, "operandr"], [76, 77, "value"], [71, 78, "then_statement"], [78, 79, "statements"], [79, 80, "expression"], [80, 81, "member"], [80, 82, "arguments"], [82, 83, "member"], [80, 84, "arguments"], [84, 85, "member"], [80, 86, "arguments"], [86, 87, "member"], [43, 88, "statements"], [0, 89, "body"], [89, 90, "condition"], [90, 91, "qualifier"], [90, 92, "member"], [89, 93, "then_statement"], [93, 94, "statements"], [94, 95, "type"], [95, 96, "name"], [94, 97, "declarators"], [97, 98, "name"], [97, 99, "initializer"], [99, 100, "qualifier"], [99, 101, "member"], [93, 102, "statements"], [102, 103, "expression"], [103, 104, "member"], [103, 105, "arguments"], [105, 106, "member"], [103, 107, "arguments"], [107, 108, "member"], [103, 109, "arguments"], [109, 110, "member"], [93, 111, "statements"], [111, 112, "type"], [112, 113, "name"], [111, 114, "declarators"], [114, 115, "name"], [114, 116, "initializer"], [116, 117, "qualifier"], [116, 118, "member"], [116, 119, "arguments"], [119, 120, "member"], [93, 121, "statements"], [121, 122, "condition"], [122, 123, "qualifier"], [122, 124, "member"], [122, 125, "arguments"], [125, 126, "member"], [121, 127, "then_statement"], [127, 128, "statements"], [128, 129, "expression"], [129, 130, "qualifier"], [129, 131, "member"], [129, 132, "arguments"], [132, 133, "qualifier"], [132, 134, "member"], [127, 135, "statements"], [135, 136, "type"], [136, 137, "name"], [135, 138, "declarators"], [138, 139, "name"], [138, 140, "initializer"], [140, 141, "qualifier"], [140, 142, "member"], [127, 143, "statements"], [143, 144, "type"], [144, 145, "name"], [143, 146, "declarators"], [146, 147, "name"], [146, 148, "initializer"], [148, 149, "qualifier"], [148, 150, "member"], [127, 151, "statements"], [151, 152, "expression"], [152, 153, "member"], [152, 154, "arguments"], [154, 155, "member"], [152, 156, "arguments"], [156, 157, "member"], [152, 158, "arguments"], [158, 159, "member"], [93, 160, "statements"], [160, 161, "condition"], [161, 162, "qualifier"], [161, 163, "member"], [161, 164, "arguments"], [164, 165, "member"], [160, 166, "then_statement"], [166, 167, "statements"], [167, 168, "type"], [168, 169, "name"], [167, 170, "declarators"], [170, 171, "name"], [170, 172, "initializer"], [172, 173, "qualifier"], [172, 174, "member"], [166, 175, "statements"], [175, 176, "expression"], [176, 177, "member"], [176, 178, "arguments"], [178, 179, "member"], [176, 180, "arguments"], [180, 181, "member"], [176, 182, "arguments"], [182, 183, "member"], [0, 184, "body"], [184, 185, "condition"], [185, 186, "qualifier"], [185, 187, "member"], [184, 188, "then_statement"], [188, 189, "statements"], [189, 190, "type"], [190, 191, "name"], [189, 192, "declarators"], [192, 193, "name"], [192, 194, "initializer"], [194, 195, "qualifier"], [194, 196, "member"], [188, 197, "statements"], [197, 198, "expression"], [198, 199, "member"], [198, 200, "arguments"], [200, 201, "member"], [198, 202, "arguments"], [202, 203, "member"], [198, 204, "arguments"], [204, 205, "member"], [0, 206, "body"], [206, 207, "condition"], [207, 208, "operandl"], [208, 209, "prefix_operators"], [208, 210, "qualifier"], [208, 211, "member"], [207, 212, "operator"], [207, 213, "operandr"], [213, 214, "operandl"], [214, 215, "qualifier"], [214, 216, "member"], [213, 217, "operator"], [213, 218, "operandr"], [218, 219, "value"], [206, 220, "then_statement"], [220, 221, "statements"], [0, 222, "body"], [222, 223, "control"], [223, 224, "var"], [224, 225, "type"], [225, 226, "name"], [224, 227, "declarators"], [227, 228, "name"], [223, 229, "iterable"], [229, 230, "qualifier"], [229, 231, "member"], [222, 232, "body"], [232, 233, "statements"], [233, 234, "condition"], [234, 235, "qualifier"], [234, 236, "member"], [233, 237, "then_statement"], [237, 238, "statements"], [238, 239, "type"], [239, 240, "name"], [238, 241, "declarators"], [241, 242, "name"], [241, 243, "initializer"], [243, 244, "member"], [237, 245, "statements"], [245, 246, "type"], [246, 247, "name"], [245, 248, "declarators"], [248, 249, "name"], [245, 250, "declarators"], [250, 251, "name"], [237, 252, "statements"], [252, 253, "expression"], [253, 254, "expressionl"], [254, 255, "member"], [253, 256, "type"], [253, 257, "value"], [257, 258, "qualifier"], [257, 259, "member"], [257, 260, "selectors"], [260, 261, "member"], [237, 262, "statements"], [262, 263, "expression"], [263, 264, "expressionl"], [264, 265, "member"], [263, 266, "type"], [263, 267, "value"], [267, 268, "qualifier"], [267, 269, "member"], [237, 270, "statements"], [270, 271, "expression"], [271, 272, "member"], [271, 273, "arguments"], [273, 274, "member"], [271, 275, "arguments"], [275, 276, "member"], [271, 277, "arguments"], [277, 278, "member"], [271, 279, "arguments"], [279, 280, "member"], [271, 281, "arguments"], [281, 282, "member"], [237, 283, "statements"], [283, 284, "expression"], [284, 285, "expressionl"], [285, 286, "member"], [284, 287, "type"], [284, 288, "value"], [288, 289, "qualifier"], [288, 290, "member"], [288, 291, "selectors"], [291, 292, "member"], [237, 293, "statements"], [293, 294, "expression"], [294, 295, "expressionl"], [295, 296, "member"], [294, 297, "type"], [294, 298, "value"], [298, 299, "qualifier"], [298, 300, "member"], [237, 301, "statements"], [301, 302, "condition"], [302, 303, "operandl"], [303, 304, "member"], [302, 305, "operator"], [302, 306, "operandr"], [306, 307, "value"], [301, 308, "then_statement"], [308, 309, "statements"], [309, 310, "expression"], [310, 311, "member"], [310, 312, "arguments"], [312, 313, "member"], [310, 314, "arguments"], [314, 315, "member"], [310, 316, "arguments"], [316, 317, "member"], [310, 318, "arguments"], [318, 319, "member"], [310, 320, "arguments"], [320, 321, "member"], [232, 322, "statements"], [322, 323, "condition"], [323, 324, "operandl"], [324, 325, "member"], [323, 326, "operator"], [323, 327, "operandr"], [327, 328, "qualifier"], [327, 329, "member"], [322, 330, "then_statement"], [330, 331, "statements"], [0, 332, "body"], [332, 333, "control"], [333, 334, "init"], [334, 335, "type"], [335, 336, "name"], [334, 337, "declarators"], [337, 338, "name"], [337, 339, "initializer"], [339, 340, "qualifier"], [339, 341, "member"], [333, 342, "condition"], [342, 343, "operandl"], [343, 344, "member"], [342, 345, "operator"], [342, 346, "operandr"], [346, 347, "value"], [333, 348, "update"], [348, 349, "expressionl"], [349, 350, "member"], [348, 351, "type"], [348, 352, "value"], [352, 353, "qualifier"], [352, 354, "member"], [332, 355, "body"], [355, 356, "statements"], [356, 357, "expression"], [357, 358, "member"], [357, 359, "arguments"], [359, 360, "member"], [357, 361, "arguments"], [361, 362, "member"], [357, 363, "arguments"], [363, 364, "member"], [355, 365, "statements"], [365, 366, "condition"], [366, 367, "operandl"], [367, 368, "member"], [366, 369, "operator"], [366, 370, "operandr"], [370, 371, "qualifier"], [370, 372, "member"], [365, 373, "then_statement"], [373, 374, "statements"]], "rem_roots": [160], "add_roots": []}, {"id": 26, "mappings": {"cfa.finallyMap": "VAR_1", "fromNode": "VAR_2", "parent": "VAR_3", "Token": "VAR_4", "DO": "VAR_5", "nextSibling": "VAR_6", "UNCOND": "VAR_7", "Branch": "VAR_8", "root": "VAR_9", "finallyNode": "VAR_10", "DEFAULT_CASE": "VAR_11", "TRY": "VAR_12", "IF": "VAR_13", "cfa": "VAR_14", "FOR": "VAR_15", "CASE": "VAR_16", "node": "VAR_17", "WHILE": "VAR_18", "Node": "TYPE_1", "NodeUtil": "TYPE_2", "ControlFlowAnalysis": "TYPE_3", "Preconditions": "TYPE_4", "hasFinally": "METHOD_1", "createEdge": "METHOD_2", "computeFollowNode": "METHOD_3", "get": "METHOD_4", "checkState": "METHOD_5", "getFirstChild": "METHOD_6", "isCase": "METHOD_7", "getParent": "METHOD_8", "isFunction": "METHOD_9", "computeFallThrough": "METHOD_10", "isDefaultCase": "METHOD_11", "getNext": "METHOD_12", "getLastChild": "METHOD_13", "getType": "METHOD_14", "getCatchBlock": "METHOD_15", "isForIn": "METHOD_16", "\"Not reachable\"": "STRING_1"}, "nodes": ["MethodDeclaration", "static private", "ReferenceType", "Node", "computeFollowNode", "FormalParameter", "ReferenceType", "Node", "fromNode", "FormalParameter", "ReferenceType", "Node", "node", "FormalParameter", "ReferenceType", "ControlFlowAnalysis", "cfa", "LocalVariableDeclaration", "ReferenceType", "Node", "VariableDeclarator", "parent", "MethodInvocation", "node", "getParent", "IfStatement", "BinaryOperation", "BinaryOperation", "BinaryOperation", "MemberReference", "parent", "==", "Literal", "null", "||", "MethodInvocation", "parent", "isFunction", "||", "BinaryOperation", "BinaryOperation", "MemberReference", "cfa", "!=", "Literal", "null", "&&", "BinaryOperation", "MemberReference", "node", "==", "MemberReference", "cfa", "root", "BlockStatement", "ReturnStatement", "Literal", "null", "SwitchStatement", "MethodInvocation", "parent", "getType", "SwitchStatementCase", "MemberReference", "Token", "IF", "ReturnStatement", "MethodInvocation", "computeFollowNode", "MemberReference", "fromNode", "MemberReference", "parent", "MemberReference", "cfa", "SwitchStatementCase", "MemberReference", "Token", "CASE", "MemberReference", "Token", "DEFAULT_CASE", "IfStatement", "BinaryOperation", "MethodInvocation", "parent", "getNext", "!=", "Literal", "null", "BlockStatement", "IfStatement", "MethodInvocation", "parent", "getNext", "MethodInvocation", "isCase", "BlockStatement", "ReturnStatement", "MethodInvocation", "parent", "getNext", "MethodInvocation", "getFirstChild", "MethodInvocation", "getNext", "IfStatement", "MethodInvocation", "parent", "getNext", "MethodInvocation", "isDefaultCase", "BlockStatement", "ReturnStatement", "MethodInvocation", "parent", "getNext", "MethodInvocation", "getFirstChild", "BlockStatement", "StatementExpression", "MethodInvocation", "Preconditions", "checkState", "Literal", "false", "Literal", "\"Not reachable\"", "BlockStatement", "ReturnStatement", "MethodInvocation", "computeFollowNode", "MemberReference", "fromNode", "MemberReference", "parent", "MemberReference", "cfa", "BreakStatement", "SwitchStatementCase", "MemberReference", "Token", "FOR", "IfStatement", "MethodInvocation", "NodeUtil", "isForIn", "MemberReference", "parent", "BlockStatement", "ReturnStatement", "MemberReference", "parent", "BlockStatement", "ReturnStatement", "MethodInvocation", "parent", "getFirstChild", "MethodInvocation", "getNext", "MethodInvocation", "getNext", "SwitchStatementCase", "MemberReference", "Token", "WHILE", "MemberReference", "Token", "DO", "ReturnStatement", "MemberReference", "parent", "SwitchStatementCase", "MemberReference", "Token", "TRY", "IfStatement", "BinaryOperation", "MethodInvocation", "parent", "getFirstChild", "==", "MemberReference", "node", "BlockStatement", "IfStatement", "MethodInvocation", "NodeUtil", "hasFinally", "MemberReference", "parent", "BlockStatement", "ReturnStatement", "MethodInvocation", "computeFallThrough", "MethodInvocation", "parent", "getLastChild", "BlockStatement", "ReturnStatement", "MethodInvocation", "computeFollowNode", "MemberReference", "fromNode", "MemberReference", "parent", "MemberReference", "cfa", "IfStatement", "BinaryOperation", "MethodInvocation", "NodeUtil", "getCatchBlock", "MemberReference", "parent", "==", "MemberReference", "node", "BlockStatement", "IfStatement", "MethodInvocation", "NodeUtil", "hasFinally", "MemberReference", "parent", "BlockStatement", "ReturnStatement", "MethodInvocation", "computeFallThrough", "MethodInvocation", "node", "getNext", "BlockStatement", "ReturnStatement", "MethodInvocation", "computeFollowNode", "MemberReference", "fromNode", "MemberReference", "parent", "MemberReference", "cfa", "IfStatement", "BinaryOperation", "MethodInvocation", "parent", "getLastChild", "==", "MemberReference", "node", "BlockStatement", "IfStatement", "BinaryOperation", "MemberReference", "cfa", "!=", "Literal", "null", "BlockStatement", "ForStatement", "EnhancedForControl", "VariableDeclaration", "ReferenceType", "Node", "VariableDeclarator", "finallyNode", "MethodInvocation", "cfa.finallyMap", "get", "MemberReference", "parent", "BlockStatement", "StatementExpression", "MethodInvocation", "cfa", "createEdge", "MemberReference", "fromNode", "MemberReference", "Branch", "UNCOND", "MemberReference", "finallyNode", "ReturnStatement", "MethodInvocation", "computeFollowNode", "MemberReference", "fromNode", "MemberReference", "parent", "MemberReference", "cfa", "LocalVariableDeclaration", "ReferenceType", "Node", "VariableDeclarator", "nextSibling", "MethodInvocation", "node", "getNext", "WhileStatement", "BinaryOperation", "BinaryOperation", "MemberReference", "nextSibling", "!=", "Literal", "null", "&&", "MethodInvocation", "nextSibling", "isFunction", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "nextSibling", "=", "MethodInvocation", "nextSibling", "getNext", "IfStatement", "BinaryOperation", "MemberReference", "nextSibling", "!=", "Literal", "null", "BlockStatement", "ReturnStatement", "MethodInvocation", "computeFallThrough", "MemberReference", "nextSibling", "BlockStatement", "ReturnStatement", "MethodInvocation", "computeFollowNode", "MemberReference", "fromNode", "MemberReference", "parent", "MemberReference", "cfa"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [5, 8, "name"], [0, 9, "parameters"], [9, 10, "type"], [10, 11, "name"], [9, 12, "name"], [0, 13, "parameters"], [13, 14, "type"], [14, 15, "name"], [13, 16, "name"], [0, 17, "body"], [17, 18, "type"], [18, 19, "name"], [17, 20, "declarators"], [20, 21, "name"], [20, 22, "initializer"], [22, 23, "qualifier"], [22, 24, "member"], [0, 25, "body"], [25, 26, "condition"], [26, 27, "operandl"], [27, 28, "operandl"], [28, 29, "operandl"], [29, 30, "member"], [28, 31, "operator"], [28, 32, "operandr"], [32, 33, "value"], [27, 34, "operator"], [27, 35, "operandr"], [35, 36, "qualifier"], [35, 37, "member"], [26, 38, "operator"], [26, 39, "operandr"], [39, 40, "operandl"], [40, 41, "operandl"], [41, 42, "member"], [40, 43, "operator"], [40, 44, "operandr"], [44, 45, "value"], [39, 46, "operator"], [39, 47, "operandr"], [47, 48, "operandl"], [48, 49, "member"], [47, 50, "operator"], [47, 51, "operandr"], [51, 52, "qualifier"], [51, 53, "member"], [25, 54, "then_statement"], [54, 55, "statements"], [55, 56, "expression"], [56, 57, "value"], [0, 58, "body"], [58, 59, "expression"], [59, 60, "qualifier"], [59, 61, "member"], [58, 62, "cases"], [62, 63, "case"], [63, 64, "qualifier"], [63, 65, "member"], [62, 66, "statements"], [66, 67, "expression"], [67, 68, "member"], [67, 69, "arguments"], [69, 70, "member"], [67, 71, "arguments"], [71, 72, "member"], [67, 73, "arguments"], [73, 74, "member"], [58, 75, "cases"], [75, 76, "case"], [76, 77, "qualifier"], [76, 78, "member"], [75, 79, "case"], [79, 80, "qualifier"], [79, 81, "member"], [75, 82, "statements"], [82, 83, "condition"], [83, 84, "operandl"], [84, 85, "qualifier"], [84, 86, "member"], [83, 87, "operator"], [83, 88, "operandr"], [88, 89, "value"], [82, 90, "then_statement"], [90, 91, "statements"], [91, 92, "condition"], [92, 93, "qualifier"], [92, 94, "member"], [92, 95, "selectors"], [95, 96, "member"], [91, 97, "then_statement"], [97, 98, "statements"], [98, 99, "expression"], [99, 100, "qualifier"], [99, 101, "member"], [99, 102, "selectors"], [102, 103, "member"], [99, 104, "selectors"], [104, 105, "member"], [91, 106, "else_statement"], [106, 107, "condition"], [107, 108, "qualifier"], [107, 109, "member"], [107, 110, "selectors"], [110, 111, "member"], [106, 112, "then_statement"], [112, 113, "statements"], [113, 114, "expression"], [114, 115, "qualifier"], [114, 116, "member"], [114, 117, "selectors"], [117, 118, "member"], [106, 119, "else_statement"], [119, 120, "statements"], [120, 121, "expression"], [121, 122, "qualifier"], [121, 123, "member"], [121, 124, "arguments"], [124, 125, "value"], [121, 126, "arguments"], [126, 127, "value"], [82, 128, "else_statement"], [128, 129, "statements"], [129, 130, "expression"], [130, 131, "member"], [130, 132, "arguments"], [132, 133, "member"], [130, 134, "arguments"], [134, 135, "member"], [130, 136, "arguments"], [136, 137, "member"], [75, 138, "statements"], [58, 139, "cases"], [139, 140, "case"], [140, 141, "qualifier"], [140, 142, "member"], [139, 143, "statements"], [143, 144, "condition"], [144, 145, "qualifier"], [144, 146, "member"], [144, 147, "arguments"], [147, 148, "member"], [143, 149, "then_statement"], [149, 150, "statements"], [150, 151, "expression"], [151, 152, "member"], [143, 153, "else_statement"], [153, 154, "statements"], [154, 155, "expression"], [155, 156, "qualifier"], [155, 157, "member"], [155, 158, "selectors"], [158, 159, "member"], [155, 160, "selectors"], [160, 161, "member"], [58, 162, "cases"], [162, 163, "case"], [163, 164, "qualifier"], [163, 165, "member"], [162, 166, "case"], [166, 167, "qualifier"], [166, 168, "member"], [162, 169, "statements"], [169, 170, "expression"], [170, 171, "member"], [58, 172, "cases"], [172, 173, "case"], [173, 174, "qualifier"], [173, 175, "member"], [172, 176, "statements"], [176, 177, "condition"], [177, 178, "operandl"], [178, 179, "qualifier"], [178, 180, "member"], [177, 181, "operator"], [177, 182, "operandr"], [182, 183, "member"], [176, 184, "then_statement"], [184, 185, "statements"], [185, 186, "condition"], [186, 187, "qualifier"], [186, 188, "member"], [186, 189, "arguments"], [189, 190, "member"], [185, 191, "then_statement"], [191, 192, "statements"], [192, 193, "expression"], [193, 194, "member"], [193, 195, "arguments"], [195, 196, "qualifier"], [195, 197, "member"], [185, 198, "else_statement"], [198, 199, "statements"], [199, 200, "expression"], [200, 201, "member"], [200, 202, "arguments"], [202, 203, "member"], [200, 204, "arguments"], [204, 205, "member"], [200, 206, "arguments"], [206, 207, "member"], [176, 208, "else_statement"], [208, 209, "condition"], [209, 210, "operandl"], [210, 211, "qualifier"], [210, 212, "member"], [210, 213, "arguments"], [213, 214, "member"], [209, 215, "operator"], [209, 216, "operandr"], [216, 217, "member"], [208, 218, "then_statement"], [218, 219, "statements"], [219, 220, "condition"], [220, 221, "qualifier"], [220, 222, "member"], [220, 223, "arguments"], [223, 224, "member"], [219, 225, "then_statement"], [225, 226, "statements"], [226, 227, "expression"], [227, 228, "member"], [227, 229, "arguments"], [229, 230, "qualifier"], [229, 231, "member"], [219, 232, "else_statement"], [232, 233, "statements"], [233, 234, "expression"], [234, 235, "member"], [234, 236, "arguments"], [236, 237, "member"], [234, 238, "arguments"], [238, 239, "member"], [234, 240, "arguments"], [240, 241, "member"], [208, 242, "else_statement"], [242, 243, "condition"], [243, 244, "operandl"], [244, 245, "qualifier"], [244, 246, "member"], [243, 247, "operator"], [243, 248, "operandr"], [248, 249, "member"], [242, 250, "then_statement"], [250, 251, "statements"], [251, 252, "condition"], [252, 253, "operandl"], [253, 254, "member"], [252, 255, "operator"], [252, 256, "operandr"], [256, 257, "value"], [251, 258, "then_statement"], [258, 259, "statements"], [259, 260, "control"], [260, 261, "var"], [261, 262, "type"], [262, 263, "name"], [261, 264, "declarators"], [264, 265, "name"], [260, 266, "iterable"], [266, 267, "qualifier"], [266, 268, "member"], [266, 269, "arguments"], [269, 270, "member"], [259, 271, "body"], [271, 272, "statements"], [272, 273, "expression"], [273, 274, "qualifier"], [273, 275, "member"], [273, 276, "arguments"], [276, 277, "member"], [273, 278, "arguments"], [278, 279, "qualifier"], [278, 280, "member"], [273, 281, "arguments"], [281, 282, "member"], [250, 283, "statements"], [283, 284, "expression"], [284, 285, "member"], [284, 286, "arguments"], [286, 287, "member"], [284, 288, "arguments"], [288, 289, "member"], [284, 290, "arguments"], [290, 291, "member"], [0, 292, "body"], [292, 293, "type"], [293, 294, "name"], [292, 295, "declarators"], [295, 296, "name"], [295, 297, "initializer"], [297, 298, "qualifier"], [297, 299, "member"], [0, 300, "body"], [300, 301, "condition"], [301, 302, "operandl"], [302, 303, "operandl"], [303, 304, "member"], [302, 305, "operator"], [302, 306, "operandr"], [306, 307, "value"], [301, 308, "operator"], [301, 309, "operandr"], [309, 310, "qualifier"], [309, 311, "member"], [300, 312, "body"], [312, 313, "statements"], [313, 314, "expression"], [314, 315, "expressionl"], [315, 316, "member"], [314, 317, "type"], [314, 318, "value"], [318, 319, "qualifier"], [318, 320, "member"], [0, 321, "body"], [321, 322, "condition"], [322, 323, "operandl"], [323, 324, "member"], [322, 325, "operator"], [322, 326, "operandr"], [326, 327, "value"], [321, 328, "then_statement"], [328, 329, "statements"], [329, 330, "expression"], [330, 331, "member"], [330, 332, "arguments"], [332, 333, "member"], [321, 334, "else_statement"], [334, 335, "statements"], [335, 336, "expression"], [336, 337, "member"], [336, 338, "arguments"], [338, 339, "member"], [336, 340, "arguments"], [340, 341, "member"], [336, 342, "arguments"], [342, 343, "member"]], "rem_roots": [272], "add_roots": []}, {"id": 28, "mappings": {"parent": "VAR_1", "data": "VAR_2", "scope": "VAR_3", "var": "VAR_4", "ownerScope": "VAR_5", "n": "VAR_6", "t": "VAR_7", "name": "VAR_8", "Var": "TYPE_1", "Node": "TYPE_2", "String": "TYPE_3", "NodeUtil": "TYPE_4", "NodeTraversal": "TYPE_5", "Scope": "TYPE_6", "isReturn": "METHOD_1", "recordEscapedQualifiedName": "METHOD_2", "getScopeRoot": "METHOD_3", "isUnscopedQualifiedName": "METHOD_4", "recordAssignedName": "METHOD_5", "isLValue": "METHOD_6", "getQualifiedName": "METHOD_7", "get": "METHOD_8", "getFirstChild": "METHOD_9", "getScopeDepth": "METHOD_10", "getRootOfQualifiedName": "METHOD_11", "getRootNode": "METHOD_12", "recordNonEmptyReturn": "METHOD_13", "recordEscapedVarName": "METHOD_14", "getString": "METHOD_15", "inGlobalScope": "METHOD_16", "isLocal": "METHOD_17", "isName": "METHOD_18", "isBleedingFunctionName": "METHOD_19", "getVar": "METHOD_20", "isGetProp": "METHOD_21", "visit": "METHOD_22", "getScope": "METHOD_23", "2": "INT_1"}, "nodes": ["MethodDeclaration", "public", "void", "visit", "FormalParameter", "ReferenceType", "NodeTraversal", "t", "FormalParameter", "ReferenceType", "Node", "n", "FormalParameter", "ReferenceType", "Node", "parent", "IfStatement", "MethodInvocation", "t", "inGlobalScope", "BlockStatement", "ReturnStatement", "IfStatement", "BinaryOperation", "MethodInvocation", "n", "isReturn", "&&", "BinaryOperation", "MethodInvocation", "n", "getFirstChild", "!=", "Literal", "null", "BlockStatement", "StatementExpression", "MethodInvocation", "data", "get", "MethodInvocation", "t", "getScopeRoot", "MethodInvocation", "recordNonEmptyReturn", "IfStatement", "BinaryOperation", "MethodInvocation", "t", "getScopeDepth", "<=", "Literal", "2", "BlockStatement", "ReturnStatement", "IfStatement", "BinaryOperation", "BinaryOperation", "MethodInvocation", "n", "isName", "&&", "MethodInvocation", "NodeUtil", "isLValue", "MemberReference", "n", "&&", "MethodInvocation", "!", "NodeUtil", "isBleedingFunctionName", "MemberReference", "n", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "String", "VariableDeclarator", "name", "MethodInvocation", "n", "getString", "LocalVariableDeclaration", "ReferenceType", "Scope", "VariableDeclarator", "scope", "MethodInvocation", "t", "getScope", "LocalVariableDeclaration", "ReferenceType", "Var", "VariableDeclarator", "var", "MethodInvocation", "scope", "getVar", "MemberReference", "name", "IfStatement", "BinaryOperation", "MemberReference", "var", "!=", "Literal", "null", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "Scope", "VariableDeclarator", "ownerScope", "MethodInvocation", "var", "getScope", "IfStatement", "MethodInvocation", "ownerScope", "isLocal", "BlockStatement", "StatementExpression", "MethodInvocation", "data", "get", "MethodInvocation", "ownerScope", "getRootNode", "MethodInvocation", "recordAssignedName", "MemberReference", "name", "IfStatement", "BinaryOperation", "BinaryOperation", "MemberReference", "scope", "!=", "MemberReference", "ownerScope", "&&", "MethodInvocation", "ownerScope", "isLocal", "BlockStatement", "StatementExpression", "MethodInvocation", "data", "get", "MethodInvocation", "ownerScope", "getRootNode", "MethodInvocation", "recordEscapedVarName", "MemberReference", "name", "IfStatement", "BinaryOperation", "BinaryOperation", "MethodInvocation", "n", "isGetProp", "&&", "MethodInvocation", "n", "isUnscopedQualifiedName", "&&", "MethodInvocation", "NodeUtil", "isLValue", "MemberReference", "n", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "String", "VariableDeclarator", "name", "MethodInvocation", "NodeUtil", "getRootOfQualifiedName", "MemberReference", "n", "MethodInvocation", "getString", "LocalVariableDeclaration", "ReferenceType", "Scope", "VariableDeclarator", "scope", "MethodInvocation", "t", "getScope", "LocalVariableDeclaration", "ReferenceType", "Var", "VariableDeclarator", "var", "MethodInvocation", "scope", "getVar", "MemberReference", "name", "IfStatement", "BinaryOperation", "MemberReference", "var", "!=", "Literal", "null", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "Scope", "VariableDeclarator", "ownerScope", "MethodInvocation", "var", "getScope", "IfStatement", "BinaryOperation", "BinaryOperation", "MemberReference", "scope", "!=", "MemberReference", "ownerScope", "&&", "MethodInvocation", "ownerScope", "isLocal", "BlockStatement", "StatementExpression", "MethodInvocation", "data", "get", "MethodInvocation", "ownerScope", "getRootNode", "MethodInvocation", "recordEscapedQualifiedName", "MethodInvocation", "n", "getQualifiedName"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [0, 3, "name"], [0, 4, "parameters"], [4, 5, "type"], [5, 6, "name"], [4, 7, "name"], [0, 8, "parameters"], [8, 9, "type"], [9, 10, "name"], [8, 11, "name"], [0, 12, "parameters"], [12, 13, "type"], [13, 14, "name"], [12, 15, "name"], [0, 16, "body"], [16, 17, "condition"], [17, 18, "qualifier"], [17, 19, "member"], [16, 20, "then_statement"], [20, 21, "statements"], [0, 22, "body"], [22, 23, "condition"], [23, 24, "operandl"], [24, 25, "qualifier"], [24, 26, "member"], [23, 27, "operator"], [23, 28, "operandr"], [28, 29, "operandl"], [29, 30, "qualifier"], [29, 31, "member"], [28, 32, "operator"], [28, 33, "operandr"], [33, 34, "value"], [22, 35, "then_statement"], [35, 36, "statements"], [36, 37, "expression"], [37, 38, "qualifier"], [37, 39, "member"], [37, 40, "arguments"], [40, 41, "qualifier"], [40, 42, "member"], [37, 43, "selectors"], [43, 44, "member"], [0, 45, "body"], [45, 46, "condition"], [46, 47, "operandl"], [47, 48, "qualifier"], [47, 49, "member"], [46, 50, "operator"], [46, 51, "operandr"], [51, 52, "value"], [45, 53, "then_statement"], [53, 54, "statements"], [0, 55, "body"], [55, 56, "condition"], [56, 57, "operandl"], [57, 58, "operandl"], [58, 59, "qualifier"], [58, 60, "member"], [57, 61, "operator"], [57, 62, "operandr"], [62, 63, "qualifier"], [62, 64, "member"], [62, 65, "arguments"], [65, 66, "member"], [56, 67, "operator"], [56, 68, "operandr"], [68, 69, "prefix_operators"], [68, 70, "qualifier"], [68, 71, "member"], [68, 72, "arguments"], [72, 73, "member"], [55, 74, "then_statement"], [74, 75, "statements"], [75, 76, "type"], [76, 77, "name"], [75, 78, "declarators"], [78, 79, "name"], [78, 80, "initializer"], [80, 81, "qualifier"], [80, 82, "member"], [74, 83, "statements"], [83, 84, "type"], [84, 85, "name"], [83, 86, "declarators"], [86, 87, "name"], [86, 88, "initializer"], [88, 89, "qualifier"], [88, 90, "member"], [74, 91, "statements"], [91, 92, "type"], [92, 93, "name"], [91, 94, "declarators"], [94, 95, "name"], [94, 96, "initializer"], [96, 97, "qualifier"], [96, 98, "member"], [96, 99, "arguments"], [99, 100, "member"], [74, 101, "statements"], [101, 102, "condition"], [102, 103, "operandl"], [103, 104, "member"], [102, 105, "operator"], [102, 106, "operandr"], [106, 107, "value"], [101, 108, "then_statement"], [108, 109, "statements"], [109, 110, "type"], [110, 111, "name"], [109, 112, "declarators"], [112, 113, "name"], [112, 114, "initializer"], [114, 115, "qualifier"], [114, 116, "member"], [108, 117, "statements"], [117, 118, "condition"], [118, 119, "qualifier"], [118, 120, "member"], [117, 121, "then_statement"], [121, 122, "statements"], [122, 123, "expression"], [123, 124, "qualifier"], [123, 125, "member"], [123, 126, "arguments"], [126, 127, "qualifier"], [126, 128, "member"], [123, 129, "selectors"], [129, 130, "member"], [129, 131, "arguments"], [131, 132, "member"], [108, 133, "statements"], [133, 134, "condition"], [134, 135, "operandl"], [135, 136, "operandl"], [136, 137, "member"], [135, 138, "operator"], [135, 139, "operandr"], [139, 140, "member"], [134, 141, "operator"], [134, 142, "operandr"], [142, 143, "qualifier"], [142, 144, "member"], [133, 145, "then_statement"], [145, 146, "statements"], [146, 147, "expression"], [147, 148, "qualifier"], [147, 149, "member"], [147, 150, "arguments"], [150, 151, "qualifier"], [150, 152, "member"], [147, 153, "selectors"], [153, 154, "member"], [153, 155, "arguments"], [155, 156, "member"], [55, 157, "else_statement"], [157, 158, "condition"], [158, 159, "operandl"], [159, 160, "operandl"], [160, 161, "qualifier"], [160, 162, "member"], [159, 163, "operator"], [159, 164, "operandr"], [164, 165, "qualifier"], [164, 166, "member"], [158, 167, "operator"], [158, 168, "operandr"], [168, 169, "qualifier"], [168, 170, "member"], [168, 171, "arguments"], [171, 172, "member"], [157, 173, "then_statement"], [173, 174, "statements"], [174, 175, "type"], [175, 176, "name"], [174, 177, "declarators"], [177, 178, "name"], [177, 179, "initializer"], [179, 180, "qualifier"], [179, 181, "member"], [179, 182, "arguments"], [182, 183, "member"], [179, 184, "selectors"], [184, 185, "member"], [173, 186, "statements"], [186, 187, "type"], [187, 188, "name"], [186, 189, "declarators"], [189, 190, "name"], [189, 191, "initializer"], [191, 192, "qualifier"], [191, 193, "member"], [173, 194, "statements"], [194, 195, "type"], [195, 196, "name"], [194, 197, "declarators"], [197, 198, "name"], [197, 199, "initializer"], [199, 200, "qualifier"], [199, 201, "member"], [199, 202, "arguments"], [202, 203, "member"], [173, 204, "statements"], [204, 205, "condition"], [205, 206, "operandl"], [206, 207, "member"], [205, 208, "operator"], [205, 209, "operandr"], [209, 210, "value"], [204, 211, "then_statement"], [211, 212, "statements"], [212, 213, "type"], [213, 214, "name"], [212, 215, "declarators"], [215, 216, "name"], [215, 217, "initializer"], [217, 218, "qualifier"], [217, 219, "member"], [211, 220, "statements"], [220, 221, "condition"], [221, 222, "operandl"], [222, 223, "operandl"], [223, 224, "member"], [222, 225, "operator"], [222, 226, "operandr"], [226, 227, "member"], [221, 228, "operator"], [221, 229, "operandr"], [229, 230, "qualifier"], [229, 231, "member"], [220, 232, "then_statement"], [232, 233, "statements"], [233, 234, "expression"], [234, 235, "qualifier"], [234, 236, "member"], [234, 237, "arguments"], [237, 238, "qualifier"], [237, 239, "member"], [234, 240, "selectors"], [240, 241, "member"], [240, 242, "arguments"], [242, 243, "qualifier"], [242, 244, "member"]], "rem_roots": [46], "add_roots": []}, {"id": 29, "mappings": {"sourceMapOutputPath": "VAR_1", "inputs": "VAR_2", "MISSING_ENTRY_ERROR": "VAR_3", "jsRoot": "VAR_4", "options.dependencyOptions": "VAR_5", "options": "VAR_6", "DevMode": "VAR_7", "nameReferenceReportPath": "VAR_8", "tracer": "VAR_9", "modules": "VAR_10", "input": "VAR_11", "devMode": "VAR_12", "provide": "VAR_13", "moduleGraph": "VAR_14", "sia": "VAR_15", "OFF": "VAR_16", "tracker": "VAR_17", "closurePass": "VAR_18", "externsRoot": "VAR_19", "e": "VAR_20", "options.tracer": "VAR_21", "n": "VAR_22", "CIRCULAR_DEPENDENCY_ERROR": "VAR_23", "externAndJsRoot": "VAR_24", "staleInputs": "VAR_25", "JSModule": "VAR_26", "transformAMDToCJSModules": "VAR_27", "externs": "VAR_28", "processCommonJSModules": "VAR_29", "Node": "TYPE_1", "String": "TYPE_2", "JSError": "TYPE_3", "CircularDependencyException": "TYPE_4", "SourceInformationAnnotator": "TYPE_5", "Tracer": "TYPE_6", "IR": "TYPE_7", "CompilerInput": "TYPE_8", "PerformanceTracker": "TYPE_9", "NodeTraversal": "TYPE_10", "JSModuleGraph": "TYPE_11", "MissingProvideException": "TYPE_12", "newTracer": "METHOD_1", "addChildToBack": "METHOD_2", "setIsSyntheticBlock": "METHOD_3", "getName": "METHOD_4", "hoistExterns": "METHOD_5", "forwardDeclareType": "METHOD_6", "getProvides": "METHOD_7", "isOn": "METHOD_8", "block": "METHOD_9", "getAstRoot": "METHOD_10", "runSanityCheck": "METHOD_11", "traverse": "METHOD_12", "getCodeChangeHandler": "METHOD_13", "detachChildren": "METHOD_14", "stopTracer": "METHOD_15", "parseInputs": "METHOD_16", "hoistNoCompileFiles": "METHOD_17", "processAMDAndCommonJSModules": "METHOD_18", "make": "METHOD_19", "needsManagement": "METHOD_20", "hasErrors": "METHOD_21", "getMessage": "METHOD_22", "getTypeRegistry": "METHOD_23", "addChangeHandler": "METHOD_24", "report": "METHOD_25", "repartitionInputs": "METHOD_26", "\"parseInputs\"": "STRING_1"}, "nodes": ["MethodDeclaration", "ReferenceType", "Node", "parseInputs", "LocalVariableDeclaration", "BasicType", "boolean", "VariableDeclarator", "devMode", "BinaryOperation", "MemberReference", "options", "devMode", "!=", "MemberReference", "DevMode", "OFF", "IfStatement", "BinaryOperation", "MemberReference", "externsRoot", "!=", "Literal", "null", "BlockStatement", "StatementExpression", "MethodInvocation", "externsRoot", "detachChildren", "IfStatement", "BinaryOperation", "MemberReference", "jsRoot", "!=", "Literal", "null", "BlockStatement", "StatementExpression", "MethodInvocation", "jsRoot", "detachChildren", "StatementExpression", "Assignment", "MemberReference", "jsRoot", "=", "MethodInvocation", "IR", "block", "StatementExpression", "MethodInvocation", "jsRoot", "setIsSyntheticBlock", "Literal", "true", "StatementExpression", "Assignment", "MemberReference", "externsRoot", "=", "MethodInvocation", "IR", "block", "StatementExpression", "MethodInvocation", "externsRoot", "setIsSyntheticBlock", "Literal", "true", "StatementExpression", "Assignment", "MemberReference", "externAndJsRoot", "=", "MethodInvocation", "IR", "block", "MemberReference", "externsRoot", "MemberReference", "jsRoot", "StatementExpression", "MethodInvocation", "externAndJsRoot", "setIsSyntheticBlock", "Literal", "true", "IfStatement", "MethodInvocation", "options.tracer", "isOn", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "tracker", "=", "ClassCreator", "ReferenceType", "PerformanceTracker", "MemberReference", "jsRoot", "MemberReference", "options", "tracer", "StatementExpression", "MethodInvocation", "addChangeHandler", "MethodInvocation", "tracker", "getCodeChangeHandler", "LocalVariableDeclaration", "ReferenceType", "Tracer", "VariableDeclarator", "tracer", "MethodInvocation", "newTracer", "Literal", "\"parseInputs\"", "TryStatement", "ForStatement", "EnhancedForControl", "VariableDeclaration", "ReferenceType", "CompilerInput", "VariableDeclarator", "input", "MemberReference", "externs", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "Node", "VariableDeclarator", "n", "MethodInvocation", "input", "getAstRoot", "This", "IfStatement", "MethodInvocation", "hasErrors", "BlockStatement", "ReturnStatement", "Literal", "null", "StatementExpression", "MethodInvocation", "externsRoot", "addChildToBack", "MemberReference", "n", "IfStatement", "BinaryOperation", "MemberReference", "options", "transformAMDToCJSModules", "||", "MemberReference", "options", "processCommonJSModules", "BlockStatement", "StatementExpression", "MethodInvocation", "processAMDAndCommonJSModules", "StatementExpression", "MethodInvocation", "hoistExterns", "MemberReference", "externsRoot", "LocalVariableDeclaration", "BasicType", "boolean", "VariableDeclarator", "staleInputs", "Literal", "false", "IfStatement", "BinaryOperation", "MethodInvocation", "options.dependencyOptions", "needsManagement", "&&", "MemberReference", "options", "closurePass", "BlockStatement", "ForStatement", "EnhancedForControl", "VariableDeclaration", "ReferenceType", "CompilerInput", "VariableDeclarator", "input", "MemberReference", "inputs", "BlockStatement", "ForStatement", "EnhancedForControl", "VariableDeclaration", "ReferenceType", "String", "VariableDeclarator", "provide", "MethodInvocation", "input", "getProvides", "BlockStatement", "StatementExpression", "MethodInvocation", "getTypeRegistry", "MethodInvocation", "forwardDeclareType", "MemberReference", "provide", "TryStatement", "StatementExpression", "Assignment", "MemberReference", "inputs", "=", "TernaryExpression", "BinaryOperation", "MemberReference", "moduleGraph", "==", "Literal", "null", "ClassCreator", "ReferenceType", "JSModuleGraph", "MemberReference", "modules", "MemberReference", "moduleGraph", "StatementExpression", "Assignment", "MemberReference", "staleInputs", "=", "Literal", "true", "CatchClause", "CatchClauseParameter", "CircularDependencyException", "e", "StatementExpression", "MethodInvocation", "report", "MethodInvocation", "JSError", "make", "MemberReference", "JSModule", "CIRCULAR_DEPENDENCY_ERROR", "MethodInvocation", "e", "getMessage", "IfStatement", "MethodInvocation", "hasErrors", "BlockStatement", "ReturnStatement", "Literal", "null", "CatchClause", "CatchClauseParameter", "MissingProvideException", "e", "StatementExpression", "MethodInvocation", "report", "MethodInvocation", "JSError", "make", "MemberReference", "MISSING_ENTRY_ERROR", "MethodInvocation", "e", "getMessage", "IfStatement", "MethodInvocation", "hasErrors", "BlockStatement", "ReturnStatement", "Literal", "null", "StatementExpression", "MethodInvocation", "hoistNoCompileFiles", "IfStatement", "MemberReference", "staleInputs", "BlockStatement", "StatementExpression", "MethodInvocation", "repartitionInputs", "ForStatement", "EnhancedForControl", "VariableDeclaration", "ReferenceType", "CompilerInput", "VariableDeclarator", "input", "MemberReference", "inputs", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "Node", "VariableDeclarator", "n", "MethodInvocation", "input", "getAstRoot", "This", "IfStatement", "BinaryOperation", "MemberReference", "n", "==", "Literal", "null", "BlockStatement", "ContinueStatement", "IfStatement", "MemberReference", "devMode", "BlockStatement", "StatementExpression", "MethodInvocation", "runSanityCheck", "IfStatement", "MethodInvocation", "hasErrors", "BlockStatement", "ReturnStatement", "Literal", "null", "IfStatement", "BinaryOperation", "BinaryOperation", "MemberReference", "options", "sourceMapOutputPath", "!=", "Literal", "null", "||", "BinaryOperation", "MemberReference", "options", "nameReferenceReportPath", "!=", "Literal", "null", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "SourceInformationAnnotator", "VariableDeclarator", "sia", "ClassCreator", "ReferenceType", "SourceInformationAnnotator", "MethodInvocation", "input", "getName", "BinaryOperation", "MemberReference", "options", "devMode", "!=", "MemberReference", "DevMode", "OFF", "StatementExpression", "MethodInvocation", "NodeTraversal", "traverse", "This", "MemberReference", "n", "MemberReference", "sia", "StatementExpression", "MethodInvocation", "jsRoot", "addChildToBack", "MemberReference", "n", "IfStatement", "MethodInvocation", "hasErrors", "BlockStatement", "ReturnStatement", "Literal", "null", "ReturnStatement", "MemberReference", "externAndJsRoot", "StatementExpression", "MethodInvocation", "stopTracer", "MemberReference", "tracer", "Literal", "\"parseInputs\""], "edges": [[0, 1, "return_type"], [1, 2, "name"], [0, 3, "name"], [0, 4, "body"], [4, 5, "type"], [5, 6, "name"], [4, 7, "declarators"], [7, 8, "name"], [7, 9, "initializer"], [9, 10, "operandl"], [10, 11, "qualifier"], [10, 12, "member"], [9, 13, "operator"], [9, 14, "operandr"], [14, 15, "qualifier"], [14, 16, "member"], [0, 17, "body"], [17, 18, "condition"], [18, 19, "operandl"], [19, 20, "member"], [18, 21, "operator"], [18, 22, "operandr"], [22, 23, "value"], [17, 24, "then_statement"], [24, 25, "statements"], [25, 26, "expression"], [26, 27, "qualifier"], [26, 28, "member"], [0, 29, "body"], [29, 30, "condition"], [30, 31, "operandl"], [31, 32, "member"], [30, 33, "operator"], [30, 34, "operandr"], [34, 35, "value"], [29, 36, "then_statement"], [36, 37, "statements"], [37, 38, "expression"], [38, 39, "qualifier"], [38, 40, "member"], [0, 41, "body"], [41, 42, "expression"], [42, 43, "expressionl"], [43, 44, "member"], [42, 45, "type"], [42, 46, "value"], [46, 47, "qualifier"], [46, 48, "member"], [0, 49, "body"], [49, 50, "expression"], [50, 51, "qualifier"], [50, 52, "member"], [50, 53, "arguments"], [53, 54, "value"], [0, 55, "body"], [55, 56, "expression"], [56, 57, "expressionl"], [57, 58, "member"], [56, 59, "type"], [56, 60, "value"], [60, 61, "qualifier"], [60, 62, "member"], [0, 63, "body"], [63, 64, "expression"], [64, 65, "qualifier"], [64, 66, "member"], [64, 67, "arguments"], [67, 68, "value"], [0, 69, "body"], [69, 70, "expression"], [70, 71, "expressionl"], [71, 72, "member"], [70, 73, "type"], [70, 74, "value"], [74, 75, "qualifier"], [74, 76, "member"], [74, 77, "arguments"], [77, 78, "member"], [74, 79, "arguments"], [79, 80, "member"], [0, 81, "body"], [81, 82, "expression"], [82, 83, "qualifier"], [82, 84, "member"], [82, 85, "arguments"], [85, 86, "value"], [0, 87, "body"], [87, 88, "condition"], [88, 89, "qualifier"], [88, 90, "member"], [87, 91, "then_statement"], [91, 92, "statements"], [92, 93, "expression"], [93, 94, "expressionl"], [94, 95, "member"], [93, 96, "type"], [93, 97, "value"], [97, 98, "type"], [98, 99, "name"], [97, 100, "arguments"], [100, 101, "member"], [97, 102, "arguments"], [102, 103, "qualifier"], [102, 104, "member"], [91, 105, "statements"], [105, 106, "expression"], [106, 107, "member"], [106, 108, "arguments"], [108, 109, "qualifier"], [108, 110, "member"], [0, 111, "body"], [111, 112, "type"], [112, 113, "name"], [111, 114, "declarators"], [114, 115, "name"], [114, 116, "initializer"], [116, 117, "member"], [116, 118, "arguments"], [118, 119, "value"], [0, 120, "body"], [120, 121, "block"], [121, 122, "control"], [122, 123, "var"], [123, 124, "type"], [124, 125, "name"], [123, 126, "declarators"], [126, 127, "name"], [122, 128, "iterable"], [128, 129, "member"], [121, 130, "body"], [130, 131, "statements"], [131, 132, "type"], [132, 133, "name"], [131, 134, "declarators"], [134, 135, "name"], [134, 136, "initializer"], [136, 137, "qualifier"], [136, 138, "member"], [136, 139, "arguments"], [130, 140, "statements"], [140, 141, "condition"], [141, 142, "member"], [140, 143, "then_statement"], [143, 144, "statements"], [144, 145, "expression"], [145, 146, "value"], [130, 147, "statements"], [147, 148, "expression"], [148, 149, "qualifier"], [148, 150, "member"], [148, 151, "arguments"], [151, 152, "member"], [120, 153, "block"], [153, 154, "condition"], [154, 155, "operandl"], [155, 156, "qualifier"], [155, 157, "member"], [154, 158, "operator"], [154, 159, "operandr"], [159, 160, "qualifier"], [159, 161, "member"], [153, 162, "then_statement"], [162, 163, "statements"], [163, 164, "expression"], [164, 165, "member"], [120, 166, "block"], [166, 167, "expression"], [167, 168, "member"], [167, 169, "arguments"], [169, 170, "member"], [120, 171, "block"], [171, 172, "type"], [172, 173, "name"], [171, 174, "declarators"], [174, 175, "name"], [174, 176, "initializer"], [176, 177, "value"], [120, 178, "block"], [178, 179, "condition"], [179, 180, "operandl"], [180, 181, "qualifier"], [180, 182, "member"], [179, 183, "operator"], [179, 184, "operandr"], [184, 185, "qualifier"], [184, 186, "member"], [178, 187, "then_statement"], [187, 188, "statements"], [188, 189, "control"], [189, 190, "var"], [190, 191, "type"], [191, 192, "name"], [190, 193, "declarators"], [193, 194, "name"], [189, 195, "iterable"], [195, 196, "member"], [188, 197, "body"], [197, 198, "statements"], [198, 199, "control"], [199, 200, "var"], [200, 201, "type"], [201, 202, "name"], [200, 203, "declarators"], [203, 204, "name"], [199, 205, "iterable"], [205, 206, "qualifier"], [205, 207, "member"], [198, 208, "body"], [208, 209, "statements"], [209, 210, "expression"], [210, 211, "member"], [210, 212, "selectors"], [212, 213, "member"], [212, 214, "arguments"], [214, 215, "member"], [187, 216, "statements"], [216, 217, "block"], [217, 218, "expression"], [218, 219, "expressionl"], [219, 220, "member"], [218, 221, "type"], [218, 222, "value"], [222, 223, "condition"], [223, 224, "operandl"], [224, 225, "member"], [223, 226, "operator"], [223, 227, "operandr"], [227, 228, "value"], [222, 229, "if_true"], [229, 230, "type"], [230, 231, "name"], [229, 232, "arguments"], [232, 233, "member"], [222, 234, "if_false"], [234, 235, "member"], [216, 236, "block"], [236, 237, "expression"], [237, 238, "expressionl"], [238, 239, "member"], [237, 240, "type"], [237, 241, "value"], [241, 242, "value"], [216, 243, "catches"], [243, 244, "parameter"], [244, 245, "types"], [244, 246, "name"], [243, 247, "block"], [247, 248, "expression"], [248, 249, "member"], [248, 250, "arguments"], [250, 251, "qualifier"], [250, 252, "member"], [250, 253, "arguments"], [253, 254, "qualifier"], [253, 255, "member"], [250, 256, "arguments"], [256, 257, "qualifier"], [256, 258, "member"], [243, 259, "block"], [259, 260, "condition"], [260, 261, "member"], [259, 262, "then_statement"], [262, 263, "statements"], [263, 264, "expression"], [264, 265, "value"], [216, 266, "catches"], [266, 267, "parameter"], [267, 268, "types"], [267, 269, "name"], [266, 270, "block"], [270, 271, "expression"], [271, 272, "member"], [271, 273, "arguments"], [273, 274, "qualifier"], [273, 275, "member"], [273, 276, "arguments"], [276, 277, "member"], [273, 278, "arguments"], [278, 279, "qualifier"], [278, 280, "member"], [266, 281, "block"], [281, 282, "condition"], [282, 283, "member"], [281, 284, "then_statement"], [284, 285, "statements"], [285, 286, "expression"], [286, 287, "value"], [120, 288, "block"], [288, 289, "expression"], [289, 290, "member"], [120, 291, "block"], [291, 292, "condition"], [292, 293, "member"], [291, 294, "then_statement"], [294, 295, "statements"], [295, 296, "expression"], [296, 297, "member"], [120, 298, "block"], [298, 299, "control"], [299, 300, "var"], [300, 301, "type"], [301, 302, "name"], [300, 303, "declarators"], [303, 304, "name"], [299, 305, "iterable"], [305, 306, "member"], [298, 307, "body"], [307, 308, "statements"], [308, 309, "type"], [309, 310, "name"], [308, 311, "declarators"], [311, 312, "name"], [311, 313, "initializer"], [313, 314, "qualifier"], [313, 315, "member"], [313, 316, "arguments"], [307, 317, "statements"], [317, 318, "condition"], [318, 319, "operandl"], [319, 320, "member"], [318, 321, "operator"], [318, 322, "operandr"], [322, 323, "value"], [317, 324, "then_statement"], [324, 325, "statements"], [307, 326, "statements"], [326, 327, "condition"], [327, 328, "member"], [326, 329, "then_statement"], [329, 330, "statements"], [330, 331, "expression"], [331, 332, "member"], [329, 333, "statements"], [333, 334, "condition"], [334, 335, "member"], [333, 336, "then_statement"], [336, 337, "statements"], [337, 338, "expression"], [338, 339, "value"], [307, 340, "statements"], [340, 341, "condition"], [341, 342, "operandl"], [342, 343, "operandl"], [343, 344, "qualifier"], [343, 345, "member"], [342, 346, "operator"], [342, 347, "operandr"], [347, 348, "value"], [341, 349, "operator"], [341, 350, "operandr"], [350, 351, "operandl"], [351, 352, "qualifier"], [351, 353, "member"], [350, 354, "operator"], [350, 355, "operandr"], [355, 356, "value"], [340, 357, "then_statement"], [357, 358, "statements"], [358, 359, "type"], [359, 360, "name"], [358, 361, "declarators"], [361, 362, "name"], [361, 363, "initializer"], [363, 364, "type"], [364, 365, "name"], [363, 366, "arguments"], [366, 367, "qualifier"], [366, 368, "member"], [363, 369, "arguments"], [369, 370, "operandl"], [370, 371, "qualifier"], [370, 372, "member"], [369, 373, "operator"], [369, 374, "operandr"], [374, 375, "qualifier"], [374, 376, "member"], [357, 377, "statements"], [377, 378, "expression"], [378, 379, "qualifier"], [378, 380, "member"], [378, 381, "arguments"], [378, 382, "arguments"], [382, 383, "member"], [378, 384, "arguments"], [384, 385, "member"], [307, 386, "statements"], [386, 387, "expression"], [387, 388, "qualifier"], [387, 389, "member"], [387, 390, "arguments"], [390, 391, "member"], [120, 392, "block"], [392, 393, "condition"], [393, 394, "member"], [392, 395, "then_statement"], [395, 396, "statements"], [396, 397, "expression"], [397, 398, "value"], [120, 399, "block"], [399, 400, "expression"], [400, 401, "member"], [120, 402, "finally_block"], [402, 403, "expression"], [403, 404, "member"], [403, 405, "arguments"], [405, 406, "member"], [403, 407, "arguments"], [407, 408, "value"]], "rem_roots": [179], "add_roots": []}, {"id": 31, "mappings": {"n": "VAR_1", "callTarget": "VAR_2", "value": "VAR_3", "addition": "VAR_4", "Node": "TYPE_1", "IR": "TYPE_2", "Preconditions": "TYPE_3", "add": "METHOD_1", "getParent": "METHOD_2", "replaceChild": "METHOD_3", "tryFoldSimpleFunctionCall": "METHOD_4", "string": "METHOD_5", "isCall": "METHOD_6", "getString": "METHOD_7", "getNext": "METHOD_8", "isName": "METHOD_9", "detachFromParent": "METHOD_10", "equals": "METHOD_11", "reportCodeChange": "METHOD_12", "checkState": "METHOD_13", "getFirstChild": "METHOD_14", "srcref": "METHOD_15", "\"\"": "STRING_1", "\"String\"": "STRING_2"}, "nodes": ["MethodDeclaration", "private", "ReferenceType", "Node", "tryFoldSimpleFunctionCall", "FormalParameter", "ReferenceType", "Node", "n", "StatementExpression", "MethodInvocation", "Preconditions", "checkState", "MethodInvocation", "n", "isCall", "LocalVariableDeclaration", "ReferenceType", "Node", "VariableDeclarator", "callTarget", "MethodInvocation", "n", "getFirstChild", "IfStatement", "BinaryOperation", "BinaryOperation", "BinaryOperation", "MemberReference", "callTarget", "!=", "Literal", "null", "&&", "MethodInvocation", "callTarget", "isName", "&&", "MethodInvocation", "callTarget", "getString", "MethodInvocation", "equals", "Literal", "\"String\"", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "Node", "VariableDeclarator", "value", "MethodInvocation", "callTarget", "getNext", "IfStatement", "BinaryOperation", "MemberReference", "value", "!=", "Literal", "null", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "Node", "VariableDeclarator", "addition", "MethodInvocation", "IR", "add", "MethodInvocation", "IR", "string", "Literal", "\"\"", "MethodInvocation", "srcref", "MemberReference", "callTarget", "MethodInvocation", "value", "detachFromParent", "StatementExpression", "MethodInvocation", "n", "getParent", "MethodInvocation", "replaceChild", "MemberReference", "n", "MemberReference", "addition", "StatementExpression", "MethodInvocation", "reportCodeChange", "ReturnStatement", "MemberReference", "addition", "ReturnStatement", "MemberReference", "n"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [5, 8, "name"], [0, 9, "body"], [9, 10, "expression"], [10, 11, "qualifier"], [10, 12, "member"], [10, 13, "arguments"], [13, 14, "qualifier"], [13, 15, "member"], [0, 16, "body"], [16, 17, "type"], [17, 18, "name"], [16, 19, "declarators"], [19, 20, "name"], [19, 21, "initializer"], [21, 22, "qualifier"], [21, 23, "member"], [0, 24, "body"], [24, 25, "condition"], [25, 26, "operandl"], [26, 27, "operandl"], [27, 28, "operandl"], [28, 29, "member"], [27, 30, "operator"], [27, 31, "operandr"], [31, 32, "value"], [26, 33, "operator"], [26, 34, "operandr"], [34, 35, "qualifier"], [34, 36, "member"], [25, 37, "operator"], [25, 38, "operandr"], [38, 39, "qualifier"], [38, 40, "member"], [38, 41, "selectors"], [41, 42, "member"], [41, 43, "arguments"], [43, 44, "value"], [24, 45, "then_statement"], [45, 46, "statements"], [46, 47, "type"], [47, 48, "name"], [46, 49, "declarators"], [49, 50, "name"], [49, 51, "initializer"], [51, 52, "qualifier"], [51, 53, "member"], [45, 54, "statements"], [54, 55, "condition"], [55, 56, "operandl"], [56, 57, "member"], [55, 58, "operator"], [55, 59, "operandr"], [59, 60, "value"], [54, 61, "then_statement"], [61, 62, "statements"], [62, 63, "type"], [63, 64, "name"], [62, 65, "declarators"], [65, 66, "name"], [65, 67, "initializer"], [67, 68, "qualifier"], [67, 69, "member"], [67, 70, "arguments"], [70, 71, "qualifier"], [70, 72, "member"], [70, 73, "arguments"], [73, 74, "value"], [70, 75, "selectors"], [75, 76, "member"], [75, 77, "arguments"], [77, 78, "member"], [67, 79, "arguments"], [79, 80, "qualifier"], [79, 81, "member"], [61, 82, "statements"], [82, 83, "expression"], [83, 84, "qualifier"], [83, 85, "member"], [83, 86, "selectors"], [86, 87, "member"], [86, 88, "arguments"], [88, 89, "member"], [86, 90, "arguments"], [90, 91, "member"], [61, 92, "statements"], [92, 93, "expression"], [93, 94, "member"], [61, 95, "statements"], [95, 96, "expression"], [96, 97, "member"], [0, 98, "body"], [98, 99, "expression"], [99, 100, "member"]], "rem_roots": [55], "add_roots": []}, {"id": 32, "mappings": {"reference": "VAR_1", "initialization": "VAR_2", "compiler": "VAR_3", "relationship": "VAR_4", "value": "VAR_5", "convention": "VAR_6", "declaration": "VAR_7", "callNode": "VAR_8", "Node": "TYPE_1", "SubclassRelationship": "TYPE_2", "Reference": "TYPE_3", "Preconditions": "TYPE_4", "CodingConvention": "TYPE_5", "canInline": "METHOD_1", "isExprResult": "METHOD_2", "isCall": "METHOD_3", "canMoveAggressively": "METHOD_4", "getBasicBlock": "METHOD_5", "isValidDeclaration": "METHOD_6", "isValidInitialization": "METHOD_7", "getAssignedValue": "METHOD_8", "getGrandparent": "METHOD_9", "checkState": "METHOD_10", "getFirstChild": "METHOD_11", "getParent": "METHOD_12", "getClassesDefinedByCall": "METHOD_13", "isFunction": "METHOD_14", "isValidReference": "METHOD_15", "getCodingConvention": "METHOD_16", "canMoveModerately": "METHOD_17", "isGetProp": "METHOD_18", "getNode": "METHOD_19"}, "nodes": ["MethodDeclaration", "private", "BasicType", "boolean", "canInline", "FormalParameter", "ReferenceType", "Reference", "declaration", "FormalParameter", "ReferenceType", "Reference", "initialization", "FormalParameter", "ReferenceType", "Reference", "reference", "IfStatement", "BinaryOperation", "BinaryOperation", "MethodInvocation", "!", "isValidDeclaration", "MemberReference", "declaration", "||", "MethodInvocation", "!", "isValidInitialization", "MemberReference", "initialization", "||", "MethodInvocation", "!", "isValidReference", "MemberReference", "reference", "BlockStatement", "ReturnStatement", "Literal", "false", "IfStatement", "BinaryOperation", "BinaryOperation", "MemberReference", "declaration", "!=", "MemberReference", "initialization", "&&", "MethodInvocation", "!", "initialization", "getGrandparent", "MethodInvocation", "isExprResult", "BlockStatement", "ReturnStatement", "Literal", "false", "IfStatement", "BinaryOperation", "BinaryOperation", "MethodInvocation", "declaration", "getBasicBlock", "!=", "MethodInvocation", "initialization", "getBasicBlock", "||", "BinaryOperation", "MethodInvocation", "declaration", "getBasicBlock", "!=", "MethodInvocation", "reference", "getBasicBlock", "BlockStatement", "ReturnStatement", "Literal", "false", "LocalVariableDeclaration", "ReferenceType", "Node", "VariableDeclarator", "value", "MethodInvocation", "initialization", "getAssignedValue", "StatementExpression", "MethodInvocation", "Preconditions", "checkState", "BinaryOperation", "MemberReference", "value", "!=", "Literal", "null", "IfStatement", "BinaryOperation", "BinaryOperation", "MethodInvocation", "value", "isGetProp", "&&", "MethodInvocation", "reference", "getParent", "MethodInvocation", "isCall", "&&", "BinaryOperation", "MethodInvocation", "reference", "getParent", "MethodInvocation", "getFirstChild", "==", "MethodInvocation", "reference", "getNode", "BlockStatement", "ReturnStatement", "Literal", "false", "IfStatement", "MethodInvocation", "value", "isFunction", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "Node", "VariableDeclarator", "callNode", "MethodInvocation", "reference", "getParent", "IfStatement", "MethodInvocation", "reference", "getParent", "MethodInvocation", "isCall", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "CodingConvention", "VariableDeclarator", "convention", "MethodInvocation", "compiler", "getCodingConvention", "LocalVariableDeclaration", "ReferenceType", "SubclassRelationship", "VariableDeclarator", "relationship", "MethodInvocation", "convention", "getClassesDefinedByCall", "MemberReference", "callNode", "IfStatement", "BinaryOperation", "MemberReference", "relationship", "!=", "Literal", "null", "BlockStatement", "ReturnStatement", "Literal", "false", "ReturnStatement", "BinaryOperation", "MethodInvocation", "canMoveAggressively", "MemberReference", "value", "||", "MethodInvocation", "canMoveModerately", "MemberReference", "initialization", "MemberReference", "reference"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [5, 8, "name"], [0, 9, "parameters"], [9, 10, "type"], [10, 11, "name"], [9, 12, "name"], [0, 13, "parameters"], [13, 14, "type"], [14, 15, "name"], [13, 16, "name"], [0, 17, "body"], [17, 18, "condition"], [18, 19, "operandl"], [19, 20, "operandl"], [20, 21, "prefix_operators"], [20, 22, "member"], [20, 23, "arguments"], [23, 24, "member"], [19, 25, "operator"], [19, 26, "operandr"], [26, 27, "prefix_operators"], [26, 28, "member"], [26, 29, "arguments"], [29, 30, "member"], [18, 31, "operator"], [18, 32, "operandr"], [32, 33, "prefix_operators"], [32, 34, "member"], [32, 35, "arguments"], [35, 36, "member"], [17, 37, "then_statement"], [37, 38, "statements"], [38, 39, "expression"], [39, 40, "value"], [0, 41, "body"], [41, 42, "condition"], [42, 43, "operandl"], [43, 44, "operandl"], [44, 45, "member"], [43, 46, "operator"], [43, 47, "operandr"], [47, 48, "member"], [42, 49, "operator"], [42, 50, "operandr"], [50, 51, "prefix_operators"], [50, 52, "qualifier"], [50, 53, "member"], [50, 54, "selectors"], [54, 55, "member"], [41, 56, "then_statement"], [56, 57, "statements"], [57, 58, "expression"], [58, 59, "value"], [0, 60, "body"], [60, 61, "condition"], [61, 62, "operandl"], [62, 63, "operandl"], [63, 64, "qualifier"], [63, 65, "member"], [62, 66, "operator"], [62, 67, "operandr"], [67, 68, "qualifier"], [67, 69, "member"], [61, 70, "operator"], [61, 71, "operandr"], [71, 72, "operandl"], [72, 73, "qualifier"], [72, 74, "member"], [71, 75, "operator"], [71, 76, "operandr"], [76, 77, "qualifier"], [76, 78, "member"], [60, 79, "then_statement"], [79, 80, "statements"], [80, 81, "expression"], [81, 82, "value"], [0, 83, "body"], [83, 84, "type"], [84, 85, "name"], [83, 86, "declarators"], [86, 87, "name"], [86, 88, "initializer"], [88, 89, "qualifier"], [88, 90, "member"], [0, 91, "body"], [91, 92, "expression"], [92, 93, "qualifier"], [92, 94, "member"], [92, 95, "arguments"], [95, 96, "operandl"], [96, 97, "member"], [95, 98, "operator"], [95, 99, "operandr"], [99, 100, "value"], [0, 101, "body"], [101, 102, "condition"], [102, 103, "operandl"], [103, 104, "operandl"], [104, 105, "qualifier"], [104, 106, "member"], [103, 107, "operator"], [103, 108, "operandr"], [108, 109, "qualifier"], [108, 110, "member"], [108, 111, "selectors"], [111, 112, "member"], [102, 113, "operator"], [102, 114, "operandr"], [114, 115, "operandl"], [115, 116, "qualifier"], [115, 117, "member"], [115, 118, "selectors"], [118, 119, "member"], [114, 120, "operator"], [114, 121, "operandr"], [121, 122, "qualifier"], [121, 123, "member"], [101, 124, "then_statement"], [124, 125, "statements"], [125, 126, "expression"], [126, 127, "value"], [0, 128, "body"], [128, 129, "condition"], [129, 130, "qualifier"], [129, 131, "member"], [128, 132, "then_statement"], [132, 133, "statements"], [133, 134, "type"], [134, 135, "name"], [133, 136, "declarators"], [136, 137, "name"], [136, 138, "initializer"], [138, 139, "qualifier"], [138, 140, "member"], [132, 141, "statements"], [141, 142, "condition"], [142, 143, "qualifier"], [142, 144, "member"], [142, 145, "selectors"], [145, 146, "member"], [141, 147, "then_statement"], [147, 148, "statements"], [148, 149, "type"], [149, 150, "name"], [148, 151, "declarators"], [151, 152, "name"], [151, 153, "initializer"], [153, 154, "qualifier"], [153, 155, "member"], [147, 156, "statements"], [156, 157, "type"], [157, 158, "name"], [156, 159, "declarators"], [159, 160, "name"], [159, 161, "initializer"], [161, 162, "qualifier"], [161, 163, "member"], [161, 164, "arguments"], [164, 165, "member"], [147, 166, "statements"], [166, 167, "condition"], [167, 168, "operandl"], [168, 169, "member"], [167, 170, "operator"], [167, 171, "operandr"], [171, 172, "value"], [166, 173, "then_statement"], [173, 174, "statements"], [174, 175, "expression"], [175, 176, "value"], [0, 177, "body"], [177, 178, "expression"], [178, 179, "operandl"], [179, 180, "member"], [179, 181, "arguments"], [181, 182, "member"], [178, 183, "operator"], [178, 184, "operandr"], [184, 185, "member"], [184, 186, "arguments"], [186, 187, "member"], [184, 188, "arguments"], [188, 189, "member"]], "rem_roots": [132], "add_roots": []}, {"id": 33, "mappings": {"prev": "VAR_1", "exp": "VAR_2", "value": "VAR_3", "negativeZero": "VAR_4", "mantissa": "VAR_5", "x": "VAR_6", "String": "TYPE_1", "Math": "TYPE_2", "Integer": "TYPE_3", "Long": "TYPE_4", "getLastChar": "METHOD_1", "pow": "METHOD_2", "addNumber": "METHOD_3", "add": "METHOD_4", "valueOf": "METHOD_5", "isNegativeZero": "METHOD_6", "abs": "METHOD_7", "toString": "METHOD_8", "10": "INT_1", "0": "INT_2", "100": "INT_3", "1": "INT_4", "2": "INT_5", "\"E\"": "STRING_1", "\" \"": "STRING_2", "'-'": "CHAR_1"}, "nodes": ["MethodDeclaration", "void", "addNumber", "FormalParameter", "BasicType", "double", "x", "LocalVariableDeclaration", "BasicType", "char", "VariableDeclarator", "prev", "MethodInvocation", "getLastChar", "LocalVariableDeclaration", "BasicType", "boolean", "VariableDeclarator", "negativeZero", "MethodInvocation", "isNegativeZero", "MemberReference", "x", "IfStatement", "BinaryOperation", "BinaryOperation", "MemberReference", "x", "<", "Literal", "0", "&&", "BinaryOperation", "MemberReference", "prev", "==", "Literal", "'-'", "BlockStatement", "StatementExpression", "MethodInvocation", "add", "Literal", "\" \"", "IfStatement", "BinaryOperation", "BinaryOperation", "Cast", "BasicType", "long", "MemberReference", "x", "==", "MemberReference", "x", "&&", "MemberReference", "!", "negativeZero", "BlockStatement", "LocalVariableDeclaration", "BasicType", "long", "VariableDeclarator", "value", "Cast", "BasicType", "long", "MemberReference", "x", "LocalVariableDeclaration", "BasicType", "long", "VariableDeclarator", "mantissa", "MemberReference", "value", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "exp", "Literal", "0", "IfStatement", "BinaryOperation", "MethodInvocation", "Math", "abs", "MemberReference", "x", ">=", "Literal", "100", "BlockStatement", "WhileStatement", "BinaryOperation", "BinaryOperation", "BinaryOperation", "MemberReference", "mantissa", "/", "Literal", "10", "*", "MethodInvocation", "Math", "pow", "Literal", "10", "BinaryOperation", "MemberReference", "exp", "+", "Literal", "1", "==", "MemberReference", "value", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "mantissa", "/=", "Literal", "10", "StatementExpression", "MemberReference", "exp", "++", "IfStatement", "BinaryOperation", "MemberReference", "exp", ">", "Literal", "2", "BlockStatement", "StatementExpression", "MethodInvocation", "add", "BinaryOperation", "BinaryOperation", "MethodInvocation", "Long", "toString", "MemberReference", "mantissa", "+", "Literal", "\"E\"", "+", "MethodInvocation", "Integer", "toString", "MemberReference", "exp", "BlockStatement", "StatementExpression", "MethodInvocation", "add", "MethodInvocation", "Long", "toString", "MemberReference", "value", "BlockStatement", "StatementExpression", "MethodInvocation", "add", "MethodInvocation", "String", "valueOf", "MemberReference", "x"], "edges": [[0, 1, "return_type"], [0, 2, "name"], [0, 3, "parameters"], [3, 4, "type"], [4, 5, "name"], [3, 6, "name"], [0, 7, "body"], [7, 8, "type"], [8, 9, "name"], [7, 10, "declarators"], [10, 11, "name"], [10, 12, "initializer"], [12, 13, "member"], [0, 14, "body"], [14, 15, "type"], [15, 16, "name"], [14, 17, "declarators"], [17, 18, "name"], [17, 19, "initializer"], [19, 20, "member"], [19, 21, "arguments"], [21, 22, "member"], [0, 23, "body"], [23, 24, "condition"], [24, 25, "operandl"], [25, 26, "operandl"], [26, 27, "member"], [25, 28, "operator"], [25, 29, "operandr"], [29, 30, "value"], [24, 31, "operator"], [24, 32, "operandr"], [32, 33, "operandl"], [33, 34, "member"], [32, 35, "operator"], [32, 36, "operandr"], [36, 37, "value"], [23, 38, "then_statement"], [38, 39, "statements"], [39, 40, "expression"], [40, 41, "member"], [40, 42, "arguments"], [42, 43, "value"], [0, 44, "body"], [44, 45, "condition"], [45, 46, "operandl"], [46, 47, "operandl"], [47, 48, "type"], [48, 49, "name"], [47, 50, "expression"], [50, 51, "member"], [46, 52, "operator"], [46, 53, "operandr"], [53, 54, "member"], [45, 55, "operator"], [45, 56, "operandr"], [56, 57, "prefix_operators"], [56, 58, "member"], [44, 59, "then_statement"], [59, 60, "statements"], [60, 61, "type"], [61, 62, "name"], [60, 63, "declarators"], [63, 64, "name"], [63, 65, "initializer"], [65, 66, "type"], [66, 67, "name"], [65, 68, "expression"], [68, 69, "member"], [59, 70, "statements"], [70, 71, "type"], [71, 72, "name"], [70, 73, "declarators"], [73, 74, "name"], [73, 75, "initializer"], [75, 76, "member"], [59, 77, "statements"], [77, 78, "type"], [78, 79, "name"], [77, 80, "declarators"], [80, 81, "name"], [80, 82, "initializer"], [82, 83, "value"], [59, 84, "statements"], [84, 85, "condition"], [85, 86, "operandl"], [86, 87, "qualifier"], [86, 88, "member"], [86, 89, "arguments"], [89, 90, "member"], [85, 91, "operator"], [85, 92, "operandr"], [92, 93, "value"], [84, 94, "then_statement"], [94, 95, "statements"], [95, 96, "condition"], [96, 97, "operandl"], [97, 98, "operandl"], [98, 99, "operandl"], [99, 100, "member"], [98, 101, "operator"], [98, 102, "operandr"], [102, 103, "value"], [97, 104, "operator"], [97, 105, "operandr"], [105, 106, "qualifier"], [105, 107, "member"], [105, 108, "arguments"], [108, 109, "value"], [105, 110, "arguments"], [110, 111, "operandl"], [111, 112, "member"], [110, 113, "operator"], [110, 114, "operandr"], [114, 115, "value"], [96, 116, "operator"], [96, 117, "operandr"], [117, 118, "member"], [95, 119, "body"], [119, 120, "statements"], [120, 121, "expression"], [121, 122, "expressionl"], [122, 123, "member"], [121, 124, "type"], [121, 125, "value"], [125, 126, "value"], [119, 127, "statements"], [127, 128, "expression"], [128, 129, "member"], [128, 130, "postfix_operators"], [59, 131, "statements"], [131, 132, "condition"], [132, 133, "operandl"], [133, 134, "member"], [132, 135, "operator"], [132, 136, "operandr"], [136, 137, "value"], [131, 138, "then_statement"], [138, 139, "statements"], [139, 140, "expression"], [140, 141, "member"], [140, 142, "arguments"], [142, 143, "operandl"], [143, 144, "operandl"], [144, 145, "qualifier"], [144, 146, "member"], [144, 147, "arguments"], [147, 148, "member"], [143, 149, "operator"], [143, 150, "operandr"], [150, 151, "value"], [142, 152, "operator"], [142, 153, "operandr"], [153, 154, "qualifier"], [153, 155, "member"], [153, 156, "arguments"], [156, 157, "member"], [131, 158, "else_statement"], [158, 159, "statements"], [159, 160, "expression"], [160, 161, "member"], [160, 162, "arguments"], [162, 163, "qualifier"], [162, 164, "member"], [162, 165, "arguments"], [165, 166, "member"], [44, 167, "else_statement"], [167, 168, "statements"], [168, 169, "expression"], [169, 170, "member"], [169, 171, "arguments"], [171, 172, "qualifier"], [171, 173, "member"], [171, 174, "arguments"], [174, 175, "member"]], "rem_roots": [24], "add_roots": []}, {"id": 34, "mappings": {"parent": "VAR_1", "ns": "VAR_2", "prototypeProperty": "VAR_3", "isPrototype": "VAR_4", "nameNode": "VAR_5", "onlyAffectsClassDef": "VAR_6", "nameInfo": "VAR_7", "n": "VAR_8", "prototypeClass": "VAR_9", "t": "VAR_10", "refNodes": "VAR_11", "name": "VAR_12", "NameInformation": "TYPE_1", "Node": "TYPE_2", "ClassDefiningFunctionNode": "TYPE_3", "NodeUtil": "TYPE_4", "JsName": "TYPE_5", "NodeTraversal": "TYPE_6", "Preconditions": "TYPE_7", "getName": "METHOD_1", "isAssign": "METHOD_2", "createNameInformation": "METHOD_3", "isCall": "METHOD_4", "checkNotNull": "METHOD_5", "getFirstChild": "METHOD_6", "isFunctionDeclaration": "METHOD_7", "isObjectLitKey": "METHOD_8", "add": "METHOD_9", "getParent": "METHOD_10", "recordSet": "METHOD_11", "recordPrototypeSet": "METHOD_12", "getString": "METHOD_13", "inGlobalScope": "METHOD_14", "isVarDeclaration": "METHOD_15", "visit": "METHOD_16"}, "nodes": ["MethodDeclaration", "public", "void", "visit", "FormalParameter", "ReferenceType", "NodeTraversal", "t", "FormalParameter", "ReferenceType", "Node", "n", "FormalParameter", "ReferenceType", "Node", "parent", "IfStatement", "MethodInvocation", "t", "inGlobalScope", "BlockStatement", "IfStatement", "MethodInvocation", "NodeUtil", "isVarDeclaration", "MemberReference", "n", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "NameInformation", "VariableDeclarator", "ns", "MethodInvocation", "createNameInformation", "MemberReference", "t", "MemberReference", "n", "MemberReference", "parent", "StatementExpression", "MethodInvocation", "Preconditions", "checkNotNull", "MemberReference", "ns", "StatementExpression", "MethodInvocation", "recordSet", "MemberReference", "ns", "name", "MemberReference", "n", "IfStatement", "MethodInvocation", "NodeUtil", "isFunctionDeclaration", "MemberReference", "n", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "Node", "VariableDeclarator", "nameNode", "MethodInvocation", "n", "getFirstChild", "LocalVariableDeclaration", "ReferenceType", "NameInformation", "VariableDeclarator", "ns", "MethodInvocation", "createNameInformation", "MemberReference", "t", "MemberReference", "nameNode", "MemberReference", "n", "IfStatement", "BinaryOperation", "MemberReference", "ns", "!=", "Literal", "null", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "JsName", "VariableDeclarator", "nameInfo", "MethodInvocation", "getName", "MethodInvocation", "nameNode", "getString", "Literal", "true", "StatementExpression", "MethodInvocation", "recordSet", "MemberReference", "nameInfo", "name", "MemberReference", "nameNode", "IfStatement", "MethodInvocation", "NodeUtil", "isObjectLitKey", "MemberReference", "n", "MemberReference", "parent", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "NameInformation", "VariableDeclarator", "ns", "MethodInvocation", "createNameInformation", "MemberReference", "t", "MemberReference", "n", "MemberReference", "parent", "IfStatement", "BinaryOperation", "MemberReference", "ns", "!=", "Literal", "null", "BlockStatement", "StatementExpression", "MethodInvocation", "recordSet", "MemberReference", "ns", "name", "MemberReference", "n", "IfStatement", "MethodInvocation", "n", "isAssign", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "Node", "VariableDeclarator", "nameNode", "MethodInvocation", "n", "getFirstChild", "LocalVariableDeclaration", "ReferenceType", "NameInformation", "VariableDeclarator", "ns", "MethodInvocation", "createNameInformation", "MemberReference", "t", "MemberReference", "nameNode", "MemberReference", "n", "IfStatement", "BinaryOperation", "MemberReference", "ns", "!=", "Literal", "null", "BlockStatement", "IfStatement", "MemberReference", "ns", "isPrototype", "BlockStatement", "StatementExpression", "MethodInvocation", "recordPrototypeSet", "MemberReference", "ns", "prototypeClass", "MemberReference", "ns", "prototypeProperty", "MemberReference", "n", "BlockStatement", "StatementExpression", "MethodInvocation", "recordSet", "MemberReference", "ns", "name", "MemberReference", "nameNode", "IfStatement", "MethodInvocation", "n", "isCall", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "Node", "VariableDeclarator", "nameNode", "MethodInvocation", "n", "getFirstChild", "LocalVariableDeclaration", "ReferenceType", "NameInformation", "VariableDeclarator", "ns", "MethodInvocation", "createNameInformation", "MemberReference", "t", "MemberReference", "nameNode", "MemberReference", "n", "IfStatement", "BinaryOperation", "BinaryOperation", "MemberReference", "ns", "!=", "Literal", "null", "&&", "MemberReference", "ns", "onlyAffectsClassDef", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "JsName", "VariableDeclarator", "name", "MethodInvocation", "getName", "MemberReference", "ns", "name", "Literal", "false", "IfStatement", "BinaryOperation", "MemberReference", "name", "!=", "Literal", "null", "BlockStatement", "StatementExpression", "MethodInvocation", "refNodes", "add", "ClassCreator", "ReferenceType", "ClassDefiningFunctionNode", "MemberReference", "name", "MemberReference", "n", "MemberReference", "parent", "MethodInvocation", "parent", "getParent"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [0, 3, "name"], [0, 4, "parameters"], [4, 5, "type"], [5, 6, "name"], [4, 7, "name"], [0, 8, "parameters"], [8, 9, "type"], [9, 10, "name"], [8, 11, "name"], [0, 12, "parameters"], [12, 13, "type"], [13, 14, "name"], [12, 15, "name"], [0, 16, "body"], [16, 17, "condition"], [17, 18, "qualifier"], [17, 19, "member"], [16, 20, "then_statement"], [20, 21, "statements"], [21, 22, "condition"], [22, 23, "qualifier"], [22, 24, "member"], [22, 25, "arguments"], [25, 26, "member"], [21, 27, "then_statement"], [27, 28, "statements"], [28, 29, "type"], [29, 30, "name"], [28, 31, "declarators"], [31, 32, "name"], [31, 33, "initializer"], [33, 34, "member"], [33, 35, "arguments"], [35, 36, "member"], [33, 37, "arguments"], [37, 38, "member"], [33, 39, "arguments"], [39, 40, "member"], [27, 41, "statements"], [41, 42, "expression"], [42, 43, "qualifier"], [42, 44, "member"], [42, 45, "arguments"], [45, 46, "member"], [27, 47, "statements"], [47, 48, "expression"], [48, 49, "member"], [48, 50, "arguments"], [50, 51, "qualifier"], [50, 52, "member"], [48, 53, "arguments"], [53, 54, "member"], [21, 55, "else_statement"], [55, 56, "condition"], [56, 57, "qualifier"], [56, 58, "member"], [56, 59, "arguments"], [59, 60, "member"], [55, 61, "then_statement"], [61, 62, "statements"], [62, 63, "type"], [63, 64, "name"], [62, 65, "declarators"], [65, 66, "name"], [65, 67, "initializer"], [67, 68, "qualifier"], [67, 69, "member"], [61, 70, "statements"], [70, 71, "type"], [71, 72, "name"], [70, 73, "declarators"], [73, 74, "name"], [73, 75, "initializer"], [75, 76, "member"], [75, 77, "arguments"], [77, 78, "member"], [75, 79, "arguments"], [79, 80, "member"], [75, 81, "arguments"], [81, 82, "member"], [61, 83, "statements"], [83, 84, "condition"], [84, 85, "operandl"], [85, 86, "member"], [84, 87, "operator"], [84, 88, "operandr"], [88, 89, "value"], [83, 90, "then_statement"], [90, 91, "statements"], [91, 92, "type"], [92, 93, "name"], [91, 94, "declarators"], [94, 95, "name"], [94, 96, "initializer"], [96, 97, "member"], [96, 98, "arguments"], [98, 99, "qualifier"], [98, 100, "member"], [96, 101, "arguments"], [101, 102, "value"], [90, 103, "statements"], [103, 104, "expression"], [104, 105, "member"], [104, 106, "arguments"], [106, 107, "qualifier"], [106, 108, "member"], [104, 109, "arguments"], [109, 110, "member"], [55, 111, "else_statement"], [111, 112, "condition"], [112, 113, "qualifier"], [112, 114, "member"], [112, 115, "arguments"], [115, 116, "member"], [112, 117, "arguments"], [117, 118, "member"], [111, 119, "then_statement"], [119, 120, "statements"], [120, 121, "type"], [121, 122, "name"], [120, 123, "declarators"], [123, 124, "name"], [123, 125, "initializer"], [125, 126, "member"], [125, 127, "arguments"], [127, 128, "member"], [125, 129, "arguments"], [129, 130, "member"], [125, 131, "arguments"], [131, 132, "member"], [119, 133, "statements"], [133, 134, "condition"], [134, 135, "operandl"], [135, 136, "member"], [134, 137, "operator"], [134, 138, "operandr"], [138, 139, "value"], [133, 140, "then_statement"], [140, 141, "statements"], [141, 142, "expression"], [142, 143, "member"], [142, 144, "arguments"], [144, 145, "qualifier"], [144, 146, "member"], [142, 147, "arguments"], [147, 148, "member"], [0, 149, "body"], [149, 150, "condition"], [150, 151, "qualifier"], [150, 152, "member"], [149, 153, "then_statement"], [153, 154, "statements"], [154, 155, "type"], [155, 156, "name"], [154, 157, "declarators"], [157, 158, "name"], [157, 159, "initializer"], [159, 160, "qualifier"], [159, 161, "member"], [153, 162, "statements"], [162, 163, "type"], [163, 164, "name"], [162, 165, "declarators"], [165, 166, "name"], [165, 167, "initializer"], [167, 168, "member"], [167, 169, "arguments"], [169, 170, "member"], [167, 171, "arguments"], [171, 172, "member"], [167, 173, "arguments"], [173, 174, "member"], [153, 175, "statements"], [175, 176, "condition"], [176, 177, "operandl"], [177, 178, "member"], [176, 179, "operator"], [176, 180, "operandr"], [180, 181, "value"], [175, 182, "then_statement"], [182, 183, "statements"], [183, 184, "condition"], [184, 185, "qualifier"], [184, 186, "member"], [183, 187, "then_statement"], [187, 188, "statements"], [188, 189, "expression"], [189, 190, "member"], [189, 191, "arguments"], [191, 192, "qualifier"], [191, 193, "member"], [189, 194, "arguments"], [194, 195, "qualifier"], [194, 196, "member"], [189, 197, "arguments"], [197, 198, "member"], [183, 199, "else_statement"], [199, 200, "statements"], [200, 201, "expression"], [201, 202, "member"], [201, 203, "arguments"], [203, 204, "qualifier"], [203, 205, "member"], [201, 206, "arguments"], [206, 207, "member"], [149, 208, "else_statement"], [208, 209, "condition"], [209, 210, "qualifier"], [209, 211, "member"], [208, 212, "then_statement"], [212, 213, "statements"], [213, 214, "type"], [214, 215, "name"], [213, 216, "declarators"], [216, 217, "name"], [216, 218, "initializer"], [218, 219, "qualifier"], [218, 220, "member"], [212, 221, "statements"], [221, 222, "type"], [222, 223, "name"], [221, 224, "declarators"], [224, 225, "name"], [224, 226, "initializer"], [226, 227, "member"], [226, 228, "arguments"], [228, 229, "member"], [226, 230, "arguments"], [230, 231, "member"], [226, 232, "arguments"], [232, 233, "member"], [212, 234, "statements"], [234, 235, "condition"], [235, 236, "operandl"], [236, 237, "operandl"], [237, 238, "member"], [236, 239, "operator"], [236, 240, "operandr"], [240, 241, "value"], [235, 242, "operator"], [235, 243, "operandr"], [243, 244, "qualifier"], [243, 245, "member"], [234, 246, "then_statement"], [246, 247, "statements"], [247, 248, "type"], [248, 249, "name"], [247, 250, "declarators"], [250, 251, "name"], [250, 252, "initializer"], [252, 253, "member"], [252, 254, "arguments"], [254, 255, "qualifier"], [254, 256, "member"], [252, 257, "arguments"], [257, 258, "value"], [246, 259, "statements"], [259, 260, "condition"], [260, 261, "operandl"], [261, 262, "member"], [260, 263, "operator"], [260, 264, "operandr"], [264, 265, "value"], [259, 266, "then_statement"], [266, 267, "statements"], [267, 268, "expression"], [268, 269, "qualifier"], [268, 270, "member"], [268, 271, "arguments"], [271, 272, "type"], [272, 273, "name"], [271, 274, "arguments"], [274, 275, "member"], [271, 276, "arguments"], [276, 277, "member"], [271, 278, "arguments"], [278, 279, "member"], [271, 280, "arguments"], [280, 281, "qualifier"], [280, 282, "member"]], "rem_roots": [247], "add_roots": []}, {"id": 35, "mappings": {"registry": "VAR_1", "that": "VAR_2", "builder": "VAR_3", "property": "VAR_4", "properties": "VAR_5", "JSType": "TYPE_1", "String": "TYPE_2", "RecordTypeBuilder": "TYPE_3", "getPropertyNode": "METHOD_1", "isRecordType": "METHOD_2", "hasProperty": "METHOD_3", "addProperty": "METHOD_4", "getPropertyType": "METHOD_5", "isEquivalentTo": "METHOD_6", "toMaybeRecordType": "METHOD_7", "getLeastSupertype": "METHOD_8", "build": "METHOD_9", "keySet": "METHOD_10"}, "nodes": ["MethodDeclaration", "public", "ReferenceType", "JSType", "getLeastSupertype", "FormalParameter", "ReferenceType", "JSType", "that", "IfStatement", "MethodInvocation", "!", "that", "isRecordType", "BlockStatement", "ReturnStatement", "SuperMethodInvocation", "getLeastSupertype", "MemberReference", "that", "LocalVariableDeclaration", "ReferenceType", "RecordTypeBuilder", "VariableDeclarator", "builder", "ClassCreator", "ReferenceType", "RecordTypeBuilder", "MemberReference", "registry", "ForStatement", "EnhancedForControl", "VariableDeclaration", "ReferenceType", "String", "VariableDeclarator", "property", "MethodInvocation", "properties", "keySet", "BlockStatement", "IfStatement", "BinaryOperation", "MethodInvocation", "that", "toMaybeRecordType", "MethodInvocation", "hasProperty", "MemberReference", "property", "&&", "MethodInvocation", "that", "toMaybeRecordType", "MethodInvocation", "getPropertyType", "MemberReference", "property", "MethodInvocation", "isEquivalentTo", "MethodInvocation", "getPropertyType", "MemberReference", "property", "BlockStatement", "StatementExpression", "MethodInvocation", "builder", "addProperty", "MemberReference", "property", "MethodInvocation", "getPropertyType", "MemberReference", "property", "MethodInvocation", "getPropertyNode", "MemberReference", "property", "ReturnStatement", "MethodInvocation", "builder", "build"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [5, 8, "name"], [0, 9, "body"], [9, 10, "condition"], [10, 11, "prefix_operators"], [10, 12, "qualifier"], [10, 13, "member"], [9, 14, "then_statement"], [14, 15, "statements"], [15, 16, "expression"], [16, 17, "member"], [16, 18, "arguments"], [18, 19, "member"], [0, 20, "body"], [20, 21, "type"], [21, 22, "name"], [20, 23, "declarators"], [23, 24, "name"], [23, 25, "initializer"], [25, 26, "type"], [26, 27, "name"], [25, 28, "arguments"], [28, 29, "member"], [0, 30, "body"], [30, 31, "control"], [31, 32, "var"], [32, 33, "type"], [33, 34, "name"], [32, 35, "declarators"], [35, 36, "name"], [31, 37, "iterable"], [37, 38, "qualifier"], [37, 39, "member"], [30, 40, "body"], [40, 41, "statements"], [41, 42, "condition"], [42, 43, "operandl"], [43, 44, "qualifier"], [43, 45, "member"], [43, 46, "selectors"], [46, 47, "member"], [46, 48, "arguments"], [48, 49, "member"], [42, 50, "operator"], [42, 51, "operandr"], [51, 52, "qualifier"], [51, 53, "member"], [51, 54, "selectors"], [54, 55, "member"], [54, 56, "arguments"], [56, 57, "member"], [51, 58, "selectors"], [58, 59, "member"], [58, 60, "arguments"], [60, 61, "member"], [60, 62, "arguments"], [62, 63, "member"], [41, 64, "then_statement"], [64, 65, "statements"], [65, 66, "expression"], [66, 67, "qualifier"], [66, 68, "member"], [66, 69, "arguments"], [69, 70, "member"], [66, 71, "arguments"], [71, 72, "member"], [71, 73, "arguments"], [73, 74, "member"], [66, 75, "arguments"], [75, 76, "member"], [75, 77, "arguments"], [77, 78, "member"], [0, 79, "body"], [79, 80, "expression"], [80, 81, "qualifier"], [80, 82, "member"]], "rem_roots": [9], "add_roots": []}, {"id": 36, "mappings": {"parent": "VAR_1", "validProperties": "VAR_2", "childVal": "VAR_3", "propName": "VAR_4", "ref": "VAR_5", "refNode": "VAR_6", "ret": "VAR_7", "val": "VAR_8", "gramps": "VAR_9", "t": "VAR_10", "refs": "VAR_11", "name": "VAR_12", "child": "VAR_13", "Set": "TYPE_1", "Node": "TYPE_2", "String": "TYPE_3", "NodeUtil": "TYPE_4", "Sets": "TYPE_5", "List": "TYPE_6", "Reference": "TYPE_7", "Preconditions": "TYPE_8", "isInlinableObject": "METHOD_1", "isCall": "METHOD_2", "isVarOrSimpleAssignLhs": "METHOD_3", "isGetterDef": "METHOD_4", "getAssignedValue": "METHOD_5", "getGrandparent": "METHOD_6", "checkState": "METHOD_7", "getFirstChild": "METHOD_8", "add": "METHOD_9", "getParent": "METHOD_10", "isSetterDef": "METHOD_11", "getString": "METHOD_12", "getNext": "METHOD_13", "isStatementBlock": "METHOD_14", "getLastChild": "METHOD_15", "isVarOrAssignExprLhs": "METHOD_16", "newHashSet": "METHOD_17", "contains": "METHOD_18", "isGetProp": "METHOD_19", "getNode": "METHOD_20", "isObjectLit": "METHOD_21"}, "nodes": ["MethodDeclaration", "private", "BasicType", "boolean", "isInlinableObject", "FormalParameter", "ReferenceType", "List", "TypeArgument", "ReferenceType", "Reference", "refs", "LocalVariableDeclaration", "BasicType", "boolean", "VariableDeclarator", "ret", "Literal", "false", "LocalVariableDeclaration", "ReferenceType", "Set", "TypeArgument", "ReferenceType", "String", "VariableDeclarator", "validProperties", "MethodInvocation", "Sets", "newHashSet", "ForStatement", "EnhancedForControl", "VariableDeclaration", "ReferenceType", "Reference", "VariableDeclarator", "ref", "MemberReference", "refs", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "Node", "VariableDeclarator", "name", "MethodInvocation", "ref", "getNode", "LocalVariableDeclaration", "ReferenceType", "Node", "VariableDeclarator", "parent", "MethodInvocation", "ref", "getParent", "LocalVariableDeclaration", "ReferenceType", "Node", "VariableDeclarator", "gramps", "MethodInvocation", "ref", "getGrandparent", "IfStatement", "MethodInvocation", "parent", "isGetProp", "BlockStatement", "StatementExpression", "MethodInvocation", "Preconditions", "checkState", "BinaryOperation", "MethodInvocation", "parent", "getFirstChild", "==", "MemberReference", "name", "IfStatement", "BinaryOperation", "MethodInvocation", "gramps", "isCall", "&&", "BinaryOperation", "MethodInvocation", "gramps", "getFirstChild", "==", "MemberReference", "parent", "BlockStatement", "ReturnStatement", "Literal", "false", "LocalVariableDeclaration", "ReferenceType", "String", "VariableDeclarator", "propName", "MethodInvocation", "parent", "getLastChild", "MethodInvocation", "getString", "IfStatement", "MethodInvocation", "!", "validProperties", "contains", "MemberReference", "propName", "BlockStatement", "IfStatement", "MethodInvocation", "NodeUtil", "isVarOrSimpleAssignLhs", "MemberReference", "parent", "MemberReference", "gramps", "BlockStatement", "StatementExpression", "MethodInvocation", "validProperties", "add", "MemberReference", "propName", "BlockStatement", "ReturnStatement", "Literal", "false", "ContinueStatement", "IfStatement", "MethodInvocation", "!", "isVarOrAssignExprLhs", "MemberReference", "name", "BlockStatement", "ReturnStatement", "Literal", "false", "LocalVariableDeclaration", "ReferenceType", "Node", "VariableDeclarator", "val", "MethodInvocation", "ref", "getAssignedValue", "IfStatement", "BinaryOperation", "MemberReference", "val", "==", "Literal", "null", "BlockStatement", "ContinueStatement", "IfStatement", "MethodInvocation", "!", "val", "isObjectLit", "BlockStatement", "ReturnStatement", "Literal", "false", "ForStatement", "ForControl", "VariableDeclaration", "ReferenceType", "Node", "VariableDeclarator", "child", "MethodInvocation", "val", "getFirstChild", "BinaryOperation", "MemberReference", "child", "!=", "Literal", "null", "Assignment", "MemberReference", "child", "=", "MethodInvocation", "child", "getNext", "BlockStatement", "IfStatement", "BinaryOperation", "MethodInvocation", "child", "isGetterDef", "||", "MethodInvocation", "child", "isSetterDef", "BlockStatement", "ReturnStatement", "Literal", "false", "StatementExpression", "MethodInvocation", "validProperties", "add", "MethodInvocation", "child", "getString", "LocalVariableDeclaration", "ReferenceType", "Node", "VariableDeclarator", "childVal", "MethodInvocation", "child", "getFirstChild", "ForStatement", "EnhancedForControl", "VariableDeclaration", "ReferenceType", "Reference", "VariableDeclarator", "t", "MemberReference", "refs", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "Node", "VariableDeclarator", "refNode", "MethodInvocation", "t", "getParent", "WhileStatement", "MethodInvocation", "!", "NodeUtil", "isStatementBlock", "MemberReference", "refNode", "BlockStatement", "IfStatement", "BinaryOperation", "MemberReference", "refNode", "==", "MemberReference", "childVal", "BlockStatement", "ReturnStatement", "Literal", "false", "StatementExpression", "Assignment", "MemberReference", "refNode", "=", "MethodInvocation", "refNode", "getParent", "StatementExpression", "Assignment", "MemberReference", "ret", "=", "Literal", "true", "ReturnStatement", "MemberReference", "ret"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [6, 8, "arguments"], [8, 9, "type"], [9, 10, "name"], [5, 11, "name"], [0, 12, "body"], [12, 13, "type"], [13, 14, "name"], [12, 15, "declarators"], [15, 16, "name"], [15, 17, "initializer"], [17, 18, "value"], [0, 19, "body"], [19, 20, "type"], [20, 21, "name"], [20, 22, "arguments"], [22, 23, "type"], [23, 24, "name"], [19, 25, "declarators"], [25, 26, "name"], [25, 27, "initializer"], [27, 28, "qualifier"], [27, 29, "member"], [0, 30, "body"], [30, 31, "control"], [31, 32, "var"], [32, 33, "type"], [33, 34, "name"], [32, 35, "declarators"], [35, 36, "name"], [31, 37, "iterable"], [37, 38, "member"], [30, 39, "body"], [39, 40, "statements"], [40, 41, "type"], [41, 42, "name"], [40, 43, "declarators"], [43, 44, "name"], [43, 45, "initializer"], [45, 46, "qualifier"], [45, 47, "member"], [39, 48, "statements"], [48, 49, "type"], [49, 50, "name"], [48, 51, "declarators"], [51, 52, "name"], [51, 53, "initializer"], [53, 54, "qualifier"], [53, 55, "member"], [39, 56, "statements"], [56, 57, "type"], [57, 58, "name"], [56, 59, "declarators"], [59, 60, "name"], [59, 61, "initializer"], [61, 62, "qualifier"], [61, 63, "member"], [39, 64, "statements"], [64, 65, "condition"], [65, 66, "qualifier"], [65, 67, "member"], [64, 68, "then_statement"], [68, 69, "statements"], [69, 70, "expression"], [70, 71, "qualifier"], [70, 72, "member"], [70, 73, "arguments"], [73, 74, "operandl"], [74, 75, "qualifier"], [74, 76, "member"], [73, 77, "operator"], [73, 78, "operandr"], [78, 79, "member"], [68, 80, "statements"], [80, 81, "condition"], [81, 82, "operandl"], [82, 83, "qualifier"], [82, 84, "member"], [81, 85, "operator"], [81, 86, "operandr"], [86, 87, "operandl"], [87, 88, "qualifier"], [87, 89, "member"], [86, 90, "operator"], [86, 91, "operandr"], [91, 92, "member"], [80, 93, "then_statement"], [93, 94, "statements"], [94, 95, "expression"], [95, 96, "value"], [68, 97, "statements"], [97, 98, "type"], [98, 99, "name"], [97, 100, "declarators"], [100, 101, "name"], [100, 102, "initializer"], [102, 103, "qualifier"], [102, 104, "member"], [102, 105, "selectors"], [105, 106, "member"], [68, 107, "statements"], [107, 108, "condition"], [108, 109, "prefix_operators"], [108, 110, "qualifier"], [108, 111, "member"], [108, 112, "arguments"], [112, 113, "member"], [107, 114, "then_statement"], [114, 115, "statements"], [115, 116, "condition"], [116, 117, "qualifier"], [116, 118, "member"], [116, 119, "arguments"], [119, 120, "member"], [116, 121, "arguments"], [121, 122, "member"], [115, 123, "then_statement"], [123, 124, "statements"], [124, 125, "expression"], [125, 126, "qualifier"], [125, 127, "member"], [125, 128, "arguments"], [128, 129, "member"], [115, 130, "else_statement"], [130, 131, "statements"], [131, 132, "expression"], [132, 133, "value"], [68, 134, "statements"], [39, 135, "statements"], [135, 136, "condition"], [136, 137, "prefix_operators"], [136, 138, "member"], [136, 139, "arguments"], [139, 140, "member"], [135, 141, "then_statement"], [141, 142, "statements"], [142, 143, "expression"], [143, 144, "value"], [39, 145, "statements"], [145, 146, "type"], [146, 147, "name"], [145, 148, "declarators"], [148, 149, "name"], [148, 150, "initializer"], [150, 151, "qualifier"], [150, 152, "member"], [39, 153, "statements"], [153, 154, "condition"], [154, 155, "operandl"], [155, 156, "member"], [154, 157, "operator"], [154, 158, "operandr"], [158, 159, "value"], [153, 160, "then_statement"], [160, 161, "statements"], [39, 162, "statements"], [162, 163, "condition"], [163, 164, "prefix_operators"], [163, 165, "qualifier"], [163, 166, "member"], [162, 167, "then_statement"], [167, 168, "statements"], [168, 169, "expression"], [169, 170, "value"], [39, 171, "statements"], [171, 172, "control"], [172, 173, "init"], [173, 174, "type"], [174, 175, "name"], [173, 176, "declarators"], [176, 177, "name"], [176, 178, "initializer"], [178, 179, "qualifier"], [178, 180, "member"], [172, 181, "condition"], [181, 182, "operandl"], [182, 183, "member"], [181, 184, "operator"], [181, 185, "operandr"], [185, 186, "value"], [172, 187, "update"], [187, 188, "expressionl"], [188, 189, "member"], [187, 190, "type"], [187, 191, "value"], [191, 192, "qualifier"], [191, 193, "member"], [171, 194, "body"], [194, 195, "statements"], [195, 196, "condition"], [196, 197, "operandl"], [197, 198, "qualifier"], [197, 199, "member"], [196, 200, "operator"], [196, 201, "operandr"], [201, 202, "qualifier"], [201, 203, "member"], [195, 204, "then_statement"], [204, 205, "statements"], [205, 206, "expression"], [206, 207, "value"], [194, 208, "statements"], [208, 209, "expression"], [209, 210, "qualifier"], [209, 211, "member"], [209, 212, "arguments"], [212, 213, "qualifier"], [212, 214, "member"], [194, 215, "statements"], [215, 216, "type"], [216, 217, "name"], [215, 218, "declarators"], [218, 219, "name"], [218, 220, "initializer"], [220, 221, "qualifier"], [220, 222, "member"], [194, 223, "statements"], [223, 224, "control"], [224, 225, "var"], [225, 226, "type"], [226, 227, "name"], [225, 228, "declarators"], [228, 229, "name"], [224, 230, "iterable"], [230, 231, "member"], [223, 232, "body"], [232, 233, "statements"], [233, 234, "type"], [234, 235, "name"], [233, 236, "declarators"], [236, 237, "name"], [236, 238, "initializer"], [238, 239, "qualifier"], [238, 240, "member"], [232, 241, "statements"], [241, 242, "condition"], [242, 243, "prefix_operators"], [242, 244, "qualifier"], [242, 245, "member"], [242, 246, "arguments"], [246, 247, "member"], [241, 248, "body"], [248, 249, "statements"], [249, 250, "condition"], [250, 251, "operandl"], [251, 252, "member"], [250, 253, "operator"], [250, 254, "operandr"], [254, 255, "member"], [249, 256, "then_statement"], [256, 257, "statements"], [257, 258, "expression"], [258, 259, "value"], [248, 260, "statements"], [260, 261, "expression"], [261, 262, "expressionl"], [262, 263, "member"], [261, 264, "type"], [261, 265, "value"], [265, 266, "qualifier"], [265, 267, "member"], [39, 268, "statements"], [268, 269, "expression"], [269, 270, "expressionl"], [270, 271, "member"], [269, 272, "type"], [269, 273, "value"], [273, 274, "value"], [0, 275, "body"], [275, 276, "expression"], [276, 277, "member"]], "rem_roots": [68], "add_roots": []}, {"id": 37, "mappings": {"s": "VAR_1", "c": "VAR_2", "len": "VAR_3", "index": "VAR_4", "String": "TYPE_1", "isSimpleNumber": "METHOD_1", "length": "METHOD_2", "charAt": "METHOD_3", "0": "INT_1", "'9'": "CHAR_1", "'0'": "CHAR_2"}, "nodes": ["MethodDeclaration", "static", "BasicType", "boolean", "isSimpleNumber", "FormalParameter", "ReferenceType", "String", "s", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "len", "MethodInvocation", "s", "length", "ForStatement", "ForControl", "VariableDeclaration", "BasicType", "int", "VariableDeclarator", "index", "Literal", "0", "BinaryOperation", "MemberReference", "index", "<", "MemberReference", "len", "MemberReference", "index", "++", "BlockStatement", "LocalVariableDeclaration", "BasicType", "char", "VariableDeclarator", "c", "MethodInvocation", "s", "charAt", "MemberReference", "index", "IfStatement", "BinaryOperation", "BinaryOperation", "MemberReference", "c", "<", "Literal", "'0'", "||", "BinaryOperation", "MemberReference", "c", ">", "Literal", "'9'", "BlockStatement", "ReturnStatement", "Literal", "false", "ReturnStatement", "BinaryOperation", "MemberReference", "len", ">", "Literal", "0"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [5, 8, "name"], [0, 9, "body"], [9, 10, "type"], [10, 11, "name"], [9, 12, "declarators"], [12, 13, "name"], [12, 14, "initializer"], [14, 15, "qualifier"], [14, 16, "member"], [0, 17, "body"], [17, 18, "control"], [18, 19, "init"], [19, 20, "type"], [20, 21, "name"], [19, 22, "declarators"], [22, 23, "name"], [22, 24, "initializer"], [24, 25, "value"], [18, 26, "condition"], [26, 27, "operandl"], [27, 28, "member"], [26, 29, "operator"], [26, 30, "operandr"], [30, 31, "member"], [18, 32, "update"], [32, 33, "member"], [32, 34, "postfix_operators"], [17, 35, "body"], [35, 36, "statements"], [36, 37, "type"], [37, 38, "name"], [36, 39, "declarators"], [39, 40, "name"], [39, 41, "initializer"], [41, 42, "qualifier"], [41, 43, "member"], [41, 44, "arguments"], [44, 45, "member"], [35, 46, "statements"], [46, 47, "condition"], [47, 48, "operandl"], [48, 49, "operandl"], [49, 50, "member"], [48, 51, "operator"], [48, 52, "operandr"], [52, 53, "value"], [47, 54, "operator"], [47, 55, "operandr"], [55, 56, "operandl"], [56, 57, "member"], [55, 58, "operator"], [55, 59, "operandr"], [59, 60, "value"], [46, 61, "then_statement"], [61, 62, "statements"], [62, 63, "expression"], [63, 64, "value"], [0, 65, "body"], [65, 66, "expression"], [66, 67, "operandl"], [67, 68, "member"], [66, 69, "operator"], [66, 70, "operandr"], [70, 71, "value"]], "rem_roots": [65], "add_roots": []}, {"id": 38, "mappings": {"n": "VAR_1", "Node": "TYPE_1", "NodeUtil": "TYPE_2", "isFunctionExpression": "METHOD_1", "isReduceableFunctionExpression": "METHOD_2"}, "nodes": ["MethodDeclaration", "static private", "BasicType", "boolean", "isReduceableFunctionExpression", "FormalParameter", "ReferenceType", "Node", "n", "ReturnStatement", "MethodInvocation", "NodeUtil", "isFunctionExpression", "MemberReference", "n"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [5, 8, "name"], [0, 9, "body"], [9, 10, "expression"], [10, 11, "qualifier"], [10, 12, "member"], [10, 13, "arguments"], [13, 14, "member"]], "rem_roots": [9], "add_roots": []}, {"id": 39, "mappings": {"parent": "VAR_1", "functionName": "VAR_2", "qualifiedName": "VAR_3", "callee": "VAR_4", "GETPROP": "VAR_5", "className": "VAR_6", "Token": "VAR_7", "target": "VAR_8", "node": "VAR_9", "Node": "TYPE_1", "String": "TYPE_2", "NodeUtil": "TYPE_3", "isExprCall": "METHOD_1", "extractClassNameIfGoog": "METHOD_2", "getNext": "METHOD_3", "getString": "METHOD_4", "getQualifiedName": "METHOD_5", "getType": "METHOD_6", "equals": "METHOD_7", "getFirstChild": "METHOD_8"}, "nodes": ["MethodDeclaration", "static private", "ReferenceType", "String", "extractClassNameIfGoog", "FormalParameter", "ReferenceType", "Node", "node", "FormalParameter", "ReferenceType", "Node", "parent", "FormalParameter", "ReferenceType", "String", "functionName", "LocalVariableDeclaration", "ReferenceType", "String", "VariableDeclarator", "className", "Literal", "null", "IfStatement", "MethodInvocation", "NodeUtil", "isExprCall", "MemberReference", "parent", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "Node", "VariableDeclarator", "callee", "MethodInvocation", "node", "getFirstChild", "IfStatement", "BinaryOperation", "BinaryOperation", "MemberReference", "callee", "!=", "Literal", "null", "&&", "BinaryOperation", "MethodInvocation", "callee", "getType", "==", "MemberReference", "Token", "GETPROP", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "String", "VariableDeclarator", "qualifiedName", "MethodInvocation", "callee", "getQualifiedName", "IfStatement", "MethodInvocation", "functionName", "equals", "MemberReference", "qualifiedName", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "Node", "VariableDeclarator", "target", "MethodInvocation", "callee", "getNext", "IfStatement", "BinaryOperation", "MemberReference", "target", "!=", "Literal", "null", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "className", "=", "MethodInvocation", "target", "getString", "ReturnStatement", "MemberReference", "className"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [5, 8, "name"], [0, 9, "parameters"], [9, 10, "type"], [10, 11, "name"], [9, 12, "name"], [0, 13, "parameters"], [13, 14, "type"], [14, 15, "name"], [13, 16, "name"], [0, 17, "body"], [17, 18, "type"], [18, 19, "name"], [17, 20, "declarators"], [20, 21, "name"], [20, 22, "initializer"], [22, 23, "value"], [0, 24, "body"], [24, 25, "condition"], [25, 26, "qualifier"], [25, 27, "member"], [25, 28, "arguments"], [28, 29, "member"], [24, 30, "then_statement"], [30, 31, "statements"], [31, 32, "type"], [32, 33, "name"], [31, 34, "declarators"], [34, 35, "name"], [34, 36, "initializer"], [36, 37, "qualifier"], [36, 38, "member"], [30, 39, "statements"], [39, 40, "condition"], [40, 41, "operandl"], [41, 42, "operandl"], [42, 43, "member"], [41, 44, "operator"], [41, 45, "operandr"], [45, 46, "value"], [40, 47, "operator"], [40, 48, "operandr"], [48, 49, "operandl"], [49, 50, "qualifier"], [49, 51, "member"], [48, 52, "operator"], [48, 53, "operandr"], [53, 54, "qualifier"], [53, 55, "member"], [39, 56, "then_statement"], [56, 57, "statements"], [57, 58, "type"], [58, 59, "name"], [57, 60, "declarators"], [60, 61, "name"], [60, 62, "initializer"], [62, 63, "qualifier"], [62, 64, "member"], [56, 65, "statements"], [65, 66, "condition"], [66, 67, "qualifier"], [66, 68, "member"], [66, 69, "arguments"], [69, 70, "member"], [65, 71, "then_statement"], [71, 72, "statements"], [72, 73, "type"], [73, 74, "name"], [72, 75, "declarators"], [75, 76, "name"], [75, 77, "initializer"], [77, 78, "qualifier"], [77, 79, "member"], [71, 80, "statements"], [80, 81, "condition"], [81, 82, "operandl"], [82, 83, "member"], [81, 84, "operator"], [81, 85, "operandr"], [85, 86, "value"], [80, 87, "then_statement"], [87, 88, "statements"], [88, 89, "expression"], [89, 90, "expressionl"], [90, 91, "member"], [89, 92, "type"], [89, 93, "value"], [93, 94, "qualifier"], [93, 95, "member"], [0, 96, "body"], [96, 97, "expression"], [97, 98, "member"]], "rem_roots": [81], "add_roots": []}, {"id": 40, "mappings": {"options.checkGlobalThisLevel": "VAR_1", "logger": "VAR_2", "guards": "VAR_3", "errorManager": "VAR_4", "options": "VAR_5", "ERROR": "VAR_6", "summaryDetailLevel": "VAR_7", "ECMASCRIPT5_STRICT": "VAR_8", "LanguageMode": "VAR_9", "CheckLevel": "VAR_10", "checkGlobalThisLevel": "VAR_11", "printer": "VAR_12", "ES5_STRICT": "VAR_13", "checkSymbols": "VAR_14", "composedGuards": "VAR_15", "CHECK_VARIABLES": "VAR_16", "outStream": "VAR_17", "OFF": "VAR_18", "checkTypes": "VAR_19", "GLOBAL_THIS": "VAR_20", "warningsGuard": "VAR_21", "RhinoErrorReporter": "VAR_22", "TYPE_PARSE_ERROR": "VAR_23", "CHECK_TYPES": "VAR_24", "DiagnosticGroups": "VAR_25", "PrintStreamErrorManager": "TYPE_1", "Lists": "TYPE_2", "List": "TYPE_3", "ComposeWarningsGuard": "TYPE_4", "CompilerOptions": "TYPE_5", "SuppressDocWarningsGuard": "TYPE_6", "DiagnosticGroup": "TYPE_7", "WarningsGuard": "TYPE_8", "DiagnosticGroupWarningsGuard": "TYPE_9", "LoggerErrorManager": "TYPE_10", "addGuard": "METHOD_1", "setSummaryDetailLevel": "METHOD_2", "getWarningsGuard": "METHOD_3", "isOn": "METHOD_4", "createMessageFormatter": "METHOD_5", "add": "METHOD_6", "getLanguageIn": "METHOD_7", "disables": "METHOD_8", "setWarningLevel": "METHOD_9", "forType": "METHOD_10", "getDiagnosticGroups": "METHOD_11", "getRegisteredGroups": "METHOD_12", "setErrorManager": "METHOD_13", "initOptions": "METHOD_14", "enables": "METHOD_15", "newArrayList": "METHOD_16"}, "nodes": ["MethodDeclaration", "public", "void", "initOptions", "FormalParameter", "ReferenceType", "CompilerOptions", "options", "StatementExpression", "Assignment", "This", "MemberReference", "options", "=", "MemberReference", "options", "IfStatement", "BinaryOperation", "MemberReference", "errorManager", "==", "Literal", "null", "BlockStatement", "IfStatement", "BinaryOperation", "MemberReference", "outStream", "==", "Literal", "null", "BlockStatement", "StatementExpression", "MethodInvocation", "setErrorManager", "ClassCreator", "ReferenceType", "LoggerErrorManager", "MethodInvocation", "createMessageFormatter", "MemberReference", "logger", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "PrintStreamErrorManager", "VariableDeclarator", "printer", "ClassCreator", "ReferenceType", "PrintStreamErrorManager", "MethodInvocation", "createMessageFormatter", "MemberReference", "outStream", "StatementExpression", "MethodInvocation", "printer", "setSummaryDetailLevel", "MemberReference", "options", "summaryDetailLevel", "StatementExpression", "MethodInvocation", "setErrorManager", "MemberReference", "printer", "IfStatement", "MethodInvocation", "options", "enables", "MemberReference", "DiagnosticGroups", "CHECK_TYPES", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "options", "checkTypes", "=", "Literal", "true", "IfStatement", "MethodInvocation", "options", "disables", "MemberReference", "DiagnosticGroups", "CHECK_TYPES", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "options", "checkTypes", "=", "Literal", "false", "IfStatement", "MemberReference", "!", "options", "checkTypes", "BlockStatement", "StatementExpression", "MethodInvocation", "options", "setWarningLevel", "MethodInvocation", "DiagnosticGroup", "forType", "MemberReference", "RhinoErrorReporter", "TYPE_PARSE_ERROR", "MemberReference", "CheckLevel", "OFF", "IfStatement", "MethodInvocation", "options.checkGlobalThisLevel", "isOn", "BlockStatement", "StatementExpression", "MethodInvocation", "options", "setWarningLevel", "MemberReference", "DiagnosticGroups", "GLOBAL_THIS", "MemberReference", "options", "checkGlobalThisLevel", "IfStatement", "BinaryOperation", "MethodInvocation", "options", "getLanguageIn", "==", "MemberReference", "LanguageMode", "ECMASCRIPT5_STRICT", "BlockStatement", "StatementExpression", "MethodInvocation", "options", "setWarningLevel", "MemberReference", "DiagnosticGroups", "ES5_STRICT", "MemberReference", "CheckLevel", "ERROR", "LocalVariableDeclaration", "ReferenceType", "List", "TypeArgument", "ReferenceType", "WarningsGuard", "VariableDeclarator", "guards", "MethodInvocation", "Lists", "newArrayList", "StatementExpression", "MethodInvocation", "guards", "add", "ClassCreator", "ReferenceType", "SuppressDocWarningsGuard", "MethodInvocation", "getDiagnosticGroups", "MethodInvocation", "getRegisteredGroups", "StatementExpression", "MethodInvocation", "guards", "add", "MethodInvocation", "options", "getWarningsGuard", "LocalVariableDeclaration", "ReferenceType", "ComposeWarningsGuard", "VariableDeclarator", "composedGuards", "ClassCreator", "ReferenceType", "ComposeWarningsGuard", "MemberReference", "guards", "IfStatement", "BinaryOperation", "MemberReference", "!", "options", "checkSymbols", "&&", "MethodInvocation", "!", "composedGuards", "enables", "MemberReference", "DiagnosticGroups", "CHECK_VARIABLES", "BlockStatement", "StatementExpression", "MethodInvocation", "composedGuards", "addGuard", "ClassCreator", "ReferenceType", "DiagnosticGroupWarningsGuard", "MemberReference", "DiagnosticGroups", "CHECK_VARIABLES", "MemberReference", "CheckLevel", "OFF", "StatementExpression", "Assignment", "This", "MemberReference", "warningsGuard", "=", "MemberReference", "composedGuards"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [0, 3, "name"], [0, 4, "parameters"], [4, 5, "type"], [5, 6, "name"], [4, 7, "name"], [0, 8, "body"], [8, 9, "expression"], [9, 10, "expressionl"], [10, 11, "selectors"], [11, 12, "member"], [9, 13, "type"], [9, 14, "value"], [14, 15, "member"], [0, 16, "body"], [16, 17, "condition"], [17, 18, "operandl"], [18, 19, "member"], [17, 20, "operator"], [17, 21, "operandr"], [21, 22, "value"], [16, 23, "then_statement"], [23, 24, "statements"], [24, 25, "condition"], [25, 26, "operandl"], [26, 27, "member"], [25, 28, "operator"], [25, 29, "operandr"], [29, 30, "value"], [24, 31, "then_statement"], [31, 32, "statements"], [32, 33, "expression"], [33, 34, "member"], [33, 35, "arguments"], [35, 36, "type"], [36, 37, "name"], [35, 38, "arguments"], [38, 39, "member"], [35, 40, "arguments"], [40, 41, "member"], [24, 42, "else_statement"], [42, 43, "statements"], [43, 44, "type"], [44, 45, "name"], [43, 46, "declarators"], [46, 47, "name"], [46, 48, "initializer"], [48, 49, "type"], [49, 50, "name"], [48, 51, "arguments"], [51, 52, "member"], [48, 53, "arguments"], [53, 54, "member"], [42, 55, "statements"], [55, 56, "expression"], [56, 57, "qualifier"], [56, 58, "member"], [56, 59, "arguments"], [59, 60, "qualifier"], [59, 61, "member"], [42, 62, "statements"], [62, 63, "expression"], [63, 64, "member"], [63, 65, "arguments"], [65, 66, "member"], [0, 67, "body"], [67, 68, "condition"], [68, 69, "qualifier"], [68, 70, "member"], [68, 71, "arguments"], [71, 72, "qualifier"], [71, 73, "member"], [67, 74, "then_statement"], [74, 75, "statements"], [75, 76, "expression"], [76, 77, "expressionl"], [77, 78, "qualifier"], [77, 79, "member"], [76, 80, "type"], [76, 81, "value"], [81, 82, "value"], [67, 83, "else_statement"], [83, 84, "condition"], [84, 85, "qualifier"], [84, 86, "member"], [84, 87, "arguments"], [87, 88, "qualifier"], [87, 89, "member"], [83, 90, "then_statement"], [90, 91, "statements"], [91, 92, "expression"], [92, 93, "expressionl"], [93, 94, "qualifier"], [93, 95, "member"], [92, 96, "type"], [92, 97, "value"], [97, 98, "value"], [83, 99, "else_statement"], [99, 100, "condition"], [100, 101, "prefix_operators"], [100, 102, "qualifier"], [100, 103, "member"], [99, 104, "then_statement"], [104, 105, "statements"], [105, 106, "expression"], [106, 107, "qualifier"], [106, 108, "member"], [106, 109, "arguments"], [109, 110, "qualifier"], [109, 111, "member"], [109, 112, "arguments"], [112, 113, "qualifier"], [112, 114, "member"], [106, 115, "arguments"], [115, 116, "qualifier"], [115, 117, "member"], [0, 118, "body"], [118, 119, "condition"], [119, 120, "qualifier"], [119, 121, "member"], [118, 122, "then_statement"], [122, 123, "statements"], [123, 124, "expression"], [124, 125, "qualifier"], [124, 126, "member"], [124, 127, "arguments"], [127, 128, "qualifier"], [127, 129, "member"], [124, 130, "arguments"], [130, 131, "qualifier"], [130, 132, "member"], [0, 133, "body"], [133, 134, "condition"], [134, 135, "operandl"], [135, 136, "qualifier"], [135, 137, "member"], [134, 138, "operator"], [134, 139, "operandr"], [139, 140, "qualifier"], [139, 141, "member"], [133, 142, "then_statement"], [142, 143, "statements"], [143, 144, "expression"], [144, 145, "qualifier"], [144, 146, "member"], [144, 147, "arguments"], [147, 148, "qualifier"], [147, 149, "member"], [144, 150, "arguments"], [150, 151, "qualifier"], [150, 152, "member"], [0, 153, "body"], [153, 154, "type"], [154, 155, "name"], [154, 156, "arguments"], [156, 157, "type"], [157, 158, "name"], [153, 159, "declarators"], [159, 160, "name"], [159, 161, "initializer"], [161, 162, "qualifier"], [161, 163, "member"], [0, 164, "body"], [164, 165, "expression"], [165, 166, "qualifier"], [165, 167, "member"], [165, 168, "arguments"], [168, 169, "type"], [169, 170, "name"], [168, 171, "arguments"], [171, 172, "member"], [171, 173, "selectors"], [173, 174, "member"], [0, 175, "body"], [175, 176, "expression"], [176, 177, "qualifier"], [176, 178, "member"], [176, 179, "arguments"], [179, 180, "qualifier"], [179, 181, "member"], [0, 182, "body"], [182, 183, "type"], [183, 184, "name"], [182, 185, "declarators"], [185, 186, "name"], [185, 187, "initializer"], [187, 188, "type"], [188, 189, "name"], [187, 190, "arguments"], [190, 191, "member"], [0, 192, "body"], [192, 193, "condition"], [193, 194, "operandl"], [194, 195, "prefix_operators"], [194, 196, "qualifier"], [194, 197, "member"], [193, 198, "operator"], [193, 199, "operandr"], [199, 200, "prefix_operators"], [199, 201, "qualifier"], [199, 202, "member"], [199, 203, "arguments"], [203, 204, "qualifier"], [203, 205, "member"], [192, 206, "then_statement"], [206, 207, "statements"], [207, 208, "expression"], [208, 209, "qualifier"], [208, 210, "member"], [208, 211, "arguments"], [211, 212, "type"], [212, 213, "name"], [211, 214, "arguments"], [214, 215, "qualifier"], [214, 216, "member"], [211, 217, "arguments"], [217, 218, "qualifier"], [217, 219, "member"], [0, 220, "body"], [220, 221, "expression"], [221, 222, "expressionl"], [222, 223, "selectors"], [223, 224, "member"], [221, 225, "type"], [221, 226, "value"], [226, 227, "member"]], "rem_roots": [119], "add_roots": []}, {"id": 41, "mappings": {"charno": "VAR_1", "sourceExcerpt": "VAR_2", "description": "VAR_3", "source": "VAR_4", "error": "VAR_5", "LINE": "VAR_6", "warning": "VAR_7", "ERROR": "VAR_8", "b": "VAR_9", "c": "VAR_10", "CheckLevel": "VAR_11", "i": "VAR_12", "WARNING": "VAR_13", "excerptFormatter": "VAR_14", "sourceName": "VAR_15", "excerpt": "VAR_16", "lineNumber": "VAR_17", "StringBuilder": "TYPE_1", "String": "TYPE_2", "JSError": "TYPE_3", "Character": "TYPE_4", "SourceExcerptProvider": "TYPE_5", "getLevelName": "METHOD_1", "get": "METHOD_2", "getCharno": "METHOD_3", "format": "METHOD_4", "length": "METHOD_5", "isWhitespace": "METHOD_6", "getSource": "METHOD_7", "equals": "METHOD_8", "toString": "METHOD_9", "append": "METHOD_10", "charAt": "METHOD_11", "0": "INT_1", "\": \"": "STRING_1", "\" - \"": "STRING_2", "\"^\\n\"": "STRING_3", "':'": "CHAR_1", "'\\n'": "CHAR_2", "' '": "CHAR_3"}, "nodes": ["MethodDeclaration", "private", "ReferenceType", "String", "format", "FormalParameter", "ReferenceType", "JSError", "error", "FormalParameter", "BasicType", "boolean", "warning", "LocalVariableDeclaration", "ReferenceType", "SourceExcerptProvider", "VariableDeclarator", "source", "MethodInvocation", "getSource", "LocalVariableDeclaration", "ReferenceType", "String", "VariableDeclarator", "sourceExcerpt", "TernaryExpression", "BinaryOperation", "MemberReference", "source", "==", "Literal", "null", "Literal", "null", "MethodInvocation", "excerpt", "get", "MemberReference", "source", "MemberReference", "error", "sourceName", "MemberReference", "error", "lineNumber", "MemberReference", "excerptFormatter", "LocalVariableDeclaration", "ReferenceType", "StringBuilder", "VariableDeclarator", "b", "ClassCreator", "ReferenceType", "StringBuilder", "IfStatement", "BinaryOperation", "MemberReference", "error", "sourceName", "!=", "Literal", "null", "BlockStatement", "StatementExpression", "MethodInvocation", "b", "append", "MemberReference", "error", "sourceName", "IfStatement", "BinaryOperation", "MemberReference", "error", "lineNumber", ">", "Literal", "0", "BlockStatement", "StatementExpression", "MethodInvocation", "b", "append", "Literal", "':'", "StatementExpression", "MethodInvocation", "b", "append", "MemberReference", "error", "lineNumber", "StatementExpression", "MethodInvocation", "b", "append", "Literal", "\": \"", "StatementExpression", "MethodInvocation", "b", "append", "MethodInvocation", "getLevelName", "TernaryExpression", "MemberReference", "warning", "MemberReference", "CheckLevel", "WARNING", "MemberReference", "CheckLevel", "ERROR", "StatementExpression", "MethodInvocation", "b", "append", "Literal", "\" - \"", "StatementExpression", "MethodInvocation", "b", "append", "MemberReference", "error", "description", "StatementExpression", "MethodInvocation", "b", "append", "Literal", "'\\n'", "IfStatement", "BinaryOperation", "MemberReference", "sourceExcerpt", "!=", "Literal", "null", "BlockStatement", "StatementExpression", "MethodInvocation", "b", "append", "MemberReference", "sourceExcerpt", "StatementExpression", "MethodInvocation", "b", "append", "Literal", "'\\n'", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "charno", "MethodInvocation", "error", "getCharno", "IfStatement", "BinaryOperation", "BinaryOperation", "MethodInvocation", "excerpt", "equals", "MemberReference", "LINE", "&&", "BinaryOperation", "Literal", "0", "<=", "MemberReference", "charno", "&&", "BinaryOperation", "MemberReference", "charno", "<", "MethodInvocation", "sourceExcerpt", "length", "BlockStatement", "ForStatement", "ForControl", "VariableDeclaration", "BasicType", "int", "VariableDeclarator", "i", "Literal", "0", "BinaryOperation", "MemberReference", "i", "<", "MemberReference", "charno", "MemberReference", "i", "++", "BlockStatement", "LocalVariableDeclaration", "BasicType", "char", "VariableDeclarator", "c", "MethodInvocation", "sourceExcerpt", "charAt", "MemberReference", "i", "IfStatement", "MethodInvocation", "Character", "isWhitespace", "MemberReference", "c", "BlockStatement", "StatementExpression", "MethodInvocation", "b", "append", "MemberReference", "c", "BlockStatement", "StatementExpression", "MethodInvocation", "b", "append", "Literal", "' '", "StatementExpression", "MethodInvocation", "b", "append", "Literal", "\"^\\n\"", "ReturnStatement", "MethodInvocation", "b", "toString"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [5, 8, "name"], [0, 9, "parameters"], [9, 10, "type"], [10, 11, "name"], [9, 12, "name"], [0, 13, "body"], [13, 14, "type"], [14, 15, "name"], [13, 16, "declarators"], [16, 17, "name"], [16, 18, "initializer"], [18, 19, "member"], [0, 20, "body"], [20, 21, "type"], [21, 22, "name"], [20, 23, "declarators"], [23, 24, "name"], [23, 25, "initializer"], [25, 26, "condition"], [26, 27, "operandl"], [27, 28, "member"], [26, 29, "operator"], [26, 30, "operandr"], [30, 31, "value"], [25, 32, "if_true"], [32, 33, "value"], [25, 34, "if_false"], [34, 35, "qualifier"], [34, 36, "member"], [34, 37, "arguments"], [37, 38, "member"], [34, 39, "arguments"], [39, 40, "qualifier"], [39, 41, "member"], [34, 42, "arguments"], [42, 43, "qualifier"], [42, 44, "member"], [34, 45, "arguments"], [45, 46, "member"], [0, 47, "body"], [47, 48, "type"], [48, 49, "name"], [47, 50, "declarators"], [50, 51, "name"], [50, 52, "initializer"], [52, 53, "type"], [53, 54, "name"], [0, 55, "body"], [55, 56, "condition"], [56, 57, "operandl"], [57, 58, "qualifier"], [57, 59, "member"], [56, 60, "operator"], [56, 61, "operandr"], [61, 62, "value"], [55, 63, "then_statement"], [63, 64, "statements"], [64, 65, "expression"], [65, 66, "qualifier"], [65, 67, "member"], [65, 68, "arguments"], [68, 69, "qualifier"], [68, 70, "member"], [63, 71, "statements"], [71, 72, "condition"], [72, 73, "operandl"], [73, 74, "qualifier"], [73, 75, "member"], [72, 76, "operator"], [72, 77, "operandr"], [77, 78, "value"], [71, 79, "then_statement"], [79, 80, "statements"], [80, 81, "expression"], [81, 82, "qualifier"], [81, 83, "member"], [81, 84, "arguments"], [84, 85, "value"], [79, 86, "statements"], [86, 87, "expression"], [87, 88, "qualifier"], [87, 89, "member"], [87, 90, "arguments"], [90, 91, "qualifier"], [90, 92, "member"], [63, 93, "statements"], [93, 94, "expression"], [94, 95, "qualifier"], [94, 96, "member"], [94, 97, "arguments"], [97, 98, "value"], [0, 99, "body"], [99, 100, "expression"], [100, 101, "qualifier"], [100, 102, "member"], [100, 103, "arguments"], [103, 104, "member"], [103, 105, "arguments"], [105, 106, "condition"], [106, 107, "member"], [105, 108, "if_true"], [108, 109, "qualifier"], [108, 110, "member"], [105, 111, "if_false"], [111, 112, "qualifier"], [111, 113, "member"], [0, 114, "body"], [114, 115, "expression"], [115, 116, "qualifier"], [115, 117, "member"], [115, 118, "arguments"], [118, 119, "value"], [0, 120, "body"], [120, 121, "expression"], [121, 122, "qualifier"], [121, 123, "member"], [121, 124, "arguments"], [124, 125, "qualifier"], [124, 126, "member"], [0, 127, "body"], [127, 128, "expression"], [128, 129, "qualifier"], [128, 130, "member"], [128, 131, "arguments"], [131, 132, "value"], [0, 133, "body"], [133, 134, "condition"], [134, 135, "operandl"], [135, 136, "member"], [134, 137, "operator"], [134, 138, "operandr"], [138, 139, "value"], [133, 140, "then_statement"], [140, 141, "statements"], [141, 142, "expression"], [142, 143, "qualifier"], [142, 144, "member"], [142, 145, "arguments"], [145, 146, "member"], [140, 147, "statements"], [147, 148, "expression"], [148, 149, "qualifier"], [148, 150, "member"], [148, 151, "arguments"], [151, 152, "value"], [140, 153, "statements"], [153, 154, "type"], [154, 155, "name"], [153, 156, "declarators"], [156, 157, "name"], [156, 158, "initializer"], [158, 159, "qualifier"], [158, 160, "member"], [140, 161, "statements"], [161, 162, "condition"], [162, 163, "operandl"], [163, 164, "operandl"], [164, 165, "qualifier"], [164, 166, "member"], [164, 167, "arguments"], [167, 168, "member"], [163, 169, "operator"], [163, 170, "operandr"], [170, 171, "operandl"], [171, 172, "value"], [170, 173, "operator"], [170, 174, "operandr"], [174, 175, "member"], [162, 176, "operator"], [162, 177, "operandr"], [177, 178, "operandl"], [178, 179, "member"], [177, 180, "operator"], [177, 181, "operandr"], [181, 182, "qualifier"], [181, 183, "member"], [161, 184, "then_statement"], [184, 185, "statements"], [185, 186, "control"], [186, 187, "init"], [187, 188, "type"], [188, 189, "name"], [187, 190, "declarators"], [190, 191, "name"], [190, 192, "initializer"], [192, 193, "value"], [186, 194, "condition"], [194, 195, "operandl"], [195, 196, "member"], [194, 197, "operator"], [194, 198, "operandr"], [198, 199, "member"], [186, 200, "update"], [200, 201, "member"], [200, 202, "postfix_operators"], [185, 203, "body"], [203, 204, "statements"], [204, 205, "type"], [205, 206, "name"], [204, 207, "declarators"], [207, 208, "name"], [207, 209, "initializer"], [209, 210, "qualifier"], [209, 211, "member"], [209, 212, "arguments"], [212, 213, "member"], [203, 214, "statements"], [214, 215, "condition"], [215, 216, "qualifier"], [215, 217, "member"], [215, 218, "arguments"], [218, 219, "member"], [214, 220, "then_statement"], [220, 221, "statements"], [221, 222, "expression"], [222, 223, "qualifier"], [222, 224, "member"], [222, 225, "arguments"], [225, 226, "member"], [214, 227, "else_statement"], [227, 228, "statements"], [228, 229, "expression"], [229, 230, "qualifier"], [229, 231, "member"], [229, 232, "arguments"], [232, 233, "value"], [184, 234, "statements"], [234, 235, "expression"], [235, 236, "qualifier"], [235, 237, "member"], [235, 238, "arguments"], [238, 239, "value"], [0, 240, "body"], [240, 241, "expression"], [241, 242, "qualifier"], [241, 243, "member"]], "rem_roots": [162], "add_roots": []}, {"id": 42, "mappings": {"singlequoteEscape": "VAR_1", "sb": "VAR_2", "quote": "VAR_3", "doublequoteEscape": "VAR_4", "backslashEscape": "VAR_5", "c": "VAR_6", "i": "VAR_7", "s": "VAR_8", "outputCharsetEncoder": "VAR_9", "StringBuilder": "TYPE_1", "String": "TYPE_2", "CharsetEncoder": "TYPE_3", "START_COMMENT": "TYPE_4", "END_SCRIPT": "TYPE_5", "regionMatches": "METHOD_1", "strEscape": "METHOD_2", "length": "METHOD_3", "appendHexJavaScriptRepresentation": "METHOD_4", "canEncode": "METHOD_5", "toString": "METHOD_6", "append": "METHOD_7", "charAt": "METHOD_8", "0x7f": "INT_1", "0x1f": "INT_2", "0": "INT_3", "1": "INT_4", "2": "INT_5", "\"/script\"": "STRING_1", "\"\\\\>\"": "STRING_2", "\"!--\"": "STRING_3", "\"\\\\r\"": "STRING_4", "\"\\\\t\"": "STRING_5", "\"\\\\n\"": "STRING_6", "\"\\\\0\"": "STRING_7", "\"<\\\\\"": "STRING_8", "'-'": "CHAR_1", "'\\\"'": "CHAR_2", "'>'": "CHAR_3", "']'": "CHAR_4", "'<'": "CHAR_5", "'\\r'": "CHAR_6", "'\\t'": "CHAR_7", "'\\n'": "CHAR_8", "'\\0'": "CHAR_9", "'\\''": "CHAR_10", "'\\\\'": "CHAR_11"}, "nodes": ["MethodDeclaration", "static", "ReferenceType", "String", "strEscape", "FormalParameter", "ReferenceType", "String", "s", "FormalParameter", "BasicType", "char", "quote", "FormalParameter", "ReferenceType", "String", "doublequoteEscape", "FormalParameter", "ReferenceType", "String", "singlequoteEscape", "FormalParameter", "ReferenceType", "String", "backslashEscape", "FormalParameter", "ReferenceType", "CharsetEncoder", "outputCharsetEncoder", "LocalVariableDeclaration", "ReferenceType", "StringBuilder", "VariableDeclarator", "sb", "ClassCreator", "ReferenceType", "StringBuilder", "BinaryOperation", "MethodInvocation", "s", "length", "+", "Literal", "2", "StatementExpression", "MethodInvocation", "sb", "append", "MemberReference", "quote", "ForStatement", "ForControl", "VariableDeclaration", "BasicType", "int", "VariableDeclarator", "i", "Literal", "0", "BinaryOperation", "MemberReference", "i", "<", "MethodInvocation", "s", "length", "MemberReference", "i", "++", "BlockStatement", "LocalVariableDeclaration", "BasicType", "char", "VariableDeclarator", "c", "MethodInvocation", "s", "charAt", "MemberReference", "i", "SwitchStatement", "MemberReference", "c", "SwitchStatementCase", "Literal", "'\\0'", "StatementExpression", "MethodInvocation", "sb", "append", "Literal", "\"\\\\0\"", "BreakStatement", "SwitchStatementCase", "Literal", "'\\n'", "StatementExpression", "MethodInvocation", "sb", "append", "Literal", "\"\\\\n\"", "BreakStatement", "SwitchStatementCase", "Literal", "'\\r'", "StatementExpression", "MethodInvocation", "sb", "append", "Literal", "\"\\\\r\"", "BreakStatement", "SwitchStatementCase", "Literal", "'\\t'", "StatementExpression", "MethodInvocation", "sb", "append", "Literal", "\"\\\\t\"", "BreakStatement", "SwitchStatementCase", "Literal", "'\\\\'", "StatementExpression", "MethodInvocation", "sb", "append", "MemberReference", "backslashEscape", "BreakStatement", "SwitchStatementCase", "Literal", "'\\\"'", "StatementExpression", "MethodInvocation", "sb", "append", "MemberReference", "doublequoteEscape", "BreakStatement", "SwitchStatementCase", "Literal", "'\\''", "StatementExpression", "MethodInvocation", "sb", "append", "MemberReference", "singlequoteEscape", "BreakStatement", "SwitchStatementCase", "Literal", "'>'", "IfStatement", "BinaryOperation", "BinaryOperation", "MemberReference", "i", ">=", "Literal", "2", "&&", "BinaryOperation", "BinaryOperation", "BinaryOperation", "MethodInvocation", "s", "charAt", "BinaryOperation", "MemberReference", "i", "-", "Literal", "1", "==", "Literal", "'-'", "&&", "BinaryOperation", "MethodInvocation", "s", "charAt", "BinaryOperation", "MemberReference", "i", "-", "Literal", "2", "==", "Literal", "'-'", "||", "BinaryOperation", "BinaryOperation", "MethodInvocation", "s", "charAt", "BinaryOperation", "MemberReference", "i", "-", "Literal", "1", "==", "Literal", "']'", "&&", "BinaryOperation", "MethodInvocation", "s", "charAt", "BinaryOperation", "MemberReference", "i", "-", "Literal", "2", "==", "Literal", "']'", "BlockStatement", "StatementExpression", "MethodInvocation", "sb", "append", "Literal", "\"\\\\>\"", "BlockStatement", "StatementExpression", "MethodInvocation", "sb", "append", "MemberReference", "c", "BreakStatement", "SwitchStatementCase", "Literal", "'<'", "LocalVariableDeclaration", "final", "ReferenceType", "String", "VariableDeclarator", "END_SCRIPT", "Literal", "\"/script\"", "LocalVariableDeclaration", "final", "ReferenceType", "String", "VariableDeclarator", "START_COMMENT", "Literal", "\"!--\"", "IfStatement", "MethodInvocation", "s", "regionMatches", "Literal", "true", "BinaryOperation", "MemberReference", "i", "+", "Literal", "1", "MemberReference", "END_SCRIPT", "Literal", "0", "MethodInvocation", "END_SCRIPT", "length", "BlockStatement", "StatementExpression", "MethodInvocation", "sb", "append", "Literal", "\"<\\\\\"", "IfStatement", "MethodInvocation", "s", "regionMatches", "Literal", "false", "BinaryOperation", "MemberReference", "i", "+", "Literal", "1", "MemberReference", "START_COMMENT", "Literal", "0", "MethodInvocation", "START_COMMENT", "length", "BlockStatement", "StatementExpression", "MethodInvocation", "sb", "append", "Literal", "\"<\\\\\"", "BlockStatement", "StatementExpression", "MethodInvocation", "sb", "append", "MemberReference", "c", "BreakStatement", "SwitchStatementCase", "IfStatement", "BinaryOperation", "MemberReference", "outputCharsetEncoder", "!=", "Literal", "null", "BlockStatement", "IfStatement", "MethodInvocation", "outputCharsetEncoder", "canEncode", "MemberReference", "c", "BlockStatement", "StatementExpression", "MethodInvocation", "sb", "append", "MemberReference", "c", "BlockStatement", "StatementExpression", "MethodInvocation", "appendHexJavaScriptRepresentation", "MemberReference", "sb", "MemberReference", "c", "BlockStatement", "IfStatement", "BinaryOperation", "BinaryOperation", "MemberReference", "c", ">", "Literal", "0x1f", "&&", "BinaryOperation", "MemberReference", "c", "<", "Literal", "0x7f", "BlockStatement", "StatementExpression", "MethodInvocation", "sb", "append", "MemberReference", "c", "BlockStatement", "StatementExpression", "MethodInvocation", "appendHexJavaScriptRepresentation", "MemberReference", "sb", "MemberReference", "c", "StatementExpression", "MethodInvocation", "sb", "append", "MemberReference", "quote", "ReturnStatement", "MethodInvocation", "sb", "toString"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [5, 8, "name"], [0, 9, "parameters"], [9, 10, "type"], [10, 11, "name"], [9, 12, "name"], [0, 13, "parameters"], [13, 14, "type"], [14, 15, "name"], [13, 16, "name"], [0, 17, "parameters"], [17, 18, "type"], [18, 19, "name"], [17, 20, "name"], [0, 21, "parameters"], [21, 22, "type"], [22, 23, "name"], [21, 24, "name"], [0, 25, "parameters"], [25, 26, "type"], [26, 27, "name"], [25, 28, "name"], [0, 29, "body"], [29, 30, "type"], [30, 31, "name"], [29, 32, "declarators"], [32, 33, "name"], [32, 34, "initializer"], [34, 35, "type"], [35, 36, "name"], [34, 37, "arguments"], [37, 38, "operandl"], [38, 39, "qualifier"], [38, 40, "member"], [37, 41, "operator"], [37, 42, "operandr"], [42, 43, "value"], [0, 44, "body"], [44, 45, "expression"], [45, 46, "qualifier"], [45, 47, "member"], [45, 48, "arguments"], [48, 49, "member"], [0, 50, "body"], [50, 51, "control"], [51, 52, "init"], [52, 53, "type"], [53, 54, "name"], [52, 55, "declarators"], [55, 56, "name"], [55, 57, "initializer"], [57, 58, "value"], [51, 59, "condition"], [59, 60, "operandl"], [60, 61, "member"], [59, 62, "operator"], [59, 63, "operandr"], [63, 64, "qualifier"], [63, 65, "member"], [51, 66, "update"], [66, 67, "member"], [66, 68, "postfix_operators"], [50, 69, "body"], [69, 70, "statements"], [70, 71, "type"], [71, 72, "name"], [70, 73, "declarators"], [73, 74, "name"], [73, 75, "initializer"], [75, 76, "qualifier"], [75, 77, "member"], [75, 78, "arguments"], [78, 79, "member"], [69, 80, "statements"], [80, 81, "expression"], [81, 82, "member"], [80, 83, "cases"], [83, 84, "case"], [84, 85, "value"], [83, 86, "statements"], [86, 87, "expression"], [87, 88, "qualifier"], [87, 89, "member"], [87, 90, "arguments"], [90, 91, "value"], [83, 92, "statements"], [80, 93, "cases"], [93, 94, "case"], [94, 95, "value"], [93, 96, "statements"], [96, 97, "expression"], [97, 98, "qualifier"], [97, 99, "member"], [97, 100, "arguments"], [100, 101, "value"], [93, 102, "statements"], [80, 103, "cases"], [103, 104, "case"], [104, 105, "value"], [103, 106, "statements"], [106, 107, "expression"], [107, 108, "qualifier"], [107, 109, "member"], [107, 110, "arguments"], [110, 111, "value"], [103, 112, "statements"], [80, 113, "cases"], [113, 114, "case"], [114, 115, "value"], [113, 116, "statements"], [116, 117, "expression"], [117, 118, "qualifier"], [117, 119, "member"], [117, 120, "arguments"], [120, 121, "value"], [113, 122, "statements"], [80, 123, "cases"], [123, 124, "case"], [124, 125, "value"], [123, 126, "statements"], [126, 127, "expression"], [127, 128, "qualifier"], [127, 129, "member"], [127, 130, "arguments"], [130, 131, "member"], [123, 132, "statements"], [80, 133, "cases"], [133, 134, "case"], [134, 135, "value"], [133, 136, "statements"], [136, 137, "expression"], [137, 138, "qualifier"], [137, 139, "member"], [137, 140, "arguments"], [140, 141, "member"], [133, 142, "statements"], [80, 143, "cases"], [143, 144, "case"], [144, 145, "value"], [143, 146, "statements"], [146, 147, "expression"], [147, 148, "qualifier"], [147, 149, "member"], [147, 150, "arguments"], [150, 151, "member"], [143, 152, "statements"], [80, 153, "cases"], [153, 154, "case"], [154, 155, "value"], [153, 156, "statements"], [156, 157, "condition"], [157, 158, "operandl"], [158, 159, "operandl"], [159, 160, "member"], [158, 161, "operator"], [158, 162, "operandr"], [162, 163, "value"], [157, 164, "operator"], [157, 165, "operandr"], [165, 166, "operandl"], [166, 167, "operandl"], [167, 168, "operandl"], [168, 169, "qualifier"], [168, 170, "member"], [168, 171, "arguments"], [171, 172, "operandl"], [172, 173, "member"], [171, 174, "operator"], [171, 175, "operandr"], [175, 176, "value"], [167, 177, "operator"], [167, 178, "operandr"], [178, 179, "value"], [166, 180, "operator"], [166, 181, "operandr"], [181, 182, "operandl"], [182, 183, "qualifier"], [182, 184, "member"], [182, 185, "arguments"], [185, 186, "operandl"], [186, 187, "member"], [185, 188, "operator"], [185, 189, "operandr"], [189, 190, "value"], [181, 191, "operator"], [181, 192, "operandr"], [192, 193, "value"], [165, 194, "operator"], [165, 195, "operandr"], [195, 196, "operandl"], [196, 197, "operandl"], [197, 198, "qualifier"], [197, 199, "member"], [197, 200, "arguments"], [200, 201, "operandl"], [201, 202, "member"], [200, 203, "operator"], [200, 204, "operandr"], [204, 205, "value"], [196, 206, "operator"], [196, 207, "operandr"], [207, 208, "value"], [195, 209, "operator"], [195, 210, "operandr"], [210, 211, "operandl"], [211, 212, "qualifier"], [211, 213, "member"], [211, 214, "arguments"], [214, 215, "operandl"], [215, 216, "member"], [214, 217, "operator"], [214, 218, "operandr"], [218, 219, "value"], [210, 220, "operator"], [210, 221, "operandr"], [221, 222, "value"], [156, 223, "then_statement"], [223, 224, "statements"], [224, 225, "expression"], [225, 226, "qualifier"], [225, 227, "member"], [225, 228, "arguments"], [228, 229, "value"], [156, 230, "else_statement"], [230, 231, "statements"], [231, 232, "expression"], [232, 233, "qualifier"], [232, 234, "member"], [232, 235, "arguments"], [235, 236, "member"], [153, 237, "statements"], [80, 238, "cases"], [238, 239, "case"], [239, 240, "value"], [238, 241, "statements"], [241, 242, "modifiers"], [241, 243, "type"], [243, 244, "name"], [241, 245, "declarators"], [245, 246, "name"], [245, 247, "initializer"], [247, 248, "value"], [238, 249, "statements"], [249, 250, "modifiers"], [249, 251, "type"], [251, 252, "name"], [249, 253, "declarators"], [253, 254, "name"], [253, 255, "initializer"], [255, 256, "value"], [238, 257, "statements"], [257, 258, "condition"], [258, 259, "qualifier"], [258, 260, "member"], [258, 261, "arguments"], [261, 262, "value"], [258, 263, "arguments"], [263, 264, "operandl"], [264, 265, "member"], [263, 266, "operator"], [263, 267, "operandr"], [267, 268, "value"], [258, 269, "arguments"], [269, 270, "member"], [258, 271, "arguments"], [271, 272, "value"], [258, 273, "arguments"], [273, 274, "qualifier"], [273, 275, "member"], [257, 276, "then_statement"], [276, 277, "statements"], [277, 278, "expression"], [278, 279, "qualifier"], [278, 280, "member"], [278, 281, "arguments"], [281, 282, "value"], [257, 283, "else_statement"], [283, 284, "condition"], [284, 285, "qualifier"], [284, 286, "member"], [284, 287, "arguments"], [287, 288, "value"], [284, 289, "arguments"], [289, 290, "operandl"], [290, 291, "member"], [289, 292, "operator"], [289, 293, "operandr"], [293, 294, "value"], [284, 295, "arguments"], [295, 296, "member"], [284, 297, "arguments"], [297, 298, "value"], [284, 299, "arguments"], [299, 300, "qualifier"], [299, 301, "member"], [283, 302, "then_statement"], [302, 303, "statements"], [303, 304, "expression"], [304, 305, "qualifier"], [304, 306, "member"], [304, 307, "arguments"], [307, 308, "value"], [283, 309, "else_statement"], [309, 310, "statements"], [310, 311, "expression"], [311, 312, "qualifier"], [311, 313, "member"], [311, 314, "arguments"], [314, 315, "member"], [238, 316, "statements"], [80, 317, "cases"], [317, 318, "statements"], [318, 319, "condition"], [319, 320, "operandl"], [320, 321, "member"], [319, 322, "operator"], [319, 323, "operandr"], [323, 324, "value"], [318, 325, "then_statement"], [325, 326, "statements"], [326, 327, "condition"], [327, 328, "qualifier"], [327, 329, "member"], [327, 330, "arguments"], [330, 331, "member"], [326, 332, "then_statement"], [332, 333, "statements"], [333, 334, "expression"], [334, 335, "qualifier"], [334, 336, "member"], [334, 337, "arguments"], [337, 338, "member"], [326, 339, "else_statement"], [339, 340, "statements"], [340, 341, "expression"], [341, 342, "member"], [341, 343, "arguments"], [343, 344, "member"], [341, 345, "arguments"], [345, 346, "member"], [318, 347, "else_statement"], [347, 348, "statements"], [348, 349, "condition"], [349, 350, "operandl"], [350, 351, "operandl"], [351, 352, "member"], [350, 353, "operator"], [350, 354, "operandr"], [354, 355, "value"], [349, 356, "operator"], [349, 357, "operandr"], [357, 358, "operandl"], [358, 359, "member"], [357, 360, "operator"], [357, 361, "operandr"], [361, 362, "value"], [348, 363, "then_statement"], [363, 364, "statements"], [364, 365, "expression"], [365, 366, "qualifier"], [365, 367, "member"], [365, 368, "arguments"], [368, 369, "member"], [348, 370, "else_statement"], [370, 371, "statements"], [371, 372, "expression"], [372, 373, "member"], [372, 374, "arguments"], [374, 375, "member"], [372, 376, "arguments"], [376, 377, "member"], [0, 378, "body"], [378, 379, "expression"], [379, 380, "qualifier"], [379, 381, "member"], [379, 382, "arguments"], [382, 383, "member"], [0, 384, "body"], [384, 385, "expression"], [385, 386, "qualifier"], [385, 387, "member"]], "rem_roots": [83], "add_roots": []}, {"id": 43, "mappings": {"astParameter": "VAR_1", "body": "VAR_2", "astParameters": "VAR_3", "jsDocParameters": "VAR_4", "jsDocParameter": "VAR_5", "functionType": "VAR_6", "functionNode": "VAR_7", "Node": "TYPE_1", "FunctionType": "TYPE_2", "getNext": "METHOD_1", "getJSType": "METHOD_2", "getParametersNode": "METHOD_3", "children": "METHOD_4", "defineSlot": "METHOD_5", "getFirstChild": "METHOD_6", "declareArguments": "METHOD_7"}, "nodes": ["MethodDeclaration", "private", "void", "declareArguments", "FormalParameter", "ReferenceType", "Node", "functionNode", "LocalVariableDeclaration", "ReferenceType", "Node", "VariableDeclarator", "astParameters", "MethodInvocation", "functionNode", "getFirstChild", "MethodInvocation", "getNext", "LocalVariableDeclaration", "ReferenceType", "Node", "VariableDeclarator", "body", "MethodInvocation", "astParameters", "getNext", "LocalVariableDeclaration", "ReferenceType", "FunctionType", "VariableDeclarator", "functionType", "Cast", "ReferenceType", "FunctionType", "MethodInvocation", "functionNode", "getJSType", "IfStatement", "BinaryOperation", "MemberReference", "functionType", "!=", "Literal", "null", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "Node", "VariableDeclarator", "jsDocParameters", "MethodInvocation", "functionType", "getParametersNode", "IfStatement", "BinaryOperation", "MemberReference", "jsDocParameters", "!=", "Literal", "null", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "Node", "VariableDeclarator", "jsDocParameter", "MethodInvocation", "jsDocParameters", "getFirstChild", "ForStatement", "EnhancedForControl", "VariableDeclaration", "ReferenceType", "Node", "VariableDeclarator", "astParameter", "MethodInvocation", "astParameters", "children", "BlockStatement", "IfStatement", "BinaryOperation", "MemberReference", "jsDocParameter", "!=", "Literal", "null", "BlockStatement", "StatementExpression", "MethodInvocation", "defineSlot", "MemberReference", "astParameter", "MemberReference", "functionNode", "MethodInvocation", "jsDocParameter", "getJSType", "Literal", "true", "StatementExpression", "Assignment", "MemberReference", "jsDocParameter", "=", "MethodInvocation", "jsDocParameter", "getNext", "BlockStatement", "StatementExpression", "MethodInvocation", "defineSlot", "MemberReference", "astParameter", "MemberReference", "functionNode", "Literal", "null", "Literal", "true"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [0, 3, "name"], [0, 4, "parameters"], [4, 5, "type"], [5, 6, "name"], [4, 7, "name"], [0, 8, "body"], [8, 9, "type"], [9, 10, "name"], [8, 11, "declarators"], [11, 12, "name"], [11, 13, "initializer"], [13, 14, "qualifier"], [13, 15, "member"], [13, 16, "selectors"], [16, 17, "member"], [0, 18, "body"], [18, 19, "type"], [19, 20, "name"], [18, 21, "declarators"], [21, 22, "name"], [21, 23, "initializer"], [23, 24, "qualifier"], [23, 25, "member"], [0, 26, "body"], [26, 27, "type"], [27, 28, "name"], [26, 29, "declarators"], [29, 30, "name"], [29, 31, "initializer"], [31, 32, "type"], [32, 33, "name"], [31, 34, "expression"], [34, 35, "qualifier"], [34, 36, "member"], [0, 37, "body"], [37, 38, "condition"], [38, 39, "operandl"], [39, 40, "member"], [38, 41, "operator"], [38, 42, "operandr"], [42, 43, "value"], [37, 44, "then_statement"], [44, 45, "statements"], [45, 46, "type"], [46, 47, "name"], [45, 48, "declarators"], [48, 49, "name"], [48, 50, "initializer"], [50, 51, "qualifier"], [50, 52, "member"], [44, 53, "statements"], [53, 54, "condition"], [54, 55, "operandl"], [55, 56, "member"], [54, 57, "operator"], [54, 58, "operandr"], [58, 59, "value"], [53, 60, "then_statement"], [60, 61, "statements"], [61, 62, "type"], [62, 63, "name"], [61, 64, "declarators"], [64, 65, "name"], [64, 66, "initializer"], [66, 67, "qualifier"], [66, 68, "member"], [60, 69, "statements"], [69, 70, "control"], [70, 71, "var"], [71, 72, "type"], [72, 73, "name"], [71, 74, "declarators"], [74, 75, "name"], [70, 76, "iterable"], [76, 77, "qualifier"], [76, 78, "member"], [69, 79, "body"], [79, 80, "statements"], [80, 81, "condition"], [81, 82, "operandl"], [82, 83, "member"], [81, 84, "operator"], [81, 85, "operandr"], [85, 86, "value"], [80, 87, "then_statement"], [87, 88, "statements"], [88, 89, "expression"], [89, 90, "member"], [89, 91, "arguments"], [91, 92, "member"], [89, 93, "arguments"], [93, 94, "member"], [89, 95, "arguments"], [95, 96, "qualifier"], [95, 97, "member"], [89, 98, "arguments"], [98, 99, "value"], [87, 100, "statements"], [100, 101, "expression"], [101, 102, "expressionl"], [102, 103, "member"], [101, 104, "type"], [101, 105, "value"], [105, 106, "qualifier"], [105, 107, "member"], [80, 108, "else_statement"], [108, 109, "statements"], [109, 110, "expression"], [110, 111, "member"], [110, 112, "arguments"], [112, 113, "member"], [110, 114, "arguments"], [114, 115, "member"], [110, 116, "arguments"], [116, 117, "value"], [110, 118, "arguments"], [118, 119, "value"]], "rem_roots": [88], "add_roots": []}, {"id": 44, "mappings": {"ownerType": "VAR_1", "currentClass": "VAR_2", "parent": "VAR_3", "validator": "VAR_4", "Token": "VAR_5", "objectType": "VAR_6", "PRIVATE_OVERRIDE": "VAR_7", "BAD_PRIVATE_PROPERTY_ACCESS": "VAR_8", "visibility": "VAR_9", "getprop": "VAR_10", "sameInput": "VAR_11", "ASSIGN": "VAR_12", "BAD_PROTECTED_PROPERTY_ACCESS": "VAR_13", "isOverride": "VAR_14", "compiler": "VAR_15", "PROTECTED": "VAR_16", "overridingVisibility": "VAR_17", "docInfo": "VAR_18", "VISIBILITY_MISMATCH": "VAR_19", "PRIVATE": "VAR_20", "t": "VAR_21", "propertyName": "VAR_22", "overridingInfo": "VAR_23", "INHERITED": "VAR_24", "Node": "TYPE_1", "String": "TYPE_2", "JSDocInfo": "TYPE_3", "JSType": "TYPE_4", "Visibility": "TYPE_5", "ObjectType": "TYPE_6", "NodeTraversal": "TYPE_7", "getName": "METHOD_1", "getJSDocInfo": "METHOD_2", "getInput": "METHOD_3", "cast": "METHOD_4", "getReadableJSTypeName": "METHOD_5", "getLastChild": "METHOD_6", "inGlobalScope": "METHOD_7", "makeError": "METHOD_8", "getType": "METHOD_9", "isConstructor": "METHOD_10", "name": "METHOD_11", "dereference": "METHOD_12", "getSourceName": "METHOD_13", "isValidPrivateConstructorAccess": "METHOD_14", "getJSType": "METHOD_15", "differsFrom": "METHOD_16", "isSubtype": "METHOD_17", "getImplicitPrototype": "METHOD_18", "getFirstChild": "METHOD_19", "getString": "METHOD_20", "checkPropertyVisibility": "METHOD_21", "equals": "METHOD_22", "report": "METHOD_23", "toString": "METHOD_24", "normalizeClassType": "METHOD_25", "getOwnPropertyJSDocInfo": "METHOD_26", "getVisibility": "METHOD_27"}, "nodes": ["MethodDeclaration", "private", "void", "checkPropertyVisibility", "FormalParameter", "ReferenceType", "NodeTraversal", "t", "FormalParameter", "ReferenceType", "Node", "getprop", "FormalParameter", "ReferenceType", "Node", "parent", "LocalVariableDeclaration", "ReferenceType", "ObjectType", "VariableDeclarator", "objectType", "MethodInvocation", "ObjectType", "cast", "MethodInvocation", "dereference", "MethodInvocation", "getprop", "getFirstChild", "MethodInvocation", "getJSType", "LocalVariableDeclaration", "ReferenceType", "String", "VariableDeclarator", "propertyName", "MethodInvocation", "getprop", "getLastChild", "MethodInvocation", "getString", "IfStatement", "BinaryOperation", "MemberReference", "objectType", "!=", "Literal", "null", "BlockStatement", "LocalVariableDeclaration", "BasicType", "boolean", "VariableDeclarator", "isOverride", "BinaryOperation", "BinaryOperation", "MethodInvocation", "t", "inGlobalScope", "&&", "BinaryOperation", "MethodInvocation", "parent", "getType", "==", "MemberReference", "Token", "ASSIGN", "&&", "BinaryOperation", "MethodInvocation", "parent", "getFirstChild", "==", "MemberReference", "getprop", "IfStatement", "MemberReference", "isOverride", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "objectType", "=", "MethodInvocation", "objectType", "getImplicitPrototype", "LocalVariableDeclaration", "ReferenceType", "JSDocInfo", "VariableDeclarator", "docInfo", "Literal", "null", "ForStatement", "ForControl", "BinaryOperation", "MemberReference", "objectType", "!=", "Literal", "null", "Assignment", "MemberReference", "objectType", "=", "MethodInvocation", "objectType", "getImplicitPrototype", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "docInfo", "=", "MethodInvocation", "objectType", "getOwnPropertyJSDocInfo", "MemberReference", "propertyName", "IfStatement", "BinaryOperation", "BinaryOperation", "MemberReference", "docInfo", "!=", "Literal", "null", "&&", "BinaryOperation", "MethodInvocation", "docInfo", "getVisibility", "!=", "MemberReference", "Visibility", "INHERITED", "BlockStatement", "BreakStatement", "IfStatement", "BinaryOperation", "MemberReference", "objectType", "==", "Literal", "null", "BlockStatement", "ReturnStatement", "LocalVariableDeclaration", "BasicType", "boolean", "VariableDeclarator", "sameInput", "MethodInvocation", "t", "getInput", "MethodInvocation", "getName", "MethodInvocation", "equals", "MethodInvocation", "docInfo", "getSourceName", "LocalVariableDeclaration", "ReferenceType", "Visibility", "VariableDeclarator", "visibility", "MethodInvocation", "docInfo", "getVisibility", "LocalVariableDeclaration", "ReferenceType", "JSType", "VariableDeclarator", "ownerType", "MethodInvocation", "normalizeClassType", "MemberReference", "objectType", "IfStatement", "MemberReference", "isOverride", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "JSDocInfo", "VariableDeclarator", "overridingInfo", "MethodInvocation", "parent", "getJSDocInfo", "LocalVariableDeclaration", "ReferenceType", "Visibility", "VariableDeclarator", "overridingVisibility", "TernaryExpression", "BinaryOperation", "MemberReference", "overridingInfo", "==", "Literal", "null", "MemberReference", "Visibility", "INHERITED", "MethodInvocation", "overridingInfo", "getVisibility", "IfStatement", "BinaryOperation", "BinaryOperation", "MemberReference", "visibility", "==", "MemberReference", "Visibility", "PRIVATE", "&&", "MemberReference", "!", "sameInput", "BlockStatement", "StatementExpression", "MethodInvocation", "compiler", "report", "MethodInvocation", "t", "makeError", "MemberReference", "getprop", "MemberReference", "PRIVATE_OVERRIDE", "MethodInvocation", "objectType", "toString", "IfStatement", "BinaryOperation", "BinaryOperation", "MemberReference", "overridingVisibility", "!=", "MemberReference", "Visibility", "INHERITED", "&&", "BinaryOperation", "MemberReference", "overridingVisibility", "!=", "MemberReference", "visibility", "BlockStatement", "StatementExpression", "MethodInvocation", "compiler", "report", "MethodInvocation", "t", "makeError", "MemberReference", "getprop", "MemberReference", "VISIBILITY_MISMATCH", "MethodInvocation", "visibility", "name", "MethodInvocation", "objectType", "toString", "MethodInvocation", "overridingVisibility", "name", "BlockStatement", "IfStatement", "MemberReference", "sameInput", "BlockStatement", "ReturnStatement", "IfStatement", "BinaryOperation", "BinaryOperation", "MemberReference", "visibility", "==", "MemberReference", "Visibility", "PRIVATE", "&&", "BinaryOperation", "BinaryOperation", "MemberReference", "currentClass", "==", "Literal", "null", "||", "MethodInvocation", "ownerType", "differsFrom", "MemberReference", "currentClass", "BlockStatement", "IfStatement", "BinaryOperation", "MethodInvocation", "docInfo", "isConstructor", "&&", "MethodInvocation", "isValidPrivateConstructorAccess", "MemberReference", "parent", "BlockStatement", "ReturnStatement", "StatementExpression", "MethodInvocation", "compiler", "report", "MethodInvocation", "t", "makeError", "MemberReference", "getprop", "MemberReference", "BAD_PRIVATE_PROPERTY_ACCESS", "MemberReference", "propertyName", "MethodInvocation", "validator", "getReadableJSTypeName", "MethodInvocation", "getprop", "getFirstChild", "Literal", "true", "IfStatement", "BinaryOperation", "MemberReference", "visibility", "==", "MemberReference", "Visibility", "PROTECTED", "BlockStatement", "IfStatement", "BinaryOperation", "BinaryOperation", "MemberReference", "currentClass", "==", "Literal", "null", "||", "MethodInvocation", "!", "currentClass", "isSubtype", "MemberReference", "ownerType", "BlockStatement", "StatementExpression", "MethodInvocation", "compiler", "report", "MethodInvocation", "t", "makeError", "MemberReference", "getprop", "MemberReference", "BAD_PROTECTED_PROPERTY_ACCESS", "MemberReference", "propertyName", "MethodInvocation", "validator", "getReadableJSTypeName", "MethodInvocation", "getprop", "getFirstChild", "Literal", "true"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [0, 3, "name"], [0, 4, "parameters"], [4, 5, "type"], [5, 6, "name"], [4, 7, "name"], [0, 8, "parameters"], [8, 9, "type"], [9, 10, "name"], [8, 11, "name"], [0, 12, "parameters"], [12, 13, "type"], [13, 14, "name"], [12, 15, "name"], [0, 16, "body"], [16, 17, "type"], [17, 18, "name"], [16, 19, "declarators"], [19, 20, "name"], [19, 21, "initializer"], [21, 22, "qualifier"], [21, 23, "member"], [21, 24, "arguments"], [24, 25, "member"], [24, 26, "arguments"], [26, 27, "qualifier"], [26, 28, "member"], [26, 29, "selectors"], [29, 30, "member"], [0, 31, "body"], [31, 32, "type"], [32, 33, "name"], [31, 34, "declarators"], [34, 35, "name"], [34, 36, "initializer"], [36, 37, "qualifier"], [36, 38, "member"], [36, 39, "selectors"], [39, 40, "member"], [0, 41, "body"], [41, 42, "condition"], [42, 43, "operandl"], [43, 44, "member"], [42, 45, "operator"], [42, 46, "operandr"], [46, 47, "value"], [41, 48, "then_statement"], [48, 49, "statements"], [49, 50, "type"], [50, 51, "name"], [49, 52, "declarators"], [52, 53, "name"], [52, 54, "initializer"], [54, 55, "operandl"], [55, 56, "operandl"], [56, 57, "qualifier"], [56, 58, "member"], [55, 59, "operator"], [55, 60, "operandr"], [60, 61, "operandl"], [61, 62, "qualifier"], [61, 63, "member"], [60, 64, "operator"], [60, 65, "operandr"], [65, 66, "qualifier"], [65, 67, "member"], [54, 68, "operator"], [54, 69, "operandr"], [69, 70, "operandl"], [70, 71, "qualifier"], [70, 72, "member"], [69, 73, "operator"], [69, 74, "operandr"], [74, 75, "member"], [48, 76, "statements"], [76, 77, "condition"], [77, 78, "member"], [76, 79, "then_statement"], [79, 80, "statements"], [80, 81, "expression"], [81, 82, "expressionl"], [82, 83, "member"], [81, 84, "type"], [81, 85, "value"], [85, 86, "qualifier"], [85, 87, "member"], [48, 88, "statements"], [88, 89, "type"], [89, 90, "name"], [88, 91, "declarators"], [91, 92, "name"], [91, 93, "initializer"], [93, 94, "value"], [48, 95, "statements"], [95, 96, "control"], [96, 97, "condition"], [97, 98, "operandl"], [98, 99, "member"], [97, 100, "operator"], [97, 101, "operandr"], [101, 102, "value"], [96, 103, "update"], [103, 104, "expressionl"], [104, 105, "member"], [103, 106, "type"], [103, 107, "value"], [107, 108, "qualifier"], [107, 109, "member"], [95, 110, "body"], [110, 111, "statements"], [111, 112, "expression"], [112, 113, "expressionl"], [113, 114, "member"], [112, 115, "type"], [112, 116, "value"], [116, 117, "qualifier"], [116, 118, "member"], [116, 119, "arguments"], [119, 120, "member"], [110, 121, "statements"], [121, 122, "condition"], [122, 123, "operandl"], [123, 124, "operandl"], [124, 125, "member"], [123, 126, "operator"], [123, 127, "operandr"], [127, 128, "value"], [122, 129, "operator"], [122, 130, "operandr"], [130, 131, "operandl"], [131, 132, "qualifier"], [131, 133, "member"], [130, 134, "operator"], [130, 135, "operandr"], [135, 136, "qualifier"], [135, 137, "member"], [121, 138, "then_statement"], [138, 139, "statements"], [48, 140, "statements"], [140, 141, "condition"], [141, 142, "operandl"], [142, 143, "member"], [141, 144, "operator"], [141, 145, "operandr"], [145, 146, "value"], [140, 147, "then_statement"], [147, 148, "statements"], [48, 149, "statements"], [149, 150, "type"], [150, 151, "name"], [149, 152, "declarators"], [152, 153, "name"], [152, 154, "initializer"], [154, 155, "qualifier"], [154, 156, "member"], [154, 157, "selectors"], [157, 158, "member"], [154, 159, "selectors"], [159, 160, "member"], [159, 161, "arguments"], [161, 162, "qualifier"], [161, 163, "member"], [48, 164, "statements"], [164, 165, "type"], [165, 166, "name"], [164, 167, "declarators"], [167, 168, "name"], [167, 169, "initializer"], [169, 170, "qualifier"], [169, 171, "member"], [48, 172, "statements"], [172, 173, "type"], [173, 174, "name"], [172, 175, "declarators"], [175, 176, "name"], [175, 177, "initializer"], [177, 178, "member"], [177, 179, "arguments"], [179, 180, "member"], [48, 181, "statements"], [181, 182, "condition"], [182, 183, "member"], [181, 184, "then_statement"], [184, 185, "statements"], [185, 186, "type"], [186, 187, "name"], [185, 188, "declarators"], [188, 189, "name"], [188, 190, "initializer"], [190, 191, "qualifier"], [190, 192, "member"], [184, 193, "statements"], [193, 194, "type"], [194, 195, "name"], [193, 196, "declarators"], [196, 197, "name"], [196, 198, "initializer"], [198, 199, "condition"], [199, 200, "operandl"], [200, 201, "member"], [199, 202, "operator"], [199, 203, "operandr"], [203, 204, "value"], [198, 205, "if_true"], [205, 206, "qualifier"], [205, 207, "member"], [198, 208, "if_false"], [208, 209, "qualifier"], [208, 210, "member"], [184, 211, "statements"], [211, 212, "condition"], [212, 213, "operandl"], [213, 214, "operandl"], [214, 215, "member"], [213, 216, "operator"], [213, 217, "operandr"], [217, 218, "qualifier"], [217, 219, "member"], [212, 220, "operator"], [212, 221, "operandr"], [221, 222, "prefix_operators"], [221, 223, "member"], [211, 224, "then_statement"], [224, 225, "statements"], [225, 226, "expression"], [226, 227, "qualifier"], [226, 228, "member"], [226, 229, "arguments"], [229, 230, "qualifier"], [229, 231, "member"], [229, 232, "arguments"], [232, 233, "member"], [229, 234, "arguments"], [234, 235, "member"], [229, 236, "arguments"], [236, 237, "qualifier"], [236, 238, "member"], [211, 239, "else_statement"], [239, 240, "condition"], [240, 241, "operandl"], [241, 242, "operandl"], [242, 243, "member"], [241, 244, "operator"], [241, 245, "operandr"], [245, 246, "qualifier"], [245, 247, "member"], [240, 248, "operator"], [240, 249, "operandr"], [249, 250, "operandl"], [250, 251, "member"], [249, 252, "operator"], [249, 253, "operandr"], [253, 254, "member"], [239, 255, "then_statement"], [255, 256, "statements"], [256, 257, "expression"], [257, 258, "qualifier"], [257, 259, "member"], [257, 260, "arguments"], [260, 261, "qualifier"], [260, 262, "member"], [260, 263, "arguments"], [263, 264, "member"], [260, 265, "arguments"], [265, 266, "member"], [260, 267, "arguments"], [267, 268, "qualifier"], [267, 269, "member"], [260, 270, "arguments"], [270, 271, "qualifier"], [270, 272, "member"], [260, 273, "arguments"], [273, 274, "qualifier"], [273, 275, "member"], [181, 276, "else_statement"], [276, 277, "statements"], [277, 278, "condition"], [278, 279, "member"], [277, 280, "then_statement"], [280, 281, "statements"], [277, 282, "else_statement"], [282, 283, "condition"], [283, 284, "operandl"], [284, 285, "operandl"], [285, 286, "member"], [284, 287, "operator"], [284, 288, "operandr"], [288, 289, "qualifier"], [288, 290, "member"], [283, 291, "operator"], [283, 292, "operandr"], [292, 293, "operandl"], [293, 294, "operandl"], [294, 295, "member"], [293, 296, "operator"], [293, 297, "operandr"], [297, 298, "value"], [292, 299, "operator"], [292, 300, "operandr"], [300, 301, "qualifier"], [300, 302, "member"], [300, 303, "arguments"], [303, 304, "member"], [282, 305, "then_statement"], [305, 306, "statements"], [306, 307, "condition"], [307, 308, "operandl"], [308, 309, "qualifier"], [308, 310, "member"], [307, 311, "operator"], [307, 312, "operandr"], [312, 313, "member"], [312, 314, "arguments"], [314, 315, "member"], [306, 316, "then_statement"], [316, 317, "statements"], [305, 318, "statements"], [318, 319, "expression"], [319, 320, "qualifier"], [319, 321, "member"], [319, 322, "arguments"], [322, 323, "qualifier"], [322, 324, "member"], [322, 325, "arguments"], [325, 326, "member"], [322, 327, "arguments"], [327, 328, "member"], [322, 329, "arguments"], [329, 330, "member"], [322, 331, "arguments"], [331, 332, "qualifier"], [331, 333, "member"], [331, 334, "arguments"], [334, 335, "qualifier"], [334, 336, "member"], [331, 337, "arguments"], [337, 338, "value"], [282, 339, "else_statement"], [339, 340, "condition"], [340, 341, "operandl"], [341, 342, "member"], [340, 343, "operator"], [340, 344, "operandr"], [344, 345, "qualifier"], [344, 346, "member"], [339, 347, "then_statement"], [347, 348, "statements"], [348, 349, "condition"], [349, 350, "operandl"], [350, 351, "operandl"], [351, 352, "member"], [350, 353, "operator"], [350, 354, "operandr"], [354, 355, "value"], [349, 356, "operator"], [349, 357, "operandr"], [357, 358, "prefix_operators"], [357, 359, "qualifier"], [357, 360, "member"], [357, 361, "arguments"], [361, 362, "member"], [348, 363, "then_statement"], [363, 364, "statements"], [364, 365, "expression"], [365, 366, "qualifier"], [365, 367, "member"], [365, 368, "arguments"], [368, 369, "qualifier"], [368, 370, "member"], [368, 371, "arguments"], [371, 372, "member"], [368, 373, "arguments"], [373, 374, "member"], [368, 375, "arguments"], [375, 376, "member"], [368, 377, "arguments"], [377, 378, "qualifier"], [377, 379, "member"], [377, 380, "arguments"], [380, 381, "qualifier"], [380, 382, "member"], [377, 383, "arguments"], [383, 384, "value"]], "rem_roots": [49], "add_roots": []}, {"id": 45, "mappings": {"singlequoteEscape": "VAR_1", "sb": "VAR_2", "quote": "VAR_3", "doublequoteEscape": "VAR_4", "backslashEscape": "VAR_5", "c": "VAR_6", "i": "VAR_7", "s": "VAR_8", "outputCharsetEncoder": "VAR_9", "StringBuilder": "TYPE_1", "String": "TYPE_2", "CharsetEncoder": "TYPE_3", "START_COMMENT": "TYPE_4", "END_SCRIPT": "TYPE_5", "regionMatches": "METHOD_1", "strEscape": "METHOD_2", "length": "METHOD_3", "appendHexJavaScriptRepresentation": "METHOD_4", "canEncode": "METHOD_5", "toString": "METHOD_6", "append": "METHOD_7", "charAt": "METHOD_8", "0x7f": "INT_1", "0x1f": "INT_2", "0": "INT_3", "1": "INT_4", "2": "INT_5", "\"/script\"": "STRING_1", "\"\\\\>\"": "STRING_2", "\"!--\"": "STRING_3", "\"\\\\r\"": "STRING_4", "\"\\\\t\"": "STRING_5", "\"\\\\n\"": "STRING_6", "\"\\\\0\"": "STRING_7", "\"<\\\\\"": "STRING_8", "'-'": "CHAR_1", "'\\\"'": "CHAR_2", "'>'": "CHAR_3", "']'": "CHAR_4", "'<'": "CHAR_5", "'\\r'": "CHAR_6", "'\\t'": "CHAR_7", "'\\n'": "CHAR_8", "'\\0'": "CHAR_9", "'\\''": "CHAR_10", "'\\\\'": "CHAR_11"}, "nodes": ["MethodDeclaration", "static", "ReferenceType", "String", "strEscape", "FormalParameter", "ReferenceType", "String", "s", "FormalParameter", "BasicType", "char", "quote", "FormalParameter", "ReferenceType", "String", "doublequoteEscape", "FormalParameter", "ReferenceType", "String", "singlequoteEscape", "FormalParameter", "ReferenceType", "String", "backslashEscape", "FormalParameter", "ReferenceType", "CharsetEncoder", "outputCharsetEncoder", "LocalVariableDeclaration", "ReferenceType", "StringBuilder", "VariableDeclarator", "sb", "ClassCreator", "ReferenceType", "StringBuilder", "BinaryOperation", "MethodInvocation", "s", "length", "+", "Literal", "2", "StatementExpression", "MethodInvocation", "sb", "append", "MemberReference", "quote", "ForStatement", "ForControl", "VariableDeclaration", "BasicType", "int", "VariableDeclarator", "i", "Literal", "0", "BinaryOperation", "MemberReference", "i", "<", "MethodInvocation", "s", "length", "MemberReference", "i", "++", "BlockStatement", "LocalVariableDeclaration", "BasicType", "char", "VariableDeclarator", "c", "MethodInvocation", "s", "charAt", "MemberReference", "i", "SwitchStatement", "MemberReference", "c", "SwitchStatementCase", "Literal", "'\\0'", "StatementExpression", "MethodInvocation", "sb", "append", "Literal", "\"\\\\0\"", "BreakStatement", "SwitchStatementCase", "Literal", "'\\n'", "StatementExpression", "MethodInvocation", "sb", "append", "Literal", "\"\\\\n\"", "BreakStatement", "SwitchStatementCase", "Literal", "'\\r'", "StatementExpression", "MethodInvocation", "sb", "append", "Literal", "\"\\\\r\"", "BreakStatement", "SwitchStatementCase", "Literal", "'\\t'", "StatementExpression", "MethodInvocation", "sb", "append", "Literal", "\"\\\\t\"", "BreakStatement", "SwitchStatementCase", "Literal", "'\\\\'", "StatementExpression", "MethodInvocation", "sb", "append", "MemberReference", "backslashEscape", "BreakStatement", "SwitchStatementCase", "Literal", "'\\\"'", "StatementExpression", "MethodInvocation", "sb", "append", "MemberReference", "doublequoteEscape", "BreakStatement", "SwitchStatementCase", "Literal", "'\\''", "StatementExpression", "MethodInvocation", "sb", "append", "MemberReference", "singlequoteEscape", "BreakStatement", "SwitchStatementCase", "Literal", "'>'", "IfStatement", "BinaryOperation", "BinaryOperation", "MemberReference", "i", ">=", "Literal", "2", "&&", "BinaryOperation", "BinaryOperation", "BinaryOperation", "MethodInvocation", "s", "charAt", "BinaryOperation", "MemberReference", "i", "-", "Literal", "1", "==", "Literal", "'-'", "&&", "BinaryOperation", "MethodInvocation", "s", "charAt", "BinaryOperation", "MemberReference", "i", "-", "Literal", "2", "==", "Literal", "'-'", "||", "BinaryOperation", "BinaryOperation", "MethodInvocation", "s", "charAt", "BinaryOperation", "MemberReference", "i", "-", "Literal", "1", "==", "Literal", "']'", "&&", "BinaryOperation", "MethodInvocation", "s", "charAt", "BinaryOperation", "MemberReference", "i", "-", "Literal", "2", "==", "Literal", "']'", "BlockStatement", "StatementExpression", "MethodInvocation", "sb", "append", "Literal", "\"\\\\>\"", "BlockStatement", "StatementExpression", "MethodInvocation", "sb", "append", "MemberReference", "c", "BreakStatement", "SwitchStatementCase", "Literal", "'<'", "LocalVariableDeclaration", "final", "ReferenceType", "String", "VariableDeclarator", "END_SCRIPT", "Literal", "\"/script\"", "LocalVariableDeclaration", "final", "ReferenceType", "String", "VariableDeclarator", "START_COMMENT", "Literal", "\"!--\"", "IfStatement", "MethodInvocation", "s", "regionMatches", "Literal", "true", "BinaryOperation", "MemberReference", "i", "+", "Literal", "1", "MemberReference", "END_SCRIPT", "Literal", "0", "MethodInvocation", "END_SCRIPT", "length", "BlockStatement", "StatementExpression", "MethodInvocation", "sb", "append", "Literal", "\"<\\\\\"", "IfStatement", "MethodInvocation", "s", "regionMatches", "Literal", "false", "BinaryOperation", "MemberReference", "i", "+", "Literal", "1", "MemberReference", "START_COMMENT", "Literal", "0", "MethodInvocation", "START_COMMENT", "length", "BlockStatement", "StatementExpression", "MethodInvocation", "sb", "append", "Literal", "\"<\\\\\"", "BlockStatement", "StatementExpression", "MethodInvocation", "sb", "append", "MemberReference", "c", "BreakStatement", "SwitchStatementCase", "IfStatement", "BinaryOperation", "MemberReference", "outputCharsetEncoder", "!=", "Literal", "null", "BlockStatement", "IfStatement", "MethodInvocation", "outputCharsetEncoder", "canEncode", "MemberReference", "c", "BlockStatement", "StatementExpression", "MethodInvocation", "sb", "append", "MemberReference", "c", "BlockStatement", "StatementExpression", "MethodInvocation", "appendHexJavaScriptRepresentation", "MemberReference", "sb", "MemberReference", "c", "BlockStatement", "IfStatement", "BinaryOperation", "BinaryOperation", "MemberReference", "c", ">", "Literal", "0x1f", "&&", "BinaryOperation", "MemberReference", "c", "<=", "Literal", "0x7f", "BlockStatement", "StatementExpression", "MethodInvocation", "sb", "append", "MemberReference", "c", "BlockStatement", "StatementExpression", "MethodInvocation", "appendHexJavaScriptRepresentation", "MemberReference", "sb", "MemberReference", "c", "StatementExpression", "MethodInvocation", "sb", "append", "MemberReference", "quote", "ReturnStatement", "MethodInvocation", "sb", "toString"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [5, 8, "name"], [0, 9, "parameters"], [9, 10, "type"], [10, 11, "name"], [9, 12, "name"], [0, 13, "parameters"], [13, 14, "type"], [14, 15, "name"], [13, 16, "name"], [0, 17, "parameters"], [17, 18, "type"], [18, 19, "name"], [17, 20, "name"], [0, 21, "parameters"], [21, 22, "type"], [22, 23, "name"], [21, 24, "name"], [0, 25, "parameters"], [25, 26, "type"], [26, 27, "name"], [25, 28, "name"], [0, 29, "body"], [29, 30, "type"], [30, 31, "name"], [29, 32, "declarators"], [32, 33, "name"], [32, 34, "initializer"], [34, 35, "type"], [35, 36, "name"], [34, 37, "arguments"], [37, 38, "operandl"], [38, 39, "qualifier"], [38, 40, "member"], [37, 41, "operator"], [37, 42, "operandr"], [42, 43, "value"], [0, 44, "body"], [44, 45, "expression"], [45, 46, "qualifier"], [45, 47, "member"], [45, 48, "arguments"], [48, 49, "member"], [0, 50, "body"], [50, 51, "control"], [51, 52, "init"], [52, 53, "type"], [53, 54, "name"], [52, 55, "declarators"], [55, 56, "name"], [55, 57, "initializer"], [57, 58, "value"], [51, 59, "condition"], [59, 60, "operandl"], [60, 61, "member"], [59, 62, "operator"], [59, 63, "operandr"], [63, 64, "qualifier"], [63, 65, "member"], [51, 66, "update"], [66, 67, "member"], [66, 68, "postfix_operators"], [50, 69, "body"], [69, 70, "statements"], [70, 71, "type"], [71, 72, "name"], [70, 73, "declarators"], [73, 74, "name"], [73, 75, "initializer"], [75, 76, "qualifier"], [75, 77, "member"], [75, 78, "arguments"], [78, 79, "member"], [69, 80, "statements"], [80, 81, "expression"], [81, 82, "member"], [80, 83, "cases"], [83, 84, "case"], [84, 85, "value"], [83, 86, "statements"], [86, 87, "expression"], [87, 88, "qualifier"], [87, 89, "member"], [87, 90, "arguments"], [90, 91, "value"], [83, 92, "statements"], [80, 93, "cases"], [93, 94, "case"], [94, 95, "value"], [93, 96, "statements"], [96, 97, "expression"], [97, 98, "qualifier"], [97, 99, "member"], [97, 100, "arguments"], [100, 101, "value"], [93, 102, "statements"], [80, 103, "cases"], [103, 104, "case"], [104, 105, "value"], [103, 106, "statements"], [106, 107, "expression"], [107, 108, "qualifier"], [107, 109, "member"], [107, 110, "arguments"], [110, 111, "value"], [103, 112, "statements"], [80, 113, "cases"], [113, 114, "case"], [114, 115, "value"], [113, 116, "statements"], [116, 117, "expression"], [117, 118, "qualifier"], [117, 119, "member"], [117, 120, "arguments"], [120, 121, "value"], [113, 122, "statements"], [80, 123, "cases"], [123, 124, "case"], [124, 125, "value"], [123, 126, "statements"], [126, 127, "expression"], [127, 128, "qualifier"], [127, 129, "member"], [127, 130, "arguments"], [130, 131, "member"], [123, 132, "statements"], [80, 133, "cases"], [133, 134, "case"], [134, 135, "value"], [133, 136, "statements"], [136, 137, "expression"], [137, 138, "qualifier"], [137, 139, "member"], [137, 140, "arguments"], [140, 141, "member"], [133, 142, "statements"], [80, 143, "cases"], [143, 144, "case"], [144, 145, "value"], [143, 146, "statements"], [146, 147, "expression"], [147, 148, "qualifier"], [147, 149, "member"], [147, 150, "arguments"], [150, 151, "member"], [143, 152, "statements"], [80, 153, "cases"], [153, 154, "case"], [154, 155, "value"], [153, 156, "statements"], [156, 157, "condition"], [157, 158, "operandl"], [158, 159, "operandl"], [159, 160, "member"], [158, 161, "operator"], [158, 162, "operandr"], [162, 163, "value"], [157, 164, "operator"], [157, 165, "operandr"], [165, 166, "operandl"], [166, 167, "operandl"], [167, 168, "operandl"], [168, 169, "qualifier"], [168, 170, "member"], [168, 171, "arguments"], [171, 172, "operandl"], [172, 173, "member"], [171, 174, "operator"], [171, 175, "operandr"], [175, 176, "value"], [167, 177, "operator"], [167, 178, "operandr"], [178, 179, "value"], [166, 180, "operator"], [166, 181, "operandr"], [181, 182, "operandl"], [182, 183, "qualifier"], [182, 184, "member"], [182, 185, "arguments"], [185, 186, "operandl"], [186, 187, "member"], [185, 188, "operator"], [185, 189, "operandr"], [189, 190, "value"], [181, 191, "operator"], [181, 192, "operandr"], [192, 193, "value"], [165, 194, "operator"], [165, 195, "operandr"], [195, 196, "operandl"], [196, 197, "operandl"], [197, 198, "qualifier"], [197, 199, "member"], [197, 200, "arguments"], [200, 201, "operandl"], [201, 202, "member"], [200, 203, "operator"], [200, 204, "operandr"], [204, 205, "value"], [196, 206, "operator"], [196, 207, "operandr"], [207, 208, "value"], [195, 209, "operator"], [195, 210, "operandr"], [210, 211, "operandl"], [211, 212, "qualifier"], [211, 213, "member"], [211, 214, "arguments"], [214, 215, "operandl"], [215, 216, "member"], [214, 217, "operator"], [214, 218, "operandr"], [218, 219, "value"], [210, 220, "operator"], [210, 221, "operandr"], [221, 222, "value"], [156, 223, "then_statement"], [223, 224, "statements"], [224, 225, "expression"], [225, 226, "qualifier"], [225, 227, "member"], [225, 228, "arguments"], [228, 229, "value"], [156, 230, "else_statement"], [230, 231, "statements"], [231, 232, "expression"], [232, 233, "qualifier"], [232, 234, "member"], [232, 235, "arguments"], [235, 236, "member"], [153, 237, "statements"], [80, 238, "cases"], [238, 239, "case"], [239, 240, "value"], [238, 241, "statements"], [241, 242, "modifiers"], [241, 243, "type"], [243, 244, "name"], [241, 245, "declarators"], [245, 246, "name"], [245, 247, "initializer"], [247, 248, "value"], [238, 249, "statements"], [249, 250, "modifiers"], [249, 251, "type"], [251, 252, "name"], [249, 253, "declarators"], [253, 254, "name"], [253, 255, "initializer"], [255, 256, "value"], [238, 257, "statements"], [257, 258, "condition"], [258, 259, "qualifier"], [258, 260, "member"], [258, 261, "arguments"], [261, 262, "value"], [258, 263, "arguments"], [263, 264, "operandl"], [264, 265, "member"], [263, 266, "operator"], [263, 267, "operandr"], [267, 268, "value"], [258, 269, "arguments"], [269, 270, "member"], [258, 271, "arguments"], [271, 272, "value"], [258, 273, "arguments"], [273, 274, "qualifier"], [273, 275, "member"], [257, 276, "then_statement"], [276, 277, "statements"], [277, 278, "expression"], [278, 279, "qualifier"], [278, 280, "member"], [278, 281, "arguments"], [281, 282, "value"], [257, 283, "else_statement"], [283, 284, "condition"], [284, 285, "qualifier"], [284, 286, "member"], [284, 287, "arguments"], [287, 288, "value"], [284, 289, "arguments"], [289, 290, "operandl"], [290, 291, "member"], [289, 292, "operator"], [289, 293, "operandr"], [293, 294, "value"], [284, 295, "arguments"], [295, 296, "member"], [284, 297, "arguments"], [297, 298, "value"], [284, 299, "arguments"], [299, 300, "qualifier"], [299, 301, "member"], [283, 302, "then_statement"], [302, 303, "statements"], [303, 304, "expression"], [304, 305, "qualifier"], [304, 306, "member"], [304, 307, "arguments"], [307, 308, "value"], [283, 309, "else_statement"], [309, 310, "statements"], [310, 311, "expression"], [311, 312, "qualifier"], [311, 313, "member"], [311, 314, "arguments"], [314, 315, "member"], [238, 316, "statements"], [80, 317, "cases"], [317, 318, "statements"], [318, 319, "condition"], [319, 320, "operandl"], [320, 321, "member"], [319, 322, "operator"], [319, 323, "operandr"], [323, 324, "value"], [318, 325, "then_statement"], [325, 326, "statements"], [326, 327, "condition"], [327, 328, "qualifier"], [327, 329, "member"], [327, 330, "arguments"], [330, 331, "member"], [326, 332, "then_statement"], [332, 333, "statements"], [333, 334, "expression"], [334, 335, "qualifier"], [334, 336, "member"], [334, 337, "arguments"], [337, 338, "member"], [326, 339, "else_statement"], [339, 340, "statements"], [340, 341, "expression"], [341, 342, "member"], [341, 343, "arguments"], [343, 344, "member"], [341, 345, "arguments"], [345, 346, "member"], [318, 347, "else_statement"], [347, 348, "statements"], [348, 349, "condition"], [349, 350, "operandl"], [350, 351, "operandl"], [351, 352, "member"], [350, 353, "operator"], [350, 354, "operandr"], [354, 355, "value"], [349, 356, "operator"], [349, 357, "operandr"], [357, 358, "operandl"], [358, 359, "member"], [357, 360, "operator"], [357, 361, "operandr"], [361, 362, "value"], [348, 363, "then_statement"], [363, 364, "statements"], [364, 365, "expression"], [365, 366, "qualifier"], [365, 367, "member"], [365, 368, "arguments"], [368, 369, "member"], [348, 370, "else_statement"], [370, 371, "statements"], [371, 372, "expression"], [372, 373, "member"], [372, 374, "arguments"], [374, 375, "member"], [372, 376, "arguments"], [376, 377, "member"], [0, 378, "body"], [378, 379, "expression"], [379, 380, "qualifier"], [379, 381, "member"], [379, 382, "arguments"], [382, 383, "member"], [0, 384, "body"], [384, 385, "expression"], [385, 386, "qualifier"], [385, 387, "member"]], "rem_roots": [349], "add_roots": []}, {"id": 46, "mappings": {"singlequoteEscape": "VAR_1", "sb": "VAR_2", "quote": "VAR_3", "doublequoteEscape": "VAR_4", "backslashEscape": "VAR_5", "c": "VAR_6", "i": "VAR_7", "s": "VAR_8", "outputCharsetEncoder": "VAR_9", "StringBuilder": "TYPE_1", "String": "TYPE_2", "CharsetEncoder": "TYPE_3", "START_COMMENT": "TYPE_4", "END_SCRIPT": "TYPE_5", "regionMatches": "METHOD_1", "strEscape": "METHOD_2", "length": "METHOD_3", "appendHexJavaScriptRepresentation": "METHOD_4", "canEncode": "METHOD_5", "toString": "METHOD_6", "append": "METHOD_7", "charAt": "METHOD_8", "0x7f": "INT_1", "0x1f": "INT_2", "0": "INT_3", "1": "INT_4", "2": "INT_5", "\"/script\"": "STRING_1", "\"\\\\>\"": "STRING_2", "\"!--\"": "STRING_3", "\"\\\\r\"": "STRING_4", "\"\\\\t\"": "STRING_5", "\"\\\\n\"": "STRING_6", "\"<\\\\\"": "STRING_7", "'-'": "CHAR_1", "'\\\"'": "CHAR_2", "'>'": "CHAR_3", "']'": "CHAR_4", "'<'": "CHAR_5", "'\\r'": "CHAR_6", "'\\t'": "CHAR_7", "'\\n'": "CHAR_8", "'\\''": "CHAR_9", "'\\\\'": "CHAR_10"}, "nodes": ["MethodDeclaration", "static", "ReferenceType", "String", "strEscape", "FormalParameter", "ReferenceType", "String", "s", "FormalParameter", "BasicType", "char", "quote", "FormalParameter", "ReferenceType", "String", "doublequoteEscape", "FormalParameter", "ReferenceType", "String", "singlequoteEscape", "FormalParameter", "ReferenceType", "String", "backslashEscape", "FormalParameter", "ReferenceType", "CharsetEncoder", "outputCharsetEncoder", "LocalVariableDeclaration", "ReferenceType", "StringBuilder", "VariableDeclarator", "sb", "ClassCreator", "ReferenceType", "StringBuilder", "BinaryOperation", "MethodInvocation", "s", "length", "+", "Literal", "2", "StatementExpression", "MethodInvocation", "sb", "append", "MemberReference", "quote", "ForStatement", "ForControl", "VariableDeclaration", "BasicType", "int", "VariableDeclarator", "i", "Literal", "0", "BinaryOperation", "MemberReference", "i", "<", "MethodInvocation", "s", "length", "MemberReference", "i", "++", "BlockStatement", "LocalVariableDeclaration", "BasicType", "char", "VariableDeclarator", "c", "MethodInvocation", "s", "charAt", "MemberReference", "i", "SwitchStatement", "MemberReference", "c", "SwitchStatementCase", "Literal", "'\\n'", "StatementExpression", "MethodInvocation", "sb", "append", "Literal", "\"\\\\n\"", "BreakStatement", "SwitchStatementCase", "Literal", "'\\r'", "StatementExpression", "MethodInvocation", "sb", "append", "Literal", "\"\\\\r\"", "BreakStatement", "SwitchStatementCase", "Literal", "'\\t'", "StatementExpression", "MethodInvocation", "sb", "append", "Literal", "\"\\\\t\"", "BreakStatement", "SwitchStatementCase", "Literal", "'\\\\'", "StatementExpression", "MethodInvocation", "sb", "append", "MemberReference", "backslashEscape", "BreakStatement", "SwitchStatementCase", "Literal", "'\\\"'", "StatementExpression", "MethodInvocation", "sb", "append", "MemberReference", "doublequoteEscape", "BreakStatement", "SwitchStatementCase", "Literal", "'\\''", "StatementExpression", "MethodInvocation", "sb", "append", "MemberReference", "singlequoteEscape", "BreakStatement", "SwitchStatementCase", "Literal", "'>'", "IfStatement", "BinaryOperation", "BinaryOperation", "MemberReference", "i", ">=", "Literal", "2", "&&", "BinaryOperation", "BinaryOperation", "BinaryOperation", "MethodInvocation", "s", "charAt", "BinaryOperation", "MemberReference", "i", "-", "Literal", "1", "==", "Literal", "'-'", "&&", "BinaryOperation", "MethodInvocation", "s", "charAt", "BinaryOperation", "MemberReference", "i", "-", "Literal", "2", "==", "Literal", "'-'", "||", "BinaryOperation", "BinaryOperation", "MethodInvocation", "s", "charAt", "BinaryOperation", "MemberReference", "i", "-", "Literal", "1", "==", "Literal", "']'", "&&", "BinaryOperation", "MethodInvocation", "s", "charAt", "BinaryOperation", "MemberReference", "i", "-", "Literal", "2", "==", "Literal", "']'", "BlockStatement", "StatementExpression", "MethodInvocation", "sb", "append", "Literal", "\"\\\\>\"", "BlockStatement", "StatementExpression", "MethodInvocation", "sb", "append", "MemberReference", "c", "BreakStatement", "SwitchStatementCase", "Literal", "'<'", "LocalVariableDeclaration", "final", "ReferenceType", "String", "VariableDeclarator", "END_SCRIPT", "Literal", "\"/script\"", "LocalVariableDeclaration", "final", "ReferenceType", "String", "VariableDeclarator", "START_COMMENT", "Literal", "\"!--\"", "IfStatement", "MethodInvocation", "s", "regionMatches", "Literal", "true", "BinaryOperation", "MemberReference", "i", "+", "Literal", "1", "MemberReference", "END_SCRIPT", "Literal", "0", "MethodInvocation", "END_SCRIPT", "length", "BlockStatement", "StatementExpression", "MethodInvocation", "sb", "append", "Literal", "\"<\\\\\"", "IfStatement", "MethodInvocation", "s", "regionMatches", "Literal", "false", "BinaryOperation", "MemberReference", "i", "+", "Literal", "1", "MemberReference", "START_COMMENT", "Literal", "0", "MethodInvocation", "START_COMMENT", "length", "BlockStatement", "StatementExpression", "MethodInvocation", "sb", "append", "Literal", "\"<\\\\\"", "BlockStatement", "StatementExpression", "MethodInvocation", "sb", "append", "MemberReference", "c", "BreakStatement", "SwitchStatementCase", "IfStatement", "BinaryOperation", "MemberReference", "outputCharsetEncoder", "!=", "Literal", "null", "BlockStatement", "IfStatement", "MethodInvocation", "outputCharsetEncoder", "canEncode", "MemberReference", "c", "BlockStatement", "StatementExpression", "MethodInvocation", "sb", "append", "MemberReference", "c", "BlockStatement", "StatementExpression", "MethodInvocation", "appendHexJavaScriptRepresentation", "MemberReference", "sb", "MemberReference", "c", "BlockStatement", "IfStatement", "BinaryOperation", "BinaryOperation", "MemberReference", "c", ">", "Literal", "0x1f", "&&", "BinaryOperation", "MemberReference", "c", "<=", "Literal", "0x7f", "BlockStatement", "StatementExpression", "MethodInvocation", "sb", "append", "MemberReference", "c", "BlockStatement", "StatementExpression", "MethodInvocation", "appendHexJavaScriptRepresentation", "MemberReference", "sb", "MemberReference", "c", "StatementExpression", "MethodInvocation", "sb", "append", "MemberReference", "quote", "ReturnStatement", "MethodInvocation", "sb", "toString"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [5, 8, "name"], [0, 9, "parameters"], [9, 10, "type"], [10, 11, "name"], [9, 12, "name"], [0, 13, "parameters"], [13, 14, "type"], [14, 15, "name"], [13, 16, "name"], [0, 17, "parameters"], [17, 18, "type"], [18, 19, "name"], [17, 20, "name"], [0, 21, "parameters"], [21, 22, "type"], [22, 23, "name"], [21, 24, "name"], [0, 25, "parameters"], [25, 26, "type"], [26, 27, "name"], [25, 28, "name"], [0, 29, "body"], [29, 30, "type"], [30, 31, "name"], [29, 32, "declarators"], [32, 33, "name"], [32, 34, "initializer"], [34, 35, "type"], [35, 36, "name"], [34, 37, "arguments"], [37, 38, "operandl"], [38, 39, "qualifier"], [38, 40, "member"], [37, 41, "operator"], [37, 42, "operandr"], [42, 43, "value"], [0, 44, "body"], [44, 45, "expression"], [45, 46, "qualifier"], [45, 47, "member"], [45, 48, "arguments"], [48, 49, "member"], [0, 50, "body"], [50, 51, "control"], [51, 52, "init"], [52, 53, "type"], [53, 54, "name"], [52, 55, "declarators"], [55, 56, "name"], [55, 57, "initializer"], [57, 58, "value"], [51, 59, "condition"], [59, 60, "operandl"], [60, 61, "member"], [59, 62, "operator"], [59, 63, "operandr"], [63, 64, "qualifier"], [63, 65, "member"], [51, 66, "update"], [66, 67, "member"], [66, 68, "postfix_operators"], [50, 69, "body"], [69, 70, "statements"], [70, 71, "type"], [71, 72, "name"], [70, 73, "declarators"], [73, 74, "name"], [73, 75, "initializer"], [75, 76, "qualifier"], [75, 77, "member"], [75, 78, "arguments"], [78, 79, "member"], [69, 80, "statements"], [80, 81, "expression"], [81, 82, "member"], [80, 83, "cases"], [83, 84, "case"], [84, 85, "value"], [83, 86, "statements"], [86, 87, "expression"], [87, 88, "qualifier"], [87, 89, "member"], [87, 90, "arguments"], [90, 91, "value"], [83, 92, "statements"], [80, 93, "cases"], [93, 94, "case"], [94, 95, "value"], [93, 96, "statements"], [96, 97, "expression"], [97, 98, "qualifier"], [97, 99, "member"], [97, 100, "arguments"], [100, 101, "value"], [93, 102, "statements"], [80, 103, "cases"], [103, 104, "case"], [104, 105, "value"], [103, 106, "statements"], [106, 107, "expression"], [107, 108, "qualifier"], [107, 109, "member"], [107, 110, "arguments"], [110, 111, "value"], [103, 112, "statements"], [80, 113, "cases"], [113, 114, "case"], [114, 115, "value"], [113, 116, "statements"], [116, 117, "expression"], [117, 118, "qualifier"], [117, 119, "member"], [117, 120, "arguments"], [120, 121, "member"], [113, 122, "statements"], [80, 123, "cases"], [123, 124, "case"], [124, 125, "value"], [123, 126, "statements"], [126, 127, "expression"], [127, 128, "qualifier"], [127, 129, "member"], [127, 130, "arguments"], [130, 131, "member"], [123, 132, "statements"], [80, 133, "cases"], [133, 134, "case"], [134, 135, "value"], [133, 136, "statements"], [136, 137, "expression"], [137, 138, "qualifier"], [137, 139, "member"], [137, 140, "arguments"], [140, 141, "member"], [133, 142, "statements"], [80, 143, "cases"], [143, 144, "case"], [144, 145, "value"], [143, 146, "statements"], [146, 147, "condition"], [147, 148, "operandl"], [148, 149, "operandl"], [149, 150, "member"], [148, 151, "operator"], [148, 152, "operandr"], [152, 153, "value"], [147, 154, "operator"], [147, 155, "operandr"], [155, 156, "operandl"], [156, 157, "operandl"], [157, 158, "operandl"], [158, 159, "qualifier"], [158, 160, "member"], [158, 161, "arguments"], [161, 162, "operandl"], [162, 163, "member"], [161, 164, "operator"], [161, 165, "operandr"], [165, 166, "value"], [157, 167, "operator"], [157, 168, "operandr"], [168, 169, "value"], [156, 170, "operator"], [156, 171, "operandr"], [171, 172, "operandl"], [172, 173, "qualifier"], [172, 174, "member"], [172, 175, "arguments"], [175, 176, "operandl"], [176, 177, "member"], [175, 178, "operator"], [175, 179, "operandr"], [179, 180, "value"], [171, 181, "operator"], [171, 182, "operandr"], [182, 183, "value"], [155, 184, "operator"], [155, 185, "operandr"], [185, 186, "operandl"], [186, 187, "operandl"], [187, 188, "qualifier"], [187, 189, "member"], [187, 190, "arguments"], [190, 191, "operandl"], [191, 192, "member"], [190, 193, "operator"], [190, 194, "operandr"], [194, 195, "value"], [186, 196, "operator"], [186, 197, "operandr"], [197, 198, "value"], [185, 199, "operator"], [185, 200, "operandr"], [200, 201, "operandl"], [201, 202, "qualifier"], [201, 203, "member"], [201, 204, "arguments"], [204, 205, "operandl"], [205, 206, "member"], [204, 207, "operator"], [204, 208, "operandr"], [208, 209, "value"], [200, 210, "operator"], [200, 211, "operandr"], [211, 212, "value"], [146, 213, "then_statement"], [213, 214, "statements"], [214, 215, "expression"], [215, 216, "qualifier"], [215, 217, "member"], [215, 218, "arguments"], [218, 219, "value"], [146, 220, "else_statement"], [220, 221, "statements"], [221, 222, "expression"], [222, 223, "qualifier"], [222, 224, "member"], [222, 225, "arguments"], [225, 226, "member"], [143, 227, "statements"], [80, 228, "cases"], [228, 229, "case"], [229, 230, "value"], [228, 231, "statements"], [231, 232, "modifiers"], [231, 233, "type"], [233, 234, "name"], [231, 235, "declarators"], [235, 236, "name"], [235, 237, "initializer"], [237, 238, "value"], [228, 239, "statements"], [239, 240, "modifiers"], [239, 241, "type"], [241, 242, "name"], [239, 243, "declarators"], [243, 244, "name"], [243, 245, "initializer"], [245, 246, "value"], [228, 247, "statements"], [247, 248, "condition"], [248, 249, "qualifier"], [248, 250, "member"], [248, 251, "arguments"], [251, 252, "value"], [248, 253, "arguments"], [253, 254, "operandl"], [254, 255, "member"], [253, 256, "operator"], [253, 257, "operandr"], [257, 258, "value"], [248, 259, "arguments"], [259, 260, "member"], [248, 261, "arguments"], [261, 262, "value"], [248, 263, "arguments"], [263, 264, "qualifier"], [263, 265, "member"], [247, 266, "then_statement"], [266, 267, "statements"], [267, 268, "expression"], [268, 269, "qualifier"], [268, 270, "member"], [268, 271, "arguments"], [271, 272, "value"], [247, 273, "else_statement"], [273, 274, "condition"], [274, 275, "qualifier"], [274, 276, "member"], [274, 277, "arguments"], [277, 278, "value"], [274, 279, "arguments"], [279, 280, "operandl"], [280, 281, "member"], [279, 282, "operator"], [279, 283, "operandr"], [283, 284, "value"], [274, 285, "arguments"], [285, 286, "member"], [274, 287, "arguments"], [287, 288, "value"], [274, 289, "arguments"], [289, 290, "qualifier"], [289, 291, "member"], [273, 292, "then_statement"], [292, 293, "statements"], [293, 294, "expression"], [294, 295, "qualifier"], [294, 296, "member"], [294, 297, "arguments"], [297, 298, "value"], [273, 299, "else_statement"], [299, 300, "statements"], [300, 301, "expression"], [301, 302, "qualifier"], [301, 303, "member"], [301, 304, "arguments"], [304, 305, "member"], [228, 306, "statements"], [80, 307, "cases"], [307, 308, "statements"], [308, 309, "condition"], [309, 310, "operandl"], [310, 311, "member"], [309, 312, "operator"], [309, 313, "operandr"], [313, 314, "value"], [308, 315, "then_statement"], [315, 316, "statements"], [316, 317, "condition"], [317, 318, "qualifier"], [317, 319, "member"], [317, 320, "arguments"], [320, 321, "member"], [316, 322, "then_statement"], [322, 323, "statements"], [323, 324, "expression"], [324, 325, "qualifier"], [324, 326, "member"], [324, 327, "arguments"], [327, 328, "member"], [316, 329, "else_statement"], [329, 330, "statements"], [330, 331, "expression"], [331, 332, "member"], [331, 333, "arguments"], [333, 334, "member"], [331, 335, "arguments"], [335, 336, "member"], [308, 337, "else_statement"], [337, 338, "statements"], [338, 339, "condition"], [339, 340, "operandl"], [340, 341, "operandl"], [341, 342, "member"], [340, 343, "operator"], [340, 344, "operandr"], [344, 345, "value"], [339, 346, "operator"], [339, 347, "operandr"], [347, 348, "operandl"], [348, 349, "member"], [347, 350, "operator"], [347, 351, "operandr"], [351, 352, "value"], [338, 353, "then_statement"], [353, 354, "statements"], [354, 355, "expression"], [355, 356, "qualifier"], [355, 357, "member"], [355, 358, "arguments"], [358, 359, "member"], [338, 360, "else_statement"], [360, 361, "statements"], [361, 362, "expression"], [362, 363, "member"], [362, 364, "arguments"], [364, 365, "member"], [362, 366, "arguments"], [366, 367, "member"], [0, 368, "body"], [368, 369, "expression"], [369, 370, "qualifier"], [369, 371, "member"], [369, 372, "arguments"], [372, 373, "member"], [0, 374, "body"], [374, 375, "expression"], [375, 376, "qualifier"], [375, 377, "member"]], "rem_roots": [93], "add_roots": []}, {"id": 47, "mappings": {"isNoObjectType": "METHOD_1", "isNoType": "METHOD_2", "isEmptyType": "METHOD_3", "isNoResolvedType": "METHOD_4"}, "nodes": ["MethodDeclaration", "public final", "BasicType", "boolean", "isEmptyType", "ReturnStatement", "BinaryOperation", "BinaryOperation", "MethodInvocation", "isNoType", "||", "MethodInvocation", "isNoObjectType", "||", "MethodInvocation", "isNoResolvedType"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "body"], [5, 6, "expression"], [6, 7, "operandl"], [7, 8, "operandl"], [8, 9, "member"], [7, 10, "operator"], [7, 11, "operandr"], [11, 12, "member"], [6, 13, "operator"], [6, 14, "operandr"], [14, 15, "member"]], "rem_roots": [5], "add_roots": []}, {"id": 48, "mappings": {"CALL": "VAR_1", "NEW": "VAR_2", "HOOK": "VAR_3", "GETPROP": "VAR_4", "ARRAYLIT": "VAR_5", "Token": "VAR_6", "ASSIGN": "VAR_7", "REGEXP": "VAR_8", "OBJECTLIT": "VAR_9", "GETELEM": "VAR_10", "value": "VAR_11", "COMMA": "VAR_12", "OR": "VAR_13", "DEC": "VAR_14", "IN": "VAR_15", "FUNCTION": "VAR_16", "NAME": "VAR_17", "INCRDECR_PROP": "VAR_18", "AND": "VAR_19", "THIS": "VAR_20", "locals": "VAR_21", "INC": "VAR_22", "IllegalStateException": "TYPE_1", "Node": "TYPE_2", "Predicate": "TYPE_3", "NodeUtil": "TYPE_4", "getBooleanProp": "METHOD_1", "isToStringMethodCall": "METHOD_2", "evaluatesToLocalValue": "METHOD_3", "getFirstChild": "METHOD_4", "isAssignmentOp": "METHOD_5", "getParent": "METHOD_6", "callHasLocalResult": "METHOD_7", "apply": "METHOD_8", "getNext": "METHOD_9", "getLastChild": "METHOD_10", "getType": "METHOD_11", "isImmutableValue": "METHOD_12", "isSimpleOperator": "METHOD_13", "\"\\n parent:\"": "STRING_1", "\"Unexpected expression node\"": "STRING_2"}, "nodes": ["MethodDeclaration", "static", "BasicType", "boolean", "evaluatesToLocalValue", "FormalParameter", "ReferenceType", "Node", "value", "FormalParameter", "ReferenceType", "Predicate", "TypeArgument", "ReferenceType", "Node", "locals", "SwitchStatement", "MethodInvocation", "value", "getType", "SwitchStatementCase", "MemberReference", "Token", "ASSIGN", "ReturnStatement", "BinaryOperation", "MethodInvocation", "NodeUtil", "isImmutableValue", "MethodInvocation", "value", "getLastChild", "||", "BinaryOperation", "MethodInvocation", "locals", "apply", "MemberReference", "value", "&&", "MethodInvocation", "evaluatesToLocalValue", "MethodInvocation", "value", "getLastChild", "MemberReference", "locals", "SwitchStatementCase", "MemberReference", "Token", "COMMA", "ReturnStatement", "MethodInvocation", "evaluatesToLocalValue", "MethodInvocation", "value", "getLastChild", "MemberReference", "locals", "SwitchStatementCase", "MemberReference", "Token", "AND", "MemberReference", "Token", "OR", "ReturnStatement", "BinaryOperation", "MethodInvocation", "evaluatesToLocalValue", "MethodInvocation", "value", "getFirstChild", "MemberReference", "locals", "&&", "MethodInvocation", "evaluatesToLocalValue", "MethodInvocation", "value", "getLastChild", "MemberReference", "locals", "SwitchStatementCase", "MemberReference", "Token", "HOOK", "ReturnStatement", "BinaryOperation", "MethodInvocation", "evaluatesToLocalValue", "MethodInvocation", "value", "getFirstChild", "MethodInvocation", "getNext", "MemberReference", "locals", "&&", "MethodInvocation", "evaluatesToLocalValue", "MethodInvocation", "value", "getLastChild", "MemberReference", "locals", "SwitchStatementCase", "MemberReference", "Token", "INC", "MemberReference", "Token", "DEC", "IfStatement", "MethodInvocation", "value", "getBooleanProp", "MemberReference", "Node", "INCRDECR_PROP", "BlockStatement", "ReturnStatement", "MethodInvocation", "evaluatesToLocalValue", "MethodInvocation", "value", "getFirstChild", "MemberReference", "locals", "BlockStatement", "ReturnStatement", "Literal", "true", "SwitchStatementCase", "MemberReference", "Token", "THIS", "ReturnStatement", "MethodInvocation", "locals", "apply", "MemberReference", "value", "SwitchStatementCase", "MemberReference", "Token", "NAME", "ReturnStatement", "BinaryOperation", "MethodInvocation", "isImmutableValue", "MemberReference", "value", "||", "MethodInvocation", "locals", "apply", "MemberReference", "value", "SwitchStatementCase", "MemberReference", "Token", "GETELEM", "MemberReference", "Token", "GETPROP", "ReturnStatement", "MethodInvocation", "locals", "apply", "MemberReference", "value", "SwitchStatementCase", "MemberReference", "Token", "CALL", "ReturnStatement", "BinaryOperation", "BinaryOperation", "MethodInvocation", "callHasLocalResult", "MemberReference", "value", "||", "MethodInvocation", "isToStringMethodCall", "MemberReference", "value", "||", "MethodInvocation", "locals", "apply", "MemberReference", "value", "SwitchStatementCase", "MemberReference", "Token", "NEW", "ReturnStatement", "Literal", "true", "SwitchStatementCase", "MemberReference", "Token", "FUNCTION", "MemberReference", "Token", "REGEXP", "MemberReference", "Token", "ARRAYLIT", "MemberReference", "Token", "OBJECTLIT", "ReturnStatement", "Literal", "true", "SwitchStatementCase", "MemberReference", "Token", "IN", "ReturnStatement", "Literal", "true", "SwitchStatementCase", "IfStatement", "BinaryOperation", "BinaryOperation", "MethodInvocation", "isAssignmentOp", "MemberReference", "value", "||", "MethodInvocation", "isSimpleOperator", "MemberReference", "value", "||", "MethodInvocation", "isImmutableValue", "MemberReference", "value", "BlockStatement", "ReturnStatement", "Literal", "true", "ThrowStatement", "ClassCreator", "ReferenceType", "IllegalStateException", "BinaryOperation", "BinaryOperation", "BinaryOperation", "Literal", "\"Unexpected expression node\"", "+", "MemberReference", "value", "+", "Literal", "\"\\n parent:\"", "+", "MethodInvocation", "value", "getParent"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [5, 8, "name"], [0, 9, "parameters"], [9, 10, "type"], [10, 11, "name"], [10, 12, "arguments"], [12, 13, "type"], [13, 14, "name"], [9, 15, "name"], [0, 16, "body"], [16, 17, "expression"], [17, 18, "qualifier"], [17, 19, "member"], [16, 20, "cases"], [20, 21, "case"], [21, 22, "qualifier"], [21, 23, "member"], [20, 24, "statements"], [24, 25, "expression"], [25, 26, "operandl"], [26, 27, "qualifier"], [26, 28, "member"], [26, 29, "arguments"], [29, 30, "qualifier"], [29, 31, "member"], [25, 32, "operator"], [25, 33, "operandr"], [33, 34, "operandl"], [34, 35, "qualifier"], [34, 36, "member"], [34, 37, "arguments"], [37, 38, "member"], [33, 39, "operator"], [33, 40, "operandr"], [40, 41, "member"], [40, 42, "arguments"], [42, 43, "qualifier"], [42, 44, "member"], [40, 45, "arguments"], [45, 46, "member"], [16, 47, "cases"], [47, 48, "case"], [48, 49, "qualifier"], [48, 50, "member"], [47, 51, "statements"], [51, 52, "expression"], [52, 53, "member"], [52, 54, "arguments"], [54, 55, "qualifier"], [54, 56, "member"], [52, 57, "arguments"], [57, 58, "member"], [16, 59, "cases"], [59, 60, "case"], [60, 61, "qualifier"], [60, 62, "member"], [59, 63, "case"], [63, 64, "qualifier"], [63, 65, "member"], [59, 66, "statements"], [66, 67, "expression"], [67, 68, "operandl"], [68, 69, "member"], [68, 70, "arguments"], [70, 71, "qualifier"], [70, 72, "member"], [68, 73, "arguments"], [73, 74, "member"], [67, 75, "operator"], [67, 76, "operandr"], [76, 77, "member"], [76, 78, "arguments"], [78, 79, "qualifier"], [78, 80, "member"], [76, 81, "arguments"], [81, 82, "member"], [16, 83, "cases"], [83, 84, "case"], [84, 85, "qualifier"], [84, 86, "member"], [83, 87, "statements"], [87, 88, "expression"], [88, 89, "operandl"], [89, 90, "member"], [89, 91, "arguments"], [91, 92, "qualifier"], [91, 93, "member"], [91, 94, "selectors"], [94, 95, "member"], [89, 96, "arguments"], [96, 97, "member"], [88, 98, "operator"], [88, 99, "operandr"], [99, 100, "member"], [99, 101, "arguments"], [101, 102, "qualifier"], [101, 103, "member"], [99, 104, "arguments"], [104, 105, "member"], [16, 106, "cases"], [106, 107, "case"], [107, 108, "qualifier"], [107, 109, "member"], [106, 110, "case"], [110, 111, "qualifier"], [110, 112, "member"], [106, 113, "statements"], [113, 114, "condition"], [114, 115, "qualifier"], [114, 116, "member"], [114, 117, "arguments"], [117, 118, "qualifier"], [117, 119, "member"], [113, 120, "then_statement"], [120, 121, "statements"], [121, 122, "expression"], [122, 123, "member"], [122, 124, "arguments"], [124, 125, "qualifier"], [124, 126, "member"], [122, 127, "arguments"], [127, 128, "member"], [113, 129, "else_statement"], [129, 130, "statements"], [130, 131, "expression"], [131, 132, "value"], [16, 133, "cases"], [133, 134, "case"], [134, 135, "qualifier"], [134, 136, "member"], [133, 137, "statements"], [137, 138, "expression"], [138, 139, "qualifier"], [138, 140, "member"], [138, 141, "arguments"], [141, 142, "member"], [16, 143, "cases"], [143, 144, "case"], [144, 145, "qualifier"], [144, 146, "member"], [143, 147, "statements"], [147, 148, "expression"], [148, 149, "operandl"], [149, 150, "member"], [149, 151, "arguments"], [151, 152, "member"], [148, 153, "operator"], [148, 154, "operandr"], [154, 155, "qualifier"], [154, 156, "member"], [154, 157, "arguments"], [157, 158, "member"], [16, 159, "cases"], [159, 160, "case"], [160, 161, "qualifier"], [160, 162, "member"], [159, 163, "case"], [163, 164, "qualifier"], [163, 165, "member"], [159, 166, "statements"], [166, 167, "expression"], [167, 168, "qualifier"], [167, 169, "member"], [167, 170, "arguments"], [170, 171, "member"], [16, 172, "cases"], [172, 173, "case"], [173, 174, "qualifier"], [173, 175, "member"], [172, 176, "statements"], [176, 177, "expression"], [177, 178, "operandl"], [178, 179, "operandl"], [179, 180, "member"], [179, 181, "arguments"], [181, 182, "member"], [178, 183, "operator"], [178, 184, "operandr"], [184, 185, "member"], [184, 186, "arguments"], [186, 187, "member"], [177, 188, "operator"], [177, 189, "operandr"], [189, 190, "qualifier"], [189, 191, "member"], [189, 192, "arguments"], [192, 193, "member"], [16, 194, "cases"], [194, 195, "case"], [195, 196, "qualifier"], [195, 197, "member"], [194, 198, "statements"], [198, 199, "expression"], [199, 200, "value"], [16, 201, "cases"], [201, 202, "case"], [202, 203, "qualifier"], [202, 204, "member"], [201, 205, "case"], [205, 206, "qualifier"], [205, 207, "member"], [201, 208, "case"], [208, 209, "qualifier"], [208, 210, "member"], [201, 211, "case"], [211, 212, "qualifier"], [211, 213, "member"], [201, 214, "statements"], [214, 215, "expression"], [215, 216, "value"], [16, 217, "cases"], [217, 218, "case"], [218, 219, "qualifier"], [218, 220, "member"], [217, 221, "statements"], [221, 222, "expression"], [222, 223, "value"], [16, 224, "cases"], [224, 225, "statements"], [225, 226, "condition"], [226, 227, "operandl"], [227, 228, "operandl"], [228, 229, "member"], [228, 230, "arguments"], [230, 231, "member"], [227, 232, "operator"], [227, 233, "operandr"], [233, 234, "member"], [233, 235, "arguments"], [235, 236, "member"], [226, 237, "operator"], [226, 238, "operandr"], [238, 239, "member"], [238, 240, "arguments"], [240, 241, "member"], [225, 242, "then_statement"], [242, 243, "statements"], [243, 244, "expression"], [244, 245, "value"], [224, 246, "statements"], [246, 247, "expression"], [247, 248, "type"], [248, 249, "name"], [247, 250, "arguments"], [250, 251, "operandl"], [251, 252, "operandl"], [252, 253, "operandl"], [253, 254, "value"], [252, 255, "operator"], [252, 256, "operandr"], [256, 257, "member"], [251, 258, "operator"], [251, 259, "operandr"], [259, 260, "value"], [250, 261, "operator"], [250, 262, "operandr"], [262, 263, "qualifier"], [262, 264, "member"]], "rem_roots": [198], "add_roots": []}, {"id": 49, "mappings": {"parentName.replacementNode": "VAR_1", "VAR": "VAR_2", "Token": "VAR_3", "assignNode": "VAR_4", "nameNode": "VAR_5", "IS_NAMESPACE": "VAR_6", "NAME": "VAR_7", "parentName": "VAR_8", "explicitNode": "VAR_9", "firstNode": "VAR_10", "providedNames": "VAR_11", "valueNode": "VAR_12", "candidateDefinition": "VAR_13", "replacementNode": "VAR_14", "minimumModule": "VAR_15", "varNode": "VAR_16", "compiler": "VAR_17", "firstModule": "VAR_18", "indexOfDot": "VAR_19", "namespace": "VAR_20", "Node": "TYPE_1", "NodeUtil": "TYPE_2", "ProvidedName": "TYPE_3", "Preconditions": "TYPE_4", "createDeclarationNode": "METHOD_1", "addChildToBack": "METHOD_2", "replace": "METHOD_3", "removeChild": "METHOD_4", "getJSDocInfo": "METHOD_5", "checkNotNull": "METHOD_6", "isExpressionNode": "METHOD_7", "setJSDocInfo": "METHOD_8", "indexOf": "METHOD_9", "replaceChild": "METHOD_10", "addChildToFront": "METHOD_11", "getType": "METHOD_12", "getNodeForCodeInsertion": "METHOD_13", "substring": "METHOD_14", "reportCodeChange": "METHOD_15", "get": "METHOD_16", "getFirstChild": "METHOD_17", "copyInformationFrom": "METHOD_18", "getParent": "METHOD_19", "getNext": "METHOD_20", "addChildAfter": "METHOD_21", "putBooleanProp": "METHOD_22", "detachFromParent": "METHOD_23", "addChildBefore": "METHOD_24", "0": "INT_1", "1": "INT_2", "'.'": "CHAR_1"}, "nodes": ["MethodDeclaration", "void", "replace", "IfStatement", "BinaryOperation", "MemberReference", "firstNode", "==", "Literal", "null", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "replacementNode", "=", "MemberReference", "candidateDefinition", "ReturnStatement", "IfStatement", "BinaryOperation", "BinaryOperation", "MemberReference", "candidateDefinition", "!=", "Literal", "null", "&&", "BinaryOperation", "MemberReference", "explicitNode", "!=", "Literal", "null", "BlockStatement", "StatementExpression", "MethodInvocation", "explicitNode", "detachFromParent", "StatementExpression", "MethodInvocation", "compiler", "reportCodeChange", "StatementExpression", "Assignment", "MemberReference", "replacementNode", "=", "MemberReference", "candidateDefinition", "IfStatement", "MethodInvocation", "NodeUtil", "isExpressionNode", "MemberReference", "candidateDefinition", "BlockStatement", "StatementExpression", "MethodInvocation", "candidateDefinition", "putBooleanProp", "MemberReference", "Node", "IS_NAMESPACE", "Literal", "true", "LocalVariableDeclaration", "ReferenceType", "Node", "VariableDeclarator", "assignNode", "MethodInvocation", "candidateDefinition", "getFirstChild", "LocalVariableDeclaration", "ReferenceType", "Node", "VariableDeclarator", "nameNode", "MethodInvocation", "assignNode", "getFirstChild", "IfStatement", "BinaryOperation", "MethodInvocation", "nameNode", "getType", "==", "MemberReference", "Token", "NAME", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "Node", "VariableDeclarator", "valueNode", "MethodInvocation", "nameNode", "getNext", "StatementExpression", "MethodInvocation", "assignNode", "removeChild", "MemberReference", "nameNode", "StatementExpression", "MethodInvocation", "assignNode", "removeChild", "MemberReference", "valueNode", "StatementExpression", "MethodInvocation", "nameNode", "addChildToFront", "MemberReference", "valueNode", "LocalVariableDeclaration", "ReferenceType", "Node", "VariableDeclarator", "varNode", "ClassCreator", "ReferenceType", "Node", "MemberReference", "Token", "VAR", "MemberReference", "nameNode", "StatementExpression", "MethodInvocation", "varNode", "copyInformationFrom", "MemberReference", "candidateDefinition", "StatementExpression", "MethodInvocation", "candidateDefinition", "getParent", "MethodInvocation", "replaceChild", "MemberReference", "candidateDefinition", "MemberReference", "varNode", "StatementExpression", "MethodInvocation", "nameNode", "setJSDocInfo", "MethodInvocation", "assignNode", "getJSDocInfo", "StatementExpression", "MethodInvocation", "compiler", "reportCodeChange", "StatementExpression", "Assignment", "MemberReference", "replacementNode", "=", "MemberReference", "varNode", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "replacementNode", "=", "MethodInvocation", "createDeclarationNode", "IfStatement", "BinaryOperation", "MemberReference", "firstModule", "==", "MemberReference", "minimumModule", "BlockStatement", "StatementExpression", "MethodInvocation", "firstNode", "getParent", "MethodInvocation", "addChildBefore", "MemberReference", "replacementNode", "MemberReference", "firstNode", "BlockStatement", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "indexOfDot", "MethodInvocation", "namespace", "indexOf", "Literal", "'.'", "IfStatement", "BinaryOperation", "MemberReference", "indexOfDot", "==", "Literal", "-", "1", "BlockStatement", "StatementExpression", "MethodInvocation", "compiler", "getNodeForCodeInsertion", "MemberReference", "minimumModule", "MethodInvocation", "addChildToBack", "MemberReference", "replacementNode", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "ProvidedName", "VariableDeclarator", "parentName", "MethodInvocation", "providedNames", "get", "MethodInvocation", "namespace", "substring", "Literal", "0", "MemberReference", "indexOfDot", "StatementExpression", "MethodInvocation", "Preconditions", "checkNotNull", "MemberReference", "parentName", "StatementExpression", "MethodInvocation", "Preconditions", "checkNotNull", "MemberReference", "parentName", "replacementNode", "StatementExpression", "MethodInvocation", "parentName.replacementNode", "getParent", "MethodInvocation", "addChildAfter", "MemberReference", "replacementNode", "MemberReference", "parentName", "replacementNode", "IfStatement", "BinaryOperation", "MemberReference", "explicitNode", "!=", "Literal", "null", "BlockStatement", "StatementExpression", "MethodInvocation", "explicitNode", "detachFromParent", "StatementExpression", "MethodInvocation", "compiler", "reportCodeChange"], "edges": [[0, 1, "return_type"], [0, 2, "name"], [0, 3, "body"], [3, 4, "condition"], [4, 5, "operandl"], [5, 6, "member"], [4, 7, "operator"], [4, 8, "operandr"], [8, 9, "value"], [3, 10, "then_statement"], [10, 11, "statements"], [11, 12, "expression"], [12, 13, "expressionl"], [13, 14, "member"], [12, 15, "type"], [12, 16, "value"], [16, 17, "member"], [10, 18, "statements"], [0, 19, "body"], [19, 20, "condition"], [20, 21, "operandl"], [21, 22, "operandl"], [22, 23, "member"], [21, 24, "operator"], [21, 25, "operandr"], [25, 26, "value"], [20, 27, "operator"], [20, 28, "operandr"], [28, 29, "operandl"], [29, 30, "member"], [28, 31, "operator"], [28, 32, "operandr"], [32, 33, "value"], [19, 34, "then_statement"], [34, 35, "statements"], [35, 36, "expression"], [36, 37, "qualifier"], [36, 38, "member"], [34, 39, "statements"], [39, 40, "expression"], [40, 41, "qualifier"], [40, 42, "member"], [34, 43, "statements"], [43, 44, "expression"], [44, 45, "expressionl"], [45, 46, "member"], [44, 47, "type"], [44, 48, "value"], [48, 49, "member"], [34, 50, "statements"], [50, 51, "condition"], [51, 52, "qualifier"], [51, 53, "member"], [51, 54, "arguments"], [54, 55, "member"], [50, 56, "then_statement"], [56, 57, "statements"], [57, 58, "expression"], [58, 59, "qualifier"], [58, 60, "member"], [58, 61, "arguments"], [61, 62, "qualifier"], [61, 63, "member"], [58, 64, "arguments"], [64, 65, "value"], [56, 66, "statements"], [66, 67, "type"], [67, 68, "name"], [66, 69, "declarators"], [69, 70, "name"], [69, 71, "initializer"], [71, 72, "qualifier"], [71, 73, "member"], [56, 74, "statements"], [74, 75, "type"], [75, 76, "name"], [74, 77, "declarators"], [77, 78, "name"], [77, 79, "initializer"], [79, 80, "qualifier"], [79, 81, "member"], [56, 82, "statements"], [82, 83, "condition"], [83, 84, "operandl"], [84, 85, "qualifier"], [84, 86, "member"], [83, 87, "operator"], [83, 88, "operandr"], [88, 89, "qualifier"], [88, 90, "member"], [82, 91, "then_statement"], [91, 92, "statements"], [92, 93, "type"], [93, 94, "name"], [92, 95, "declarators"], [95, 96, "name"], [95, 97, "initializer"], [97, 98, "qualifier"], [97, 99, "member"], [91, 100, "statements"], [100, 101, "expression"], [101, 102, "qualifier"], [101, 103, "member"], [101, 104, "arguments"], [104, 105, "member"], [91, 106, "statements"], [106, 107, "expression"], [107, 108, "qualifier"], [107, 109, "member"], [107, 110, "arguments"], [110, 111, "member"], [91, 112, "statements"], [112, 113, "expression"], [113, 114, "qualifier"], [113, 115, "member"], [113, 116, "arguments"], [116, 117, "member"], [91, 118, "statements"], [118, 119, "type"], [119, 120, "name"], [118, 121, "declarators"], [121, 122, "name"], [121, 123, "initializer"], [123, 124, "type"], [124, 125, "name"], [123, 126, "arguments"], [126, 127, "qualifier"], [126, 128, "member"], [123, 129, "arguments"], [129, 130, "member"], [91, 131, "statements"], [131, 132, "expression"], [132, 133, "qualifier"], [132, 134, "member"], [132, 135, "arguments"], [135, 136, "member"], [91, 137, "statements"], [137, 138, "expression"], [138, 139, "qualifier"], [138, 140, "member"], [138, 141, "selectors"], [141, 142, "member"], [141, 143, "arguments"], [143, 144, "member"], [141, 145, "arguments"], [145, 146, "member"], [91, 147, "statements"], [147, 148, "expression"], [148, 149, "qualifier"], [148, 150, "member"], [148, 151, "arguments"], [151, 152, "qualifier"], [151, 153, "member"], [91, 154, "statements"], [154, 155, "expression"], [155, 156, "qualifier"], [155, 157, "member"], [91, 158, "statements"], [158, 159, "expression"], [159, 160, "expressionl"], [160, 161, "member"], [159, 162, "type"], [159, 163, "value"], [163, 164, "member"], [19, 165, "else_statement"], [165, 166, "statements"], [166, 167, "expression"], [167, 168, "expressionl"], [168, 169, "member"], [167, 170, "type"], [167, 171, "value"], [171, 172, "member"], [165, 173, "statements"], [173, 174, "condition"], [174, 175, "operandl"], [175, 176, "member"], [174, 177, "operator"], [174, 178, "operandr"], [178, 179, "member"], [173, 180, "then_statement"], [180, 181, "statements"], [181, 182, "expression"], [182, 183, "qualifier"], [182, 184, "member"], [182, 185, "selectors"], [185, 186, "member"], [185, 187, "arguments"], [187, 188, "member"], [185, 189, "arguments"], [189, 190, "member"], [173, 191, "else_statement"], [191, 192, "statements"], [192, 193, "type"], [193, 194, "name"], [192, 195, "declarators"], [195, 196, "name"], [195, 197, "initializer"], [197, 198, "qualifier"], [197, 199, "member"], [197, 200, "arguments"], [200, 201, "value"], [191, 202, "statements"], [202, 203, "condition"], [203, 204, "operandl"], [204, 205, "member"], [203, 206, "operator"], [203, 207, "operandr"], [207, 208, "prefix_operators"], [207, 209, "value"], [202, 210, "then_statement"], [210, 211, "statements"], [211, 212, "expression"], [212, 213, "qualifier"], [212, 214, "member"], [212, 215, "arguments"], [215, 216, "member"], [212, 217, "selectors"], [217, 218, "member"], [217, 219, "arguments"], [219, 220, "member"], [202, 221, "else_statement"], [221, 222, "statements"], [222, 223, "type"], [223, 224, "name"], [222, 225, "declarators"], [225, 226, "name"], [225, 227, "initializer"], [227, 228, "qualifier"], [227, 229, "member"], [227, 230, "arguments"], [230, 231, "qualifier"], [230, 232, "member"], [230, 233, "arguments"], [233, 234, "value"], [230, 235, "arguments"], [235, 236, "member"], [221, 237, "statements"], [237, 238, "expression"], [238, 239, "qualifier"], [238, 240, "member"], [238, 241, "arguments"], [241, 242, "member"], [221, 243, "statements"], [243, 244, "expression"], [244, 245, "qualifier"], [244, 246, "member"], [244, 247, "arguments"], [247, 248, "qualifier"], [247, 249, "member"], [221, 250, "statements"], [250, 251, "expression"], [251, 252, "qualifier"], [251, 253, "member"], [251, 254, "selectors"], [254, 255, "member"], [254, 256, "arguments"], [256, 257, "member"], [254, 258, "arguments"], [258, 259, "qualifier"], [258, 260, "member"], [165, 261, "statements"], [261, 262, "condition"], [262, 263, "operandl"], [263, 264, "member"], [262, 265, "operator"], [262, 266, "operandr"], [266, 267, "value"], [261, 268, "then_statement"], [268, 269, "statements"], [269, 270, "expression"], [270, 271, "qualifier"], [270, 272, "member"], [165, 273, "statements"], [273, 274, "expression"], [274, 275, "qualifier"], [274, 276, "member"]], "rem_roots": [192], "add_roots": []}, {"id": 50, "mappings": {"bytes": "VAR_1", "ISO_8859_1": "VAR_2", "Charsets": "VAR_3", "String": "TYPE_1", "newStringIso8859_1": "METHOD_1"}, "nodes": ["MethodDeclaration", "public static", "ReferenceType", "String", "newStringIso8859_1", "FormalParameter", "BasicType", "byte", "None", "bytes", "ReturnStatement", "ClassCreator", "ReferenceType", "String", "MemberReference", "bytes", "MemberReference", "Charsets", "ISO_8859_1"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [6, 8, "dimensions"], [5, 9, "name"], [0, 10, "body"], [10, 11, "expression"], [11, 12, "type"], [12, 13, "name"], [11, 14, "arguments"], [14, 15, "member"], [11, 16, "arguments"], [16, 17, "qualifier"], [16, 18, "member"]], "rem_roots": [10], "add_roots": []}, {"id": 51, "mappings": {"cs1": "VAR_1", "cs2": "VAR_2", "CharSequenceUtils": "TYPE_1", "CharSequence": "TYPE_2", "String": "TYPE_3", "Math": "TYPE_4", "max": "METHOD_1", "equals": "METHOD_2", "length": "METHOD_3", "regionMatches": "METHOD_4", "0": "INT_1"}, "nodes": ["MethodDeclaration", "public static", "BasicType", "boolean", "equals", "FormalParameter", "ReferenceType", "CharSequence", "cs1", "FormalParameter", "ReferenceType", "CharSequence", "cs2", "IfStatement", "BinaryOperation", "MemberReference", "cs1", "==", "MemberReference", "cs2", "BlockStatement", "ReturnStatement", "Literal", "true", "IfStatement", "BinaryOperation", "BinaryOperation", "MemberReference", "cs1", "==", "Literal", "null", "||", "BinaryOperation", "MemberReference", "cs2", "==", "Literal", "null", "BlockStatement", "ReturnStatement", "Literal", "false", "IfStatement", "BinaryOperation", "BinaryOperation", "MemberReference", "cs1", "instanceof", "ReferenceType", "String", "&&", "BinaryOperation", "MemberReference", "cs2", "instanceof", "ReferenceType", "String", "BlockStatement", "ReturnStatement", "MethodInvocation", "cs1", "equals", "MemberReference", "cs2", "ReturnStatement", "MethodInvocation", "CharSequenceUtils", "regionMatches", "MemberReference", "cs1", "Literal", "false", "Literal", "0", "MemberReference", "cs2", "Literal", "0", "MethodInvocation", "Math", "max", "MethodInvocation", "cs1", "length", "MethodInvocation", "cs2", "length"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [5, 8, "name"], [0, 9, "parameters"], [9, 10, "type"], [10, 11, "name"], [9, 12, "name"], [0, 13, "body"], [13, 14, "condition"], [14, 15, "operandl"], [15, 16, "member"], [14, 17, "operator"], [14, 18, "operandr"], [18, 19, "member"], [13, 20, "then_statement"], [20, 21, "statements"], [21, 22, "expression"], [22, 23, "value"], [0, 24, "body"], [24, 25, "condition"], [25, 26, "operandl"], [26, 27, "operandl"], [27, 28, "member"], [26, 29, "operator"], [26, 30, "operandr"], [30, 31, "value"], [25, 32, "operator"], [25, 33, "operandr"], [33, 34, "operandl"], [34, 35, "member"], [33, 36, "operator"], [33, 37, "operandr"], [37, 38, "value"], [24, 39, "then_statement"], [39, 40, "statements"], [40, 41, "expression"], [41, 42, "value"], [0, 43, "body"], [43, 44, "condition"], [44, 45, "operandl"], [45, 46, "operandl"], [46, 47, "member"], [45, 48, "operator"], [45, 49, "operandr"], [49, 50, "name"], [44, 51, "operator"], [44, 52, "operandr"], [52, 53, "operandl"], [53, 54, "member"], [52, 55, "operator"], [52, 56, "operandr"], [56, 57, "name"], [43, 58, "then_statement"], [58, 59, "statements"], [59, 60, "expression"], [60, 61, "qualifier"], [60, 62, "member"], [60, 63, "arguments"], [63, 64, "member"], [0, 65, "body"], [65, 66, "expression"], [66, 67, "qualifier"], [66, 68, "member"], [66, 69, "arguments"], [69, 70, "member"], [66, 71, "arguments"], [71, 72, "value"], [66, 73, "arguments"], [73, 74, "value"], [66, 75, "arguments"], [75, 76, "member"], [66, 77, "arguments"], [77, 78, "value"], [66, 79, "arguments"], [79, 80, "qualifier"], [79, 81, "member"], [79, 82, "arguments"], [82, 83, "qualifier"], [82, 84, "member"], [79, 85, "arguments"], [85, 86, "qualifier"], [85, 87, "member"]], "rem_roots": [65], "add_roots": []}, {"id": 52, "mappings": {"currentLinePos": "VAR_1", "STANDARD_ENCODE_TABLE": "VAR_2", "MASK_6BITS": "VAR_3", "lineSeparator": "VAR_4", "encodeSize": "VAR_5", "inPos": "VAR_6", "pos": "VAR_7", "modulus": "VAR_8", "encodeTable": "VAR_9", "b": "VAR_10", "inAvail": "VAR_11", "in": "VAR_12", "length": "VAR_13", "i": "VAR_14", "lineLength": "VAR_15", "buf": "VAR_16", "PAD": "VAR_17", "x": "VAR_18", "eof": "VAR_19", "System": "TYPE_1", "encode": "METHOD_1", "resizeBuf": "METHOD_2", "arraycopy": "METHOD_3", "256": "INT_1", "10": "INT_2", "12": "INT_3", "18": "INT_4", "0": "INT_5", "1": "INT_6", "2": "INT_7", "3": "INT_8", "4": "INT_9", "6": "INT_10", "8": "INT_11"}, "nodes": ["MethodDeclaration", "void", "encode", "FormalParameter", "BasicType", "byte", "None", "in", "FormalParameter", "BasicType", "int", "inPos", "FormalParameter", "BasicType", "int", "inAvail", "IfStatement", "MemberReference", "eof", "BlockStatement", "ReturnStatement", "IfStatement", "BinaryOperation", "MemberReference", "inAvail", "<", "Literal", "0", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "eof", "=", "Literal", "true", "IfStatement", "BinaryOperation", "BinaryOperation", "MemberReference", "buf", "==", "Literal", "null", "||", "BinaryOperation", "BinaryOperation", "MemberReference", "buf", "length", "-", "MemberReference", "pos", "<", "MemberReference", "encodeSize", "BlockStatement", "StatementExpression", "MethodInvocation", "resizeBuf", "SwitchStatement", "MemberReference", "modulus", "SwitchStatementCase", "Literal", "1", "StatementExpression", "Assignment", "MemberReference", "buf", "ArraySelector", "MemberReference", "pos", "++", "=", "MemberReference", "encodeTable", "ArraySelector", "BinaryOperation", "BinaryOperation", "MemberReference", "x", ">>", "Literal", "2", "&", "MemberReference", "MASK_6BITS", "StatementExpression", "Assignment", "MemberReference", "buf", "ArraySelector", "MemberReference", "pos", "++", "=", "MemberReference", "encodeTable", "ArraySelector", "BinaryOperation", "BinaryOperation", "MemberReference", "x", "<<", "Literal", "4", "&", "MemberReference", "MASK_6BITS", "IfStatement", "BinaryOperation", "MemberReference", "encodeTable", "==", "MemberReference", "STANDARD_ENCODE_TABLE", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "buf", "ArraySelector", "MemberReference", "pos", "++", "=", "MemberReference", "PAD", "StatementExpression", "Assignment", "MemberReference", "buf", "ArraySelector", "MemberReference", "pos", "++", "=", "MemberReference", "PAD", "BreakStatement", "SwitchStatementCase", "Literal", "2", "StatementExpression", "Assignment", "MemberReference", "buf", "ArraySelector", "MemberReference", "pos", "++", "=", "MemberReference", "encodeTable", "ArraySelector", "BinaryOperation", "BinaryOperation", "MemberReference", "x", ">>", "Literal", "10", "&", "MemberReference", "MASK_6BITS", "StatementExpression", "Assignment", "MemberReference", "buf", "ArraySelector", "MemberReference", "pos", "++", "=", "MemberReference", "encodeTable", "ArraySelector", "BinaryOperation", "BinaryOperation", "MemberReference", "x", ">>", "Literal", "4", "&", "MemberReference", "MASK_6BITS", "StatementExpression", "Assignment", "MemberReference", "buf", "ArraySelector", "MemberReference", "pos", "++", "=", "MemberReference", "encodeTable", "ArraySelector", "BinaryOperation", "BinaryOperation", "MemberReference", "x", "<<", "Literal", "2", "&", "MemberReference", "MASK_6BITS", "IfStatement", "BinaryOperation", "MemberReference", "encodeTable", "==", "MemberReference", "STANDARD_ENCODE_TABLE", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "buf", "ArraySelector", "MemberReference", "pos", "++", "=", "MemberReference", "PAD", "BreakStatement", "IfStatement", "BinaryOperation", "MemberReference", "lineLength", ">", "Literal", "0", "BlockStatement", "StatementExpression", "MethodInvocation", "System", "arraycopy", "MemberReference", "lineSeparator", "Literal", "0", "MemberReference", "buf", "MemberReference", "pos", "MemberReference", "lineSeparator", "length", "StatementExpression", "Assignment", "MemberReference", "pos", "+=", "MemberReference", "lineSeparator", "length", "BlockStatement", "ForStatement", "ForControl", "VariableDeclaration", "BasicType", "int", "VariableDeclarator", "i", "Literal", "0", "BinaryOperation", "MemberReference", "i", "<", "MemberReference", "inAvail", "MemberReference", "i", "++", "BlockStatement", "IfStatement", "BinaryOperation", "BinaryOperation", "MemberReference", "buf", "==", "Literal", "null", "||", "BinaryOperation", "BinaryOperation", "MemberReference", "buf", "length", "-", "MemberReference", "pos", "<", "MemberReference", "encodeSize", "BlockStatement", "StatementExpression", "MethodInvocation", "resizeBuf", "StatementExpression", "Assignment", "MemberReference", "modulus", "=", "BinaryOperation", "MemberReference", "++", "modulus", "%", "Literal", "3", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "b", "MemberReference", "in", "ArraySelector", "MemberReference", "inPos", "++", "IfStatement", "BinaryOperation", "MemberReference", "b", "<", "Literal", "0", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "b", "+=", "Literal", "256", "StatementExpression", "Assignment", "MemberReference", "x", "=", "BinaryOperation", "BinaryOperation", "MemberReference", "x", "<<", "Literal", "8", "+", "MemberReference", "b", "IfStatement", "BinaryOperation", "Literal", "0", "==", "MemberReference", "modulus", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "buf", "ArraySelector", "MemberReference", "pos", "++", "=", "MemberReference", "encodeTable", "ArraySelector", "BinaryOperation", "BinaryOperation", "MemberReference", "x", ">>", "Literal", "18", "&", "MemberReference", "MASK_6BITS", "StatementExpression", "Assignment", "MemberReference", "buf", "ArraySelector", "MemberReference", "pos", "++", "=", "MemberReference", "encodeTable", "ArraySelector", "BinaryOperation", "BinaryOperation", "MemberReference", "x", ">>", "Literal", "12", "&", "MemberReference", "MASK_6BITS", "StatementExpression", "Assignment", "MemberReference", "buf", "ArraySelector", "MemberReference", "pos", "++", "=", "MemberReference", "encodeTable", "ArraySelector", "BinaryOperation", "BinaryOperation", "MemberReference", "x", ">>", "Literal", "6", "&", "MemberReference", "MASK_6BITS", "StatementExpression", "Assignment", "MemberReference", "buf", "ArraySelector", "MemberReference", "pos", "++", "=", "MemberReference", "encodeTable", "ArraySelector", "BinaryOperation", "MemberReference", "x", "&", "MemberReference", "MASK_6BITS", "StatementExpression", "Assignment", "MemberReference", "currentLinePos", "+=", "Literal", "4", "IfStatement", "BinaryOperation", "BinaryOperation", "MemberReference", "lineLength", ">", "Literal", "0", "&&", "BinaryOperation", "MemberReference", "lineLength", "<=", "MemberReference", "currentLinePos", "BlockStatement", "StatementExpression", "MethodInvocation", "System", "arraycopy", "MemberReference", "lineSeparator", "Literal", "0", "MemberReference", "buf", "MemberReference", "pos", "MemberReference", "lineSeparator", "length", "StatementExpression", "Assignment", "MemberReference", "pos", "+=", "MemberReference", "lineSeparator", "length", "StatementExpression", "Assignment", "MemberReference", "currentLinePos", "=", "Literal", "0"], "edges": [[0, 1, "return_type"], [0, 2, "name"], [0, 3, "parameters"], [3, 4, "type"], [4, 5, "name"], [4, 6, "dimensions"], [3, 7, "name"], [0, 8, "parameters"], [8, 9, "type"], [9, 10, "name"], [8, 11, "name"], [0, 12, "parameters"], [12, 13, "type"], [13, 14, "name"], [12, 15, "name"], [0, 16, "body"], [16, 17, "condition"], [17, 18, "member"], [16, 19, "then_statement"], [19, 20, "statements"], [0, 21, "body"], [21, 22, "condition"], [22, 23, "operandl"], [23, 24, "member"], [22, 25, "operator"], [22, 26, "operandr"], [26, 27, "value"], [21, 28, "then_statement"], [28, 29, "statements"], [29, 30, "expression"], [30, 31, "expressionl"], [31, 32, "member"], [30, 33, "type"], [30, 34, "value"], [34, 35, "value"], [28, 36, "statements"], [36, 37, "condition"], [37, 38, "operandl"], [38, 39, "operandl"], [39, 40, "member"], [38, 41, "operator"], [38, 42, "operandr"], [42, 43, "value"], [37, 44, "operator"], [37, 45, "operandr"], [45, 46, "operandl"], [46, 47, "operandl"], [47, 48, "qualifier"], [47, 49, "member"], [46, 50, "operator"], [46, 51, "operandr"], [51, 52, "member"], [45, 53, "operator"], [45, 54, "operandr"], [54, 55, "member"], [36, 56, "then_statement"], [56, 57, "statements"], [57, 58, "expression"], [58, 59, "member"], [28, 60, "statements"], [60, 61, "expression"], [61, 62, "member"], [60, 63, "cases"], [63, 64, "case"], [64, 65, "value"], [63, 66, "statements"], [66, 67, "expression"], [67, 68, "expressionl"], [68, 69, "member"], [68, 70, "selectors"], [70, 71, "index"], [71, 72, "member"], [71, 73, "postfix_operators"], [67, 74, "type"], [67, 75, "value"], [75, 76, "member"], [75, 77, "selectors"], [77, 78, "index"], [78, 79, "operandl"], [79, 80, "operandl"], [80, 81, "member"], [79, 82, "operator"], [79, 83, "operandr"], [83, 84, "value"], [78, 85, "operator"], [78, 86, "operandr"], [86, 87, "member"], [63, 88, "statements"], [88, 89, "expression"], [89, 90, "expressionl"], [90, 91, "member"], [90, 92, "selectors"], [92, 93, "index"], [93, 94, "member"], [93, 95, "postfix_operators"], [89, 96, "type"], [89, 97, "value"], [97, 98, "member"], [97, 99, "selectors"], [99, 100, "index"], [100, 101, "operandl"], [101, 102, "operandl"], [102, 103, "member"], [101, 104, "operator"], [101, 105, "operandr"], [105, 106, "value"], [100, 107, "operator"], [100, 108, "operandr"], [108, 109, "member"], [63, 110, "statements"], [110, 111, "condition"], [111, 112, "operandl"], [112, 113, "member"], [111, 114, "operator"], [111, 115, "operandr"], [115, 116, "member"], [110, 117, "then_statement"], [117, 118, "statements"], [118, 119, "expression"], [119, 120, "expressionl"], [120, 121, "member"], [120, 122, "selectors"], [122, 123, "index"], [123, 124, "member"], [123, 125, "postfix_operators"], [119, 126, "type"], [119, 127, "value"], [127, 128, "member"], [117, 129, "statements"], [129, 130, "expression"], [130, 131, "expressionl"], [131, 132, "member"], [131, 133, "selectors"], [133, 134, "index"], [134, 135, "member"], [134, 136, "postfix_operators"], [130, 137, "type"], [130, 138, "value"], [138, 139, "member"], [63, 140, "statements"], [60, 141, "cases"], [141, 142, "case"], [142, 143, "value"], [141, 144, "statements"], [144, 145, "expression"], [145, 146, "expressionl"], [146, 147, "member"], [146, 148, "selectors"], [148, 149, "index"], [149, 150, "member"], [149, 151, "postfix_operators"], [145, 152, "type"], [145, 153, "value"], [153, 154, "member"], [153, 155, "selectors"], [155, 156, "index"], [156, 157, "operandl"], [157, 158, "operandl"], [158, 159, "member"], [157, 160, "operator"], [157, 161, "operandr"], [161, 162, "value"], [156, 163, "operator"], [156, 164, "operandr"], [164, 165, "member"], [141, 166, "statements"], [166, 167, "expression"], [167, 168, "expressionl"], [168, 169, "member"], [168, 170, "selectors"], [170, 171, "index"], [171, 172, "member"], [171, 173, "postfix_operators"], [167, 174, "type"], [167, 175, "value"], [175, 176, "member"], [175, 177, "selectors"], [177, 178, "index"], [178, 179, "operandl"], [179, 180, "operandl"], [180, 181, "member"], [179, 182, "operator"], [179, 183, "operandr"], [183, 184, "value"], [178, 185, "operator"], [178, 186, "operandr"], [186, 187, "member"], [141, 188, "statements"], [188, 189, "expression"], [189, 190, "expressionl"], [190, 191, "member"], [190, 192, "selectors"], [192, 193, "index"], [193, 194, "member"], [193, 195, "postfix_operators"], [189, 196, "type"], [189, 197, "value"], [197, 198, "member"], [197, 199, "selectors"], [199, 200, "index"], [200, 201, "operandl"], [201, 202, "operandl"], [202, 203, "member"], [201, 204, "operator"], [201, 205, "operandr"], [205, 206, "value"], [200, 207, "operator"], [200, 208, "operandr"], [208, 209, "member"], [141, 210, "statements"], [210, 211, "condition"], [211, 212, "operandl"], [212, 213, "member"], [211, 214, "operator"], [211, 215, "operandr"], [215, 216, "member"], [210, 217, "then_statement"], [217, 218, "statements"], [218, 219, "expression"], [219, 220, "expressionl"], [220, 221, "member"], [220, 222, "selectors"], [222, 223, "index"], [223, 224, "member"], [223, 225, "postfix_operators"], [219, 226, "type"], [219, 227, "value"], [227, 228, "member"], [141, 229, "statements"], [28, 230, "statements"], [230, 231, "condition"], [231, 232, "operandl"], [232, 233, "member"], [231, 234, "operator"], [231, 235, "operandr"], [235, 236, "value"], [230, 237, "then_statement"], [237, 238, "statements"], [238, 239, "expression"], [239, 240, "qualifier"], [239, 241, "member"], [239, 242, "arguments"], [242, 243, "member"], [239, 244, "arguments"], [244, 245, "value"], [239, 246, "arguments"], [246, 247, "member"], [239, 248, "arguments"], [248, 249, "member"], [239, 250, "arguments"], [250, 251, "qualifier"], [250, 252, "member"], [237, 253, "statements"], [253, 254, "expression"], [254, 255, "expressionl"], [255, 256, "member"], [254, 257, "type"], [254, 258, "value"], [258, 259, "qualifier"], [258, 260, "member"], [21, 261, "else_statement"], [261, 262, "statements"], [262, 263, "control"], [263, 264, "init"], [264, 265, "type"], [265, 266, "name"], [264, 267, "declarators"], [267, 268, "name"], [267, 269, "initializer"], [269, 270, "value"], [263, 271, "condition"], [271, 272, "operandl"], [272, 273, "member"], [271, 274, "operator"], [271, 275, "operandr"], [275, 276, "member"], [263, 277, "update"], [277, 278, "member"], [277, 279, "postfix_operators"], [262, 280, "body"], [280, 281, "statements"], [281, 282, "condition"], [282, 283, "operandl"], [283, 284, "operandl"], [284, 285, "member"], [283, 286, "operator"], [283, 287, "operandr"], [287, 288, "value"], [282, 289, "operator"], [282, 290, "operandr"], [290, 291, "operandl"], [291, 292, "operandl"], [292, 293, "qualifier"], [292, 294, "member"], [291, 295, "operator"], [291, 296, "operandr"], [296, 297, "member"], [290, 298, "operator"], [290, 299, "operandr"], [299, 300, "member"], [281, 301, "then_statement"], [301, 302, "statements"], [302, 303, "expression"], [303, 304, "member"], [280, 305, "statements"], [305, 306, "expression"], [306, 307, "expressionl"], [307, 308, "member"], [306, 309, "type"], [306, 310, "value"], [310, 311, "operandl"], [311, 312, "prefix_operators"], [311, 313, "member"], [310, 314, "operator"], [310, 315, "operandr"], [315, 316, "value"], [280, 317, "statements"], [317, 318, "type"], [318, 319, "name"], [317, 320, "declarators"], [320, 321, "name"], [320, 322, "initializer"], [322, 323, "member"], [322, 324, "selectors"], [324, 325, "index"], [325, 326, "member"], [325, 327, "postfix_operators"], [280, 328, "statements"], [328, 329, "condition"], [329, 330, "operandl"], [330, 331, "member"], [329, 332, "operator"], [329, 333, "operandr"], [333, 334, "value"], [328, 335, "then_statement"], [335, 336, "statements"], [336, 337, "expression"], [337, 338, "expressionl"], [338, 339, "member"], [337, 340, "type"], [337, 341, "value"], [341, 342, "value"], [280, 343, "statements"], [343, 344, "expression"], [344, 345, "expressionl"], [345, 346, "member"], [344, 347, "type"], [344, 348, "value"], [348, 349, "operandl"], [349, 350, "operandl"], [350, 351, "member"], [349, 352, "operator"], [349, 353, "operandr"], [353, 354, "value"], [348, 355, "operator"], [348, 356, "operandr"], [356, 357, "member"], [280, 358, "statements"], [358, 359, "condition"], [359, 360, "operandl"], [360, 361, "value"], [359, 362, "operator"], [359, 363, "operandr"], [363, 364, "member"], [358, 365, "then_statement"], [365, 366, "statements"], [366, 367, "expression"], [367, 368, "expressionl"], [368, 369, "member"], [368, 370, "selectors"], [370, 371, "index"], [371, 372, "member"], [371, 373, "postfix_operators"], [367, 374, "type"], [367, 375, "value"], [375, 376, "member"], [375, 377, "selectors"], [377, 378, "index"], [378, 379, "operandl"], [379, 380, "operandl"], [380, 381, "member"], [379, 382, "operator"], [379, 383, "operandr"], [383, 384, "value"], [378, 385, "operator"], [378, 386, "operandr"], [386, 387, "member"], [365, 388, "statements"], [388, 389, "expression"], [389, 390, "expressionl"], [390, 391, "member"], [390, 392, "selectors"], [392, 393, "index"], [393, 394, "member"], [393, 395, "postfix_operators"], [389, 396, "type"], [389, 397, "value"], [397, 398, "member"], [397, 399, "selectors"], [399, 400, "index"], [400, 401, "operandl"], [401, 402, "operandl"], [402, 403, "member"], [401, 404, "operator"], [401, 405, "operandr"], [405, 406, "value"], [400, 407, "operator"], [400, 408, "operandr"], [408, 409, "member"], [365, 410, "statements"], [410, 411, "expression"], [411, 412, "expressionl"], [412, 413, "member"], [412, 414, "selectors"], [414, 415, "index"], [415, 416, "member"], [415, 417, "postfix_operators"], [411, 418, "type"], [411, 419, "value"], [419, 420, "member"], [419, 421, "selectors"], [421, 422, "index"], [422, 423, "operandl"], [423, 424, "operandl"], [424, 425, "member"], [423, 426, "operator"], [423, 427, "operandr"], [427, 428, "value"], [422, 429, "operator"], [422, 430, "operandr"], [430, 431, "member"], [365, 432, "statements"], [432, 433, "expression"], [433, 434, "expressionl"], [434, 435, "member"], [434, 436, "selectors"], [436, 437, "index"], [437, 438, "member"], [437, 439, "postfix_operators"], [433, 440, "type"], [433, 441, "value"], [441, 442, "member"], [441, 443, "selectors"], [443, 444, "index"], [444, 445, "operandl"], [445, 446, "member"], [444, 447, "operator"], [444, 448, "operandr"], [448, 449, "member"], [365, 450, "statements"], [450, 451, "expression"], [451, 452, "expressionl"], [452, 453, "member"], [451, 454, "type"], [451, 455, "value"], [455, 456, "value"], [365, 457, "statements"], [457, 458, "condition"], [458, 459, "operandl"], [459, 460, "operandl"], [460, 461, "member"], [459, 462, "operator"], [459, 463, "operandr"], [463, 464, "value"], [458, 465, "operator"], [458, 466, "operandr"], [466, 467, "operandl"], [467, 468, "member"], [466, 469, "operator"], [466, 470, "operandr"], [470, 471, "member"], [457, 472, "then_statement"], [472, 473, "statements"], [473, 474, "expression"], [474, 475, "qualifier"], [474, 476, "member"], [474, 477, "arguments"], [477, 478, "member"], [474, 479, "arguments"], [479, 480, "value"], [474, 481, "arguments"], [481, 482, "member"], [474, 483, "arguments"], [483, 484, "member"], [474, 485, "arguments"], [485, 486, "qualifier"], [485, 487, "member"], [472, 488, "statements"], [488, 489, "expression"], [489, 490, "expressionl"], [490, 491, "member"], [489, 492, "type"], [489, 493, "value"], [493, 494, "qualifier"], [493, 495, "member"], [472, 496, "statements"], [496, 497, "expression"], [497, 498, "expressionl"], [498, 499, "member"], [497, 500, "type"], [497, 501, "value"], [501, 502, "value"]], "rem_roots": [231], "add_roots": []}, {"id": 53, "mappings": {"result": "VAR_1", "ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER": "VAR_2", "slavoGermanic": "VAR_3", "value": "VAR_4", "index": "VAR_5", "String": "TYPE_1", "DoubleMetaphoneResult": "TYPE_2", "handleG": "METHOD_1", "handleGH": "METHOD_2", "isVowel": "METHOD_3", "contains": "METHOD_4", "charAt": "METHOD_5", "append": "METHOD_6", "0": "INT_1", "1": "INT_2", "2": "INT_3", "3": "INT_4", "4": "INT_5", "6": "INT_6", "\"AGGI\"": "STRING_1", "\"RGY\"": "STRING_2", "\"SCH\"": "STRING_3", "\"Y\"": "STRING_4", "\"IER\"": "STRING_5", "\"DANGER\"": "STRING_6", "\"I\"": "STRING_7", "\"EY\"": "STRING_8", "\"E\"": "STRING_9", "\"ET\"": "STRING_10", "\"ER\"": "STRING_11", "\"OGY\"": "STRING_12", "\"KN\"": "STRING_13", "\"KL\"": "STRING_14", "\"VON \"": "STRING_15", "\"LI\"": "STRING_16", "\"RANGER\"": "STRING_17", "\"N\"": "STRING_18", "\"L\"": "STRING_19", "\"MANGER\"": "STRING_20", "\"OGGI\"": "STRING_21", "\"VAN \"": "STRING_22", "'N'": "CHAR_1", "'J'": "CHAR_2", "'H'": "CHAR_3", "'Y'": "CHAR_4", "'K'": "CHAR_5", "'G'": "CHAR_6"}, "nodes": ["MethodDeclaration", "private", "BasicType", "int", "handleG", "FormalParameter", "ReferenceType", "String", "value", "FormalParameter", "ReferenceType", "DoubleMetaphoneResult", "result", "FormalParameter", "BasicType", "int", "index", "FormalParameter", "BasicType", "boolean", "slavoGermanic", "IfStatement", "BinaryOperation", "MethodInvocation", "charAt", "MemberReference", "value", "BinaryOperation", "MemberReference", "index", "+", "Literal", "1", "==", "Literal", "'H'", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "index", "=", "MethodInvocation", "handleGH", "MemberReference", "value", "MemberReference", "result", "MemberReference", "index", "IfStatement", "BinaryOperation", "MethodInvocation", "charAt", "MemberReference", "value", "BinaryOperation", "MemberReference", "index", "+", "Literal", "1", "==", "Literal", "'N'", "BlockStatement", "IfStatement", "BinaryOperation", "BinaryOperation", "BinaryOperation", "MemberReference", "index", "==", "Literal", "1", "&&", "MethodInvocation", "isVowel", "MethodInvocation", "charAt", "MemberReference", "value", "Literal", "0", "&&", "MemberReference", "!", "slavoGermanic", "BlockStatement", "StatementExpression", "MethodInvocation", "result", "append", "Literal", "\"KN\"", "Literal", "\"N\"", "IfStatement", "BinaryOperation", "BinaryOperation", "MethodInvocation", "!", "contains", "MemberReference", "value", "BinaryOperation", "MemberReference", "index", "+", "Literal", "2", "Literal", "2", "Literal", "\"EY\"", "&&", "BinaryOperation", "MethodInvocation", "charAt", "MemberReference", "value", "BinaryOperation", "MemberReference", "index", "+", "Literal", "1", "!=", "Literal", "'Y'", "&&", "MemberReference", "!", "slavoGermanic", "BlockStatement", "StatementExpression", "MethodInvocation", "result", "append", "Literal", "\"N\"", "Literal", "\"KN\"", "BlockStatement", "StatementExpression", "MethodInvocation", "result", "append", "Literal", "\"KN\"", "StatementExpression", "Assignment", "MemberReference", "index", "=", "BinaryOperation", "MemberReference", "index", "+", "Literal", "2", "IfStatement", "BinaryOperation", "MethodInvocation", "contains", "MemberReference", "value", "BinaryOperation", "MemberReference", "index", "+", "Literal", "1", "Literal", "2", "Literal", "\"LI\"", "&&", "MemberReference", "!", "slavoGermanic", "BlockStatement", "StatementExpression", "MethodInvocation", "result", "append", "Literal", "\"KL\"", "Literal", "\"L\"", "StatementExpression", "Assignment", "MemberReference", "index", "+=", "Literal", "2", "IfStatement", "BinaryOperation", "BinaryOperation", "MemberReference", "index", "==", "Literal", "0", "&&", "BinaryOperation", "BinaryOperation", "MethodInvocation", "charAt", "MemberReference", "value", "BinaryOperation", "MemberReference", "index", "+", "Literal", "1", "==", "Literal", "'Y'", "||", "MethodInvocation", "contains", "MemberReference", "value", "BinaryOperation", "MemberReference", "index", "+", "Literal", "1", "Literal", "2", "MemberReference", "ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER", "BlockStatement", "StatementExpression", "MethodInvocation", "result", "append", "Literal", "'K'", "Literal", "'J'", "StatementExpression", "Assignment", "MemberReference", "index", "+=", "Literal", "2", "IfStatement", "BinaryOperation", "BinaryOperation", "BinaryOperation", "BinaryOperation", "MethodInvocation", "contains", "MemberReference", "value", "BinaryOperation", "MemberReference", "index", "+", "Literal", "1", "Literal", "2", "Literal", "\"ER\"", "||", "BinaryOperation", "MethodInvocation", "charAt", "MemberReference", "value", "BinaryOperation", "MemberReference", "index", "+", "Literal", "1", "==", "Literal", "'Y'", "&&", "MethodInvocation", "!", "contains", "MemberReference", "value", "Literal", "0", "Literal", "6", "Literal", "\"DANGER\"", "Literal", "\"RANGER\"", "Literal", "\"MANGER\"", "&&", "MethodInvocation", "!", "contains", "MemberReference", "value", "BinaryOperation", "MemberReference", "index", "-", "Literal", "1", "Literal", "1", "Literal", "\"E\"", "Literal", "\"I\"", "&&", "MethodInvocation", "!", "contains", "MemberReference", "value", "BinaryOperation", "MemberReference", "index", "-", "Literal", "1", "Literal", "3", "Literal", "\"RGY\"", "Literal", "\"OGY\"", "BlockStatement", "StatementExpression", "MethodInvocation", "result", "append", "Literal", "'K'", "Literal", "'J'", "StatementExpression", "Assignment", "MemberReference", "index", "+=", "Literal", "2", "IfStatement", "BinaryOperation", "MethodInvocation", "contains", "MemberReference", "value", "BinaryOperation", "MemberReference", "index", "+", "Literal", "1", "Literal", "1", "Literal", "\"E\"", "Literal", "\"I\"", "Literal", "\"Y\"", "||", "MethodInvocation", "contains", "MemberReference", "value", "BinaryOperation", "MemberReference", "index", "-", "Literal", "1", "Literal", "4", "Literal", "\"AGGI\"", "Literal", "\"OGGI\"", "BlockStatement", "IfStatement", "BinaryOperation", "BinaryOperation", "MethodInvocation", "contains", "MemberReference", "value", "Literal", "0", "Literal", "4", "Literal", "\"VAN \"", "Literal", "\"VON \"", "||", "MethodInvocation", "contains", "MemberReference", "value", "Literal", "0", "Literal", "3", "Literal", "\"SCH\"", "||", "MethodInvocation", "contains", "MemberReference", "value", "BinaryOperation", "MemberReference", "index", "+", "Literal", "1", "Literal", "2", "Literal", "\"ET\"", "BlockStatement", "StatementExpression", "MethodInvocation", "result", "append", "Literal", "'K'", "IfStatement", "MethodInvocation", "contains", "MemberReference", "value", "BinaryOperation", "MemberReference", "index", "+", "Literal", "1", "Literal", "4", "Literal", "\"IER\"", "BlockStatement", "StatementExpression", "MethodInvocation", "result", "append", "Literal", "'J'", "BlockStatement", "StatementExpression", "MethodInvocation", "result", "append", "Literal", "'J'", "Literal", "'K'", "StatementExpression", "Assignment", "MemberReference", "index", "+=", "Literal", "2", "IfStatement", "BinaryOperation", "MethodInvocation", "charAt", "MemberReference", "value", "BinaryOperation", "MemberReference", "index", "+", "Literal", "1", "==", "Literal", "'G'", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "index", "+=", "Literal", "2", "StatementExpression", "MethodInvocation", "result", "append", "Literal", "'K'", "BlockStatement", "StatementExpression", "MemberReference", "index", "++", "StatementExpression", "MethodInvocation", "result", "append", "Literal", "'K'", "ReturnStatement", "MemberReference", "index"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [5, 8, "name"], [0, 9, "parameters"], [9, 10, "type"], [10, 11, "name"], [9, 12, "name"], [0, 13, "parameters"], [13, 14, "type"], [14, 15, "name"], [13, 16, "name"], [0, 17, "parameters"], [17, 18, "type"], [18, 19, "name"], [17, 20, "name"], [0, 21, "body"], [21, 22, "condition"], [22, 23, "operandl"], [23, 24, "member"], [23, 25, "arguments"], [25, 26, "member"], [23, 27, "arguments"], [27, 28, "operandl"], [28, 29, "member"], [27, 30, "operator"], [27, 31, "operandr"], [31, 32, "value"], [22, 33, "operator"], [22, 34, "operandr"], [34, 35, "value"], [21, 36, "then_statement"], [36, 37, "statements"], [37, 38, "expression"], [38, 39, "expressionl"], [39, 40, "member"], [38, 41, "type"], [38, 42, "value"], [42, 43, "member"], [42, 44, "arguments"], [44, 45, "member"], [42, 46, "arguments"], [46, 47, "member"], [42, 48, "arguments"], [48, 49, "member"], [21, 50, "else_statement"], [50, 51, "condition"], [51, 52, "operandl"], [52, 53, "member"], [52, 54, "arguments"], [54, 55, "member"], [52, 56, "arguments"], [56, 57, "operandl"], [57, 58, "member"], [56, 59, "operator"], [56, 60, "operandr"], [60, 61, "value"], [51, 62, "operator"], [51, 63, "operandr"], [63, 64, "value"], [50, 65, "then_statement"], [65, 66, "statements"], [66, 67, "condition"], [67, 68, "operandl"], [68, 69, "operandl"], [69, 70, "operandl"], [70, 71, "member"], [69, 72, "operator"], [69, 73, "operandr"], [73, 74, "value"], [68, 75, "operator"], [68, 76, "operandr"], [76, 77, "member"], [76, 78, "arguments"], [78, 79, "member"], [78, 80, "arguments"], [80, 81, "member"], [78, 82, "arguments"], [82, 83, "value"], [67, 84, "operator"], [67, 85, "operandr"], [85, 86, "prefix_operators"], [85, 87, "member"], [66, 88, "then_statement"], [88, 89, "statements"], [89, 90, "expression"], [90, 91, "qualifier"], [90, 92, "member"], [90, 93, "arguments"], [93, 94, "value"], [90, 95, "arguments"], [95, 96, "value"], [66, 97, "else_statement"], [97, 98, "condition"], [98, 99, "operandl"], [99, 100, "operandl"], [100, 101, "prefix_operators"], [100, 102, "member"], [100, 103, "arguments"], [103, 104, "member"], [100, 105, "arguments"], [105, 106, "operandl"], [106, 107, "member"], [105, 108, "operator"], [105, 109, "operandr"], [109, 110, "value"], [100, 111, "arguments"], [111, 112, "value"], [100, 113, "arguments"], [113, 114, "value"], [99, 115, "operator"], [99, 116, "operandr"], [116, 117, "operandl"], [117, 118, "member"], [117, 119, "arguments"], [119, 120, "member"], [117, 121, "arguments"], [121, 122, "operandl"], [122, 123, "member"], [121, 124, "operator"], [121, 125, "operandr"], [125, 126, "value"], [116, 127, "operator"], [116, 128, "operandr"], [128, 129, "value"], [98, 130, "operator"], [98, 131, "operandr"], [131, 132, "prefix_operators"], [131, 133, "member"], [97, 134, "then_statement"], [134, 135, "statements"], [135, 136, "expression"], [136, 137, "qualifier"], [136, 138, "member"], [136, 139, "arguments"], [139, 140, "value"], [136, 141, "arguments"], [141, 142, "value"], [97, 143, "else_statement"], [143, 144, "statements"], [144, 145, "expression"], [145, 146, "qualifier"], [145, 147, "member"], [145, 148, "arguments"], [148, 149, "value"], [65, 150, "statements"], [150, 151, "expression"], [151, 152, "expressionl"], [152, 153, "member"], [151, 154, "type"], [151, 155, "value"], [155, 156, "operandl"], [156, 157, "member"], [155, 158, "operator"], [155, 159, "operandr"], [159, 160, "value"], [50, 161, "else_statement"], [161, 162, "condition"], [162, 163, "operandl"], [163, 164, "member"], [163, 165, "arguments"], [165, 166, "member"], [163, 167, "arguments"], [167, 168, "operandl"], [168, 169, "member"], [167, 170, "operator"], [167, 171, "operandr"], [171, 172, "value"], [163, 173, "arguments"], [173, 174, "value"], [163, 175, "arguments"], [175, 176, "value"], [162, 177, "operator"], [162, 178, "operandr"], [178, 179, "prefix_operators"], [178, 180, "member"], [161, 181, "then_statement"], [181, 182, "statements"], [182, 183, "expression"], [183, 184, "qualifier"], [183, 185, "member"], [183, 186, "arguments"], [186, 187, "value"], [183, 188, "arguments"], [188, 189, "value"], [181, 190, "statements"], [190, 191, "expression"], [191, 192, "expressionl"], [192, 193, "member"], [191, 194, "type"], [191, 195, "value"], [195, 196, "value"], [161, 197, "else_statement"], [197, 198, "condition"], [198, 199, "operandl"], [199, 200, "operandl"], [200, 201, "member"], [199, 202, "operator"], [199, 203, "operandr"], [203, 204, "value"], [198, 205, "operator"], [198, 206, "operandr"], [206, 207, "operandl"], [207, 208, "operandl"], [208, 209, "member"], [208, 210, "arguments"], [210, 211, "member"], [208, 212, "arguments"], [212, 213, "operandl"], [213, 214, "member"], [212, 215, "operator"], [212, 216, "operandr"], [216, 217, "value"], [207, 218, "operator"], [207, 219, "operandr"], [219, 220, "value"], [206, 221, "operator"], [206, 222, "operandr"], [222, 223, "member"], [222, 224, "arguments"], [224, 225, "member"], [222, 226, "arguments"], [226, 227, "operandl"], [227, 228, "member"], [226, 229, "operator"], [226, 230, "operandr"], [230, 231, "value"], [222, 232, "arguments"], [232, 233, "value"], [222, 234, "arguments"], [234, 235, "member"], [197, 236, "then_statement"], [236, 237, "statements"], [237, 238, "expression"], [238, 239, "qualifier"], [238, 240, "member"], [238, 241, "arguments"], [241, 242, "value"], [238, 243, "arguments"], [243, 244, "value"], [236, 245, "statements"], [245, 246, "expression"], [246, 247, "expressionl"], [247, 248, "member"], [246, 249, "type"], [246, 250, "value"], [250, 251, "value"], [197, 252, "else_statement"], [252, 253, "condition"], [253, 254, "operandl"], [254, 255, "operandl"], [255, 256, "operandl"], [256, 257, "operandl"], [257, 258, "member"], [257, 259, "arguments"], [259, 260, "member"], [257, 261, "arguments"], [261, 262, "operandl"], [262, 263, "member"], [261, 264, "operator"], [261, 265, "operandr"], [265, 266, "value"], [257, 267, "arguments"], [267, 268, "value"], [257, 269, "arguments"], [269, 270, "value"], [256, 271, "operator"], [256, 272, "operandr"], [272, 273, "operandl"], [273, 274, "member"], [273, 275, "arguments"], [275, 276, "member"], [273, 277, "arguments"], [277, 278, "operandl"], [278, 279, "member"], [277, 280, "operator"], [277, 281, "operandr"], [281, 282, "value"], [272, 283, "operator"], [272, 284, "operandr"], [284, 285, "value"], [255, 286, "operator"], [255, 287, "operandr"], [287, 288, "prefix_operators"], [287, 289, "member"], [287, 290, "arguments"], [290, 291, "member"], [287, 292, "arguments"], [292, 293, "value"], [287, 294, "arguments"], [294, 295, "value"], [287, 296, "arguments"], [296, 297, "value"], [287, 298, "arguments"], [298, 299, "value"], [287, 300, "arguments"], [300, 301, "value"], [254, 302, "operator"], [254, 303, "operandr"], [303, 304, "prefix_operators"], [303, 305, "member"], [303, 306, "arguments"], [306, 307, "member"], [303, 308, "arguments"], [308, 309, "operandl"], [309, 310, "member"], [308, 311, "operator"], [308, 312, "operandr"], [312, 313, "value"], [303, 314, "arguments"], [314, 315, "value"], [303, 316, "arguments"], [316, 317, "value"], [303, 318, "arguments"], [318, 319, "value"], [253, 320, "operator"], [253, 321, "operandr"], [321, 322, "prefix_operators"], [321, 323, "member"], [321, 324, "arguments"], [324, 325, "member"], [321, 326, "arguments"], [326, 327, "operandl"], [327, 328, "member"], [326, 329, "operator"], [326, 330, "operandr"], [330, 331, "value"], [321, 332, "arguments"], [332, 333, "value"], [321, 334, "arguments"], [334, 335, "value"], [321, 336, "arguments"], [336, 337, "value"], [252, 338, "then_statement"], [338, 339, "statements"], [339, 340, "expression"], [340, 341, "qualifier"], [340, 342, "member"], [340, 343, "arguments"], [343, 344, "value"], [340, 345, "arguments"], [345, 346, "value"], [338, 347, "statements"], [347, 348, "expression"], [348, 349, "expressionl"], [349, 350, "member"], [348, 351, "type"], [348, 352, "value"], [352, 353, "value"], [252, 354, "else_statement"], [354, 355, "condition"], [355, 356, "operandl"], [356, 357, "member"], [356, 358, "arguments"], [358, 359, "member"], [356, 360, "arguments"], [360, 361, "operandl"], [361, 362, "member"], [360, 363, "operator"], [360, 364, "operandr"], [364, 365, "value"], [356, 366, "arguments"], [366, 367, "value"], [356, 368, "arguments"], [368, 369, "value"], [356, 370, "arguments"], [370, 371, "value"], [356, 372, "arguments"], [372, 373, "value"], [355, 374, "operator"], [355, 375, "operandr"], [375, 376, "member"], [375, 377, "arguments"], [377, 378, "member"], [375, 379, "arguments"], [379, 380, "operandl"], [380, 381, "member"], [379, 382, "operator"], [379, 383, "operandr"], [383, 384, "value"], [375, 385, "arguments"], [385, 386, "value"], [375, 387, "arguments"], [387, 388, "value"], [375, 389, "arguments"], [389, 390, "value"], [354, 391, "then_statement"], [391, 392, "statements"], [392, 393, "condition"], [393, 394, "operandl"], [394, 395, "operandl"], [395, 396, "member"], [395, 397, "arguments"], [397, 398, "member"], [395, 399, "arguments"], [399, 400, "value"], [395, 401, "arguments"], [401, 402, "value"], [395, 403, "arguments"], [403, 404, "value"], [395, 405, "arguments"], [405, 406, "value"], [394, 407, "operator"], [394, 408, "operandr"], [408, 409, "member"], [408, 410, "arguments"], [410, 411, "member"], [408, 412, "arguments"], [412, 413, "value"], [408, 414, "arguments"], [414, 415, "value"], [408, 416, "arguments"], [416, 417, "value"], [393, 418, "operator"], [393, 419, "operandr"], [419, 420, "member"], [419, 421, "arguments"], [421, 422, "member"], [419, 423, "arguments"], [423, 424, "operandl"], [424, 425, "member"], [423, 426, "operator"], [423, 427, "operandr"], [427, 428, "value"], [419, 429, "arguments"], [429, 430, "value"], [419, 431, "arguments"], [431, 432, "value"], [392, 433, "then_statement"], [433, 434, "statements"], [434, 435, "expression"], [435, 436, "qualifier"], [435, 437, "member"], [435, 438, "arguments"], [438, 439, "value"], [392, 440, "else_statement"], [440, 441, "condition"], [441, 442, "member"], [441, 443, "arguments"], [443, 444, "member"], [441, 445, "arguments"], [445, 446, "operandl"], [446, 447, "member"], [445, 448, "operator"], [445, 449, "operandr"], [449, 450, "value"], [441, 451, "arguments"], [451, 452, "value"], [441, 453, "arguments"], [453, 454, "value"], [440, 455, "then_statement"], [455, 456, "statements"], [456, 457, "expression"], [457, 458, "qualifier"], [457, 459, "member"], [457, 460, "arguments"], [460, 461, "value"], [440, 462, "else_statement"], [462, 463, "statements"], [463, 464, "expression"], [464, 465, "qualifier"], [464, 466, "member"], [464, 467, "arguments"], [467, 468, "value"], [464, 469, "arguments"], [469, 470, "value"], [391, 471, "statements"], [471, 472, "expression"], [472, 473, "expressionl"], [473, 474, "member"], [472, 475, "type"], [472, 476, "value"], [476, 477, "value"], [354, 478, "else_statement"], [478, 479, "condition"], [479, 480, "operandl"], [480, 481, "member"], [480, 482, "arguments"], [482, 483, "member"], [480, 484, "arguments"], [484, 485, "operandl"], [485, 486, "member"], [484, 487, "operator"], [484, 488, "operandr"], [488, 489, "value"], [479, 490, "operator"], [479, 491, "operandr"], [491, 492, "value"], [478, 493, "then_statement"], [493, 494, "statements"], [494, 495, "expression"], [495, 496, "expressionl"], [496, 497, "member"], [495, 498, "type"], [495, 499, "value"], [499, 500, "value"], [493, 501, "statements"], [501, 502, "expression"], [502, 503, "qualifier"], [502, 504, "member"], [502, 505, "arguments"], [505, 506, "value"], [478, 507, "else_statement"], [507, 508, "statements"], [508, 509, "expression"], [509, 510, "member"], [509, 511, "postfix_operators"], [507, 512, "statements"], [512, 513, "expression"], [513, 514, "qualifier"], [513, 515, "member"], [513, 516, "arguments"], [516, 517, "value"], [0, 518, "body"], [518, 519, "expression"], [519, 520, "member"]], "rem_roots": [441], "add_roots": []}, {"id": 54, "mappings": {"result": "VAR_1", "ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER": "VAR_2", "slavoGermanic": "VAR_3", "value": "VAR_4", "index": "VAR_5", "String": "TYPE_1", "DoubleMetaphoneResult": "TYPE_2", "handleG": "METHOD_1", "handleGH": "METHOD_2", "isVowel": "METHOD_3", "contains": "METHOD_4", "charAt": "METHOD_5", "append": "METHOD_6", "0": "INT_1", "1": "INT_2", "2": "INT_3", "3": "INT_4", "4": "INT_5", "6": "INT_6", "\"AGGI\"": "STRING_1", "\"RGY\"": "STRING_2", "\"SCH\"": "STRING_3", "\"Y\"": "STRING_4", "\"IER\"": "STRING_5", "\"DANGER\"": "STRING_6", "\"I\"": "STRING_7", "\"EY\"": "STRING_8", "\"E\"": "STRING_9", "\"ET\"": "STRING_10", "\"ER\"": "STRING_11", "\"OGY\"": "STRING_12", "\"KN\"": "STRING_13", "\"KL\"": "STRING_14", "\"VON \"": "STRING_15", "\"LI\"": "STRING_16", "\"RANGER\"": "STRING_17", "\"N\"": "STRING_18", "\"L\"": "STRING_19", "\"MANGER\"": "STRING_20", "\"OGGI\"": "STRING_21", "\"VAN \"": "STRING_22", "'N'": "CHAR_1", "'J'": "CHAR_2", "'H'": "CHAR_3", "'Y'": "CHAR_4", "'K'": "CHAR_5", "'G'": "CHAR_6"}, "nodes": ["MethodDeclaration", "private", "BasicType", "int", "handleG", "FormalParameter", "ReferenceType", "String", "value", "FormalParameter", "ReferenceType", "DoubleMetaphoneResult", "result", "FormalParameter", "BasicType", "int", "index", "FormalParameter", "BasicType", "boolean", "slavoGermanic", "IfStatement", "BinaryOperation", "MethodInvocation", "charAt", "MemberReference", "value", "BinaryOperation", "MemberReference", "index", "+", "Literal", "1", "==", "Literal", "'H'", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "index", "=", "MethodInvocation", "handleGH", "MemberReference", "value", "MemberReference", "result", "MemberReference", "index", "IfStatement", "BinaryOperation", "MethodInvocation", "charAt", "MemberReference", "value", "BinaryOperation", "MemberReference", "index", "+", "Literal", "1", "==", "Literal", "'N'", "BlockStatement", "IfStatement", "BinaryOperation", "BinaryOperation", "BinaryOperation", "MemberReference", "index", "==", "Literal", "1", "&&", "MethodInvocation", "isVowel", "MethodInvocation", "charAt", "MemberReference", "value", "Literal", "0", "&&", "MemberReference", "!", "slavoGermanic", "BlockStatement", "StatementExpression", "MethodInvocation", "result", "append", "Literal", "\"KN\"", "Literal", "\"N\"", "IfStatement", "BinaryOperation", "BinaryOperation", "MethodInvocation", "!", "contains", "MemberReference", "value", "BinaryOperation", "MemberReference", "index", "+", "Literal", "2", "Literal", "2", "Literal", "\"EY\"", "&&", "BinaryOperation", "MethodInvocation", "charAt", "MemberReference", "value", "BinaryOperation", "MemberReference", "index", "+", "Literal", "1", "!=", "Literal", "'Y'", "&&", "MemberReference", "!", "slavoGermanic", "BlockStatement", "StatementExpression", "MethodInvocation", "result", "append", "Literal", "\"N\"", "Literal", "\"KN\"", "BlockStatement", "StatementExpression", "MethodInvocation", "result", "append", "Literal", "\"KN\"", "StatementExpression", "Assignment", "MemberReference", "index", "=", "BinaryOperation", "MemberReference", "index", "+", "Literal", "2", "IfStatement", "BinaryOperation", "MethodInvocation", "contains", "MemberReference", "value", "BinaryOperation", "MemberReference", "index", "+", "Literal", "1", "Literal", "2", "Literal", "\"LI\"", "&&", "MemberReference", "!", "slavoGermanic", "BlockStatement", "StatementExpression", "MethodInvocation", "result", "append", "Literal", "\"KL\"", "Literal", "\"L\"", "StatementExpression", "Assignment", "MemberReference", "index", "+=", "Literal", "2", "IfStatement", "BinaryOperation", "BinaryOperation", "MemberReference", "index", "==", "Literal", "0", "&&", "BinaryOperation", "BinaryOperation", "MethodInvocation", "charAt", "MemberReference", "value", "BinaryOperation", "MemberReference", "index", "+", "Literal", "1", "==", "Literal", "'Y'", "||", "MethodInvocation", "contains", "MemberReference", "value", "BinaryOperation", "MemberReference", "index", "+", "Literal", "1", "Literal", "2", "MemberReference", "ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER", "BlockStatement", "StatementExpression", "MethodInvocation", "result", "append", "Literal", "'K'", "Literal", "'J'", "StatementExpression", "Assignment", "MemberReference", "index", "+=", "Literal", "2", "IfStatement", "BinaryOperation", "BinaryOperation", "BinaryOperation", "BinaryOperation", "MethodInvocation", "contains", "MemberReference", "value", "BinaryOperation", "MemberReference", "index", "+", "Literal", "1", "Literal", "2", "Literal", "\"ER\"", "||", "BinaryOperation", "MethodInvocation", "charAt", "MemberReference", "value", "BinaryOperation", "MemberReference", "index", "+", "Literal", "1", "==", "Literal", "'Y'", "&&", "MethodInvocation", "!", "contains", "MemberReference", "value", "Literal", "0", "Literal", "6", "Literal", "\"DANGER\"", "Literal", "\"RANGER\"", "Literal", "\"MANGER\"", "&&", "MethodInvocation", "!", "contains", "MemberReference", "value", "BinaryOperation", "MemberReference", "index", "-", "Literal", "1", "Literal", "1", "Literal", "\"E\"", "Literal", "\"I\"", "&&", "MethodInvocation", "!", "contains", "MemberReference", "value", "BinaryOperation", "MemberReference", "index", "-", "Literal", "1", "Literal", "3", "Literal", "\"RGY\"", "Literal", "\"OGY\"", "BlockStatement", "StatementExpression", "MethodInvocation", "result", "append", "Literal", "'K'", "Literal", "'J'", "StatementExpression", "Assignment", "MemberReference", "index", "+=", "Literal", "2", "IfStatement", "BinaryOperation", "MethodInvocation", "contains", "MemberReference", "value", "BinaryOperation", "MemberReference", "index", "+", "Literal", "1", "Literal", "1", "Literal", "\"E\"", "Literal", "\"I\"", "Literal", "\"Y\"", "||", "MethodInvocation", "contains", "MemberReference", "value", "BinaryOperation", "MemberReference", "index", "-", "Literal", "1", "Literal", "4", "Literal", "\"AGGI\"", "Literal", "\"OGGI\"", "BlockStatement", "IfStatement", "BinaryOperation", "BinaryOperation", "MethodInvocation", "contains", "MemberReference", "value", "Literal", "0", "Literal", "4", "Literal", "\"VAN \"", "Literal", "\"VON \"", "||", "MethodInvocation", "contains", "MemberReference", "value", "Literal", "0", "Literal", "3", "Literal", "\"SCH\"", "||", "MethodInvocation", "contains", "MemberReference", "value", "BinaryOperation", "MemberReference", "index", "+", "Literal", "1", "Literal", "2", "Literal", "\"ET\"", "BlockStatement", "StatementExpression", "MethodInvocation", "result", "append", "Literal", "'K'", "IfStatement", "MethodInvocation", "contains", "MemberReference", "value", "BinaryOperation", "MemberReference", "index", "+", "Literal", "1", "Literal", "4", "Literal", "\"IER\"", "BlockStatement", "StatementExpression", "MethodInvocation", "result", "append", "Literal", "'J'", "BlockStatement", "StatementExpression", "MethodInvocation", "result", "append", "Literal", "'J'", "Literal", "'K'", "StatementExpression", "Assignment", "MemberReference", "index", "+=", "Literal", "2", "IfStatement", "BinaryOperation", "MethodInvocation", "charAt", "MemberReference", "value", "BinaryOperation", "MemberReference", "index", "+", "Literal", "1", "==", "Literal", "'G'", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "index", "+=", "Literal", "2", "StatementExpression", "MethodInvocation", "result", "append", "Literal", "'K'", "BlockStatement", "StatementExpression", "MemberReference", "index", "++", "StatementExpression", "MethodInvocation", "result", "append", "Literal", "'K'", "ReturnStatement", "MemberReference", "index"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [5, 8, "name"], [0, 9, "parameters"], [9, 10, "type"], [10, 11, "name"], [9, 12, "name"], [0, 13, "parameters"], [13, 14, "type"], [14, 15, "name"], [13, 16, "name"], [0, 17, "parameters"], [17, 18, "type"], [18, 19, "name"], [17, 20, "name"], [0, 21, "body"], [21, 22, "condition"], [22, 23, "operandl"], [23, 24, "member"], [23, 25, "arguments"], [25, 26, "member"], [23, 27, "arguments"], [27, 28, "operandl"], [28, 29, "member"], [27, 30, "operator"], [27, 31, "operandr"], [31, 32, "value"], [22, 33, "operator"], [22, 34, "operandr"], [34, 35, "value"], [21, 36, "then_statement"], [36, 37, "statements"], [37, 38, "expression"], [38, 39, "expressionl"], [39, 40, "member"], [38, 41, "type"], [38, 42, "value"], [42, 43, "member"], [42, 44, "arguments"], [44, 45, "member"], [42, 46, "arguments"], [46, 47, "member"], [42, 48, "arguments"], [48, 49, "member"], [21, 50, "else_statement"], [50, 51, "condition"], [51, 52, "operandl"], [52, 53, "member"], [52, 54, "arguments"], [54, 55, "member"], [52, 56, "arguments"], [56, 57, "operandl"], [57, 58, "member"], [56, 59, "operator"], [56, 60, "operandr"], [60, 61, "value"], [51, 62, "operator"], [51, 63, "operandr"], [63, 64, "value"], [50, 65, "then_statement"], [65, 66, "statements"], [66, 67, "condition"], [67, 68, "operandl"], [68, 69, "operandl"], [69, 70, "operandl"], [70, 71, "member"], [69, 72, "operator"], [69, 73, "operandr"], [73, 74, "value"], [68, 75, "operator"], [68, 76, "operandr"], [76, 77, "member"], [76, 78, "arguments"], [78, 79, "member"], [78, 80, "arguments"], [80, 81, "member"], [78, 82, "arguments"], [82, 83, "value"], [67, 84, "operator"], [67, 85, "operandr"], [85, 86, "prefix_operators"], [85, 87, "member"], [66, 88, "then_statement"], [88, 89, "statements"], [89, 90, "expression"], [90, 91, "qualifier"], [90, 92, "member"], [90, 93, "arguments"], [93, 94, "value"], [90, 95, "arguments"], [95, 96, "value"], [66, 97, "else_statement"], [97, 98, "condition"], [98, 99, "operandl"], [99, 100, "operandl"], [100, 101, "prefix_operators"], [100, 102, "member"], [100, 103, "arguments"], [103, 104, "member"], [100, 105, "arguments"], [105, 106, "operandl"], [106, 107, "member"], [105, 108, "operator"], [105, 109, "operandr"], [109, 110, "value"], [100, 111, "arguments"], [111, 112, "value"], [100, 113, "arguments"], [113, 114, "value"], [99, 115, "operator"], [99, 116, "operandr"], [116, 117, "operandl"], [117, 118, "member"], [117, 119, "arguments"], [119, 120, "member"], [117, 121, "arguments"], [121, 122, "operandl"], [122, 123, "member"], [121, 124, "operator"], [121, 125, "operandr"], [125, 126, "value"], [116, 127, "operator"], [116, 128, "operandr"], [128, 129, "value"], [98, 130, "operator"], [98, 131, "operandr"], [131, 132, "prefix_operators"], [131, 133, "member"], [97, 134, "then_statement"], [134, 135, "statements"], [135, 136, "expression"], [136, 137, "qualifier"], [136, 138, "member"], [136, 139, "arguments"], [139, 140, "value"], [136, 141, "arguments"], [141, 142, "value"], [97, 143, "else_statement"], [143, 144, "statements"], [144, 145, "expression"], [145, 146, "qualifier"], [145, 147, "member"], [145, 148, "arguments"], [148, 149, "value"], [65, 150, "statements"], [150, 151, "expression"], [151, 152, "expressionl"], [152, 153, "member"], [151, 154, "type"], [151, 155, "value"], [155, 156, "operandl"], [156, 157, "member"], [155, 158, "operator"], [155, 159, "operandr"], [159, 160, "value"], [50, 161, "else_statement"], [161, 162, "condition"], [162, 163, "operandl"], [163, 164, "member"], [163, 165, "arguments"], [165, 166, "member"], [163, 167, "arguments"], [167, 168, "operandl"], [168, 169, "member"], [167, 170, "operator"], [167, 171, "operandr"], [171, 172, "value"], [163, 173, "arguments"], [173, 174, "value"], [163, 175, "arguments"], [175, 176, "value"], [162, 177, "operator"], [162, 178, "operandr"], [178, 179, "prefix_operators"], [178, 180, "member"], [161, 181, "then_statement"], [181, 182, "statements"], [182, 183, "expression"], [183, 184, "qualifier"], [183, 185, "member"], [183, 186, "arguments"], [186, 187, "value"], [183, 188, "arguments"], [188, 189, "value"], [181, 190, "statements"], [190, 191, "expression"], [191, 192, "expressionl"], [192, 193, "member"], [191, 194, "type"], [191, 195, "value"], [195, 196, "value"], [161, 197, "else_statement"], [197, 198, "condition"], [198, 199, "operandl"], [199, 200, "operandl"], [200, 201, "member"], [199, 202, "operator"], [199, 203, "operandr"], [203, 204, "value"], [198, 205, "operator"], [198, 206, "operandr"], [206, 207, "operandl"], [207, 208, "operandl"], [208, 209, "member"], [208, 210, "arguments"], [210, 211, "member"], [208, 212, "arguments"], [212, 213, "operandl"], [213, 214, "member"], [212, 215, "operator"], [212, 216, "operandr"], [216, 217, "value"], [207, 218, "operator"], [207, 219, "operandr"], [219, 220, "value"], [206, 221, "operator"], [206, 222, "operandr"], [222, 223, "member"], [222, 224, "arguments"], [224, 225, "member"], [222, 226, "arguments"], [226, 227, "operandl"], [227, 228, "member"], [226, 229, "operator"], [226, 230, "operandr"], [230, 231, "value"], [222, 232, "arguments"], [232, 233, "value"], [222, 234, "arguments"], [234, 235, "member"], [197, 236, "then_statement"], [236, 237, "statements"], [237, 238, "expression"], [238, 239, "qualifier"], [238, 240, "member"], [238, 241, "arguments"], [241, 242, "value"], [238, 243, "arguments"], [243, 244, "value"], [236, 245, "statements"], [245, 246, "expression"], [246, 247, "expressionl"], [247, 248, "member"], [246, 249, "type"], [246, 250, "value"], [250, 251, "value"], [197, 252, "else_statement"], [252, 253, "condition"], [253, 254, "operandl"], [254, 255, "operandl"], [255, 256, "operandl"], [256, 257, "operandl"], [257, 258, "member"], [257, 259, "arguments"], [259, 260, "member"], [257, 261, "arguments"], [261, 262, "operandl"], [262, 263, "member"], [261, 264, "operator"], [261, 265, "operandr"], [265, 266, "value"], [257, 267, "arguments"], [267, 268, "value"], [257, 269, "arguments"], [269, 270, "value"], [256, 271, "operator"], [256, 272, "operandr"], [272, 273, "operandl"], [273, 274, "member"], [273, 275, "arguments"], [275, 276, "member"], [273, 277, "arguments"], [277, 278, "operandl"], [278, 279, "member"], [277, 280, "operator"], [277, 281, "operandr"], [281, 282, "value"], [272, 283, "operator"], [272, 284, "operandr"], [284, 285, "value"], [255, 286, "operator"], [255, 287, "operandr"], [287, 288, "prefix_operators"], [287, 289, "member"], [287, 290, "arguments"], [290, 291, "member"], [287, 292, "arguments"], [292, 293, "value"], [287, 294, "arguments"], [294, 295, "value"], [287, 296, "arguments"], [296, 297, "value"], [287, 298, "arguments"], [298, 299, "value"], [287, 300, "arguments"], [300, 301, "value"], [254, 302, "operator"], [254, 303, "operandr"], [303, 304, "prefix_operators"], [303, 305, "member"], [303, 306, "arguments"], [306, 307, "member"], [303, 308, "arguments"], [308, 309, "operandl"], [309, 310, "member"], [308, 311, "operator"], [308, 312, "operandr"], [312, 313, "value"], [303, 314, "arguments"], [314, 315, "value"], [303, 316, "arguments"], [316, 317, "value"], [303, 318, "arguments"], [318, 319, "value"], [253, 320, "operator"], [253, 321, "operandr"], [321, 322, "prefix_operators"], [321, 323, "member"], [321, 324, "arguments"], [324, 325, "member"], [321, 326, "arguments"], [326, 327, "operandl"], [327, 328, "member"], [326, 329, "operator"], [326, 330, "operandr"], [330, 331, "value"], [321, 332, "arguments"], [332, 333, "value"], [321, 334, "arguments"], [334, 335, "value"], [321, 336, "arguments"], [336, 337, "value"], [252, 338, "then_statement"], [338, 339, "statements"], [339, 340, "expression"], [340, 341, "qualifier"], [340, 342, "member"], [340, 343, "arguments"], [343, 344, "value"], [340, 345, "arguments"], [345, 346, "value"], [338, 347, "statements"], [347, 348, "expression"], [348, 349, "expressionl"], [349, 350, "member"], [348, 351, "type"], [348, 352, "value"], [352, 353, "value"], [252, 354, "else_statement"], [354, 355, "condition"], [355, 356, "operandl"], [356, 357, "member"], [356, 358, "arguments"], [358, 359, "member"], [356, 360, "arguments"], [360, 361, "operandl"], [361, 362, "member"], [360, 363, "operator"], [360, 364, "operandr"], [364, 365, "value"], [356, 366, "arguments"], [366, 367, "value"], [356, 368, "arguments"], [368, 369, "value"], [356, 370, "arguments"], [370, 371, "value"], [356, 372, "arguments"], [372, 373, "value"], [355, 374, "operator"], [355, 375, "operandr"], [375, 376, "member"], [375, 377, "arguments"], [377, 378, "member"], [375, 379, "arguments"], [379, 380, "operandl"], [380, 381, "member"], [379, 382, "operator"], [379, 383, "operandr"], [383, 384, "value"], [375, 385, "arguments"], [385, 386, "value"], [375, 387, "arguments"], [387, 388, "value"], [375, 389, "arguments"], [389, 390, "value"], [354, 391, "then_statement"], [391, 392, "statements"], [392, 393, "condition"], [393, 394, "operandl"], [394, 395, "operandl"], [395, 396, "member"], [395, 397, "arguments"], [397, 398, "member"], [395, 399, "arguments"], [399, 400, "value"], [395, 401, "arguments"], [401, 402, "value"], [395, 403, "arguments"], [403, 404, "value"], [395, 405, "arguments"], [405, 406, "value"], [394, 407, "operator"], [394, 408, "operandr"], [408, 409, "member"], [408, 410, "arguments"], [410, 411, "member"], [408, 412, "arguments"], [412, 413, "value"], [408, 414, "arguments"], [414, 415, "value"], [408, 416, "arguments"], [416, 417, "value"], [393, 418, "operator"], [393, 419, "operandr"], [419, 420, "member"], [419, 421, "arguments"], [421, 422, "member"], [419, 423, "arguments"], [423, 424, "operandl"], [424, 425, "member"], [423, 426, "operator"], [423, 427, "operandr"], [427, 428, "value"], [419, 429, "arguments"], [429, 430, "value"], [419, 431, "arguments"], [431, 432, "value"], [392, 433, "then_statement"], [433, 434, "statements"], [434, 435, "expression"], [435, 436, "qualifier"], [435, 437, "member"], [435, 438, "arguments"], [438, 439, "value"], [392, 440, "else_statement"], [440, 441, "condition"], [441, 442, "member"], [441, 443, "arguments"], [443, 444, "member"], [441, 445, "arguments"], [445, 446, "operandl"], [446, 447, "member"], [445, 448, "operator"], [445, 449, "operandr"], [449, 450, "value"], [441, 451, "arguments"], [451, 452, "value"], [441, 453, "arguments"], [453, 454, "value"], [440, 455, "then_statement"], [455, 456, "statements"], [456, 457, "expression"], [457, 458, "qualifier"], [457, 459, "member"], [457, 460, "arguments"], [460, 461, "value"], [440, 462, "else_statement"], [462, 463, "statements"], [463, 464, "expression"], [464, 465, "qualifier"], [464, 466, "member"], [464, 467, "arguments"], [467, 468, "value"], [464, 469, "arguments"], [469, 470, "value"], [391, 471, "statements"], [471, 472, "expression"], [472, 473, "expressionl"], [473, 474, "member"], [472, 475, "type"], [472, 476, "value"], [476, 477, "value"], [354, 478, "else_statement"], [478, 479, "condition"], [479, 480, "operandl"], [480, 481, "member"], [480, 482, "arguments"], [482, 483, "member"], [480, 484, "arguments"], [484, 485, "operandl"], [485, 486, "member"], [484, 487, "operator"], [484, 488, "operandr"], [488, 489, "value"], [479, 490, "operator"], [479, 491, "operandr"], [491, 492, "value"], [478, 493, "then_statement"], [493, 494, "statements"], [494, 495, "expression"], [495, 496, "expressionl"], [496, 497, "member"], [495, 498, "type"], [495, 499, "value"], [499, 500, "value"], [493, 501, "statements"], [501, 502, "expression"], [502, 503, "qualifier"], [502, 504, "member"], [502, 505, "arguments"], [505, 506, "value"], [478, 507, "else_statement"], [507, 508, "statements"], [508, 509, "expression"], [509, 510, "member"], [509, 511, "postfix_operators"], [507, 512, "statements"], [512, 513, "expression"], [513, 514, "qualifier"], [513, 515, "member"], [513, 516, "arguments"], [516, 517, "value"], [0, 518, "body"], [518, 519, "expression"], [519, 520, "member"]], "rem_roots": [441], "add_roots": []}, {"id": 55, "mappings": {"Base64": "VAR_1"}, "nodes": ["ConstructorDeclaration", "public", "Base64", "StatementExpression", "ExplicitConstructorInvocation", "Literal", "false"], "edges": [[0, 1, "modifiers"], [0, 2, "name"], [0, 3, "body"], [3, 4, "expression"], [4, 5, "arguments"], [5, 6, "value"]], "rem_roots": [3], "add_roots": []}, {"id": 56, "mappings": {"binaryData": "VAR_1", "StringUtils": "TYPE_1", "String": "TYPE_2", "encodeBase64": "METHOD_1", "newStringUtf8": "METHOD_2", "encodeBase64String": "METHOD_3"}, "nodes": ["MethodDeclaration", "public static", "ReferenceType", "String", "encodeBase64String", "FormalParameter", "BasicType", "byte", "None", "binaryData", "ReturnStatement", "MethodInvocation", "StringUtils", "newStringUtf8", "MethodInvocation", "encodeBase64", "MemberReference", "binaryData", "Literal", "true"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [6, 8, "dimensions"], [5, 9, "name"], [0, 10, "body"], [10, 11, "expression"], [11, 12, "qualifier"], [11, 13, "member"], [11, 14, "arguments"], [14, 15, "member"], [14, 16, "arguments"], [16, 17, "member"], [14, 18, "arguments"], [18, 19, "value"]], "rem_roots": [10], "add_roots": []}, {"id": 57, "mappings": {"b": "VAR_1", "c": "VAR_2", "offset": "VAR_3", "doEncode": "VAR_4", "in": "VAR_5", "length": "VAR_6", "base64": "VAR_7", "buf": "VAR_8", "len": "VAR_9", "readLen": "VAR_10", "IndexOutOfBoundsException": "TYPE_1", "IOException": "TYPE_2", "NullPointerException": "TYPE_3", "setInitialBuffer": "METHOD_1", "encode": "METHOD_2", "read": "METHOD_3", "hasData": "METHOD_4", "decode": "METHOD_5", "readResults": "METHOD_6", "4096": "INT_1", "8192": "INT_2", "0": "INT_3"}, "nodes": ["MethodDeclaration", "public", "BasicType", "int", "read", "FormalParameter", "BasicType", "byte", "None", "b", "FormalParameter", "BasicType", "int", "offset", "FormalParameter", "BasicType", "int", "len", "IOException", "IfStatement", "BinaryOperation", "MemberReference", "b", "==", "Literal", "null", "BlockStatement", "ThrowStatement", "ClassCreator", "ReferenceType", "NullPointerException", "IfStatement", "BinaryOperation", "BinaryOperation", "MemberReference", "offset", "<", "Literal", "0", "||", "BinaryOperation", "MemberReference", "len", "<", "Literal", "0", "BlockStatement", "ThrowStatement", "ClassCreator", "ReferenceType", "IndexOutOfBoundsException", "IfStatement", "BinaryOperation", "BinaryOperation", "MemberReference", "offset", ">", "MemberReference", "b", "length", "||", "BinaryOperation", "BinaryOperation", "MemberReference", "offset", "+", "MemberReference", "len", ">", "MemberReference", "b", "length", "BlockStatement", "ThrowStatement", "ClassCreator", "ReferenceType", "IndexOutOfBoundsException", "IfStatement", "BinaryOperation", "MemberReference", "len", "==", "Literal", "0", "BlockStatement", "ReturnStatement", "Literal", "0", "BlockStatement", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "readLen", "Literal", "0", "WhileStatement", "BinaryOperation", "MemberReference", "readLen", "==", "Literal", "0", "BlockStatement", "IfStatement", "MethodInvocation", "!", "base64", "hasData", "BlockStatement", "LocalVariableDeclaration", "BasicType", "byte", "None", "VariableDeclarator", "buf", "ArrayCreator", "BasicType", "byte", "TernaryExpression", "MemberReference", "doEncode", "Literal", "4096", "Literal", "8192", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "c", "MethodInvocation", "in", "read", "MemberReference", "buf", "IfStatement", "BinaryOperation", "BinaryOperation", "MemberReference", "c", ">", "Literal", "0", "&&", "BinaryOperation", "MemberReference", "b", "length", "==", "MemberReference", "len", "BlockStatement", "StatementExpression", "MethodInvocation", "base64", "setInitialBuffer", "MemberReference", "b", "MemberReference", "offset", "MemberReference", "len", "IfStatement", "MemberReference", "doEncode", "BlockStatement", "StatementExpression", "MethodInvocation", "base64", "encode", "MemberReference", "buf", "Literal", "0", "MemberReference", "c", "BlockStatement", "StatementExpression", "MethodInvocation", "base64", "decode", "MemberReference", "buf", "Literal", "0", "MemberReference", "c", "StatementExpression", "Assignment", "MemberReference", "readLen", "=", "MethodInvocation", "base64", "readResults", "MemberReference", "b", "MemberReference", "offset", "MemberReference", "len", "ReturnStatement", "MemberReference", "readLen"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [6, 8, "dimensions"], [5, 9, "name"], [0, 10, "parameters"], [10, 11, "type"], [11, 12, "name"], [10, 13, "name"], [0, 14, "parameters"], [14, 15, "type"], [15, 16, "name"], [14, 17, "name"], [0, 18, "throws"], [0, 19, "body"], [19, 20, "condition"], [20, 21, "operandl"], [21, 22, "member"], [20, 23, "operator"], [20, 24, "operandr"], [24, 25, "value"], [19, 26, "then_statement"], [26, 27, "statements"], [27, 28, "expression"], [28, 29, "type"], [29, 30, "name"], [19, 31, "else_statement"], [31, 32, "condition"], [32, 33, "operandl"], [33, 34, "operandl"], [34, 35, "member"], [33, 36, "operator"], [33, 37, "operandr"], [37, 38, "value"], [32, 39, "operator"], [32, 40, "operandr"], [40, 41, "operandl"], [41, 42, "member"], [40, 43, "operator"], [40, 44, "operandr"], [44, 45, "value"], [31, 46, "then_statement"], [46, 47, "statements"], [47, 48, "expression"], [48, 49, "type"], [49, 50, "name"], [31, 51, "else_statement"], [51, 52, "condition"], [52, 53, "operandl"], [53, 54, "operandl"], [54, 55, "member"], [53, 56, "operator"], [53, 57, "operandr"], [57, 58, "qualifier"], [57, 59, "member"], [52, 60, "operator"], [52, 61, "operandr"], [61, 62, "operandl"], [62, 63, "operandl"], [63, 64, "member"], [62, 65, "operator"], [62, 66, "operandr"], [66, 67, "member"], [61, 68, "operator"], [61, 69, "operandr"], [69, 70, "qualifier"], [69, 71, "member"], [51, 72, "then_statement"], [72, 73, "statements"], [73, 74, "expression"], [74, 75, "type"], [75, 76, "name"], [51, 77, "else_statement"], [77, 78, "condition"], [78, 79, "operandl"], [79, 80, "member"], [78, 81, "operator"], [78, 82, "operandr"], [82, 83, "value"], [77, 84, "then_statement"], [84, 85, "statements"], [85, 86, "expression"], [86, 87, "value"], [77, 88, "else_statement"], [88, 89, "statements"], [89, 90, "type"], [90, 91, "name"], [89, 92, "declarators"], [92, 93, "name"], [92, 94, "initializer"], [94, 95, "value"], [88, 96, "statements"], [96, 97, "condition"], [97, 98, "operandl"], [98, 99, "member"], [97, 100, "operator"], [97, 101, "operandr"], [101, 102, "value"], [96, 103, "body"], [103, 104, "statements"], [104, 105, "condition"], [105, 106, "prefix_operators"], [105, 107, "qualifier"], [105, 108, "member"], [104, 109, "then_statement"], [109, 110, "statements"], [110, 111, "type"], [111, 112, "name"], [111, 113, "dimensions"], [110, 114, "declarators"], [114, 115, "name"], [114, 116, "initializer"], [116, 117, "type"], [117, 118, "name"], [116, 119, "dimensions"], [119, 120, "condition"], [120, 121, "member"], [119, 122, "if_true"], [122, 123, "value"], [119, 124, "if_false"], [124, 125, "value"], [109, 126, "statements"], [126, 127, "type"], [127, 128, "name"], [126, 129, "declarators"], [129, 130, "name"], [129, 131, "initializer"], [131, 132, "qualifier"], [131, 133, "member"], [131, 134, "arguments"], [134, 135, "member"], [109, 136, "statements"], [136, 137, "condition"], [137, 138, "operandl"], [138, 139, "operandl"], [139, 140, "member"], [138, 141, "operator"], [138, 142, "operandr"], [142, 143, "value"], [137, 144, "operator"], [137, 145, "operandr"], [145, 146, "operandl"], [146, 147, "qualifier"], [146, 148, "member"], [145, 149, "operator"], [145, 150, "operandr"], [150, 151, "member"], [136, 152, "then_statement"], [152, 153, "statements"], [153, 154, "expression"], [154, 155, "qualifier"], [154, 156, "member"], [154, 157, "arguments"], [157, 158, "member"], [154, 159, "arguments"], [159, 160, "member"], [154, 161, "arguments"], [161, 162, "member"], [109, 163, "statements"], [163, 164, "condition"], [164, 165, "member"], [163, 166, "then_statement"], [166, 167, "statements"], [167, 168, "expression"], [168, 169, "qualifier"], [168, 170, "member"], [168, 171, "arguments"], [171, 172, "member"], [168, 173, "arguments"], [173, 174, "value"], [168, 175, "arguments"], [175, 176, "member"], [163, 177, "else_statement"], [177, 178, "statements"], [178, 179, "expression"], [179, 180, "qualifier"], [179, 181, "member"], [179, 182, "arguments"], [182, 183, "member"], [179, 184, "arguments"], [184, 185, "value"], [179, 186, "arguments"], [186, 187, "member"], [103, 188, "statements"], [188, 189, "expression"], [189, 190, "expressionl"], [190, 191, "member"], [189, 192, "type"], [189, 193, "value"], [193, 194, "qualifier"], [193, 195, "member"], [193, 196, "arguments"], [196, 197, "member"], [193, 198, "arguments"], [198, 199, "member"], [193, 200, "arguments"], [200, 201, "member"], [88, 202, "statements"], [202, 203, "expression"], [203, 204, "member"]], "rem_roots": [136], "add_roots": []}, {"id": 58, "mappings": {"WORD": "VAR_1", "relativeHeaderOffset": "VAR_2", "offset": "VAR_3", "diskStart": "VAR_4", "hasUncompressedSize": "VAR_5", "DWORD": "VAR_6", "length": "VAR_7", "rawCentralDirectoryData": "VAR_8", "hasDiskStart": "VAR_9", "compressedSize": "VAR_10", "hasCompressedSize": "VAR_11", "size": "VAR_12", "hasRelativeHeaderOffset": "VAR_13", "expectedLength": "VAR_14", "ZipException": "TYPE_1", "ZipEightByteInteger": "TYPE_2", "ZipLong": "TYPE_3", "reparseCentralDirectoryData": "METHOD_1", "0": "INT_1", "\" information extra field's length\"": "STRING_1", "\" but is \"": "STRING_2", "\" data. Expected length \"": "STRING_3", "\" doesn't match central directory\"": "STRING_4", "\"central directory zip64 extended\"": "STRING_5"}, "nodes": ["MethodDeclaration", "public", "void", "reparseCentralDirectoryData", "FormalParameter", "BasicType", "boolean", "hasUncompressedSize", "FormalParameter", "BasicType", "boolean", "hasCompressedSize", "FormalParameter", "BasicType", "boolean", "hasRelativeHeaderOffset", "FormalParameter", "BasicType", "boolean", "hasDiskStart", "ZipException", "IfStatement", "BinaryOperation", "MemberReference", "rawCentralDirectoryData", "!=", "Literal", "null", "BlockStatement", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "expectedLength", "BinaryOperation", "BinaryOperation", "BinaryOperation", "TernaryExpression", "MemberReference", "hasUncompressedSize", "MemberReference", "DWORD", "Literal", "0", "+", "TernaryExpression", "MemberReference", "hasCompressedSize", "MemberReference", "DWORD", "Literal", "0", "+", "TernaryExpression", "MemberReference", "hasRelativeHeaderOffset", "MemberReference", "DWORD", "Literal", "0", "+", "TernaryExpression", "MemberReference", "hasDiskStart", "MemberReference", "WORD", "Literal", "0", "IfStatement", "BinaryOperation", "MemberReference", "rawCentralDirectoryData", "length", "!=", "MemberReference", "expectedLength", "BlockStatement", "ThrowStatement", "ClassCreator", "ReferenceType", "ZipException", "BinaryOperation", "BinaryOperation", "BinaryOperation", "BinaryOperation", "BinaryOperation", "BinaryOperation", "Literal", "\"central directory zip64 extended\"", "+", "Literal", "\" information extra field's length\"", "+", "Literal", "\" doesn't match central directory\"", "+", "Literal", "\" data. Expected length \"", "+", "MemberReference", "expectedLength", "+", "Literal", "\" but is \"", "+", "MemberReference", "rawCentralDirectoryData", "length", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "offset", "Literal", "0", "IfStatement", "MemberReference", "hasUncompressedSize", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "size", "=", "ClassCreator", "ReferenceType", "ZipEightByteInteger", "MemberReference", "rawCentralDirectoryData", "MemberReference", "offset", "StatementExpression", "Assignment", "MemberReference", "offset", "+=", "MemberReference", "DWORD", "IfStatement", "MemberReference", "hasCompressedSize", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "compressedSize", "=", "ClassCreator", "ReferenceType", "ZipEightByteInteger", "MemberReference", "rawCentralDirectoryData", "MemberReference", "offset", "StatementExpression", "Assignment", "MemberReference", "offset", "+=", "MemberReference", "DWORD", "IfStatement", "MemberReference", "hasRelativeHeaderOffset", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "relativeHeaderOffset", "=", "ClassCreator", "ReferenceType", "ZipEightByteInteger", "MemberReference", "rawCentralDirectoryData", "MemberReference", "offset", "StatementExpression", "Assignment", "MemberReference", "offset", "+=", "MemberReference", "DWORD", "IfStatement", "MemberReference", "hasDiskStart", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "diskStart", "=", "ClassCreator", "ReferenceType", "ZipLong", "MemberReference", "rawCentralDirectoryData", "MemberReference", "offset", "StatementExpression", "Assignment", "MemberReference", "offset", "+=", "MemberReference", "WORD"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [0, 3, "name"], [0, 4, "parameters"], [4, 5, "type"], [5, 6, "name"], [4, 7, "name"], [0, 8, "parameters"], [8, 9, "type"], [9, 10, "name"], [8, 11, "name"], [0, 12, "parameters"], [12, 13, "type"], [13, 14, "name"], [12, 15, "name"], [0, 16, "parameters"], [16, 17, "type"], [17, 18, "name"], [16, 19, "name"], [0, 20, "throws"], [0, 21, "body"], [21, 22, "condition"], [22, 23, "operandl"], [23, 24, "member"], [22, 25, "operator"], [22, 26, "operandr"], [26, 27, "value"], [21, 28, "then_statement"], [28, 29, "statements"], [29, 30, "type"], [30, 31, "name"], [29, 32, "declarators"], [32, 33, "name"], [32, 34, "initializer"], [34, 35, "operandl"], [35, 36, "operandl"], [36, 37, "operandl"], [37, 38, "condition"], [38, 39, "member"], [37, 40, "if_true"], [40, 41, "member"], [37, 42, "if_false"], [42, 43, "value"], [36, 44, "operator"], [36, 45, "operandr"], [45, 46, "condition"], [46, 47, "member"], [45, 48, "if_true"], [48, 49, "member"], [45, 50, "if_false"], [50, 51, "value"], [35, 52, "operator"], [35, 53, "operandr"], [53, 54, "condition"], [54, 55, "member"], [53, 56, "if_true"], [56, 57, "member"], [53, 58, "if_false"], [58, 59, "value"], [34, 60, "operator"], [34, 61, "operandr"], [61, 62, "condition"], [62, 63, "member"], [61, 64, "if_true"], [64, 65, "member"], [61, 66, "if_false"], [66, 67, "value"], [28, 68, "statements"], [68, 69, "condition"], [69, 70, "operandl"], [70, 71, "qualifier"], [70, 72, "member"], [69, 73, "operator"], [69, 74, "operandr"], [74, 75, "member"], [68, 76, "then_statement"], [76, 77, "statements"], [77, 78, "expression"], [78, 79, "type"], [79, 80, "name"], [78, 81, "arguments"], [81, 82, "operandl"], [82, 83, "operandl"], [83, 84, "operandl"], [84, 85, "operandl"], [85, 86, "operandl"], [86, 87, "operandl"], [87, 88, "value"], [86, 89, "operator"], [86, 90, "operandr"], [90, 91, "value"], [85, 92, "operator"], [85, 93, "operandr"], [93, 94, "value"], [84, 95, "operator"], [84, 96, "operandr"], [96, 97, "value"], [83, 98, "operator"], [83, 99, "operandr"], [99, 100, "member"], [82, 101, "operator"], [82, 102, "operandr"], [102, 103, "value"], [81, 104, "operator"], [81, 105, "operandr"], [105, 106, "qualifier"], [105, 107, "member"], [28, 108, "statements"], [108, 109, "type"], [109, 110, "name"], [108, 111, "declarators"], [111, 112, "name"], [111, 113, "initializer"], [113, 114, "value"], [28, 115, "statements"], [115, 116, "condition"], [116, 117, "member"], [115, 118, "then_statement"], [118, 119, "statements"], [119, 120, "expression"], [120, 121, "expressionl"], [121, 122, "member"], [120, 123, "type"], [120, 124, "value"], [124, 125, "type"], [125, 126, "name"], [124, 127, "arguments"], [127, 128, "member"], [124, 129, "arguments"], [129, 130, "member"], [118, 131, "statements"], [131, 132, "expression"], [132, 133, "expressionl"], [133, 134, "member"], [132, 135, "type"], [132, 136, "value"], [136, 137, "member"], [28, 138, "statements"], [138, 139, "condition"], [139, 140, "member"], [138, 141, "then_statement"], [141, 142, "statements"], [142, 143, "expression"], [143, 144, "expressionl"], [144, 145, "member"], [143, 146, "type"], [143, 147, "value"], [147, 148, "type"], [148, 149, "name"], [147, 150, "arguments"], [150, 151, "member"], [147, 152, "arguments"], [152, 153, "member"], [141, 154, "statements"], [154, 155, "expression"], [155, 156, "expressionl"], [156, 157, "member"], [155, 158, "type"], [155, 159, "value"], [159, 160, "member"], [28, 161, "statements"], [161, 162, "condition"], [162, 163, "member"], [161, 164, "then_statement"], [164, 165, "statements"], [165, 166, "expression"], [166, 167, "expressionl"], [167, 168, "member"], [166, 169, "type"], [166, 170, "value"], [170, 171, "type"], [171, 172, "name"], [170, 173, "arguments"], [173, 174, "member"], [170, 175, "arguments"], [175, 176, "member"], [164, 177, "statements"], [177, 178, "expression"], [178, 179, "expressionl"], [179, 180, "member"], [178, 181, "type"], [178, 182, "value"], [182, 183, "member"], [28, 184, "statements"], [184, 185, "condition"], [185, 186, "member"], [184, 187, "then_statement"], [187, 188, "statements"], [188, 189, "expression"], [189, 190, "expressionl"], [190, 191, "member"], [189, 192, "type"], [189, 193, "value"], [193, 194, "type"], [194, 195, "name"], [193, 196, "arguments"], [196, 197, "member"], [193, 198, "arguments"], [198, 199, "member"], [187, 200, "statements"], [200, 201, "expression"], [201, 202, "expressionl"], [202, 203, "member"], [201, 204, "type"], [201, 205, "value"], [205, 206, "member"]], "rem_roots": [69], "add_roots": []}, {"id": 59, "mappings": {"coder": "VAR_1", "in": "VAR_2", "propsByte": "VAR_3", "i": "VAR_4", "dictSize": "VAR_5", "DICT_SIZE_MAX": "VAR_6", "password": "VAR_7", "properties": "VAR_8", "Coder": "TYPE_1", "LZMAInputStream": "TYPE_2", "InputStream": "TYPE_3", "IOException": "TYPE_4", "decode": "METHOD_1", "0": "INT_1", "1": "INT_2", "4": "INT_3", "8": "INT_4", "\"Dictionary larger than 4GiB maximum size\"": "STRING_1"}, "nodes": ["MethodDeclaration", "ReferenceType", "InputStream", "decode", "FormalParameter", "ReferenceType", "InputStream", "in", "FormalParameter", "ReferenceType", "Coder", "coder", "FormalParameter", "BasicType", "byte", "None", "password", "IOException", "LocalVariableDeclaration", "BasicType", "byte", "VariableDeclarator", "propsByte", "MemberReference", "coder", "properties", "ArraySelector", "Literal", "0", "LocalVariableDeclaration", "BasicType", "long", "VariableDeclarator", "dictSize", "MemberReference", "coder", "properties", "ArraySelector", "Literal", "1", "ForStatement", "ForControl", "VariableDeclaration", "BasicType", "int", "VariableDeclarator", "i", "Literal", "1", "BinaryOperation", "MemberReference", "i", "<", "Literal", "4", "MemberReference", "i", "++", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "dictSize", "|=", "BinaryOperation", "MemberReference", "coder", "properties", "ArraySelector", "BinaryOperation", "MemberReference", "i", "+", "Literal", "1", "<<", "BinaryOperation", "Literal", "8", "*", "MemberReference", "i", "IfStatement", "BinaryOperation", "MemberReference", "dictSize", ">", "MemberReference", "LZMAInputStream", "DICT_SIZE_MAX", "BlockStatement", "ThrowStatement", "ClassCreator", "ReferenceType", "IOException", "Literal", "\"Dictionary larger than 4GiB maximum size\"", "ReturnStatement", "ClassCreator", "ReferenceType", "LZMAInputStream", "MemberReference", "in", "Literal", "-", "1", "MemberReference", "propsByte", "Cast", "BasicType", "int", "MemberReference", "dictSize"], "edges": [[0, 1, "return_type"], [1, 2, "name"], [0, 3, "name"], [0, 4, "parameters"], [4, 5, "type"], [5, 6, "name"], [4, 7, "name"], [0, 8, "parameters"], [8, 9, "type"], [9, 10, "name"], [8, 11, "name"], [0, 12, "parameters"], [12, 13, "type"], [13, 14, "name"], [13, 15, "dimensions"], [12, 16, "name"], [0, 17, "throws"], [0, 18, "body"], [18, 19, "type"], [19, 20, "name"], [18, 21, "declarators"], [21, 22, "name"], [21, 23, "initializer"], [23, 24, "qualifier"], [23, 25, "member"], [23, 26, "selectors"], [26, 27, "index"], [27, 28, "value"], [0, 29, "body"], [29, 30, "type"], [30, 31, "name"], [29, 32, "declarators"], [32, 33, "name"], [32, 34, "initializer"], [34, 35, "qualifier"], [34, 36, "member"], [34, 37, "selectors"], [37, 38, "index"], [38, 39, "value"], [0, 40, "body"], [40, 41, "control"], [41, 42, "init"], [42, 43, "type"], [43, 44, "name"], [42, 45, "declarators"], [45, 46, "name"], [45, 47, "initializer"], [47, 48, "value"], [41, 49, "condition"], [49, 50, "operandl"], [50, 51, "member"], [49, 52, "operator"], [49, 53, "operandr"], [53, 54, "value"], [41, 55, "update"], [55, 56, "member"], [55, 57, "postfix_operators"], [40, 58, "body"], [58, 59, "statements"], [59, 60, "expression"], [60, 61, "expressionl"], [61, 62, "member"], [60, 63, "type"], [60, 64, "value"], [64, 65, "operandl"], [65, 66, "qualifier"], [65, 67, "member"], [65, 68, "selectors"], [68, 69, "index"], [69, 70, "operandl"], [70, 71, "member"], [69, 72, "operator"], [69, 73, "operandr"], [73, 74, "value"], [64, 75, "operator"], [64, 76, "operandr"], [76, 77, "operandl"], [77, 78, "value"], [76, 79, "operator"], [76, 80, "operandr"], [80, 81, "member"], [0, 82, "body"], [82, 83, "condition"], [83, 84, "operandl"], [84, 85, "member"], [83, 86, "operator"], [83, 87, "operandr"], [87, 88, "qualifier"], [87, 89, "member"], [82, 90, "then_statement"], [90, 91, "statements"], [91, 92, "expression"], [92, 93, "type"], [93, 94, "name"], [92, 95, "arguments"], [95, 96, "value"], [0, 97, "body"], [97, 98, "expression"], [98, 99, "type"], [99, 100, "name"], [98, 101, "arguments"], [101, 102, "member"], [98, 103, "arguments"], [103, 104, "prefix_operators"], [103, 105, "value"], [98, 106, "arguments"], [106, 107, "member"], [98, 108, "arguments"], [108, 109, "type"], [109, 110, "name"], [108, 111, "expression"], [111, 112, "member"]], "rem_roots": [59], "add_roots": []}, {"id": 60, "mappings": {"offset": "VAR_1", "length": "VAR_2", "start": "VAR_3", "currentByte": "VAR_4", "result": "VAR_5", "trailer": "VAR_6", "end": "VAR_7", "buffer": "VAR_8", "IllegalArgumentException": "TYPE_1", "parseOctal": "METHOD_1", "exceptionMessage": "METHOD_2", "0": "INT_1", "1": "INT_2", "2": "INT_3", "3": "INT_4", "0L": "INT_5", "\"Length \"": "STRING_1", "\" must be at least 2\"": "STRING_2", "' '": "CHAR_1", "'7'": "CHAR_2", "'0'": "CHAR_3"}, "nodes": ["MethodDeclaration", "public static", "BasicType", "long", "parseOctal", "FormalParameter", "BasicType", "byte", "None", "buffer", "FormalParameter", "BasicType", "int", "offset", "FormalParameter", "BasicType", "int", "length", "LocalVariableDeclaration", "BasicType", "long", "VariableDeclarator", "result", "Literal", "0", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "end", "BinaryOperation", "MemberReference", "offset", "+", "MemberReference", "length", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "start", "MemberReference", "offset", "IfStatement", "BinaryOperation", "MemberReference", "length", "<", "Literal", "2", "BlockStatement", "ThrowStatement", "ClassCreator", "ReferenceType", "IllegalArgumentException", "BinaryOperation", "BinaryOperation", "Literal", "\"Length \"", "+", "MemberReference", "length", "+", "Literal", "\" must be at least 2\"", "IfStatement", "BinaryOperation", "MemberReference", "buffer", "ArraySelector", "MemberReference", "start", "==", "Literal", "0", "BlockStatement", "ReturnStatement", "Literal", "0L", "WhileStatement", "BinaryOperation", "MemberReference", "start", "<", "MemberReference", "end", "BlockStatement", "IfStatement", "BinaryOperation", "MemberReference", "buffer", "ArraySelector", "MemberReference", "start", "==", "Literal", "' '", "BlockStatement", "StatementExpression", "MemberReference", "start", "++", "BlockStatement", "BreakStatement", "LocalVariableDeclaration", "BasicType", "byte", "VariableDeclarator", "trailer", "MemberReference", "buffer", "ArraySelector", "BinaryOperation", "MemberReference", "end", "-", "Literal", "1", "WhileStatement", "BinaryOperation", "BinaryOperation", "MemberReference", "start", "<", "MemberReference", "end", "&&", "BinaryOperation", "BinaryOperation", "MemberReference", "trailer", "==", "Literal", "0", "||", "BinaryOperation", "MemberReference", "trailer", "==", "Literal", "' '", "BlockStatement", "StatementExpression", "MemberReference", "end", "--", "StatementExpression", "Assignment", "MemberReference", "trailer", "=", "MemberReference", "buffer", "ArraySelector", "BinaryOperation", "MemberReference", "end", "-", "Literal", "1", "ForStatement", "ForControl", "BinaryOperation", "MemberReference", "start", "<", "MemberReference", "end", "MemberReference", "start", "++", "BlockStatement", "LocalVariableDeclaration", "final", "BasicType", "byte", "VariableDeclarator", "currentByte", "MemberReference", "buffer", "ArraySelector", "MemberReference", "start", "IfStatement", "BinaryOperation", "MemberReference", "currentByte", "==", "Literal", "0", "BlockStatement", "BreakStatement", "IfStatement", "BinaryOperation", "BinaryOperation", "MemberReference", "currentByte", "<", "Literal", "'0'", "||", "BinaryOperation", "MemberReference", "currentByte", ">", "Literal", "'7'", "BlockStatement", "ThrowStatement", "ClassCreator", "ReferenceType", "IllegalArgumentException", "MethodInvocation", "exceptionMessage", "MemberReference", "buffer", "MemberReference", "offset", "MemberReference", "length", "MemberReference", "start", "MemberReference", "currentByte", "StatementExpression", "Assignment", "MemberReference", "result", "=", "BinaryOperation", "BinaryOperation", "MemberReference", "result", "<<", "Literal", "3", "+", "BinaryOperation", "MemberReference", "currentByte", "-", "Literal", "'0'", "ReturnStatement", "MemberReference", "result"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [6, 8, "dimensions"], [5, 9, "name"], [0, 10, "parameters"], [10, 11, "type"], [11, 12, "name"], [10, 13, "name"], [0, 14, "parameters"], [14, 15, "type"], [15, 16, "name"], [14, 17, "name"], [0, 18, "body"], [18, 19, "type"], [19, 20, "name"], [18, 21, "declarators"], [21, 22, "name"], [21, 23, "initializer"], [23, 24, "value"], [0, 25, "body"], [25, 26, "type"], [26, 27, "name"], [25, 28, "declarators"], [28, 29, "name"], [28, 30, "initializer"], [30, 31, "operandl"], [31, 32, "member"], [30, 33, "operator"], [30, 34, "operandr"], [34, 35, "member"], [0, 36, "body"], [36, 37, "type"], [37, 38, "name"], [36, 39, "declarators"], [39, 40, "name"], [39, 41, "initializer"], [41, 42, "member"], [0, 43, "body"], [43, 44, "condition"], [44, 45, "operandl"], [45, 46, "member"], [44, 47, "operator"], [44, 48, "operandr"], [48, 49, "value"], [43, 50, "then_statement"], [50, 51, "statements"], [51, 52, "expression"], [52, 53, "type"], [53, 54, "name"], [52, 55, "arguments"], [55, 56, "operandl"], [56, 57, "operandl"], [57, 58, "value"], [56, 59, "operator"], [56, 60, "operandr"], [60, 61, "member"], [55, 62, "operator"], [55, 63, "operandr"], [63, 64, "value"], [0, 65, "body"], [65, 66, "condition"], [66, 67, "operandl"], [67, 68, "member"], [67, 69, "selectors"], [69, 70, "index"], [70, 71, "member"], [66, 72, "operator"], [66, 73, "operandr"], [73, 74, "value"], [65, 75, "then_statement"], [75, 76, "statements"], [76, 77, "expression"], [77, 78, "value"], [0, 79, "body"], [79, 80, "condition"], [80, 81, "operandl"], [81, 82, "member"], [80, 83, "operator"], [80, 84, "operandr"], [84, 85, "member"], [79, 86, "body"], [86, 87, "statements"], [87, 88, "condition"], [88, 89, "operandl"], [89, 90, "member"], [89, 91, "selectors"], [91, 92, "index"], [92, 93, "member"], [88, 94, "operator"], [88, 95, "operandr"], [95, 96, "value"], [87, 97, "then_statement"], [97, 98, "statements"], [98, 99, "expression"], [99, 100, "member"], [99, 101, "postfix_operators"], [87, 102, "else_statement"], [102, 103, "statements"], [0, 104, "body"], [104, 105, "type"], [105, 106, "name"], [104, 107, "declarators"], [107, 108, "name"], [107, 109, "initializer"], [109, 110, "member"], [109, 111, "selectors"], [111, 112, "index"], [112, 113, "operandl"], [113, 114, "member"], [112, 115, "operator"], [112, 116, "operandr"], [116, 117, "value"], [0, 118, "body"], [118, 119, "condition"], [119, 120, "operandl"], [120, 121, "operandl"], [121, 122, "member"], [120, 123, "operator"], [120, 124, "operandr"], [124, 125, "member"], [119, 126, "operator"], [119, 127, "operandr"], [127, 128, "operandl"], [128, 129, "operandl"], [129, 130, "member"], [128, 131, "operator"], [128, 132, "operandr"], [132, 133, "value"], [127, 134, "operator"], [127, 135, "operandr"], [135, 136, "operandl"], [136, 137, "member"], [135, 138, "operator"], [135, 139, "operandr"], [139, 140, "value"], [118, 141, "body"], [141, 142, "statements"], [142, 143, "expression"], [143, 144, "member"], [143, 145, "postfix_operators"], [141, 146, "statements"], [146, 147, "expression"], [147, 148, "expressionl"], [148, 149, "member"], [147, 150, "type"], [147, 151, "value"], [151, 152, "member"], [151, 153, "selectors"], [153, 154, "index"], [154, 155, "operandl"], [155, 156, "member"], [154, 157, "operator"], [154, 158, "operandr"], [158, 159, "value"], [0, 160, "body"], [160, 161, "control"], [161, 162, "condition"], [162, 163, "operandl"], [163, 164, "member"], [162, 165, "operator"], [162, 166, "operandr"], [166, 167, "member"], [161, 168, "update"], [168, 169, "member"], [168, 170, "postfix_operators"], [160, 171, "body"], [171, 172, "statements"], [172, 173, "modifiers"], [172, 174, "type"], [174, 175, "name"], [172, 176, "declarators"], [176, 177, "name"], [176, 178, "initializer"], [178, 179, "member"], [178, 180, "selectors"], [180, 181, "index"], [181, 182, "member"], [171, 183, "statements"], [183, 184, "condition"], [184, 185, "operandl"], [185, 186, "member"], [184, 187, "operator"], [184, 188, "operandr"], [188, 189, "value"], [183, 190, "then_statement"], [190, 191, "statements"], [171, 192, "statements"], [192, 193, "condition"], [193, 194, "operandl"], [194, 195, "operandl"], [195, 196, "member"], [194, 197, "operator"], [194, 198, "operandr"], [198, 199, "value"], [193, 200, "operator"], [193, 201, "operandr"], [201, 202, "operandl"], [202, 203, "member"], [201, 204, "operator"], [201, 205, "operandr"], [205, 206, "value"], [192, 207, "then_statement"], [207, 208, "statements"], [208, 209, "expression"], [209, 210, "type"], [210, 211, "name"], [209, 212, "arguments"], [212, 213, "member"], [212, 214, "arguments"], [214, 215, "member"], [212, 216, "arguments"], [216, 217, "member"], [212, 218, "arguments"], [218, 219, "member"], [212, 220, "arguments"], [220, 221, "member"], [212, 222, "arguments"], [222, 223, "member"], [171, 224, "statements"], [224, 225, "expression"], [225, 226, "expressionl"], [226, 227, "member"], [225, 228, "type"], [225, 229, "value"], [229, 230, "operandl"], [230, 231, "operandl"], [231, 232, "member"], [230, 233, "operator"], [230, 234, "operandr"], [234, 235, "value"], [229, 236, "operator"], [229, 237, "operandr"], [237, 238, "operandl"], [238, 239, "member"], [237, 240, "operator"], [237, 241, "operandr"], [241, 242, "value"], [0, 243, "body"], [243, 244, "expression"], [244, 245, "member"]], "rem_roots": [183], "add_roots": []}, {"id": 61, "mappings": {"STORED": "VAR_1", "toRead": "VAR_2", "csize": "VAR_3", "readBytesOfEntry": "VAR_4", "current": "VAR_5", "crc": "VAR_6", "lengthOfLastRead": "VAR_7", "buffer": "VAR_8", "bytesReadFromStream": "VAR_9", "inf": "VAR_10", "read": "VAR_11", "in": "VAR_12", "e": "VAR_13", "start": "VAR_14", "length": "VAR_15", "ZipArchiveOutputStream": "VAR_16", "buf": "VAR_17", "closed": "VAR_18", "offsetInBuffer": "VAR_19", "System": "TYPE_1", "ZipException": "TYPE_2", "IOException": "TYPE_3", "DataFormatException": "TYPE_4", "ArrayIndexOutOfBoundsException": "TYPE_5", "update": "METHOD_1", "getMethod": "METHOD_2", "arraycopy": "METHOD_3", "needsInput": "METHOD_4", "count": "METHOD_5", "getMessage": "METHOD_6", "finished": "METHOD_7", "fill": "METHOD_8", "getSize": "METHOD_9", "inflate": "METHOD_10", "0": "INT_1", "1": "INT_2", "\"The stream is closed\"": "STRING_1"}, "nodes": ["MethodDeclaration", "public", "BasicType", "int", "read", "FormalParameter", "BasicType", "byte", "None", "buffer", "FormalParameter", "BasicType", "int", "start", "FormalParameter", "BasicType", "int", "length", "IOException", "IfStatement", "MemberReference", "closed", "BlockStatement", "ThrowStatement", "ClassCreator", "ReferenceType", "IOException", "Literal", "\"The stream is closed\"", "IfStatement", "BinaryOperation", "MethodInvocation", "inf", "finished", "||", "BinaryOperation", "MemberReference", "current", "==", "Literal", "null", "BlockStatement", "ReturnStatement", "Literal", "-", "1", "IfStatement", "BinaryOperation", "BinaryOperation", "BinaryOperation", "BinaryOperation", "MemberReference", "start", "<=", "MemberReference", "buffer", "length", "&&", "BinaryOperation", "MemberReference", "length", ">=", "Literal", "0", "&&", "BinaryOperation", "MemberReference", "start", ">=", "Literal", "0", "&&", "BinaryOperation", "BinaryOperation", "MemberReference", "buffer", "length", "-", "MemberReference", "start", ">=", "MemberReference", "length", "BlockStatement", "IfStatement", "BinaryOperation", "MethodInvocation", "current", "getMethod", "==", "MemberReference", "ZipArchiveOutputStream", "STORED", "BlockStatement", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "csize", "Cast", "BasicType", "int", "MethodInvocation", "current", "getSize", "IfStatement", "BinaryOperation", "MemberReference", "readBytesOfEntry", ">=", "MemberReference", "csize", "BlockStatement", "ReturnStatement", "Literal", "-", "1", "IfStatement", "BinaryOperation", "MemberReference", "offsetInBuffer", ">=", "MemberReference", "lengthOfLastRead", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "offsetInBuffer", "=", "Literal", "0", "IfStatement", "BinaryOperation", "Assignment", "MemberReference", "lengthOfLastRead", "=", "MethodInvocation", "in", "read", "MemberReference", "buf", "==", "Literal", "-", "1", "BlockStatement", "ReturnStatement", "Literal", "-", "1", "StatementExpression", "MethodInvocation", "count", "MemberReference", "lengthOfLastRead", "StatementExpression", "Assignment", "MemberReference", "bytesReadFromStream", "+=", "MemberReference", "lengthOfLastRead", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "toRead", "TernaryExpression", "BinaryOperation", "MemberReference", "length", ">", "MemberReference", "lengthOfLastRead", "BinaryOperation", "MemberReference", "lengthOfLastRead", "-", "MemberReference", "offsetInBuffer", "MemberReference", "length", "IfStatement", "BinaryOperation", "BinaryOperation", "MemberReference", "csize", "-", "MemberReference", "readBytesOfEntry", "<", "MemberReference", "toRead", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "toRead", "=", "BinaryOperation", "MemberReference", "csize", "-", "MemberReference", "readBytesOfEntry", "StatementExpression", "MethodInvocation", "System", "arraycopy", "MemberReference", "buf", "MemberReference", "offsetInBuffer", "MemberReference", "buffer", "MemberReference", "start", "MemberReference", "toRead", "StatementExpression", "Assignment", "MemberReference", "offsetInBuffer", "+=", "MemberReference", "toRead", "StatementExpression", "Assignment", "MemberReference", "readBytesOfEntry", "+=", "MemberReference", "toRead", "StatementExpression", "MethodInvocation", "crc", "update", "MemberReference", "buffer", "MemberReference", "start", "MemberReference", "toRead", "ReturnStatement", "MemberReference", "toRead", "IfStatement", "MethodInvocation", "inf", "needsInput", "BlockStatement", "StatementExpression", "MethodInvocation", "fill", "IfStatement", "BinaryOperation", "MemberReference", "lengthOfLastRead", ">", "Literal", "0", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "bytesReadFromStream", "+=", "MemberReference", "lengthOfLastRead", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "read", "Literal", "0", "TryStatement", "StatementExpression", "Assignment", "MemberReference", "read", "=", "MethodInvocation", "inf", "inflate", "MemberReference", "buffer", "MemberReference", "start", "MemberReference", "length", "CatchClause", "CatchClauseParameter", "DataFormatException", "e", "ThrowStatement", "ClassCreator", "ReferenceType", "ZipException", "MethodInvocation", "e", "getMessage", "IfStatement", "BinaryOperation", "BinaryOperation", "MemberReference", "read", "==", "Literal", "0", "&&", "MethodInvocation", "inf", "finished", "BlockStatement", "ReturnStatement", "Literal", "-", "1", "StatementExpression", "MethodInvocation", "crc", "update", "MemberReference", "buffer", "MemberReference", "start", "MemberReference", "read", "ReturnStatement", "MemberReference", "read", "ThrowStatement", "ClassCreator", "ReferenceType", "ArrayIndexOutOfBoundsException"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [6, 8, "dimensions"], [5, 9, "name"], [0, 10, "parameters"], [10, 11, "type"], [11, 12, "name"], [10, 13, "name"], [0, 14, "parameters"], [14, 15, "type"], [15, 16, "name"], [14, 17, "name"], [0, 18, "throws"], [0, 19, "body"], [19, 20, "condition"], [20, 21, "member"], [19, 22, "then_statement"], [22, 23, "statements"], [23, 24, "expression"], [24, 25, "type"], [25, 26, "name"], [24, 27, "arguments"], [27, 28, "value"], [0, 29, "body"], [29, 30, "condition"], [30, 31, "operandl"], [31, 32, "qualifier"], [31, 33, "member"], [30, 34, "operator"], [30, 35, "operandr"], [35, 36, "operandl"], [36, 37, "member"], [35, 38, "operator"], [35, 39, "operandr"], [39, 40, "value"], [29, 41, "then_statement"], [41, 42, "statements"], [42, 43, "expression"], [43, 44, "prefix_operators"], [43, 45, "value"], [0, 46, "body"], [46, 47, "condition"], [47, 48, "operandl"], [48, 49, "operandl"], [49, 50, "operandl"], [50, 51, "operandl"], [51, 52, "member"], [50, 53, "operator"], [50, 54, "operandr"], [54, 55, "qualifier"], [54, 56, "member"], [49, 57, "operator"], [49, 58, "operandr"], [58, 59, "operandl"], [59, 60, "member"], [58, 61, "operator"], [58, 62, "operandr"], [62, 63, "value"], [48, 64, "operator"], [48, 65, "operandr"], [65, 66, "operandl"], [66, 67, "member"], [65, 68, "operator"], [65, 69, "operandr"], [69, 70, "value"], [47, 71, "operator"], [47, 72, "operandr"], [72, 73, "operandl"], [73, 74, "operandl"], [74, 75, "qualifier"], [74, 76, "member"], [73, 77, "operator"], [73, 78, "operandr"], [78, 79, "member"], [72, 80, "operator"], [72, 81, "operandr"], [81, 82, "member"], [46, 83, "then_statement"], [83, 84, "statements"], [84, 85, "condition"], [85, 86, "operandl"], [86, 87, "qualifier"], [86, 88, "member"], [85, 89, "operator"], [85, 90, "operandr"], [90, 91, "qualifier"], [90, 92, "member"], [84, 93, "then_statement"], [93, 94, "statements"], [94, 95, "type"], [95, 96, "name"], [94, 97, "declarators"], [97, 98, "name"], [97, 99, "initializer"], [99, 100, "type"], [100, 101, "name"], [99, 102, "expression"], [102, 103, "qualifier"], [102, 104, "member"], [93, 105, "statements"], [105, 106, "condition"], [106, 107, "operandl"], [107, 108, "member"], [106, 109, "operator"], [106, 110, "operandr"], [110, 111, "member"], [105, 112, "then_statement"], [112, 113, "statements"], [113, 114, "expression"], [114, 115, "prefix_operators"], [114, 116, "value"], [93, 117, "statements"], [117, 118, "condition"], [118, 119, "operandl"], [119, 120, "member"], [118, 121, "operator"], [118, 122, "operandr"], [122, 123, "member"], [117, 124, "then_statement"], [124, 125, "statements"], [125, 126, "expression"], [126, 127, "expressionl"], [127, 128, "member"], [126, 129, "type"], [126, 130, "value"], [130, 131, "value"], [124, 132, "statements"], [132, 133, "condition"], [133, 134, "operandl"], [134, 135, "expressionl"], [135, 136, "member"], [134, 137, "type"], [134, 138, "value"], [138, 139, "qualifier"], [138, 140, "member"], [138, 141, "arguments"], [141, 142, "member"], [133, 143, "operator"], [133, 144, "operandr"], [144, 145, "prefix_operators"], [144, 146, "value"], [132, 147, "then_statement"], [147, 148, "statements"], [148, 149, "expression"], [149, 150, "prefix_operators"], [149, 151, "value"], [124, 152, "statements"], [152, 153, "expression"], [153, 154, "member"], [153, 155, "arguments"], [155, 156, "member"], [124, 157, "statements"], [157, 158, "expression"], [158, 159, "expressionl"], [159, 160, "member"], [158, 161, "type"], [158, 162, "value"], [162, 163, "member"], [93, 164, "statements"], [164, 165, "type"], [165, 166, "name"], [164, 167, "declarators"], [167, 168, "name"], [167, 169, "initializer"], [169, 170, "condition"], [170, 171, "operandl"], [171, 172, "member"], [170, 173, "operator"], [170, 174, "operandr"], [174, 175, "member"], [169, 176, "if_true"], [176, 177, "operandl"], [177, 178, "member"], [176, 179, "operator"], [176, 180, "operandr"], [180, 181, "member"], [169, 182, "if_false"], [182, 183, "member"], [93, 184, "statements"], [184, 185, "condition"], [185, 186, "operandl"], [186, 187, "operandl"], [187, 188, "member"], [186, 189, "operator"], [186, 190, "operandr"], [190, 191, "member"], [185, 192, "operator"], [185, 193, "operandr"], [193, 194, "member"], [184, 195, "then_statement"], [195, 196, "statements"], [196, 197, "expression"], [197, 198, "expressionl"], [198, 199, "member"], [197, 200, "type"], [197, 201, "value"], [201, 202, "operandl"], [202, 203, "member"], [201, 204, "operator"], [201, 205, "operandr"], [205, 206, "member"], [93, 207, "statements"], [207, 208, "expression"], [208, 209, "qualifier"], [208, 210, "member"], [208, 211, "arguments"], [211, 212, "member"], [208, 213, "arguments"], [213, 214, "member"], [208, 215, "arguments"], [215, 216, "member"], [208, 217, "arguments"], [217, 218, "member"], [208, 219, "arguments"], [219, 220, "member"], [93, 221, "statements"], [221, 222, "expression"], [222, 223, "expressionl"], [223, 224, "member"], [222, 225, "type"], [222, 226, "value"], [226, 227, "member"], [93, 228, "statements"], [228, 229, "expression"], [229, 230, "expressionl"], [230, 231, "member"], [229, 232, "type"], [229, 233, "value"], [233, 234, "member"], [93, 235, "statements"], [235, 236, "expression"], [236, 237, "qualifier"], [236, 238, "member"], [236, 239, "arguments"], [239, 240, "member"], [236, 241, "arguments"], [241, 242, "member"], [236, 243, "arguments"], [243, 244, "member"], [93, 245, "statements"], [245, 246, "expression"], [246, 247, "member"], [83, 248, "statements"], [248, 249, "condition"], [249, 250, "qualifier"], [249, 251, "member"], [248, 252, "then_statement"], [252, 253, "statements"], [253, 254, "expression"], [254, 255, "member"], [252, 256, "statements"], [256, 257, "condition"], [257, 258, "operandl"], [258, 259, "member"], [257, 260, "operator"], [257, 261, "operandr"], [261, 262, "value"], [256, 263, "then_statement"], [263, 264, "statements"], [264, 265, "expression"], [265, 266, "expressionl"], [266, 267, "member"], [265, 268, "type"], [265, 269, "value"], [269, 270, "member"], [83, 271, "statements"], [271, 272, "type"], [272, 273, "name"], [271, 274, "declarators"], [274, 275, "name"], [274, 276, "initializer"], [276, 277, "value"], [83, 278, "statements"], [278, 279, "block"], [279, 280, "expression"], [280, 281, "expressionl"], [281, 282, "member"], [280, 283, "type"], [280, 284, "value"], [284, 285, "qualifier"], [284, 286, "member"], [284, 287, "arguments"], [287, 288, "member"], [284, 289, "arguments"], [289, 290, "member"], [284, 291, "arguments"], [291, 292, "member"], [278, 293, "catches"], [293, 294, "parameter"], [294, 295, "types"], [294, 296, "name"], [293, 297, "block"], [297, 298, "expression"], [298, 299, "type"], [299, 300, "name"], [298, 301, "arguments"], [301, 302, "qualifier"], [301, 303, "member"], [83, 304, "statements"], [304, 305, "condition"], [305, 306, "operandl"], [306, 307, "operandl"], [307, 308, "member"], [306, 309, "operator"], [306, 310, "operandr"], [310, 311, "value"], [305, 312, "operator"], [305, 313, "operandr"], [313, 314, "qualifier"], [313, 315, "member"], [304, 316, "then_statement"], [316, 317, "statements"], [317, 318, "expression"], [318, 319, "prefix_operators"], [318, 320, "value"], [83, 321, "statements"], [321, 322, "expression"], [322, 323, "qualifier"], [322, 324, "member"], [322, 325, "arguments"], [325, 326, "member"], [322, 327, "arguments"], [327, 328, "member"], [322, 329, "arguments"], [329, 330, "member"], [83, 331, "statements"], [331, 332, "expression"], [332, 333, "member"], [0, 334, "body"], [334, 335, "expression"], [335, 336, "type"], [336, 337, "name"]], "rem_roots": [304], "add_roots": []}, {"id": 62, "mappings": {"lineCounter": "VAR_1", "current": "VAR_2", "lastChar": "VAR_3", "IOException": "TYPE_1", "read": "METHOD_1", "'\\n'": "CHAR_1"}, "nodes": ["MethodDeclaration", "public", "BasicType", "int", "read", "IOException", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "current", "SuperMethodInvocation", "read", "IfStatement", "BinaryOperation", "MemberReference", "current", "==", "Literal", "'\\n'", "BlockStatement", "StatementExpression", "MemberReference", "lineCounter", "++", "StatementExpression", "Assignment", "MemberReference", "lastChar", "=", "MemberReference", "current", "ReturnStatement", "MemberReference", "lastChar"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "throws"], [0, 6, "body"], [6, 7, "type"], [7, 8, "name"], [6, 9, "declarators"], [9, 10, "name"], [9, 11, "initializer"], [11, 12, "member"], [0, 13, "body"], [13, 14, "condition"], [14, 15, "operandl"], [15, 16, "member"], [14, 17, "operator"], [14, 18, "operandr"], [18, 19, "value"], [13, 20, "then_statement"], [20, 21, "statements"], [21, 22, "expression"], [22, 23, "member"], [22, 24, "postfix_operators"], [0, 25, "body"], [25, 26, "expression"], [26, 27, "expressionl"], [27, 28, "member"], [26, 29, "type"], [26, 30, "value"], [30, 31, "member"], [0, 32, "body"], [32, 33, "expression"], [33, 34, "member"]], "rem_roots": [14], "add_roots": []}, {"id": 63, "mappings": {"ALL": "VAR_1", "NON_NUMERIC": "VAR_2", "COMMENT": "VAR_3", "out": "VAR_4", "quote": "VAR_5", "len": "VAR_6", "pos": "VAR_7", "end": "VAR_8", "delimChar": "VAR_9", "NONE": "VAR_10", "value": "VAR_11", "SP": "VAR_12", "quoteChar": "VAR_13", "c": "VAR_14", "offset": "VAR_15", "start": "VAR_16", "CR": "VAR_17", "quoteModePolicy": "VAR_18", "LF": "VAR_19", "newRecord": "VAR_20", "MINIMAL": "VAR_21", "object": "VAR_22", "IllegalStateException": "TYPE_1", "Appendable": "TYPE_2", "Number": "TYPE_3", "QuoteMode": "TYPE_4", "CharSequence": "TYPE_5", "IOException": "TYPE_6", "Object": "TYPE_7", "printAndQuote": "METHOD_1", "getQuoteMode": "METHOD_2", "printAndEscape": "METHOD_3", "charValue": "METHOD_4", "getQuoteCharacter": "METHOD_5", "getDelimiter": "METHOD_6", "charAt": "METHOD_7", "append": "METHOD_8", "0": "INT_1", "1": "INT_2", "\"Unexpected Quote value: \"": "STRING_1", "'a'": "CHAR_1", "'z'": "CHAR_2", "'0'": "CHAR_3", "'A'": "CHAR_4", "'Z'": "CHAR_5", "'9'": "CHAR_6"}, "nodes": ["MethodDeclaration", "private", "void", "printAndQuote", "FormalParameter", "ReferenceType", "Object", "object", "FormalParameter", "ReferenceType", "CharSequence", "value", "FormalParameter", "BasicType", "int", "offset", "FormalParameter", "BasicType", "int", "len", "FormalParameter", "ReferenceType", "Appendable", "out", "FormalParameter", "BasicType", "boolean", "newRecord", "IOException", "LocalVariableDeclaration", "BasicType", "boolean", "VariableDeclarator", "quote", "Literal", "false", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "start", "MemberReference", "offset", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "pos", "MemberReference", "offset", "LocalVariableDeclaration", "final", "BasicType", "int", "VariableDeclarator", "end", "BinaryOperation", "MemberReference", "offset", "+", "MemberReference", "len", "LocalVariableDeclaration", "final", "BasicType", "char", "VariableDeclarator", "delimChar", "MethodInvocation", "getDelimiter", "LocalVariableDeclaration", "final", "BasicType", "char", "VariableDeclarator", "quoteChar", "MethodInvocation", "getQuoteCharacter", "MethodInvocation", "charValue", "LocalVariableDeclaration", "ReferenceType", "QuoteMode", "VariableDeclarator", "quoteModePolicy", "MethodInvocation", "getQuoteMode", "IfStatement", "BinaryOperation", "MemberReference", "quoteModePolicy", "==", "Literal", "null", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "quoteModePolicy", "=", "MemberReference", "QuoteMode", "MINIMAL", "SwitchStatement", "MemberReference", "quoteModePolicy", "SwitchStatementCase", "ALL", "StatementExpression", "Assignment", "MemberReference", "quote", "=", "Literal", "true", "BreakStatement", "SwitchStatementCase", "NON_NUMERIC", "StatementExpression", "Assignment", "MemberReference", "quote", "=", "BinaryOperation", "!", "MemberReference", "object", "instanceof", "ReferenceType", "Number", "BreakStatement", "SwitchStatementCase", "NONE", "StatementExpression", "MethodInvocation", "printAndEscape", "MemberReference", "value", "MemberReference", "offset", "MemberReference", "len", "MemberReference", "out", "ReturnStatement", "SwitchStatementCase", "MINIMAL", "IfStatement", "BinaryOperation", "MemberReference", "len", "<=", "Literal", "0", "BlockStatement", "IfStatement", "MemberReference", "newRecord", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "quote", "=", "Literal", "true", "BlockStatement", "LocalVariableDeclaration", "BasicType", "char", "VariableDeclarator", "c", "MethodInvocation", "value", "charAt", "MemberReference", "pos", "IfStatement", "BinaryOperation", "MemberReference", "newRecord", "&&", "BinaryOperation", "BinaryOperation", "BinaryOperation", "BinaryOperation", "MemberReference", "c", "<", "Literal", "'0'", "||", "BinaryOperation", "BinaryOperation", "MemberReference", "c", ">", "Literal", "'9'", "&&", "BinaryOperation", "MemberReference", "c", "<", "Literal", "'A'", "||", "BinaryOperation", "BinaryOperation", "MemberReference", "c", ">", "Literal", "'Z'", "&&", "BinaryOperation", "MemberReference", "c", "<", "Literal", "'a'", "||", "BinaryOperation", "MemberReference", "c", ">", "Literal", "'z'", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "quote", "=", "Literal", "true", "IfStatement", "BinaryOperation", "MemberReference", "c", "<=", "MemberReference", "COMMENT", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "quote", "=", "Literal", "true", "BlockStatement", "WhileStatement", "BinaryOperation", "MemberReference", "pos", "<", "MemberReference", "end", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "c", "=", "MethodInvocation", "value", "charAt", "MemberReference", "pos", "IfStatement", "BinaryOperation", "BinaryOperation", "BinaryOperation", "BinaryOperation", "MemberReference", "c", "==", "MemberReference", "LF", "||", "BinaryOperation", "MemberReference", "c", "==", "MemberReference", "CR", "||", "BinaryOperation", "MemberReference", "c", "==", "MemberReference", "quoteChar", "||", "BinaryOperation", "MemberReference", "c", "==", "MemberReference", "delimChar", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "quote", "=", "Literal", "true", "BreakStatement", "StatementExpression", "MemberReference", "pos", "++", "IfStatement", "MemberReference", "!", "quote", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "pos", "=", "BinaryOperation", "MemberReference", "end", "-", "Literal", "1", "StatementExpression", "Assignment", "MemberReference", "c", "=", "MethodInvocation", "value", "charAt", "MemberReference", "pos", "IfStatement", "BinaryOperation", "MemberReference", "c", "<=", "MemberReference", "SP", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "quote", "=", "Literal", "true", "IfStatement", "MemberReference", "!", "quote", "BlockStatement", "StatementExpression", "MethodInvocation", "out", "append", "MemberReference", "value", "MemberReference", "start", "MemberReference", "end", "ReturnStatement", "BreakStatement", "SwitchStatementCase", "ThrowStatement", "ClassCreator", "ReferenceType", "IllegalStateException", "BinaryOperation", "Literal", "\"Unexpected Quote value: \"", "+", "MemberReference", "quoteModePolicy", "IfStatement", "MemberReference", "!", "quote", "BlockStatement", "StatementExpression", "MethodInvocation", "out", "append", "MemberReference", "value", "MemberReference", "start", "MemberReference", "end", "ReturnStatement", "StatementExpression", "MethodInvocation", "out", "append", "MemberReference", "quoteChar", "WhileStatement", "BinaryOperation", "MemberReference", "pos", "<", "MemberReference", "end", "BlockStatement", "LocalVariableDeclaration", "final", "BasicType", "char", "VariableDeclarator", "c", "MethodInvocation", "value", "charAt", "MemberReference", "pos", "IfStatement", "BinaryOperation", "MemberReference", "c", "==", "MemberReference", "quoteChar", "BlockStatement", "StatementExpression", "MethodInvocation", "out", "append", "MemberReference", "value", "MemberReference", "start", "BinaryOperation", "MemberReference", "pos", "+", "Literal", "1", "StatementExpression", "Assignment", "MemberReference", "start", "=", "MemberReference", "pos", "StatementExpression", "MemberReference", "pos", "++", "StatementExpression", "MethodInvocation", "out", "append", "MemberReference", "value", "MemberReference", "start", "MemberReference", "pos", "StatementExpression", "MethodInvocation", "out", "append", "MemberReference", "quoteChar"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [0, 3, "name"], [0, 4, "parameters"], [4, 5, "type"], [5, 6, "name"], [4, 7, "name"], [0, 8, "parameters"], [8, 9, "type"], [9, 10, "name"], [8, 11, "name"], [0, 12, "parameters"], [12, 13, "type"], [13, 14, "name"], [12, 15, "name"], [0, 16, "parameters"], [16, 17, "type"], [17, 18, "name"], [16, 19, "name"], [0, 20, "parameters"], [20, 21, "type"], [21, 22, "name"], [20, 23, "name"], [0, 24, "parameters"], [24, 25, "type"], [25, 26, "name"], [24, 27, "name"], [0, 28, "throws"], [0, 29, "body"], [29, 30, "type"], [30, 31, "name"], [29, 32, "declarators"], [32, 33, "name"], [32, 34, "initializer"], [34, 35, "value"], [0, 36, "body"], [36, 37, "type"], [37, 38, "name"], [36, 39, "declarators"], [39, 40, "name"], [39, 41, "initializer"], [41, 42, "member"], [0, 43, "body"], [43, 44, "type"], [44, 45, "name"], [43, 46, "declarators"], [46, 47, "name"], [46, 48, "initializer"], [48, 49, "member"], [0, 50, "body"], [50, 51, "modifiers"], [50, 52, "type"], [52, 53, "name"], [50, 54, "declarators"], [54, 55, "name"], [54, 56, "initializer"], [56, 57, "operandl"], [57, 58, "member"], [56, 59, "operator"], [56, 60, "operandr"], [60, 61, "member"], [0, 62, "body"], [62, 63, "modifiers"], [62, 64, "type"], [64, 65, "name"], [62, 66, "declarators"], [66, 67, "name"], [66, 68, "initializer"], [68, 69, "member"], [0, 70, "body"], [70, 71, "modifiers"], [70, 72, "type"], [72, 73, "name"], [70, 74, "declarators"], [74, 75, "name"], [74, 76, "initializer"], [76, 77, "member"], [76, 78, "selectors"], [78, 79, "member"], [0, 80, "body"], [80, 81, "type"], [81, 82, "name"], [80, 83, "declarators"], [83, 84, "name"], [83, 85, "initializer"], [85, 86, "member"], [0, 87, "body"], [87, 88, "condition"], [88, 89, "operandl"], [89, 90, "member"], [88, 91, "operator"], [88, 92, "operandr"], [92, 93, "value"], [87, 94, "then_statement"], [94, 95, "statements"], [95, 96, "expression"], [96, 97, "expressionl"], [97, 98, "member"], [96, 99, "type"], [96, 100, "value"], [100, 101, "qualifier"], [100, 102, "member"], [0, 103, "body"], [103, 104, "expression"], [104, 105, "member"], [103, 106, "cases"], [106, 107, "case"], [106, 108, "statements"], [108, 109, "expression"], [109, 110, "expressionl"], [110, 111, "member"], [109, 112, "type"], [109, 113, "value"], [113, 114, "value"], [106, 115, "statements"], [103, 116, "cases"], [116, 117, "case"], [116, 118, "statements"], [118, 119, "expression"], [119, 120, "expressionl"], [120, 121, "member"], [119, 122, "type"], [119, 123, "value"], [123, 124, "prefix_operators"], [123, 125, "operandl"], [125, 126, "member"], [123, 127, "operator"], [123, 128, "operandr"], [128, 129, "name"], [116, 130, "statements"], [103, 131, "cases"], [131, 132, "case"], [131, 133, "statements"], [133, 134, "expression"], [134, 135, "member"], [134, 136, "arguments"], [136, 137, "member"], [134, 138, "arguments"], [138, 139, "member"], [134, 140, "arguments"], [140, 141, "member"], [134, 142, "arguments"], [142, 143, "member"], [131, 144, "statements"], [103, 145, "cases"], [145, 146, "case"], [145, 147, "statements"], [147, 148, "condition"], [148, 149, "operandl"], [149, 150, "member"], [148, 151, "operator"], [148, 152, "operandr"], [152, 153, "value"], [147, 154, "then_statement"], [154, 155, "statements"], [155, 156, "condition"], [156, 157, "member"], [155, 158, "then_statement"], [158, 159, "statements"], [159, 160, "expression"], [160, 161, "expressionl"], [161, 162, "member"], [160, 163, "type"], [160, 164, "value"], [164, 165, "value"], [147, 166, "else_statement"], [166, 167, "statements"], [167, 168, "type"], [168, 169, "name"], [167, 170, "declarators"], [170, 171, "name"], [170, 172, "initializer"], [172, 173, "qualifier"], [172, 174, "member"], [172, 175, "arguments"], [175, 176, "member"], [166, 177, "statements"], [177, 178, "condition"], [178, 179, "operandl"], [179, 180, "member"], [178, 181, "operator"], [178, 182, "operandr"], [182, 183, "operandl"], [183, 184, "operandl"], [184, 185, "operandl"], [185, 186, "operandl"], [186, 187, "member"], [185, 188, "operator"], [185, 189, "operandr"], [189, 190, "value"], [184, 191, "operator"], [184, 192, "operandr"], [192, 193, "operandl"], [193, 194, "operandl"], [194, 195, "member"], [193, 196, "operator"], [193, 197, "operandr"], [197, 198, "value"], [192, 199, "operator"], [192, 200, "operandr"], [200, 201, "operandl"], [201, 202, "member"], [200, 203, "operator"], [200, 204, "operandr"], [204, 205, "value"], [183, 206, "operator"], [183, 207, "operandr"], [207, 208, "operandl"], [208, 209, "operandl"], [209, 210, "member"], [208, 211, "operator"], [208, 212, "operandr"], [212, 213, "value"], [207, 214, "operator"], [207, 215, "operandr"], [215, 216, "operandl"], [216, 217, "member"], [215, 218, "operator"], [215, 219, "operandr"], [219, 220, "value"], [182, 221, "operator"], [182, 222, "operandr"], [222, 223, "operandl"], [223, 224, "member"], [222, 225, "operator"], [222, 226, "operandr"], [226, 227, "value"], [177, 228, "then_statement"], [228, 229, "statements"], [229, 230, "expression"], [230, 231, "expressionl"], [231, 232, "member"], [230, 233, "type"], [230, 234, "value"], [234, 235, "value"], [177, 236, "else_statement"], [236, 237, "condition"], [237, 238, "operandl"], [238, 239, "member"], [237, 240, "operator"], [237, 241, "operandr"], [241, 242, "member"], [236, 243, "then_statement"], [243, 244, "statements"], [244, 245, "expression"], [245, 246, "expressionl"], [246, 247, "member"], [245, 248, "type"], [245, 249, "value"], [249, 250, "value"], [236, 251, "else_statement"], [251, 252, "statements"], [252, 253, "condition"], [253, 254, "operandl"], [254, 255, "member"], [253, 256, "operator"], [253, 257, "operandr"], [257, 258, "member"], [252, 259, "body"], [259, 260, "statements"], [260, 261, "expression"], [261, 262, "expressionl"], [262, 263, "member"], [261, 264, "type"], [261, 265, "value"], [265, 266, "qualifier"], [265, 267, "member"], [265, 268, "arguments"], [268, 269, "member"], [259, 270, "statements"], [270, 271, "condition"], [271, 272, "operandl"], [272, 273, "operandl"], [273, 274, "operandl"], [274, 275, "operandl"], [275, 276, "member"], [274, 277, "operator"], [274, 278, "operandr"], [278, 279, "member"], [273, 280, "operator"], [273, 281, "operandr"], [281, 282, "operandl"], [282, 283, "member"], [281, 284, "operator"], [281, 285, "operandr"], [285, 286, "member"], [272, 287, "operator"], [272, 288, "operandr"], [288, 289, "operandl"], [289, 290, "member"], [288, 291, "operator"], [288, 292, "operandr"], [292, 293, "member"], [271, 294, "operator"], [271, 295, "operandr"], [295, 296, "operandl"], [296, 297, "member"], [295, 298, "operator"], [295, 299, "operandr"], [299, 300, "member"], [270, 301, "then_statement"], [301, 302, "statements"], [302, 303, "expression"], [303, 304, "expressionl"], [304, 305, "member"], [303, 306, "type"], [303, 307, "value"], [307, 308, "value"], [301, 309, "statements"], [259, 310, "statements"], [310, 311, "expression"], [311, 312, "member"], [311, 313, "postfix_operators"], [251, 314, "statements"], [314, 315, "condition"], [315, 316, "prefix_operators"], [315, 317, "member"], [314, 318, "then_statement"], [318, 319, "statements"], [319, 320, "expression"], [320, 321, "expressionl"], [321, 322, "member"], [320, 323, "type"], [320, 324, "value"], [324, 325, "operandl"], [325, 326, "member"], [324, 327, "operator"], [324, 328, "operandr"], [328, 329, "value"], [318, 330, "statements"], [330, 331, "expression"], [331, 332, "expressionl"], [332, 333, "member"], [331, 334, "type"], [331, 335, "value"], [335, 336, "qualifier"], [335, 337, "member"], [335, 338, "arguments"], [338, 339, "member"], [318, 340, "statements"], [340, 341, "condition"], [341, 342, "operandl"], [342, 343, "member"], [341, 344, "operator"], [341, 345, "operandr"], [345, 346, "member"], [340, 347, "then_statement"], [347, 348, "statements"], [348, 349, "expression"], [349, 350, "expressionl"], [350, 351, "member"], [349, 352, "type"], [349, 353, "value"], [353, 354, "value"], [145, 355, "statements"], [355, 356, "condition"], [356, 357, "prefix_operators"], [356, 358, "member"], [355, 359, "then_statement"], [359, 360, "statements"], [360, 361, "expression"], [361, 362, "qualifier"], [361, 363, "member"], [361, 364, "arguments"], [364, 365, "member"], [361, 366, "arguments"], [366, 367, "member"], [361, 368, "arguments"], [368, 369, "member"], [359, 370, "statements"], [145, 371, "statements"], [103, 372, "cases"], [372, 373, "statements"], [373, 374, "expression"], [374, 375, "type"], [375, 376, "name"], [374, 377, "arguments"], [377, 378, "operandl"], [378, 379, "value"], [377, 380, "operator"], [377, 381, "operandr"], [381, 382, "member"], [0, 383, "body"], [383, 384, "condition"], [384, 385, "prefix_operators"], [384, 386, "member"], [383, 387, "then_statement"], [387, 388, "statements"], [388, 389, "expression"], [389, 390, "qualifier"], [389, 391, "member"], [389, 392, "arguments"], [392, 393, "member"], [389, 394, "arguments"], [394, 395, "member"], [389, 396, "arguments"], [396, 397, "member"], [387, 398, "statements"], [0, 399, "body"], [399, 400, "expression"], [400, 401, "qualifier"], [400, 402, "member"], [400, 403, "arguments"], [403, 404, "member"], [0, 405, "body"], [405, 406, "condition"], [406, 407, "operandl"], [407, 408, "member"], [406, 409, "operator"], [406, 410, "operandr"], [410, 411, "member"], [405, 412, "body"], [412, 413, "statements"], [413, 414, "modifiers"], [413, 415, "type"], [415, 416, "name"], [413, 417, "declarators"], [417, 418, "name"], [417, 419, "initializer"], [419, 420, "qualifier"], [419, 421, "member"], [419, 422, "arguments"], [422, 423, "member"], [412, 424, "statements"], [424, 425, "condition"], [425, 426, "operandl"], [426, 427, "member"], [425, 428, "operator"], [425, 429, "operandr"], [429, 430, "member"], [424, 431, "then_statement"], [431, 432, "statements"], [432, 433, "expression"], [433, 434, "qualifier"], [433, 435, "member"], [433, 436, "arguments"], [436, 437, "member"], [433, 438, "arguments"], [438, 439, "member"], [433, 440, "arguments"], [440, 441, "operandl"], [441, 442, "member"], [440, 443, "operator"], [440, 444, "operandr"], [444, 445, "value"], [431, 446, "statements"], [446, 447, "expression"], [447, 448, "expressionl"], [448, 449, "member"], [447, 450, "type"], [447, 451, "value"], [451, 452, "member"], [412, 453, "statements"], [453, 454, "expression"], [454, 455, "member"], [454, 456, "postfix_operators"], [0, 457, "body"], [457, 458, "expression"], [458, 459, "qualifier"], [458, 460, "member"], [458, 461, "arguments"], [461, 462, "member"], [458, 463, "arguments"], [463, 464, "member"], [458, 465, "arguments"], [465, 466, "member"], [0, 467, "body"], [467, 468, "expression"], [468, 469, "qualifier"], [468, 470, "member"], [468, 471, "arguments"], [471, 472, "member"]], "rem_roots": [178], "add_roots": []}, {"id": 64, "mappings": {"ALL": "VAR_1", "ALL_NON_NULL": "VAR_2", "NON_NUMERIC": "VAR_3", "COMMENT": "VAR_4", "out": "VAR_5", "quote": "VAR_6", "len": "VAR_7", "pos": "VAR_8", "end": "VAR_9", "delimChar": "VAR_10", "NONE": "VAR_11", "value": "VAR_12", "SP": "VAR_13", "quoteChar": "VAR_14", "c": "VAR_15", "offset": "VAR_16", "start": "VAR_17", "CR": "VAR_18", "quoteModePolicy": "VAR_19", "LF": "VAR_20", "newRecord": "VAR_21", "MINIMAL": "VAR_22", "object": "VAR_23", "IllegalStateException": "TYPE_1", "Appendable": "TYPE_2", "Number": "TYPE_3", "QuoteMode": "TYPE_4", "CharSequence": "TYPE_5", "IOException": "TYPE_6", "Object": "TYPE_7", "printAndQuote": "METHOD_1", "getQuoteMode": "METHOD_2", "printAndEscape": "METHOD_3", "charValue": "METHOD_4", "getQuoteCharacter": "METHOD_5", "getDelimiter": "METHOD_6", "charAt": "METHOD_7", "append": "METHOD_8", "0x2D": "INT_1", "0x2B": "INT_2", "0x21": "INT_3", "0x20": "INT_4", "0x23": "INT_5", "0x7E": "INT_6", "0": "INT_7", "1": "INT_8", "\"Unexpected Quote value: \"": "STRING_1"}, "nodes": ["MethodDeclaration", "private", "void", "printAndQuote", "FormalParameter", "ReferenceType", "Object", "object", "FormalParameter", "ReferenceType", "CharSequence", "value", "FormalParameter", "BasicType", "int", "offset", "FormalParameter", "BasicType", "int", "len", "FormalParameter", "ReferenceType", "Appendable", "out", "FormalParameter", "BasicType", "boolean", "newRecord", "IOException", "LocalVariableDeclaration", "BasicType", "boolean", "VariableDeclarator", "quote", "Literal", "false", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "start", "MemberReference", "offset", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "pos", "MemberReference", "offset", "LocalVariableDeclaration", "final", "BasicType", "int", "VariableDeclarator", "end", "BinaryOperation", "MemberReference", "offset", "+", "MemberReference", "len", "LocalVariableDeclaration", "final", "BasicType", "char", "VariableDeclarator", "delimChar", "MethodInvocation", "getDelimiter", "LocalVariableDeclaration", "final", "BasicType", "char", "VariableDeclarator", "quoteChar", "MethodInvocation", "getQuoteCharacter", "MethodInvocation", "charValue", "LocalVariableDeclaration", "ReferenceType", "QuoteMode", "VariableDeclarator", "quoteModePolicy", "MethodInvocation", "getQuoteMode", "IfStatement", "BinaryOperation", "MemberReference", "quoteModePolicy", "==", "Literal", "null", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "quoteModePolicy", "=", "MemberReference", "QuoteMode", "MINIMAL", "SwitchStatement", "MemberReference", "quoteModePolicy", "SwitchStatementCase", "ALL", "ALL_NON_NULL", "StatementExpression", "Assignment", "MemberReference", "quote", "=", "Literal", "true", "BreakStatement", "SwitchStatementCase", "NON_NUMERIC", "StatementExpression", "Assignment", "MemberReference", "quote", "=", "BinaryOperation", "!", "MemberReference", "object", "instanceof", "ReferenceType", "Number", "BreakStatement", "SwitchStatementCase", "NONE", "StatementExpression", "MethodInvocation", "printAndEscape", "MemberReference", "value", "MemberReference", "offset", "MemberReference", "len", "MemberReference", "out", "ReturnStatement", "SwitchStatementCase", "MINIMAL", "IfStatement", "BinaryOperation", "MemberReference", "len", "<=", "Literal", "0", "BlockStatement", "IfStatement", "MemberReference", "newRecord", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "quote", "=", "Literal", "true", "BlockStatement", "LocalVariableDeclaration", "BasicType", "char", "VariableDeclarator", "c", "MethodInvocation", "value", "charAt", "MemberReference", "pos", "IfStatement", "BinaryOperation", "MemberReference", "newRecord", "&&", "BinaryOperation", "BinaryOperation", "BinaryOperation", "BinaryOperation", "MemberReference", "c", "<", "Literal", "0x20", "||", "BinaryOperation", "BinaryOperation", "MemberReference", "c", ">", "Literal", "0x21", "&&", "BinaryOperation", "MemberReference", "c", "<", "Literal", "0x23", "||", "BinaryOperation", "BinaryOperation", "MemberReference", "c", ">", "Literal", "0x2B", "&&", "BinaryOperation", "MemberReference", "c", "<", "Literal", "0x2D", "||", "BinaryOperation", "MemberReference", "c", ">", "Literal", "0x7E", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "quote", "=", "Literal", "true", "IfStatement", "BinaryOperation", "MemberReference", "c", "<=", "MemberReference", "COMMENT", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "quote", "=", "Literal", "true", "BlockStatement", "WhileStatement", "BinaryOperation", "MemberReference", "pos", "<", "MemberReference", "end", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "c", "=", "MethodInvocation", "value", "charAt", "MemberReference", "pos", "IfStatement", "BinaryOperation", "BinaryOperation", "BinaryOperation", "BinaryOperation", "MemberReference", "c", "==", "MemberReference", "LF", "||", "BinaryOperation", "MemberReference", "c", "==", "MemberReference", "CR", "||", "BinaryOperation", "MemberReference", "c", "==", "MemberReference", "quoteChar", "||", "BinaryOperation", "MemberReference", "c", "==", "MemberReference", "delimChar", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "quote", "=", "Literal", "true", "BreakStatement", "StatementExpression", "MemberReference", "pos", "++", "IfStatement", "MemberReference", "!", "quote", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "pos", "=", "BinaryOperation", "MemberReference", "end", "-", "Literal", "1", "StatementExpression", "Assignment", "MemberReference", "c", "=", "MethodInvocation", "value", "charAt", "MemberReference", "pos", "IfStatement", "BinaryOperation", "MemberReference", "c", "<=", "MemberReference", "SP", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "quote", "=", "Literal", "true", "IfStatement", "MemberReference", "!", "quote", "BlockStatement", "StatementExpression", "MethodInvocation", "out", "append", "MemberReference", "value", "MemberReference", "start", "MemberReference", "end", "ReturnStatement", "BreakStatement", "SwitchStatementCase", "ThrowStatement", "ClassCreator", "ReferenceType", "IllegalStateException", "BinaryOperation", "Literal", "\"Unexpected Quote value: \"", "+", "MemberReference", "quoteModePolicy", "IfStatement", "MemberReference", "!", "quote", "BlockStatement", "StatementExpression", "MethodInvocation", "out", "append", "MemberReference", "value", "MemberReference", "start", "MemberReference", "end", "ReturnStatement", "StatementExpression", "MethodInvocation", "out", "append", "MemberReference", "quoteChar", "WhileStatement", "BinaryOperation", "MemberReference", "pos", "<", "MemberReference", "end", "BlockStatement", "LocalVariableDeclaration", "final", "BasicType", "char", "VariableDeclarator", "c", "MethodInvocation", "value", "charAt", "MemberReference", "pos", "IfStatement", "BinaryOperation", "MemberReference", "c", "==", "MemberReference", "quoteChar", "BlockStatement", "StatementExpression", "MethodInvocation", "out", "append", "MemberReference", "value", "MemberReference", "start", "BinaryOperation", "MemberReference", "pos", "+", "Literal", "1", "StatementExpression", "Assignment", "MemberReference", "start", "=", "MemberReference", "pos", "StatementExpression", "MemberReference", "pos", "++", "StatementExpression", "MethodInvocation", "out", "append", "MemberReference", "value", "MemberReference", "start", "MemberReference", "pos", "StatementExpression", "MethodInvocation", "out", "append", "MemberReference", "quoteChar"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [0, 3, "name"], [0, 4, "parameters"], [4, 5, "type"], [5, 6, "name"], [4, 7, "name"], [0, 8, "parameters"], [8, 9, "type"], [9, 10, "name"], [8, 11, "name"], [0, 12, "parameters"], [12, 13, "type"], [13, 14, "name"], [12, 15, "name"], [0, 16, "parameters"], [16, 17, "type"], [17, 18, "name"], [16, 19, "name"], [0, 20, "parameters"], [20, 21, "type"], [21, 22, "name"], [20, 23, "name"], [0, 24, "parameters"], [24, 25, "type"], [25, 26, "name"], [24, 27, "name"], [0, 28, "throws"], [0, 29, "body"], [29, 30, "type"], [30, 31, "name"], [29, 32, "declarators"], [32, 33, "name"], [32, 34, "initializer"], [34, 35, "value"], [0, 36, "body"], [36, 37, "type"], [37, 38, "name"], [36, 39, "declarators"], [39, 40, "name"], [39, 41, "initializer"], [41, 42, "member"], [0, 43, "body"], [43, 44, "type"], [44, 45, "name"], [43, 46, "declarators"], [46, 47, "name"], [46, 48, "initializer"], [48, 49, "member"], [0, 50, "body"], [50, 51, "modifiers"], [50, 52, "type"], [52, 53, "name"], [50, 54, "declarators"], [54, 55, "name"], [54, 56, "initializer"], [56, 57, "operandl"], [57, 58, "member"], [56, 59, "operator"], [56, 60, "operandr"], [60, 61, "member"], [0, 62, "body"], [62, 63, "modifiers"], [62, 64, "type"], [64, 65, "name"], [62, 66, "declarators"], [66, 67, "name"], [66, 68, "initializer"], [68, 69, "member"], [0, 70, "body"], [70, 71, "modifiers"], [70, 72, "type"], [72, 73, "name"], [70, 74, "declarators"], [74, 75, "name"], [74, 76, "initializer"], [76, 77, "member"], [76, 78, "selectors"], [78, 79, "member"], [0, 80, "body"], [80, 81, "type"], [81, 82, "name"], [80, 83, "declarators"], [83, 84, "name"], [83, 85, "initializer"], [85, 86, "member"], [0, 87, "body"], [87, 88, "condition"], [88, 89, "operandl"], [89, 90, "member"], [88, 91, "operator"], [88, 92, "operandr"], [92, 93, "value"], [87, 94, "then_statement"], [94, 95, "statements"], [95, 96, "expression"], [96, 97, "expressionl"], [97, 98, "member"], [96, 99, "type"], [96, 100, "value"], [100, 101, "qualifier"], [100, 102, "member"], [0, 103, "body"], [103, 104, "expression"], [104, 105, "member"], [103, 106, "cases"], [106, 107, "case"], [106, 108, "case"], [106, 109, "statements"], [109, 110, "expression"], [110, 111, "expressionl"], [111, 112, "member"], [110, 113, "type"], [110, 114, "value"], [114, 115, "value"], [106, 116, "statements"], [103, 117, "cases"], [117, 118, "case"], [117, 119, "statements"], [119, 120, "expression"], [120, 121, "expressionl"], [121, 122, "member"], [120, 123, "type"], [120, 124, "value"], [124, 125, "prefix_operators"], [124, 126, "operandl"], [126, 127, "member"], [124, 128, "operator"], [124, 129, "operandr"], [129, 130, "name"], [117, 131, "statements"], [103, 132, "cases"], [132, 133, "case"], [132, 134, "statements"], [134, 135, "expression"], [135, 136, "member"], [135, 137, "arguments"], [137, 138, "member"], [135, 139, "arguments"], [139, 140, "member"], [135, 141, "arguments"], [141, 142, "member"], [135, 143, "arguments"], [143, 144, "member"], [132, 145, "statements"], [103, 146, "cases"], [146, 147, "case"], [146, 148, "statements"], [148, 149, "condition"], [149, 150, "operandl"], [150, 151, "member"], [149, 152, "operator"], [149, 153, "operandr"], [153, 154, "value"], [148, 155, "then_statement"], [155, 156, "statements"], [156, 157, "condition"], [157, 158, "member"], [156, 159, "then_statement"], [159, 160, "statements"], [160, 161, "expression"], [161, 162, "expressionl"], [162, 163, "member"], [161, 164, "type"], [161, 165, "value"], [165, 166, "value"], [148, 167, "else_statement"], [167, 168, "statements"], [168, 169, "type"], [169, 170, "name"], [168, 171, "declarators"], [171, 172, "name"], [171, 173, "initializer"], [173, 174, "qualifier"], [173, 175, "member"], [173, 176, "arguments"], [176, 177, "member"], [167, 178, "statements"], [178, 179, "condition"], [179, 180, "operandl"], [180, 181, "member"], [179, 182, "operator"], [179, 183, "operandr"], [183, 184, "operandl"], [184, 185, "operandl"], [185, 186, "operandl"], [186, 187, "operandl"], [187, 188, "member"], [186, 189, "operator"], [186, 190, "operandr"], [190, 191, "value"], [185, 192, "operator"], [185, 193, "operandr"], [193, 194, "operandl"], [194, 195, "operandl"], [195, 196, "member"], [194, 197, "operator"], [194, 198, "operandr"], [198, 199, "value"], [193, 200, "operator"], [193, 201, "operandr"], [201, 202, "operandl"], [202, 203, "member"], [201, 204, "operator"], [201, 205, "operandr"], [205, 206, "value"], [184, 207, "operator"], [184, 208, "operandr"], [208, 209, "operandl"], [209, 210, "operandl"], [210, 211, "member"], [209, 212, "operator"], [209, 213, "operandr"], [213, 214, "value"], [208, 215, "operator"], [208, 216, "operandr"], [216, 217, "operandl"], [217, 218, "member"], [216, 219, "operator"], [216, 220, "operandr"], [220, 221, "value"], [183, 222, "operator"], [183, 223, "operandr"], [223, 224, "operandl"], [224, 225, "member"], [223, 226, "operator"], [223, 227, "operandr"], [227, 228, "value"], [178, 229, "then_statement"], [229, 230, "statements"], [230, 231, "expression"], [231, 232, "expressionl"], [232, 233, "member"], [231, 234, "type"], [231, 235, "value"], [235, 236, "value"], [178, 237, "else_statement"], [237, 238, "condition"], [238, 239, "operandl"], [239, 240, "member"], [238, 241, "operator"], [238, 242, "operandr"], [242, 243, "member"], [237, 244, "then_statement"], [244, 245, "statements"], [245, 246, "expression"], [246, 247, "expressionl"], [247, 248, "member"], [246, 249, "type"], [246, 250, "value"], [250, 251, "value"], [237, 252, "else_statement"], [252, 253, "statements"], [253, 254, "condition"], [254, 255, "operandl"], [255, 256, "member"], [254, 257, "operator"], [254, 258, "operandr"], [258, 259, "member"], [253, 260, "body"], [260, 261, "statements"], [261, 262, "expression"], [262, 263, "expressionl"], [263, 264, "member"], [262, 265, "type"], [262, 266, "value"], [266, 267, "qualifier"], [266, 268, "member"], [266, 269, "arguments"], [269, 270, "member"], [260, 271, "statements"], [271, 272, "condition"], [272, 273, "operandl"], [273, 274, "operandl"], [274, 275, "operandl"], [275, 276, "operandl"], [276, 277, "member"], [275, 278, "operator"], [275, 279, "operandr"], [279, 280, "member"], [274, 281, "operator"], [274, 282, "operandr"], [282, 283, "operandl"], [283, 284, "member"], [282, 285, "operator"], [282, 286, "operandr"], [286, 287, "member"], [273, 288, "operator"], [273, 289, "operandr"], [289, 290, "operandl"], [290, 291, "member"], [289, 292, "operator"], [289, 293, "operandr"], [293, 294, "member"], [272, 295, "operator"], [272, 296, "operandr"], [296, 297, "operandl"], [297, 298, "member"], [296, 299, "operator"], [296, 300, "operandr"], [300, 301, "member"], [271, 302, "then_statement"], [302, 303, "statements"], [303, 304, "expression"], [304, 305, "expressionl"], [305, 306, "member"], [304, 307, "type"], [304, 308, "value"], [308, 309, "value"], [302, 310, "statements"], [260, 311, "statements"], [311, 312, "expression"], [312, 313, "member"], [312, 314, "postfix_operators"], [252, 315, "statements"], [315, 316, "condition"], [316, 317, "prefix_operators"], [316, 318, "member"], [315, 319, "then_statement"], [319, 320, "statements"], [320, 321, "expression"], [321, 322, "expressionl"], [322, 323, "member"], [321, 324, "type"], [321, 325, "value"], [325, 326, "operandl"], [326, 327, "member"], [325, 328, "operator"], [325, 329, "operandr"], [329, 330, "value"], [319, 331, "statements"], [331, 332, "expression"], [332, 333, "expressionl"], [333, 334, "member"], [332, 335, "type"], [332, 336, "value"], [336, 337, "qualifier"], [336, 338, "member"], [336, 339, "arguments"], [339, 340, "member"], [319, 341, "statements"], [341, 342, "condition"], [342, 343, "operandl"], [343, 344, "member"], [342, 345, "operator"], [342, 346, "operandr"], [346, 347, "member"], [341, 348, "then_statement"], [348, 349, "statements"], [349, 350, "expression"], [350, 351, "expressionl"], [351, 352, "member"], [350, 353, "type"], [350, 354, "value"], [354, 355, "value"], [146, 356, "statements"], [356, 357, "condition"], [357, 358, "prefix_operators"], [357, 359, "member"], [356, 360, "then_statement"], [360, 361, "statements"], [361, 362, "expression"], [362, 363, "qualifier"], [362, 364, "member"], [362, 365, "arguments"], [365, 366, "member"], [362, 367, "arguments"], [367, 368, "member"], [362, 369, "arguments"], [369, 370, "member"], [360, 371, "statements"], [146, 372, "statements"], [103, 373, "cases"], [373, 374, "statements"], [374, 375, "expression"], [375, 376, "type"], [376, 377, "name"], [375, 378, "arguments"], [378, 379, "operandl"], [379, 380, "value"], [378, 381, "operator"], [378, 382, "operandr"], [382, 383, "member"], [0, 384, "body"], [384, 385, "condition"], [385, 386, "prefix_operators"], [385, 387, "member"], [384, 388, "then_statement"], [388, 389, "statements"], [389, 390, "expression"], [390, 391, "qualifier"], [390, 392, "member"], [390, 393, "arguments"], [393, 394, "member"], [390, 395, "arguments"], [395, 396, "member"], [390, 397, "arguments"], [397, 398, "member"], [388, 399, "statements"], [0, 400, "body"], [400, 401, "expression"], [401, 402, "qualifier"], [401, 403, "member"], [401, 404, "arguments"], [404, 405, "member"], [0, 406, "body"], [406, 407, "condition"], [407, 408, "operandl"], [408, 409, "member"], [407, 410, "operator"], [407, 411, "operandr"], [411, 412, "member"], [406, 413, "body"], [413, 414, "statements"], [414, 415, "modifiers"], [414, 416, "type"], [416, 417, "name"], [414, 418, "declarators"], [418, 419, "name"], [418, 420, "initializer"], [420, 421, "qualifier"], [420, 422, "member"], [420, 423, "arguments"], [423, 424, "member"], [413, 425, "statements"], [425, 426, "condition"], [426, 427, "operandl"], [427, 428, "member"], [426, 429, "operator"], [426, 430, "operandr"], [430, 431, "member"], [425, 432, "then_statement"], [432, 433, "statements"], [433, 434, "expression"], [434, 435, "qualifier"], [434, 436, "member"], [434, 437, "arguments"], [437, 438, "member"], [434, 439, "arguments"], [439, 440, "member"], [434, 441, "arguments"], [441, 442, "operandl"], [442, 443, "member"], [441, 444, "operator"], [441, 445, "operandr"], [445, 446, "value"], [432, 447, "statements"], [447, 448, "expression"], [448, 449, "expressionl"], [449, 450, "member"], [448, 451, "type"], [448, 452, "value"], [452, 453, "member"], [413, 454, "statements"], [454, 455, "expression"], [455, 456, "member"], [455, 457, "postfix_operators"], [0, 458, "body"], [458, 459, "expression"], [459, 460, "qualifier"], [459, 461, "member"], [459, 462, "arguments"], [462, 463, "member"], [459, 464, "arguments"], [464, 465, "member"], [459, 466, "arguments"], [466, 467, "member"], [0, 468, "body"], [468, 469, "expression"], [469, 470, "qualifier"], [469, 471, "member"], [469, 472, "arguments"], [472, 473, "member"]], "rem_roots": [178], "add_roots": []}, {"id": 65, "mappings": {"headerMap": "VAR_1", "Integer": "TYPE_1", "String": "TYPE_2", "Map": "TYPE_3", "LinkedHashMap": "TYPE_4", "getHeaderMap": "METHOD_1"}, "nodes": ["MethodDeclaration", "public", "ReferenceType", "Map", "TypeArgument", "ReferenceType", "String", "TypeArgument", "ReferenceType", "Integer", "getHeaderMap", "ReturnStatement", "ClassCreator", "ReferenceType", "LinkedHashMap", "TypeArgument", "ReferenceType", "String", "TypeArgument", "ReferenceType", "Integer", "This", "MemberReference", "headerMap"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [2, 4, "arguments"], [4, 5, "type"], [5, 6, "name"], [2, 7, "arguments"], [7, 8, "type"], [8, 9, "name"], [0, 10, "name"], [0, 11, "body"], [11, 12, "expression"], [12, 13, "type"], [13, 14, "name"], [13, 15, "arguments"], [15, 16, "type"], [16, 17, "name"], [13, 18, "arguments"], [18, 19, "type"], [19, 20, "name"], [12, 21, "arguments"], [21, 22, "selectors"], [22, 23, "member"]], "rem_roots": [11], "add_roots": []}, {"id": 66, "mappings": {"format": "VAR_1", "recordSeparator": "VAR_2", "newRecord": "VAR_3", "out": "VAR_4", "IOException": "TYPE_1", "String": "TYPE_2", "println": "METHOD_1", "getRecordSeparator": "METHOD_2", "append": "METHOD_3"}, "nodes": ["MethodDeclaration", "public", "void", "println", "IOException", "LocalVariableDeclaration", "final", "ReferenceType", "String", "VariableDeclarator", "recordSeparator", "MethodInvocation", "format", "getRecordSeparator", "StatementExpression", "MethodInvocation", "out", "append", "MemberReference", "recordSeparator", "StatementExpression", "Assignment", "MemberReference", "newRecord", "=", "Literal", "true"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [0, 3, "name"], [0, 4, "throws"], [0, 5, "body"], [5, 6, "modifiers"], [5, 7, "type"], [7, 8, "name"], [5, 9, "declarators"], [9, 10, "name"], [9, 11, "initializer"], [11, 12, "qualifier"], [11, 13, "member"], [0, 14, "body"], [14, 15, "expression"], [15, 16, "qualifier"], [15, 17, "member"], [15, 18, "arguments"], [18, 19, "member"], [0, 20, "body"], [20, 21, "expression"], [21, 22, "expressionl"], [22, 23, "member"], [21, 24, "type"], [21, 25, "value"], [25, 26, "value"]], "rem_roots": [14], "add_roots": []}, {"id": 67, "mappings": {"col": "VAR_1", "mapping": "VAR_2", "values": "VAR_3", "entry": "VAR_4", "map": "VAR_5", "String": "TYPE_1", "M": "TYPE_2", "Integer": "TYPE_3", "Entry": "TYPE_4", "Map": "TYPE_5", "getKey": "METHOD_1", "entrySet": "METHOD_2", "intValue": "METHOD_3", "put": "METHOD_4", "getValue": "METHOD_5", "putIn": "METHOD_6"}, "nodes": ["MethodDeclaration", "TypeParameter", "M", "ReferenceType", "Map", "TypeArgument", "ReferenceType", "String", "TypeArgument", "ReferenceType", "String", "ReferenceType", "M", "putIn", "FormalParameter", "ReferenceType", "M", "map", "ForStatement", "EnhancedForControl", "VariableDeclaration", "final", "ReferenceType", "Entry", "TypeArgument", "ReferenceType", "String", "TypeArgument", "ReferenceType", "Integer", "VariableDeclarator", "entry", "MethodInvocation", "mapping", "entrySet", "BlockStatement", "LocalVariableDeclaration", "final", "BasicType", "int", "VariableDeclarator", "col", "MethodInvocation", "entry", "getValue", "MethodInvocation", "intValue", "StatementExpression", "MethodInvocation", "map", "put", "MethodInvocation", "entry", "getKey", "MemberReference", "values", "ArraySelector", "MemberReference", "col", "ReturnStatement", "MemberReference", "map"], "edges": [[0, 1, "type_parameters"], [1, 2, "name"], [1, 3, "extends"], [3, 4, "name"], [3, 5, "arguments"], [5, 6, "type"], [6, 7, "name"], [3, 8, "arguments"], [8, 9, "type"], [9, 10, "name"], [0, 11, "return_type"], [11, 12, "name"], [0, 13, "name"], [0, 14, "parameters"], [14, 15, "type"], [15, 16, "name"], [14, 17, "name"], [0, 18, "body"], [18, 19, "control"], [19, 20, "var"], [20, 21, "modifiers"], [20, 22, "type"], [22, 23, "name"], [22, 24, "arguments"], [24, 25, "type"], [25, 26, "name"], [22, 27, "arguments"], [27, 28, "type"], [28, 29, "name"], [20, 30, "declarators"], [30, 31, "name"], [19, 32, "iterable"], [32, 33, "qualifier"], [32, 34, "member"], [18, 35, "body"], [35, 36, "statements"], [36, 37, "modifiers"], [36, 38, "type"], [38, 39, "name"], [36, 40, "declarators"], [40, 41, "name"], [40, 42, "initializer"], [42, 43, "qualifier"], [42, 44, "member"], [42, 45, "selectors"], [45, 46, "member"], [35, 47, "statements"], [47, 48, "expression"], [48, 49, "qualifier"], [48, 50, "member"], [48, 51, "arguments"], [51, 52, "qualifier"], [51, 53, "member"], [48, 54, "arguments"], [54, 55, "member"], [54, 56, "selectors"], [56, 57, "index"], [57, 58, "member"], [0, 59, "body"], [59, 60, "expression"], [60, 61, "member"]], "rem_roots": [47], "add_roots": []}, {"id": 68, "mappings": {"annotation": "VAR_1", "typeAdapterClass": "VAR_2", "typeAdapterFactory": "VAR_3", "constructorConstructor": "VAR_4", "typeAdapter": "VAR_5", "gson": "VAR_6", "value": "VAR_7", "fieldType": "VAR_8", "TypeAdapterFactory": "TYPE_1", "Gson": "TYPE_2", "JsonAdapter": "TYPE_3", "ConstructorConstructor": "TYPE_4", "TypeToken": "TYPE_5", "TypeAdapter": "TYPE_6", "Class": "TYPE_7", "IllegalArgumentException": "TYPE_8", "getTypeAdapter": "METHOD_1", "nullSafe": "METHOD_2", "construct": "METHOD_3", "isAssignableFrom": "METHOD_4", "get": "METHOD_5", "create": "METHOD_6"}, "nodes": ["MethodDeclaration", "static", "ReferenceType", "TypeAdapter", "TypeArgument", "?", "getTypeAdapter", "FormalParameter", "ReferenceType", "ConstructorConstructor", "constructorConstructor", "FormalParameter", "ReferenceType", "Gson", "gson", "FormalParameter", "ReferenceType", "TypeToken", "TypeArgument", "?", "fieldType", "FormalParameter", "ReferenceType", "JsonAdapter", "annotation", "LocalVariableDeclaration", "ReferenceType", "Class", "TypeArgument", "?", "VariableDeclarator", "value", "MethodInvocation", "annotation", "value", "LocalVariableDeclaration", "ReferenceType", "TypeAdapter", "TypeArgument", "?", "VariableDeclarator", "typeAdapter", "IfStatement", "ClassReference", "ReferenceType", "TypeAdapter", "MethodInvocation", "isAssignableFrom", "MemberReference", "value", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "Class", "TypeArgument", "ReferenceType", "TypeAdapter", "TypeArgument", "?", "VariableDeclarator", "typeAdapterClass", "Cast", "ReferenceType", "Class", "TypeArgument", "ReferenceType", "TypeAdapter", "TypeArgument", "?", "MemberReference", "value", "StatementExpression", "Assignment", "MemberReference", "typeAdapter", "=", "MethodInvocation", "constructorConstructor", "get", "MethodInvocation", "TypeToken", "get", "MemberReference", "typeAdapterClass", "MethodInvocation", "construct", "IfStatement", "ClassReference", "ReferenceType", "TypeAdapterFactory", "MethodInvocation", "isAssignableFrom", "MemberReference", "value", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "Class", "TypeArgument", "ReferenceType", "TypeAdapterFactory", "VariableDeclarator", "typeAdapterFactory", "Cast", "ReferenceType", "Class", "TypeArgument", "ReferenceType", "TypeAdapterFactory", "MemberReference", "value", "StatementExpression", "Assignment", "MemberReference", "typeAdapter", "=", "MethodInvocation", "constructorConstructor", "get", "MethodInvocation", "TypeToken", "get", "MemberReference", "typeAdapterFactory", "MethodInvocation", "construct", "MethodInvocation", "create", "MemberReference", "gson", "MemberReference", "fieldType", "BlockStatement", "ThrowStatement", "ClassCreator", "ReferenceType", "IllegalArgumentException", "Literal", "\"@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference.\"", "StatementExpression", "Assignment", "MemberReference", "typeAdapter", "=", "MethodInvocation", "typeAdapter", "nullSafe", "ReturnStatement", "MemberReference", "typeAdapter"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [2, 4, "arguments"], [4, 5, "pattern_type"], [0, 6, "name"], [0, 7, "parameters"], [7, 8, "type"], [8, 9, "name"], [7, 10, "name"], [0, 11, "parameters"], [11, 12, "type"], [12, 13, "name"], [11, 14, "name"], [0, 15, "parameters"], [15, 16, "type"], [16, 17, "name"], [16, 18, "arguments"], [18, 19, "pattern_type"], [15, 20, "name"], [0, 21, "parameters"], [21, 22, "type"], [22, 23, "name"], [21, 24, "name"], [0, 25, "body"], [25, 26, "type"], [26, 27, "name"], [26, 28, "arguments"], [28, 29, "pattern_type"], [25, 30, "declarators"], [30, 31, "name"], [30, 32, "initializer"], [32, 33, "qualifier"], [32, 34, "member"], [0, 35, "body"], [35, 36, "type"], [36, 37, "name"], [36, 38, "arguments"], [38, 39, "pattern_type"], [35, 40, "declarators"], [40, 41, "name"], [0, 42, "body"], [42, 43, "condition"], [43, 44, "type"], [44, 45, "name"], [43, 46, "selectors"], [46, 47, "member"], [46, 48, "arguments"], [48, 49, "member"], [42, 50, "then_statement"], [50, 51, "statements"], [51, 52, "type"], [52, 53, "name"], [52, 54, "arguments"], [54, 55, "type"], [55, 56, "name"], [55, 57, "arguments"], [57, 58, "pattern_type"], [51, 59, "declarators"], [59, 60, "name"], [59, 61, "initializer"], [61, 62, "type"], [62, 63, "name"], [62, 64, "arguments"], [64, 65, "type"], [65, 66, "name"], [65, 67, "arguments"], [67, 68, "pattern_type"], [61, 69, "expression"], [69, 70, "member"], [50, 71, "statements"], [71, 72, "expression"], [72, 73, "expressionl"], [73, 74, "member"], [72, 75, "type"], [72, 76, "value"], [76, 77, "qualifier"], [76, 78, "member"], [76, 79, "arguments"], [79, 80, "qualifier"], [79, 81, "member"], [79, 82, "arguments"], [82, 83, "member"], [76, 84, "selectors"], [84, 85, "member"], [42, 86, "else_statement"], [86, 87, "condition"], [87, 88, "type"], [88, 89, "name"], [87, 90, "selectors"], [90, 91, "member"], [90, 92, "arguments"], [92, 93, "member"], [86, 94, "then_statement"], [94, 95, "statements"], [95, 96, "type"], [96, 97, "name"], [96, 98, "arguments"], [98, 99, "type"], [99, 100, "name"], [95, 101, "declarators"], [101, 102, "name"], [101, 103, "initializer"], [103, 104, "type"], [104, 105, "name"], [104, 106, "arguments"], [106, 107, "type"], [107, 108, "name"], [103, 109, "expression"], [109, 110, "member"], [94, 111, "statements"], [111, 112, "expression"], [112, 113, "expressionl"], [113, 114, "member"], [112, 115, "type"], [112, 116, "value"], [116, 117, "qualifier"], [116, 118, "member"], [116, 119, "arguments"], [119, 120, "qualifier"], [119, 121, "member"], [119, 122, "arguments"], [122, 123, "member"], [116, 124, "selectors"], [124, 125, "member"], [116, 126, "selectors"], [126, 127, "member"], [126, 128, "arguments"], [128, 129, "member"], [126, 130, "arguments"], [130, 131, "member"], [86, 132, "else_statement"], [132, 133, "statements"], [133, 134, "expression"], [134, 135, "type"], [135, 136, "name"], [134, 137, "arguments"], [137, 138, "value"], [0, 139, "body"], [139, 140, "expression"], [140, 141, "expressionl"], [141, 142, "member"], [140, 143, "type"], [140, 144, "value"], [144, 145, "qualifier"], [144, 146, "member"], [0, 147, "body"], [147, 148, "expression"], [148, 149, "member"]], "rem_roots": [139], "add_roots": []}, {"id": 69, "mappings": {"codes": "VAR_1", "HASH_MULT": "VAR_2", "startPtr": "VAR_3", "_inputPtr": "VAR_4", "outPtr": "VAR_5", "len": "VAR_6", "outBuf": "VAR_7", "CharsToNameCanonicalizer": "VAR_8", "_inputBuffer": "VAR_9", "_inputEnd": "VAR_10", "c": "VAR_11", "length": "VAR_12", "start": "VAR_13", "_textBuffer": "VAR_14", "i": "VAR_15", "tb": "VAR_16", "buf": "VAR_17", "_symbols": "VAR_18", "maxCode": "VAR_19", "hash": "VAR_20", "String": "TYPE_1", "TextBuffer": "TYPE_2", "Character": "TYPE_3", "IOException": "TYPE_4", "getCurrentSegment": "METHOD_1", "resetWithShared": "METHOD_2", "getTextOffset": "METHOD_3", "isJavaIdentifierPart": "METHOD_4", "setCurrentLength": "METHOD_5", "_loadMore": "METHOD_6", "_handleOddName2": "METHOD_7", "finishCurrentSegment": "METHOD_8", "getTextBuffer": "METHOD_9", "getCurrentSegmentSize": "METHOD_10", "findSymbol": "METHOD_11", "size": "METHOD_12", "0": "INT_1"}, "nodes": ["MethodDeclaration", "private", "ReferenceType", "String", "_handleOddName2", "FormalParameter", "BasicType", "int", "startPtr", "FormalParameter", "BasicType", "int", "hash", "FormalParameter", "BasicType", "int", "None", "codes", "IOException", "StatementExpression", "MethodInvocation", "_textBuffer", "resetWithShared", "MemberReference", "_inputBuffer", "MemberReference", "startPtr", "BinaryOperation", "MemberReference", "_inputPtr", "-", "MemberReference", "startPtr", "LocalVariableDeclaration", "BasicType", "char", "None", "VariableDeclarator", "outBuf", "MethodInvocation", "_textBuffer", "getCurrentSegment", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "outPtr", "MethodInvocation", "_textBuffer", "getCurrentSegmentSize", "LocalVariableDeclaration", "final", "BasicType", "int", "VariableDeclarator", "maxCode", "MemberReference", "codes", "length", "WhileStatement", "Literal", "true", "BlockStatement", "IfStatement", "BinaryOperation", "MemberReference", "_inputPtr", ">=", "MemberReference", "_inputEnd", "BlockStatement", "IfStatement", "MethodInvocation", "!", "_loadMore", "BlockStatement", "BreakStatement", "LocalVariableDeclaration", "BasicType", "char", "VariableDeclarator", "c", "MemberReference", "_inputBuffer", "ArraySelector", "MemberReference", "_inputPtr", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "i", "Cast", "BasicType", "int", "MemberReference", "c", "IfStatement", "BinaryOperation", "MemberReference", "i", "<=", "MemberReference", "maxCode", "BlockStatement", "IfStatement", "BinaryOperation", "MemberReference", "codes", "ArraySelector", "MemberReference", "i", "!=", "Literal", "0", "BlockStatement", "BreakStatement", "IfStatement", "MethodInvocation", "!", "Character", "isJavaIdentifierPart", "MemberReference", "c", "BlockStatement", "BreakStatement", "StatementExpression", "MemberReference", "++", "_inputPtr", "StatementExpression", "Assignment", "MemberReference", "hash", "=", "BinaryOperation", "BinaryOperation", "MemberReference", "hash", "*", "MemberReference", "CharsToNameCanonicalizer", "HASH_MULT", "+", "MemberReference", "i", "StatementExpression", "Assignment", "MemberReference", "outBuf", "ArraySelector", "MemberReference", "outPtr", "++", "=", "MemberReference", "c", "IfStatement", "BinaryOperation", "MemberReference", "outPtr", ">=", "MemberReference", "outBuf", "length", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "outBuf", "=", "MethodInvocation", "_textBuffer", "finishCurrentSegment", "StatementExpression", "Assignment", "MemberReference", "outPtr", "=", "Literal", "0", "StatementExpression", "MethodInvocation", "_textBuffer", "setCurrentLength", "MemberReference", "outPtr", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "TextBuffer", "VariableDeclarator", "tb", "MemberReference", "_textBuffer", "LocalVariableDeclaration", "BasicType", "char", "None", "VariableDeclarator", "buf", "MethodInvocation", "tb", "getTextBuffer", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "start", "MethodInvocation", "tb", "getTextOffset", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "len", "MethodInvocation", "tb", "size", "ReturnStatement", "MethodInvocation", "_symbols", "findSymbol", "MemberReference", "buf", "MemberReference", "start", "MemberReference", "len", "MemberReference", "hash"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [5, 8, "name"], [0, 9, "parameters"], [9, 10, "type"], [10, 11, "name"], [9, 12, "name"], [0, 13, "parameters"], [13, 14, "type"], [14, 15, "name"], [14, 16, "dimensions"], [13, 17, "name"], [0, 18, "throws"], [0, 19, "body"], [19, 20, "expression"], [20, 21, "qualifier"], [20, 22, "member"], [20, 23, "arguments"], [23, 24, "member"], [20, 25, "arguments"], [25, 26, "member"], [20, 27, "arguments"], [27, 28, "operandl"], [28, 29, "member"], [27, 30, "operator"], [27, 31, "operandr"], [31, 32, "member"], [0, 33, "body"], [33, 34, "type"], [34, 35, "name"], [34, 36, "dimensions"], [33, 37, "declarators"], [37, 38, "name"], [37, 39, "initializer"], [39, 40, "qualifier"], [39, 41, "member"], [0, 42, "body"], [42, 43, "type"], [43, 44, "name"], [42, 45, "declarators"], [45, 46, "name"], [45, 47, "initializer"], [47, 48, "qualifier"], [47, 49, "member"], [0, 50, "body"], [50, 51, "modifiers"], [50, 52, "type"], [52, 53, "name"], [50, 54, "declarators"], [54, 55, "name"], [54, 56, "initializer"], [56, 57, "qualifier"], [56, 58, "member"], [0, 59, "body"], [59, 60, "condition"], [60, 61, "value"], [59, 62, "body"], [62, 63, "statements"], [63, 64, "condition"], [64, 65, "operandl"], [65, 66, "member"], [64, 67, "operator"], [64, 68, "operandr"], [68, 69, "member"], [63, 70, "then_statement"], [70, 71, "statements"], [71, 72, "condition"], [72, 73, "prefix_operators"], [72, 74, "member"], [71, 75, "then_statement"], [75, 76, "statements"], [62, 77, "statements"], [77, 78, "type"], [78, 79, "name"], [77, 80, "declarators"], [80, 81, "name"], [80, 82, "initializer"], [82, 83, "member"], [82, 84, "selectors"], [84, 85, "index"], [85, 86, "member"], [62, 87, "statements"], [87, 88, "type"], [88, 89, "name"], [87, 90, "declarators"], [90, 91, "name"], [90, 92, "initializer"], [92, 93, "type"], [93, 94, "name"], [92, 95, "expression"], [95, 96, "member"], [62, 97, "statements"], [97, 98, "condition"], [98, 99, "operandl"], [99, 100, "member"], [98, 101, "operator"], [98, 102, "operandr"], [102, 103, "member"], [97, 104, "then_statement"], [104, 105, "statements"], [105, 106, "condition"], [106, 107, "operandl"], [107, 108, "member"], [107, 109, "selectors"], [109, 110, "index"], [110, 111, "member"], [106, 112, "operator"], [106, 113, "operandr"], [113, 114, "value"], [105, 115, "then_statement"], [115, 116, "statements"], [97, 117, "else_statement"], [117, 118, "condition"], [118, 119, "prefix_operators"], [118, 120, "qualifier"], [118, 121, "member"], [118, 122, "arguments"], [122, 123, "member"], [117, 124, "then_statement"], [124, 125, "statements"], [62, 126, "statements"], [126, 127, "expression"], [127, 128, "prefix_operators"], [127, 129, "member"], [62, 130, "statements"], [130, 131, "expression"], [131, 132, "expressionl"], [132, 133, "member"], [131, 134, "type"], [131, 135, "value"], [135, 136, "operandl"], [136, 137, "operandl"], [137, 138, "member"], [136, 139, "operator"], [136, 140, "operandr"], [140, 141, "qualifier"], [140, 142, "member"], [135, 143, "operator"], [135, 144, "operandr"], [144, 145, "member"], [62, 146, "statements"], [146, 147, "expression"], [147, 148, "expressionl"], [148, 149, "member"], [148, 150, "selectors"], [150, 151, "index"], [151, 152, "member"], [151, 153, "postfix_operators"], [147, 154, "type"], [147, 155, "value"], [155, 156, "member"], [62, 157, "statements"], [157, 158, "condition"], [158, 159, "operandl"], [159, 160, "member"], [158, 161, "operator"], [158, 162, "operandr"], [162, 163, "qualifier"], [162, 164, "member"], [157, 165, "then_statement"], [165, 166, "statements"], [166, 167, "expression"], [167, 168, "expressionl"], [168, 169, "member"], [167, 170, "type"], [167, 171, "value"], [171, 172, "qualifier"], [171, 173, "member"], [165, 174, "statements"], [174, 175, "expression"], [175, 176, "expressionl"], [176, 177, "member"], [175, 178, "type"], [175, 179, "value"], [179, 180, "value"], [0, 181, "body"], [181, 182, "expression"], [182, 183, "qualifier"], [182, 184, "member"], [182, 185, "arguments"], [185, 186, "member"], [0, 187, "body"], [187, 188, "statements"], [188, 189, "type"], [189, 190, "name"], [188, 191, "declarators"], [191, 192, "name"], [191, 193, "initializer"], [193, 194, "member"], [187, 195, "statements"], [195, 196, "type"], [196, 197, "name"], [196, 198, "dimensions"], [195, 199, "declarators"], [199, 200, "name"], [199, 201, "initializer"], [201, 202, "qualifier"], [201, 203, "member"], [187, 204, "statements"], [204, 205, "type"], [205, 206, "name"], [204, 207, "declarators"], [207, 208, "name"], [207, 209, "initializer"], [209, 210, "qualifier"], [209, 211, "member"], [187, 212, "statements"], [212, 213, "type"], [213, 214, "name"], [212, 215, "declarators"], [215, 216, "name"], [215, 217, "initializer"], [217, 218, "qualifier"], [217, 219, "member"], [187, 220, "statements"], [220, 221, "expression"], [221, 222, "qualifier"], [221, 223, "member"], [221, 224, "arguments"], [224, 225, "member"], [221, 226, "arguments"], [226, 227, "member"], [221, 228, "arguments"], [228, 229, "member"], [221, 230, "arguments"], [230, 231, "member"]], "rem_roots": [98], "add_roots": []}, {"id": 70, "mappings": {"c": "VAR_1", "i": "VAR_2", "MAX_VALUE": "VAR_3", "l": "VAR_4", "str": "VAR_5", "Integer": "VAR_6", "len": "VAR_7", "NumberInput": "TYPE_1", "String": "TYPE_2", "length": "METHOD_1", "_parseIndex": "METHOD_2", "parseInt": "METHOD_3", "parseLong": "METHOD_4", "charAt": "METHOD_5", "0": "INT_1", "1": "INT_2", "10": "INT_3", "'9'": "CHAR_1", "'0'": "CHAR_2"}, "nodes": ["MethodDeclaration", "static private final", "BasicType", "int", "_parseIndex", "FormalParameter", "ReferenceType", "String", "str", "LocalVariableDeclaration", "final", "BasicType", "int", "VariableDeclarator", "len", "MethodInvocation", "str", "length", "IfStatement", "BinaryOperation", "BinaryOperation", "MemberReference", "len", "==", "Literal", "0", "||", "BinaryOperation", "MemberReference", "len", ">", "Literal", "10", "BlockStatement", "ReturnStatement", "Literal", "-", "1", "ForStatement", "ForControl", "VariableDeclaration", "BasicType", "int", "VariableDeclarator", "i", "Literal", "0", "BinaryOperation", "MemberReference", "i", "<", "MemberReference", "len", "MemberReference", "++", "i", "BlockStatement", "LocalVariableDeclaration", "BasicType", "char", "VariableDeclarator", "c", "MethodInvocation", "str", "charAt", "MemberReference", "i", "++", "IfStatement", "BinaryOperation", "BinaryOperation", "MemberReference", "c", ">", "Literal", "'9'", "||", "BinaryOperation", "MemberReference", "c", "<", "Literal", "'0'", "BlockStatement", "ReturnStatement", "Literal", "-", "1", "IfStatement", "BinaryOperation", "MemberReference", "len", "==", "Literal", "10", "BlockStatement", "LocalVariableDeclaration", "BasicType", "long", "VariableDeclarator", "l", "MethodInvocation", "NumberInput", "parseLong", "MemberReference", "str", "IfStatement", "BinaryOperation", "MemberReference", "l", ">", "MemberReference", "Integer", "MAX_VALUE", "BlockStatement", "ReturnStatement", "Literal", "-", "1", "ReturnStatement", "MethodInvocation", "NumberInput", "parseInt", "MemberReference", "str"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [5, 8, "name"], [0, 9, "body"], [9, 10, "modifiers"], [9, 11, "type"], [11, 12, "name"], [9, 13, "declarators"], [13, 14, "name"], [13, 15, "initializer"], [15, 16, "qualifier"], [15, 17, "member"], [0, 18, "body"], [18, 19, "condition"], [19, 20, "operandl"], [20, 21, "operandl"], [21, 22, "member"], [20, 23, "operator"], [20, 24, "operandr"], [24, 25, "value"], [19, 26, "operator"], [19, 27, "operandr"], [27, 28, "operandl"], [28, 29, "member"], [27, 30, "operator"], [27, 31, "operandr"], [31, 32, "value"], [18, 33, "then_statement"], [33, 34, "statements"], [34, 35, "expression"], [35, 36, "prefix_operators"], [35, 37, "value"], [0, 38, "body"], [38, 39, "control"], [39, 40, "init"], [40, 41, "type"], [41, 42, "name"], [40, 43, "declarators"], [43, 44, "name"], [43, 45, "initializer"], [45, 46, "value"], [39, 47, "condition"], [47, 48, "operandl"], [48, 49, "member"], [47, 50, "operator"], [47, 51, "operandr"], [51, 52, "member"], [39, 53, "update"], [53, 54, "prefix_operators"], [53, 55, "member"], [38, 56, "body"], [56, 57, "statements"], [57, 58, "type"], [58, 59, "name"], [57, 60, "declarators"], [60, 61, "name"], [60, 62, "initializer"], [62, 63, "qualifier"], [62, 64, "member"], [62, 65, "arguments"], [65, 66, "member"], [65, 67, "postfix_operators"], [56, 68, "statements"], [68, 69, "condition"], [69, 70, "operandl"], [70, 71, "operandl"], [71, 72, "member"], [70, 73, "operator"], [70, 74, "operandr"], [74, 75, "value"], [69, 76, "operator"], [69, 77, "operandr"], [77, 78, "operandl"], [78, 79, "member"], [77, 80, "operator"], [77, 81, "operandr"], [81, 82, "value"], [68, 83, "then_statement"], [83, 84, "statements"], [84, 85, "expression"], [85, 86, "prefix_operators"], [85, 87, "value"], [0, 88, "body"], [88, 89, "condition"], [89, 90, "operandl"], [90, 91, "member"], [89, 92, "operator"], [89, 93, "operandr"], [93, 94, "value"], [88, 95, "then_statement"], [95, 96, "statements"], [96, 97, "type"], [97, 98, "name"], [96, 99, "declarators"], [99, 100, "name"], [99, 101, "initializer"], [101, 102, "qualifier"], [101, 103, "member"], [101, 104, "arguments"], [104, 105, "member"], [95, 106, "statements"], [106, 107, "condition"], [107, 108, "operandl"], [108, 109, "member"], [107, 110, "operator"], [107, 111, "operandr"], [111, 112, "qualifier"], [111, 113, "member"], [106, 114, "then_statement"], [114, 115, "statements"], [115, 116, "expression"], [116, 117, "prefix_operators"], [116, 118, "value"], [0, 119, "body"], [119, 120, "expression"], [120, 121, "qualifier"], [120, 122, "member"], [120, 123, "arguments"], [123, 124, "member"]], "rem_roots": [57], "add_roots": []}, {"id": 71, "mappings": {"_currentSegment": "VAR_1", "_inputStart": "VAR_2", "_resultString": "VAR_3", "_hasSegments": "VAR_4", "_resultArray": "VAR_5", "_inputBuffer": "VAR_6", "toCharArray": "METHOD_1", "contentsAsArray": "METHOD_2", "getTextBuffer": "METHOD_3", "0": "INT_1"}, "nodes": ["MethodDeclaration", "public", "BasicType", "char", "None", "getTextBuffer", "IfStatement", "BinaryOperation", "MemberReference", "_inputStart", ">=", "Literal", "0", "ReturnStatement", "MemberReference", "_inputBuffer", "IfStatement", "BinaryOperation", "MemberReference", "_resultArray", "!=", "Literal", "null", "ReturnStatement", "MemberReference", "_resultArray", "IfStatement", "BinaryOperation", "MemberReference", "_resultString", "!=", "Literal", "null", "BlockStatement", "ReturnStatement", "Assignment", "MemberReference", "_resultArray", "=", "MethodInvocation", "_resultString", "toCharArray", "IfStatement", "MemberReference", "!", "_hasSegments", "ReturnStatement", "MemberReference", "_currentSegment", "ReturnStatement", "MethodInvocation", "contentsAsArray"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [2, 4, "dimensions"], [0, 5, "name"], [0, 6, "body"], [6, 7, "condition"], [7, 8, "operandl"], [8, 9, "member"], [7, 10, "operator"], [7, 11, "operandr"], [11, 12, "value"], [6, 13, "then_statement"], [13, 14, "expression"], [14, 15, "member"], [0, 16, "body"], [16, 17, "condition"], [17, 18, "operandl"], [18, 19, "member"], [17, 20, "operator"], [17, 21, "operandr"], [21, 22, "value"], [16, 23, "then_statement"], [23, 24, "expression"], [24, 25, "member"], [0, 26, "body"], [26, 27, "condition"], [27, 28, "operandl"], [28, 29, "member"], [27, 30, "operator"], [27, 31, "operandr"], [31, 32, "value"], [26, 33, "then_statement"], [33, 34, "statements"], [34, 35, "expression"], [35, 36, "expressionl"], [36, 37, "member"], [35, 38, "type"], [35, 39, "value"], [39, 40, "qualifier"], [39, 41, "member"], [0, 42, "body"], [42, 43, "condition"], [43, 44, "prefix_operators"], [43, 45, "member"], [42, 46, "then_statement"], [46, 47, "expression"], [47, 48, "member"], [0, 49, "body"], [49, 50, "expression"], [50, 51, "member"]], "rem_roots": [42], "add_roots": []}, {"id": 72, "mappings": {"df": "VAR_1", "tz": "VAR_2", "hasLocale": "VAR_3", "property": "VAR_4", "asString": "VAR_5", "Boolean": "VAR_6", "std": "VAR_7", "shape": "VAR_8", "format": "VAR_9", "TRUE": "VAR_10", "serializers": "VAR_11", "loc": "VAR_12", "hasTZ": "VAR_13", "changeTZ": "VAR_14", "df0": "VAR_15", "STRING": "VAR_16", "FALSE": "VAR_17", "newTz": "VAR_18", "Locale": "TYPE_1", "String": "TYPE_2", "JsonMappingException": "TYPE_3", "SerializerProvider": "TYPE_4", "BeanProperty": "TYPE_5", "TimeZone": "TYPE_6", "Value": "TYPE_7", "Shape": "TYPE_8", "StdDateFormat": "TYPE_9", "JsonSerializer": "TYPE_10", "JsonFormat": "TYPE_11", "JsonFormat.Shape": "TYPE_12", "DateFormat": "TYPE_13", "SimpleDateFormat": "TYPE_14", "withLocale": "METHOD_1", "getClass": "METHOD_2", "getName": "METHOD_3", "getTimeZone": "METHOD_4", "reportBadDefinition": "METHOD_5", "toPattern": "METHOD_6", "handledType": "METHOD_7", "isNumeric": "METHOD_8", "getDateFormat": "METHOD_9", "getShape": "METHOD_10", "createContextual": "METHOD_11", "hasTimeZone": "METHOD_12", "withFormat": "METHOD_13", "setTimeZone": "METHOD_14", "hasPattern": "METHOD_15", "getConfig": "METHOD_16", "findFormatOverrides": "METHOD_17", "equals": "METHOD_18", "clone": "METHOD_19", "getPattern": "METHOD_20", "getLocale": "METHOD_21", "withTimeZone": "METHOD_22", "\"Configured `DateFormat` (%s) not a `SimpleDateFormat`; cannot configure `Locale` or `TimeZone`\"": "STRING_1"}, "nodes": ["MethodDeclaration", "public", "ReferenceType", "JsonSerializer", "TypeArgument", "?", "createContextual", "FormalParameter", "ReferenceType", "SerializerProvider", "serializers", "FormalParameter", "ReferenceType", "BeanProperty", "property", "JsonMappingException", "IfStatement", "BinaryOperation", "MemberReference", "property", "==", "Literal", "null", "BlockStatement", "ReturnStatement", "This", "LocalVariableDeclaration", "ReferenceType", "JsonFormat", "ReferenceType", "Value", "VariableDeclarator", "format", "MethodInvocation", "findFormatOverrides", "MemberReference", "serializers", "MemberReference", "property", "MethodInvocation", "handledType", "IfStatement", "BinaryOperation", "MemberReference", "format", "==", "Literal", "null", "BlockStatement", "ReturnStatement", "This", "LocalVariableDeclaration", "ReferenceType", "JsonFormat", "ReferenceType", "Shape", "VariableDeclarator", "shape", "MethodInvocation", "format", "getShape", "IfStatement", "MethodInvocation", "shape", "isNumeric", "BlockStatement", "ReturnStatement", "MethodInvocation", "withFormat", "MemberReference", "Boolean", "TRUE", "Literal", "null", "IfStatement", "MethodInvocation", "format", "hasPattern", "BlockStatement", "LocalVariableDeclaration", "final", "ReferenceType", "Locale", "VariableDeclarator", "loc", "TernaryExpression", "MethodInvocation", "format", "hasLocale", "MethodInvocation", "format", "getLocale", "MethodInvocation", "serializers", "getLocale", "LocalVariableDeclaration", "ReferenceType", "SimpleDateFormat", "VariableDeclarator", "df", "ClassCreator", "ReferenceType", "SimpleDateFormat", "MethodInvocation", "format", "getPattern", "MemberReference", "loc", "LocalVariableDeclaration", "ReferenceType", "TimeZone", "VariableDeclarator", "tz", "TernaryExpression", "MethodInvocation", "format", "hasTimeZone", "MethodInvocation", "format", "getTimeZone", "MethodInvocation", "serializers", "getTimeZone", "StatementExpression", "MethodInvocation", "df", "setTimeZone", "MemberReference", "tz", "ReturnStatement", "MethodInvocation", "withFormat", "MemberReference", "Boolean", "FALSE", "MemberReference", "df", "LocalVariableDeclaration", "final", "BasicType", "boolean", "VariableDeclarator", "hasLocale", "MethodInvocation", "format", "hasLocale", "LocalVariableDeclaration", "final", "BasicType", "boolean", "VariableDeclarator", "hasTZ", "MethodInvocation", "format", "hasTimeZone", "LocalVariableDeclaration", "final", "BasicType", "boolean", "VariableDeclarator", "asString", "BinaryOperation", "MemberReference", "shape", "==", "MemberReference", "JsonFormat.Shape", "STRING", "IfStatement", "BinaryOperation", "BinaryOperation", "MemberReference", "!", "hasLocale", "&&", "MemberReference", "!", "hasTZ", "&&", "MemberReference", "!", "asString", "BlockStatement", "ReturnStatement", "This", "LocalVariableDeclaration", "ReferenceType", "DateFormat", "VariableDeclarator", "df0", "MethodInvocation", "serializers", "getConfig", "MethodInvocation", "getDateFormat", "IfStatement", "BinaryOperation", "MemberReference", "df0", "instanceof", "ReferenceType", "StdDateFormat", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "StdDateFormat", "VariableDeclarator", "std", "Cast", "ReferenceType", "StdDateFormat", "MemberReference", "df0", "IfStatement", "MethodInvocation", "format", "hasLocale", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "std", "=", "MethodInvocation", "std", "withLocale", "MethodInvocation", "format", "getLocale", "IfStatement", "MethodInvocation", "format", "hasTimeZone", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "std", "=", "MethodInvocation", "std", "withTimeZone", "MethodInvocation", "format", "getTimeZone", "ReturnStatement", "MethodInvocation", "withFormat", "MemberReference", "Boolean", "FALSE", "MemberReference", "std", "IfStatement", "BinaryOperation", "!", "MemberReference", "df0", "instanceof", "ReferenceType", "SimpleDateFormat", "BlockStatement", "StatementExpression", "MethodInvocation", "serializers", "reportBadDefinition", "MethodInvocation", "handledType", "MethodInvocation", "String", "format", "Literal", "\"Configured `DateFormat` (%s) not a `SimpleDateFormat`; cannot configure `Locale` or `TimeZone`\"", "MethodInvocation", "df0", "getClass", "MethodInvocation", "getName", "LocalVariableDeclaration", "ReferenceType", "SimpleDateFormat", "VariableDeclarator", "df", "Cast", "ReferenceType", "SimpleDateFormat", "MemberReference", "df0", "IfStatement", "MemberReference", "hasLocale", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "df", "=", "ClassCreator", "ReferenceType", "SimpleDateFormat", "MethodInvocation", "df", "toPattern", "MethodInvocation", "format", "getLocale", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "df", "=", "Cast", "ReferenceType", "SimpleDateFormat", "MethodInvocation", "df", "clone", "LocalVariableDeclaration", "ReferenceType", "TimeZone", "VariableDeclarator", "newTz", "MethodInvocation", "format", "getTimeZone", "LocalVariableDeclaration", "BasicType", "boolean", "VariableDeclarator", "changeTZ", "BinaryOperation", "BinaryOperation", "MemberReference", "newTz", "!=", "Literal", "null", "&&", "MethodInvocation", "!", "newTz", "equals", "MethodInvocation", "df", "getTimeZone", "IfStatement", "MemberReference", "changeTZ", "BlockStatement", "StatementExpression", "MethodInvocation", "df", "setTimeZone", "MemberReference", "newTz", "ReturnStatement", "MethodInvocation", "withFormat", "MemberReference", "Boolean", "FALSE", "MemberReference", "df"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [2, 4, "arguments"], [4, 5, "pattern_type"], [0, 6, "name"], [0, 7, "parameters"], [7, 8, "type"], [8, 9, "name"], [7, 10, "name"], [0, 11, "parameters"], [11, 12, "type"], [12, 13, "name"], [11, 14, "name"], [0, 15, "throws"], [0, 16, "body"], [16, 17, "condition"], [17, 18, "operandl"], [18, 19, "member"], [17, 20, "operator"], [17, 21, "operandr"], [21, 22, "value"], [16, 23, "then_statement"], [23, 24, "statements"], [24, 25, "expression"], [0, 26, "body"], [26, 27, "type"], [27, 28, "name"], [27, 29, "sub_type"], [29, 30, "name"], [26, 31, "declarators"], [31, 32, "name"], [31, 33, "initializer"], [33, 34, "member"], [33, 35, "arguments"], [35, 36, "member"], [33, 37, "arguments"], [37, 38, "member"], [33, 39, "arguments"], [39, 40, "member"], [0, 41, "body"], [41, 42, "condition"], [42, 43, "operandl"], [43, 44, "member"], [42, 45, "operator"], [42, 46, "operandr"], [46, 47, "value"], [41, 48, "then_statement"], [48, 49, "statements"], [49, 50, "expression"], [0, 51, "body"], [51, 52, "type"], [52, 53, "name"], [52, 54, "sub_type"], [54, 55, "name"], [51, 56, "declarators"], [56, 57, "name"], [56, 58, "initializer"], [58, 59, "qualifier"], [58, 60, "member"], [0, 61, "body"], [61, 62, "condition"], [62, 63, "qualifier"], [62, 64, "member"], [61, 65, "then_statement"], [65, 66, "statements"], [66, 67, "expression"], [67, 68, "member"], [67, 69, "arguments"], [69, 70, "qualifier"], [69, 71, "member"], [67, 72, "arguments"], [72, 73, "value"], [0, 74, "body"], [74, 75, "condition"], [75, 76, "qualifier"], [75, 77, "member"], [74, 78, "then_statement"], [78, 79, "statements"], [79, 80, "modifiers"], [79, 81, "type"], [81, 82, "name"], [79, 83, "declarators"], [83, 84, "name"], [83, 85, "initializer"], [85, 86, "condition"], [86, 87, "qualifier"], [86, 88, "member"], [85, 89, "if_true"], [89, 90, "qualifier"], [89, 91, "member"], [85, 92, "if_false"], [92, 93, "qualifier"], [92, 94, "member"], [78, 95, "statements"], [95, 96, "type"], [96, 97, "name"], [95, 98, "declarators"], [98, 99, "name"], [98, 100, "initializer"], [100, 101, "type"], [101, 102, "name"], [100, 103, "arguments"], [103, 104, "qualifier"], [103, 105, "member"], [100, 106, "arguments"], [106, 107, "member"], [78, 108, "statements"], [108, 109, "type"], [109, 110, "name"], [108, 111, "declarators"], [111, 112, "name"], [111, 113, "initializer"], [113, 114, "condition"], [114, 115, "qualifier"], [114, 116, "member"], [113, 117, "if_true"], [117, 118, "qualifier"], [117, 119, "member"], [113, 120, "if_false"], [120, 121, "qualifier"], [120, 122, "member"], [78, 123, "statements"], [123, 124, "expression"], [124, 125, "qualifier"], [124, 126, "member"], [124, 127, "arguments"], [127, 128, "member"], [78, 129, "statements"], [129, 130, "expression"], [130, 131, "member"], [130, 132, "arguments"], [132, 133, "qualifier"], [132, 134, "member"], [130, 135, "arguments"], [135, 136, "member"], [0, 137, "body"], [137, 138, "modifiers"], [137, 139, "type"], [139, 140, "name"], [137, 141, "declarators"], [141, 142, "name"], [141, 143, "initializer"], [143, 144, "qualifier"], [143, 145, "member"], [0, 146, "body"], [146, 147, "modifiers"], [146, 148, "type"], [148, 149, "name"], [146, 150, "declarators"], [150, 151, "name"], [150, 152, "initializer"], [152, 153, "qualifier"], [152, 154, "member"], [0, 155, "body"], [155, 156, "modifiers"], [155, 157, "type"], [157, 158, "name"], [155, 159, "declarators"], [159, 160, "name"], [159, 161, "initializer"], [161, 162, "operandl"], [162, 163, "member"], [161, 164, "operator"], [161, 165, "operandr"], [165, 166, "qualifier"], [165, 167, "member"], [0, 168, "body"], [168, 169, "condition"], [169, 170, "operandl"], [170, 171, "operandl"], [171, 172, "prefix_operators"], [171, 173, "member"], [170, 174, "operator"], [170, 175, "operandr"], [175, 176, "prefix_operators"], [175, 177, "member"], [169, 178, "operator"], [169, 179, "operandr"], [179, 180, "prefix_operators"], [179, 181, "member"], [168, 182, "then_statement"], [182, 183, "statements"], [183, 184, "expression"], [0, 185, "body"], [185, 186, "type"], [186, 187, "name"], [185, 188, "declarators"], [188, 189, "name"], [188, 190, "initializer"], [190, 191, "qualifier"], [190, 192, "member"], [190, 193, "selectors"], [193, 194, "member"], [0, 195, "body"], [195, 196, "condition"], [196, 197, "operandl"], [197, 198, "member"], [196, 199, "operator"], [196, 200, "operandr"], [200, 201, "name"], [195, 202, "then_statement"], [202, 203, "statements"], [203, 204, "type"], [204, 205, "name"], [203, 206, "declarators"], [206, 207, "name"], [206, 208, "initializer"], [208, 209, "type"], [209, 210, "name"], [208, 211, "expression"], [211, 212, "member"], [202, 213, "statements"], [213, 214, "condition"], [214, 215, "qualifier"], [214, 216, "member"], [213, 217, "then_statement"], [217, 218, "statements"], [218, 219, "expression"], [219, 220, "expressionl"], [220, 221, "member"], [219, 222, "type"], [219, 223, "value"], [223, 224, "qualifier"], [223, 225, "member"], [223, 226, "arguments"], [226, 227, "qualifier"], [226, 228, "member"], [202, 229, "statements"], [229, 230, "condition"], [230, 231, "qualifier"], [230, 232, "member"], [229, 233, "then_statement"], [233, 234, "statements"], [234, 235, "expression"], [235, 236, "expressionl"], [236, 237, "member"], [235, 238, "type"], [235, 239, "value"], [239, 240, "qualifier"], [239, 241, "member"], [239, 242, "arguments"], [242, 243, "qualifier"], [242, 244, "member"], [202, 245, "statements"], [245, 246, "expression"], [246, 247, "member"], [246, 248, "arguments"], [248, 249, "qualifier"], [248, 250, "member"], [246, 251, "arguments"], [251, 252, "member"], [0, 253, "body"], [253, 254, "condition"], [254, 255, "prefix_operators"], [254, 256, "operandl"], [256, 257, "member"], [254, 258, "operator"], [254, 259, "operandr"], [259, 260, "name"], [253, 261, "then_statement"], [261, 262, "statements"], [262, 263, "expression"], [263, 264, "qualifier"], [263, 265, "member"], [263, 266, "arguments"], [266, 267, "member"], [263, 268, "arguments"], [268, 269, "qualifier"], [268, 270, "member"], [268, 271, "arguments"], [271, 272, "value"], [268, 273, "arguments"], [273, 274, "qualifier"], [273, 275, "member"], [273, 276, "selectors"], [276, 277, "member"], [0, 278, "body"], [278, 279, "type"], [279, 280, "name"], [278, 281, "declarators"], [281, 282, "name"], [281, 283, "initializer"], [283, 284, "type"], [284, 285, "name"], [283, 286, "expression"], [286, 287, "member"], [0, 288, "body"], [288, 289, "condition"], [289, 290, "member"], [288, 291, "then_statement"], [291, 292, "statements"], [292, 293, "expression"], [293, 294, "expressionl"], [294, 295, "member"], [293, 296, "type"], [293, 297, "value"], [297, 298, "type"], [298, 299, "name"], [297, 300, "arguments"], [300, 301, "qualifier"], [300, 302, "member"], [297, 303, "arguments"], [303, 304, "qualifier"], [303, 305, "member"], [288, 306, "else_statement"], [306, 307, "statements"], [307, 308, "expression"], [308, 309, "expressionl"], [309, 310, "member"], [308, 311, "type"], [308, 312, "value"], [312, 313, "type"], [313, 314, "name"], [312, 315, "expression"], [315, 316, "qualifier"], [315, 317, "member"], [0, 318, "body"], [318, 319, "type"], [319, 320, "name"], [318, 321, "declarators"], [321, 322, "name"], [321, 323, "initializer"], [323, 324, "qualifier"], [323, 325, "member"], [0, 326, "body"], [326, 327, "type"], [327, 328, "name"], [326, 329, "declarators"], [329, 330, "name"], [329, 331, "initializer"], [331, 332, "operandl"], [332, 333, "operandl"], [333, 334, "member"], [332, 335, "operator"], [332, 336, "operandr"], [336, 337, "value"], [331, 338, "operator"], [331, 339, "operandr"], [339, 340, "prefix_operators"], [339, 341, "qualifier"], [339, 342, "member"], [339, 343, "arguments"], [343, 344, "qualifier"], [343, 345, "member"], [0, 346, "body"], [346, 347, "condition"], [347, 348, "member"], [346, 349, "then_statement"], [349, 350, "statements"], [350, 351, "expression"], [351, 352, "qualifier"], [351, 353, "member"], [351, 354, "arguments"], [354, 355, "member"], [0, 356, "body"], [356, 357, "expression"], [357, 358, "member"], [357, 359, "arguments"], [359, 360, "qualifier"], [359, 361, "member"], [357, 362, "arguments"], [362, 363, "member"]], "rem_roots": [16], "add_roots": []}, {"id": 73, "mappings": {"resolver": "VAR_1", "ctxt": "VAR_2", "instance": "VAR_3", "jp": "VAR_4", "generator": "VAR_5", "idProp": "VAR_6", "roid": "VAR_7", "idProperty": "VAR_8", "id": "VAR_9", "_valueDeserializer": "VAR_10", "_objectIdReader": "VAR_11", "SettableBeanProperty": "TYPE_1", "IOException": "TYPE_2", "ReadableObjectId": "TYPE_3", "DeserializationContext": "TYPE_4", "Object": "TYPE_5", "JsonParser": "TYPE_6", "deserializeSetAndReturn": "METHOD_1", "bindItem": "METHOD_2", "findObjectId": "METHOD_3", "setAndReturn": "METHOD_4", "deserialize": "METHOD_5"}, "nodes": ["MethodDeclaration", "public", "ReferenceType", "Object", "deserializeSetAndReturn", "FormalParameter", "ReferenceType", "JsonParser", "jp", "FormalParameter", "ReferenceType", "DeserializationContext", "ctxt", "FormalParameter", "ReferenceType", "Object", "instance", "IOException", "LocalVariableDeclaration", "ReferenceType", "Object", "VariableDeclarator", "id", "MethodInvocation", "_valueDeserializer", "deserialize", "MemberReference", "jp", "MemberReference", "ctxt", "LocalVariableDeclaration", "ReferenceType", "ReadableObjectId", "VariableDeclarator", "roid", "MethodInvocation", "ctxt", "findObjectId", "MemberReference", "id", "MemberReference", "_objectIdReader", "generator", "MemberReference", "_objectIdReader", "resolver", "StatementExpression", "MethodInvocation", "roid", "bindItem", "MemberReference", "instance", "LocalVariableDeclaration", "ReferenceType", "SettableBeanProperty", "VariableDeclarator", "idProp", "MemberReference", "_objectIdReader", "idProperty", "IfStatement", "BinaryOperation", "MemberReference", "idProp", "!=", "Literal", "null", "BlockStatement", "ReturnStatement", "MethodInvocation", "idProp", "setAndReturn", "MemberReference", "instance", "MemberReference", "id", "ReturnStatement", "MemberReference", "instance"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [5, 8, "name"], [0, 9, "parameters"], [9, 10, "type"], [10, 11, "name"], [9, 12, "name"], [0, 13, "parameters"], [13, 14, "type"], [14, 15, "name"], [13, 16, "name"], [0, 17, "throws"], [0, 18, "body"], [18, 19, "type"], [19, 20, "name"], [18, 21, "declarators"], [21, 22, "name"], [21, 23, "initializer"], [23, 24, "qualifier"], [23, 25, "member"], [23, 26, "arguments"], [26, 27, "member"], [23, 28, "arguments"], [28, 29, "member"], [0, 30, "body"], [30, 31, "type"], [31, 32, "name"], [30, 33, "declarators"], [33, 34, "name"], [33, 35, "initializer"], [35, 36, "qualifier"], [35, 37, "member"], [35, 38, "arguments"], [38, 39, "member"], [35, 40, "arguments"], [40, 41, "qualifier"], [40, 42, "member"], [35, 43, "arguments"], [43, 44, "qualifier"], [43, 45, "member"], [0, 46, "body"], [46, 47, "expression"], [47, 48, "qualifier"], [47, 49, "member"], [47, 50, "arguments"], [50, 51, "member"], [0, 52, "body"], [52, 53, "type"], [53, 54, "name"], [52, 55, "declarators"], [55, 56, "name"], [55, 57, "initializer"], [57, 58, "qualifier"], [57, 59, "member"], [0, 60, "body"], [60, 61, "condition"], [61, 62, "operandl"], [62, 63, "member"], [61, 64, "operator"], [61, 65, "operandr"], [65, 66, "value"], [60, 67, "then_statement"], [67, 68, "statements"], [68, 69, "expression"], [69, 70, "qualifier"], [69, 71, "member"], [69, 72, "arguments"], [72, 73, "member"], [69, 74, "arguments"], [74, 75, "member"], [0, 76, "body"], [76, 77, "expression"], [77, 78, "member"]], "rem_roots": [30], "add_roots": []}, {"id": 74, "mappings": {"_appliesFor": "VAR_1", "OBJECT_AND_NON_CONCRETE": "VAR_2", "NON_FINAL": "VAR_3", "t": "VAR_4", "NON_CONCRETE_AND_ARRAYS": "VAR_5", "JavaType": "TYPE_1", "TreeNode": "TYPE_2", "Object": "TYPE_3", "isArrayType": "METHOD_1", "useForType": "METHOD_2", "isAssignableFrom": "METHOD_3", "isConcrete": "METHOD_4", "getRawClass": "METHOD_5", "getContentType": "METHOD_6", "isFinal": "METHOD_7"}, "nodes": ["MethodDeclaration", "public", "BasicType", "boolean", "useForType", "FormalParameter", "ReferenceType", "JavaType", "t", "SwitchStatement", "MemberReference", "_appliesFor", "SwitchStatementCase", "NON_CONCRETE_AND_ARRAYS", "WhileStatement", "MethodInvocation", "t", "isArrayType", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "t", "=", "MethodInvocation", "t", "getContentType", "SwitchStatementCase", "OBJECT_AND_NON_CONCRETE", "ReturnStatement", "BinaryOperation", "BinaryOperation", "MethodInvocation", "t", "getRawClass", "==", "ClassReference", "ReferenceType", "Object", "||", "BinaryOperation", "MethodInvocation", "!", "t", "isConcrete", "||", "ClassReference", "ReferenceType", "TreeNode", "MethodInvocation", "isAssignableFrom", "MethodInvocation", "t", "getRawClass", "SwitchStatementCase", "NON_FINAL", "WhileStatement", "MethodInvocation", "t", "isArrayType", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "t", "=", "MethodInvocation", "t", "getContentType", "ReturnStatement", "BinaryOperation", "MethodInvocation", "!", "t", "isFinal", "&&", "ClassReference", "!", "ReferenceType", "TreeNode", "MethodInvocation", "isAssignableFrom", "MethodInvocation", "t", "getRawClass", "SwitchStatementCase", "ReturnStatement", "BinaryOperation", "MethodInvocation", "t", "getRawClass", "==", "ClassReference", "ReferenceType", "Object"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [5, 8, "name"], [0, 9, "body"], [9, 10, "expression"], [10, 11, "member"], [9, 12, "cases"], [12, 13, "case"], [12, 14, "statements"], [14, 15, "condition"], [15, 16, "qualifier"], [15, 17, "member"], [14, 18, "body"], [18, 19, "statements"], [19, 20, "expression"], [20, 21, "expressionl"], [21, 22, "member"], [20, 23, "type"], [20, 24, "value"], [24, 25, "qualifier"], [24, 26, "member"], [9, 27, "cases"], [27, 28, "case"], [27, 29, "statements"], [29, 30, "expression"], [30, 31, "operandl"], [31, 32, "operandl"], [32, 33, "qualifier"], [32, 34, "member"], [31, 35, "operator"], [31, 36, "operandr"], [36, 37, "type"], [37, 38, "name"], [30, 39, "operator"], [30, 40, "operandr"], [40, 41, "operandl"], [41, 42, "prefix_operators"], [41, 43, "qualifier"], [41, 44, "member"], [40, 45, "operator"], [40, 46, "operandr"], [46, 47, "type"], [47, 48, "name"], [46, 49, "selectors"], [49, 50, "member"], [49, 51, "arguments"], [51, 52, "qualifier"], [51, 53, "member"], [9, 54, "cases"], [54, 55, "case"], [54, 56, "statements"], [56, 57, "condition"], [57, 58, "qualifier"], [57, 59, "member"], [56, 60, "body"], [60, 61, "statements"], [61, 62, "expression"], [62, 63, "expressionl"], [63, 64, "member"], [62, 65, "type"], [62, 66, "value"], [66, 67, "qualifier"], [66, 68, "member"], [54, 69, "statements"], [69, 70, "expression"], [70, 71, "operandl"], [71, 72, "prefix_operators"], [71, 73, "qualifier"], [71, 74, "member"], [70, 75, "operator"], [70, 76, "operandr"], [76, 77, "prefix_operators"], [76, 78, "type"], [78, 79, "name"], [76, 80, "selectors"], [80, 81, "member"], [80, 82, "arguments"], [82, 83, "qualifier"], [82, 84, "member"], [9, 85, "cases"], [85, 86, "statements"], [86, 87, "expression"], [87, 88, "operandl"], [88, 89, "qualifier"], [88, 90, "member"], [87, 91, "operator"], [87, 92, "operandr"], [92, 93, "type"], [93, 94, "name"]], "rem_roots": [46], "add_roots": []}, {"id": 75, "mappings": {"_appliesFor": "VAR_1", "OBJECT_AND_NON_CONCRETE": "VAR_2", "NON_FINAL": "VAR_3", "t": "VAR_4", "NON_CONCRETE_AND_ARRAYS": "VAR_5", "JavaType": "TYPE_1", "TreeNode": "TYPE_2", "Object": "TYPE_3", "isArrayType": "METHOD_1", "useForType": "METHOD_2", "isAssignableFrom": "METHOD_3", "isConcrete": "METHOD_4", "getRawClass": "METHOD_5", "getContentType": "METHOD_6", "isFinal": "METHOD_7"}, "nodes": ["MethodDeclaration", "public", "BasicType", "boolean", "useForType", "FormalParameter", "ReferenceType", "JavaType", "t", "SwitchStatement", "MemberReference", "_appliesFor", "SwitchStatementCase", "NON_CONCRETE_AND_ARRAYS", "WhileStatement", "MethodInvocation", "t", "isArrayType", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "t", "=", "MethodInvocation", "t", "getContentType", "SwitchStatementCase", "OBJECT_AND_NON_CONCRETE", "ReturnStatement", "BinaryOperation", "BinaryOperation", "MethodInvocation", "t", "getRawClass", "==", "ClassReference", "ReferenceType", "Object", "||", "BinaryOperation", "MethodInvocation", "!", "t", "isConcrete", "||", "ClassReference", "ReferenceType", "TreeNode", "MethodInvocation", "isAssignableFrom", "MethodInvocation", "t", "getRawClass", "SwitchStatementCase", "NON_FINAL", "WhileStatement", "MethodInvocation", "t", "isArrayType", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "t", "=", "MethodInvocation", "t", "getContentType", "ReturnStatement", "BinaryOperation", "MethodInvocation", "!", "t", "isFinal", "&&", "ClassReference", "!", "ReferenceType", "TreeNode", "MethodInvocation", "isAssignableFrom", "MethodInvocation", "t", "getRawClass", "SwitchStatementCase", "ReturnStatement", "BinaryOperation", "MethodInvocation", "t", "getRawClass", "==", "ClassReference", "ReferenceType", "Object"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [5, 8, "name"], [0, 9, "body"], [9, 10, "expression"], [10, 11, "member"], [9, 12, "cases"], [12, 13, "case"], [12, 14, "statements"], [14, 15, "condition"], [15, 16, "qualifier"], [15, 17, "member"], [14, 18, "body"], [18, 19, "statements"], [19, 20, "expression"], [20, 21, "expressionl"], [21, 22, "member"], [20, 23, "type"], [20, 24, "value"], [24, 25, "qualifier"], [24, 26, "member"], [9, 27, "cases"], [27, 28, "case"], [27, 29, "statements"], [29, 30, "expression"], [30, 31, "operandl"], [31, 32, "operandl"], [32, 33, "qualifier"], [32, 34, "member"], [31, 35, "operator"], [31, 36, "operandr"], [36, 37, "type"], [37, 38, "name"], [30, 39, "operator"], [30, 40, "operandr"], [40, 41, "operandl"], [41, 42, "prefix_operators"], [41, 43, "qualifier"], [41, 44, "member"], [40, 45, "operator"], [40, 46, "operandr"], [46, 47, "type"], [47, 48, "name"], [46, 49, "selectors"], [49, 50, "member"], [49, 51, "arguments"], [51, 52, "qualifier"], [51, 53, "member"], [9, 54, "cases"], [54, 55, "case"], [54, 56, "statements"], [56, 57, "condition"], [57, 58, "qualifier"], [57, 59, "member"], [56, 60, "body"], [60, 61, "statements"], [61, 62, "expression"], [62, 63, "expressionl"], [63, 64, "member"], [62, 65, "type"], [62, 66, "value"], [66, 67, "qualifier"], [66, 68, "member"], [54, 69, "statements"], [69, 70, "expression"], [70, 71, "operandl"], [71, 72, "prefix_operators"], [71, 73, "qualifier"], [71, 74, "member"], [70, 75, "operator"], [70, 76, "operandr"], [76, 77, "prefix_operators"], [76, 78, "type"], [78, 79, "name"], [76, 80, "selectors"], [80, 81, "member"], [80, 82, "arguments"], [82, 83, "qualifier"], [82, 84, "member"], [9, 85, "cases"], [85, 86, "statements"], [86, 87, "expression"], [87, 88, "operandl"], [88, 89, "qualifier"], [88, 90, "member"], [87, 91, "operator"], [87, 92, "operandr"], [92, 93, "type"], [93, 94, "name"]], "rem_roots": [46], "add_roots": []}, {"id": 76, "mappings": {"ctxt": "VAR_1", "creatorProp": "VAR_2", "_externalTypeIdHandler": "VAR_3", "buffer": "VAR_4", "_beanProperties": "VAR_5", "bean": "VAR_6", "ext": "VAR_7", "_anySetter": "VAR_8", "_beanType": "VAR_9", "_ignorableProps": "VAR_10", "propName": "VAR_11", "prop": "VAR_12", "tokens": "VAR_13", "FIELD_NAME": "VAR_14", "creator": "VAR_15", "e": "VAR_16", "_propertyBasedCreator": "VAR_17", "p": "VAR_18", "t": "VAR_19", "_objectIdReader": "VAR_20", "PropertyValueBuffer": "TYPE_1", "String": "TYPE_2", "JsonToken": "TYPE_3", "SettableBeanProperty": "TYPE_4", "PropertyBasedCreator": "TYPE_5", "Object": "TYPE_6", "ExternalTypeHandler": "TYPE_7", "DeserializationContext": "TYPE_8", "JsonParser": "TYPE_9", "IOException": "TYPE_10", "Exception": "TYPE_11", "TokenBuffer": "TYPE_12", "getClass": "METHOD_1", "wrapAndThrow": "METHOD_2", "handlePropertyValue": "METHOD_3", "getCurrentToken": "METHOD_4", "find": "METHOD_5", "writeStartObject": "METHOD_6", "mappingException": "METHOD_7", "readIdProperty": "METHOD_8", "handledType": "METHOD_9", "wrapInstantiationProblem": "METHOD_10", "_deserializeWithErrorWrapping": "METHOD_11", "contains": "METHOD_12", "nextToken": "METHOD_13", "getCurrentName": "METHOD_14", "handleIgnoredProperty": "METHOD_15", "deserializeUsingPropertyBasedWithExternalTypeId": "METHOD_16", "findCreatorProperty": "METHOD_17", "copyCurrentStructure": "METHOD_18", "deserialize": "METHOD_19", "start": "METHOD_20", "bufferAnyProperty": "METHOD_21", "build": "METHOD_22", "getRawClass": "METHOD_23", "assignParameter": "METHOD_24", "startBuilding": "METHOD_25", "complete": "METHOD_26", "bufferProperty": "METHOD_27", "\"Can not create polymorphic instances with unwrapped values\"": "STRING_1"}, "nodes": ["MethodDeclaration", "protected", "ReferenceType", "Object", "deserializeUsingPropertyBasedWithExternalTypeId", "FormalParameter", "ReferenceType", "JsonParser", "p", "FormalParameter", "ReferenceType", "DeserializationContext", "ctxt", "IOException", "LocalVariableDeclaration", "final", "ReferenceType", "ExternalTypeHandler", "VariableDeclarator", "ext", "MethodInvocation", "_externalTypeIdHandler", "start", "LocalVariableDeclaration", "final", "ReferenceType", "PropertyBasedCreator", "VariableDeclarator", "creator", "MemberReference", "_propertyBasedCreator", "LocalVariableDeclaration", "ReferenceType", "PropertyValueBuffer", "VariableDeclarator", "buffer", "MethodInvocation", "creator", "startBuilding", "MemberReference", "p", "MemberReference", "ctxt", "MemberReference", "_objectIdReader", "LocalVariableDeclaration", "ReferenceType", "TokenBuffer", "VariableDeclarator", "tokens", "ClassCreator", "ReferenceType", "TokenBuffer", "MemberReference", "p", "StatementExpression", "MethodInvocation", "tokens", "writeStartObject", "LocalVariableDeclaration", "ReferenceType", "JsonToken", "VariableDeclarator", "t", "MethodInvocation", "p", "getCurrentToken", "ForStatement", "ForControl", "BinaryOperation", "MemberReference", "t", "==", "MemberReference", "JsonToken", "FIELD_NAME", "Assignment", "MemberReference", "t", "=", "MethodInvocation", "p", "nextToken", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "String", "VariableDeclarator", "propName", "MethodInvocation", "p", "getCurrentName", "StatementExpression", "MethodInvocation", "p", "nextToken", "LocalVariableDeclaration", "ReferenceType", "SettableBeanProperty", "VariableDeclarator", "creatorProp", "MethodInvocation", "creator", "findCreatorProperty", "MemberReference", "propName", "IfStatement", "BinaryOperation", "MemberReference", "creatorProp", "!=", "Literal", "null", "BlockStatement", "IfStatement", "MethodInvocation", "ext", "handlePropertyValue", "MemberReference", "p", "MemberReference", "ctxt", "MemberReference", "propName", "MemberReference", "buffer", "BlockStatement", "Statement", "BlockStatement", "IfStatement", "MethodInvocation", "buffer", "assignParameter", "MemberReference", "creatorProp", "MethodInvocation", "_deserializeWithErrorWrapping", "MemberReference", "p", "MemberReference", "ctxt", "MemberReference", "creatorProp", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "t", "=", "MethodInvocation", "p", "nextToken", "LocalVariableDeclaration", "ReferenceType", "Object", "VariableDeclarator", "bean", "TryStatement", "StatementExpression", "Assignment", "MemberReference", "bean", "=", "MethodInvocation", "creator", "build", "MemberReference", "ctxt", "MemberReference", "buffer", "CatchClause", "CatchClauseParameter", "Exception", "e", "StatementExpression", "MethodInvocation", "wrapAndThrow", "MemberReference", "e", "MethodInvocation", "_beanType", "getRawClass", "MemberReference", "propName", "MemberReference", "ctxt", "ContinueStatement", "WhileStatement", "BinaryOperation", "MemberReference", "t", "==", "MemberReference", "JsonToken", "FIELD_NAME", "BlockStatement", "StatementExpression", "MethodInvocation", "p", "nextToken", "StatementExpression", "MethodInvocation", "tokens", "copyCurrentStructure", "MemberReference", "p", "StatementExpression", "Assignment", "MemberReference", "t", "=", "MethodInvocation", "p", "nextToken", "IfStatement", "BinaryOperation", "MethodInvocation", "bean", "getClass", "!=", "MethodInvocation", "_beanType", "getRawClass", "BlockStatement", "ThrowStatement", "MethodInvocation", "ctxt", "mappingException", "Literal", "\"Can not create polymorphic instances with unwrapped values\"", "ReturnStatement", "MethodInvocation", "ext", "complete", "MemberReference", "p", "MemberReference", "ctxt", "MemberReference", "bean", "ContinueStatement", "IfStatement", "MethodInvocation", "buffer", "readIdProperty", "MemberReference", "propName", "BlockStatement", "ContinueStatement", "LocalVariableDeclaration", "ReferenceType", "SettableBeanProperty", "VariableDeclarator", "prop", "MethodInvocation", "_beanProperties", "find", "MemberReference", "propName", "IfStatement", "BinaryOperation", "MemberReference", "prop", "!=", "Literal", "null", "BlockStatement", "StatementExpression", "MethodInvocation", "buffer", "bufferProperty", "MemberReference", "prop", "MethodInvocation", "prop", "deserialize", "MemberReference", "p", "MemberReference", "ctxt", "ContinueStatement", "IfStatement", "MethodInvocation", "ext", "handlePropertyValue", "MemberReference", "p", "MemberReference", "ctxt", "MemberReference", "propName", "Literal", "null", "BlockStatement", "ContinueStatement", "IfStatement", "BinaryOperation", "BinaryOperation", "MemberReference", "_ignorableProps", "!=", "Literal", "null", "&&", "MethodInvocation", "_ignorableProps", "contains", "MemberReference", "propName", "BlockStatement", "StatementExpression", "MethodInvocation", "handleIgnoredProperty", "MemberReference", "p", "MemberReference", "ctxt", "MethodInvocation", "handledType", "MemberReference", "propName", "ContinueStatement", "IfStatement", "BinaryOperation", "MemberReference", "_anySetter", "!=", "Literal", "null", "BlockStatement", "StatementExpression", "MethodInvocation", "buffer", "bufferAnyProperty", "MemberReference", "_anySetter", "MemberReference", "propName", "MethodInvocation", "_anySetter", "deserialize", "MemberReference", "p", "MemberReference", "ctxt", "TryStatement", "ReturnStatement", "MethodInvocation", "ext", "complete", "MemberReference", "p", "MemberReference", "ctxt", "MemberReference", "buffer", "MemberReference", "creator", "CatchClause", "CatchClauseParameter", "Exception", "e", "StatementExpression", "MethodInvocation", "wrapInstantiationProblem", "MemberReference", "e", "MemberReference", "ctxt", "ReturnStatement", "Literal", "null"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [5, 8, "name"], [0, 9, "parameters"], [9, 10, "type"], [10, 11, "name"], [9, 12, "name"], [0, 13, "throws"], [0, 14, "body"], [14, 15, "modifiers"], [14, 16, "type"], [16, 17, "name"], [14, 18, "declarators"], [18, 19, "name"], [18, 20, "initializer"], [20, 21, "qualifier"], [20, 22, "member"], [0, 23, "body"], [23, 24, "modifiers"], [23, 25, "type"], [25, 26, "name"], [23, 27, "declarators"], [27, 28, "name"], [27, 29, "initializer"], [29, 30, "member"], [0, 31, "body"], [31, 32, "type"], [32, 33, "name"], [31, 34, "declarators"], [34, 35, "name"], [34, 36, "initializer"], [36, 37, "qualifier"], [36, 38, "member"], [36, 39, "arguments"], [39, 40, "member"], [36, 41, "arguments"], [41, 42, "member"], [36, 43, "arguments"], [43, 44, "member"], [0, 45, "body"], [45, 46, "type"], [46, 47, "name"], [45, 48, "declarators"], [48, 49, "name"], [48, 50, "initializer"], [50, 51, "type"], [51, 52, "name"], [50, 53, "arguments"], [53, 54, "member"], [0, 55, "body"], [55, 56, "expression"], [56, 57, "qualifier"], [56, 58, "member"], [0, 59, "body"], [59, 60, "type"], [60, 61, "name"], [59, 62, "declarators"], [62, 63, "name"], [62, 64, "initializer"], [64, 65, "qualifier"], [64, 66, "member"], [0, 67, "body"], [67, 68, "control"], [68, 69, "condition"], [69, 70, "operandl"], [70, 71, "member"], [69, 72, "operator"], [69, 73, "operandr"], [73, 74, "qualifier"], [73, 75, "member"], [68, 76, "update"], [76, 77, "expressionl"], [77, 78, "member"], [76, 79, "type"], [76, 80, "value"], [80, 81, "qualifier"], [80, 82, "member"], [67, 83, "body"], [83, 84, "statements"], [84, 85, "type"], [85, 86, "name"], [84, 87, "declarators"], [87, 88, "name"], [87, 89, "initializer"], [89, 90, "qualifier"], [89, 91, "member"], [83, 92, "statements"], [92, 93, "expression"], [93, 94, "qualifier"], [93, 95, "member"], [83, 96, "statements"], [96, 97, "type"], [97, 98, "name"], [96, 99, "declarators"], [99, 100, "name"], [99, 101, "initializer"], [101, 102, "qualifier"], [101, 103, "member"], [101, 104, "arguments"], [104, 105, "member"], [83, 106, "statements"], [106, 107, "condition"], [107, 108, "operandl"], [108, 109, "member"], [107, 110, "operator"], [107, 111, "operandr"], [111, 112, "value"], [106, 113, "then_statement"], [113, 114, "statements"], [114, 115, "condition"], [115, 116, "qualifier"], [115, 117, "member"], [115, 118, "arguments"], [118, 119, "member"], [115, 120, "arguments"], [120, 121, "member"], [115, 122, "arguments"], [122, 123, "member"], [115, 124, "arguments"], [124, 125, "member"], [114, 126, "then_statement"], [126, 127, "statements"], [114, 128, "else_statement"], [128, 129, "statements"], [129, 130, "condition"], [130, 131, "qualifier"], [130, 132, "member"], [130, 133, "arguments"], [133, 134, "member"], [130, 135, "arguments"], [135, 136, "member"], [135, 137, "arguments"], [137, 138, "member"], [135, 139, "arguments"], [139, 140, "member"], [135, 141, "arguments"], [141, 142, "member"], [129, 143, "then_statement"], [143, 144, "statements"], [144, 145, "expression"], [145, 146, "expressionl"], [146, 147, "member"], [145, 148, "type"], [145, 149, "value"], [149, 150, "qualifier"], [149, 151, "member"], [143, 152, "statements"], [152, 153, "type"], [153, 154, "name"], [152, 155, "declarators"], [155, 156, "name"], [143, 157, "statements"], [157, 158, "block"], [158, 159, "expression"], [159, 160, "expressionl"], [160, 161, "member"], [159, 162, "type"], [159, 163, "value"], [163, 164, "qualifier"], [163, 165, "member"], [163, 166, "arguments"], [166, 167, "member"], [163, 168, "arguments"], [168, 169, "member"], [157, 170, "catches"], [170, 171, "parameter"], [171, 172, "types"], [171, 173, "name"], [170, 174, "block"], [174, 175, "expression"], [175, 176, "member"], [175, 177, "arguments"], [177, 178, "member"], [175, 179, "arguments"], [179, 180, "qualifier"], [179, 181, "member"], [175, 182, "arguments"], [182, 183, "member"], [175, 184, "arguments"], [184, 185, "member"], [170, 186, "block"], [143, 187, "statements"], [187, 188, "condition"], [188, 189, "operandl"], [189, 190, "member"], [188, 191, "operator"], [188, 192, "operandr"], [192, 193, "qualifier"], [192, 194, "member"], [187, 195, "body"], [195, 196, "statements"], [196, 197, "expression"], [197, 198, "qualifier"], [197, 199, "member"], [195, 200, "statements"], [200, 201, "expression"], [201, 202, "qualifier"], [201, 203, "member"], [201, 204, "arguments"], [204, 205, "member"], [195, 206, "statements"], [206, 207, "expression"], [207, 208, "expressionl"], [208, 209, "member"], [207, 210, "type"], [207, 211, "value"], [211, 212, "qualifier"], [211, 213, "member"], [143, 214, "statements"], [214, 215, "condition"], [215, 216, "operandl"], [216, 217, "qualifier"], [216, 218, "member"], [215, 219, "operator"], [215, 220, "operandr"], [220, 221, "qualifier"], [220, 222, "member"], [214, 223, "then_statement"], [223, 224, "statements"], [224, 225, "expression"], [225, 226, "qualifier"], [225, 227, "member"], [225, 228, "arguments"], [228, 229, "value"], [143, 230, "statements"], [230, 231, "expression"], [231, 232, "qualifier"], [231, 233, "member"], [231, 234, "arguments"], [234, 235, "member"], [231, 236, "arguments"], [236, 237, "member"], [231, 238, "arguments"], [238, 239, "member"], [113, 240, "statements"], [83, 241, "statements"], [241, 242, "condition"], [242, 243, "qualifier"], [242, 244, "member"], [242, 245, "arguments"], [245, 246, "member"], [241, 247, "then_statement"], [247, 248, "statements"], [83, 249, "statements"], [249, 250, "type"], [250, 251, "name"], [249, 252, "declarators"], [252, 253, "name"], [252, 254, "initializer"], [254, 255, "qualifier"], [254, 256, "member"], [254, 257, "arguments"], [257, 258, "member"], [83, 259, "statements"], [259, 260, "condition"], [260, 261, "operandl"], [261, 262, "member"], [260, 263, "operator"], [260, 264, "operandr"], [264, 265, "value"], [259, 266, "then_statement"], [266, 267, "statements"], [267, 268, "expression"], [268, 269, "qualifier"], [268, 270, "member"], [268, 271, "arguments"], [271, 272, "member"], [268, 273, "arguments"], [273, 274, "qualifier"], [273, 275, "member"], [273, 276, "arguments"], [276, 277, "member"], [273, 278, "arguments"], [278, 279, "member"], [266, 280, "statements"], [83, 281, "statements"], [281, 282, "condition"], [282, 283, "qualifier"], [282, 284, "member"], [282, 285, "arguments"], [285, 286, "member"], [282, 287, "arguments"], [287, 288, "member"], [282, 289, "arguments"], [289, 290, "member"], [282, 291, "arguments"], [291, 292, "value"], [281, 293, "then_statement"], [293, 294, "statements"], [83, 295, "statements"], [295, 296, "condition"], [296, 297, "operandl"], [297, 298, "operandl"], [298, 299, "member"], [297, 300, "operator"], [297, 301, "operandr"], [301, 302, "value"], [296, 303, "operator"], [296, 304, "operandr"], [304, 305, "qualifier"], [304, 306, "member"], [304, 307, "arguments"], [307, 308, "member"], [295, 309, "then_statement"], [309, 310, "statements"], [310, 311, "expression"], [311, 312, "member"], [311, 313, "arguments"], [313, 314, "member"], [311, 315, "arguments"], [315, 316, "member"], [311, 317, "arguments"], [317, 318, "member"], [311, 319, "arguments"], [319, 320, "member"], [309, 321, "statements"], [83, 322, "statements"], [322, 323, "condition"], [323, 324, "operandl"], [324, 325, "member"], [323, 326, "operator"], [323, 327, "operandr"], [327, 328, "value"], [322, 329, "then_statement"], [329, 330, "statements"], [330, 331, "expression"], [331, 332, "qualifier"], [331, 333, "member"], [331, 334, "arguments"], [334, 335, "member"], [331, 336, "arguments"], [336, 337, "member"], [331, 338, "arguments"], [338, 339, "qualifier"], [338, 340, "member"], [338, 341, "arguments"], [341, 342, "member"], [338, 343, "arguments"], [343, 344, "member"], [0, 345, "body"], [345, 346, "block"], [346, 347, "expression"], [347, 348, "qualifier"], [347, 349, "member"], [347, 350, "arguments"], [350, 351, "member"], [347, 352, "arguments"], [352, 353, "member"], [347, 354, "arguments"], [354, 355, "member"], [347, 356, "arguments"], [356, 357, "member"], [345, 358, "catches"], [358, 359, "parameter"], [359, 360, "types"], [359, 361, "name"], [358, 362, "block"], [362, 363, "expression"], [363, 364, "member"], [363, 365, "arguments"], [365, 366, "member"], [363, 367, "arguments"], [367, 368, "member"], [358, 369, "block"], [369, 370, "expression"], [370, 371, "value"]], "rem_roots": [115], "add_roots": []}, {"id": 77, "mappings": {"JsonParser.NumberType": "VAR_1", "h": "VAR_2", "typeHint": "VAR_3", "BIG_INTEGER": "VAR_4", "visitor": "VAR_5", "_isInt": "VAR_6", "BigDecimal": "TYPE_1", "JavaType": "TYPE_2", "JsonFormatVisitorWrapper": "TYPE_3", "JsonMappingException": "TYPE_4", "Class": "TYPE_5", "expectNumberFormat": "METHOD_1", "handledType": "METHOD_2", "visitIntFormat": "METHOD_3", "acceptJsonFormatVisitor": "METHOD_4", "visitFloatFormat": "METHOD_5"}, "nodes": ["MethodDeclaration", "public", "void", "acceptJsonFormatVisitor", "FormalParameter", "ReferenceType", "JsonFormatVisitorWrapper", "visitor", "FormalParameter", "ReferenceType", "JavaType", "typeHint", "JsonMappingException", "IfStatement", "MemberReference", "_isInt", "BlockStatement", "StatementExpression", "MethodInvocation", "visitIntFormat", "MemberReference", "visitor", "MemberReference", "typeHint", "MemberReference", "JsonParser.NumberType", "BIG_INTEGER", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "Class", "TypeArgument", "?", "VariableDeclarator", "h", "MethodInvocation", "handledType", "IfStatement", "BinaryOperation", "MemberReference", "h", "==", "ClassReference", "ReferenceType", "BigDecimal", "BlockStatement", "StatementExpression", "MethodInvocation", "visitFloatFormat", "MemberReference", "visitor", "MemberReference", "typeHint", "MemberReference", "JsonParser.NumberType", "BIG_INTEGER", "BlockStatement", "StatementExpression", "MethodInvocation", "visitor", "expectNumberFormat", "MemberReference", "typeHint"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [0, 3, "name"], [0, 4, "parameters"], [4, 5, "type"], [5, 6, "name"], [4, 7, "name"], [0, 8, "parameters"], [8, 9, "type"], [9, 10, "name"], [8, 11, "name"], [0, 12, "throws"], [0, 13, "body"], [13, 14, "condition"], [14, 15, "member"], [13, 16, "then_statement"], [16, 17, "statements"], [17, 18, "expression"], [18, 19, "member"], [18, 20, "arguments"], [20, 21, "member"], [18, 22, "arguments"], [22, 23, "member"], [18, 24, "arguments"], [24, 25, "qualifier"], [24, 26, "member"], [13, 27, "else_statement"], [27, 28, "statements"], [28, 29, "type"], [29, 30, "name"], [29, 31, "arguments"], [31, 32, "pattern_type"], [28, 33, "declarators"], [33, 34, "name"], [33, 35, "initializer"], [35, 36, "member"], [27, 37, "statements"], [37, 38, "condition"], [38, 39, "operandl"], [39, 40, "member"], [38, 41, "operator"], [38, 42, "operandr"], [42, 43, "type"], [43, 44, "name"], [37, 45, "then_statement"], [45, 46, "statements"], [46, 47, "expression"], [47, 48, "member"], [47, 49, "arguments"], [49, 50, "member"], [47, 51, "arguments"], [51, 52, "member"], [47, 53, "arguments"], [53, 54, "qualifier"], [53, 55, "member"], [37, 56, "else_statement"], [56, 57, "statements"], [57, 58, "expression"], [58, 59, "qualifier"], [58, 60, "member"], [58, 61, "arguments"], [61, 62, "member"]], "rem_roots": [46], "add_roots": []}, {"id": 78, "mappings": {"_referencedType": "VAR_1", "_class": "VAR_2", "sb": "VAR_3", "StringBuilder": "TYPE_1", "getGenericSignature": "METHOD_1", "_classSignature": "METHOD_2", "append": "METHOD_3", "'<'": "CHAR_1", "';'": "CHAR_2"}, "nodes": ["MethodDeclaration", "public", "ReferenceType", "StringBuilder", "getGenericSignature", "FormalParameter", "ReferenceType", "StringBuilder", "sb", "StatementExpression", "MethodInvocation", "_classSignature", "MemberReference", "_class", "MemberReference", "sb", "Literal", "false", "StatementExpression", "MethodInvocation", "sb", "append", "Literal", "'<'", "StatementExpression", "Assignment", "MemberReference", "sb", "=", "MethodInvocation", "_referencedType", "getGenericSignature", "MemberReference", "sb", "StatementExpression", "MethodInvocation", "sb", "append", "Literal", "';'", "ReturnStatement", "MemberReference", "sb"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [5, 8, "name"], [0, 9, "body"], [9, 10, "expression"], [10, 11, "member"], [10, 12, "arguments"], [12, 13, "member"], [10, 14, "arguments"], [14, 15, "member"], [10, 16, "arguments"], [16, 17, "value"], [0, 18, "body"], [18, 19, "expression"], [19, 20, "qualifier"], [19, 21, "member"], [19, 22, "arguments"], [22, 23, "value"], [0, 24, "body"], [24, 25, "expression"], [25, 26, "expressionl"], [26, 27, "member"], [25, 28, "type"], [25, 29, "value"], [29, 30, "qualifier"], [29, 31, "member"], [29, 32, "arguments"], [32, 33, "member"], [0, 34, "body"], [34, 35, "expression"], [35, 36, "qualifier"], [35, 37, "member"], [35, 38, "arguments"], [38, 39, "value"], [0, 40, "body"], [40, 41, "expression"], [41, 42, "member"]], "rem_roots": [34], "add_roots": []}, {"id": 79, "mappings": {"generator": "VAR_1", "id": "VAR_2", "forPojo": "VAR_3", "Object": "TYPE_1", "generateId": "METHOD_1"}, "nodes": ["MethodDeclaration", "public", "ReferenceType", "Object", "generateId", "FormalParameter", "ReferenceType", "Object", "forPojo", "StatementExpression", "Assignment", "MemberReference", "id", "=", "MethodInvocation", "generator", "generateId", "MemberReference", "forPojo", "ReturnStatement", "MemberReference", "id"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [5, 8, "name"], [0, 9, "body"], [9, 10, "expression"], [10, 11, "expressionl"], [11, 12, "member"], [10, 13, "type"], [10, 14, "value"], [14, 15, "qualifier"], [14, 16, "member"], [14, 17, "arguments"], [17, 18, "member"], [0, 19, "body"], [19, 20, "expression"], [20, 21, "member"]], "rem_roots": [9], "add_roots": []}, {"id": 80, "mappings": {"generator": "VAR_1", "id": "VAR_2", "forPojo": "VAR_3", "Object": "TYPE_1", "generateId": "METHOD_1"}, "nodes": ["MethodDeclaration", "public", "ReferenceType", "Object", "generateId", "FormalParameter", "ReferenceType", "Object", "forPojo", "StatementExpression", "Assignment", "MemberReference", "id", "=", "MethodInvocation", "generator", "generateId", "MemberReference", "forPojo", "ReturnStatement", "MemberReference", "id"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [5, 8, "name"], [0, 9, "body"], [9, 10, "expression"], [10, 11, "expressionl"], [11, 12, "member"], [10, 13, "type"], [10, 14, "value"], [14, 15, "qualifier"], [14, 16, "member"], [14, 17, "arguments"], [17, 18, "member"], [0, 19, "body"], [19, 20, "expression"], [20, 21, "member"]], "rem_roots": [9], "add_roots": []}, {"id": 81, "mappings": {"msg": "VAR_1", "ctxt": "VAR_2", "cause": "VAR_3", "iae": "VAR_4", "ob": "VAR_5", "VALUE_EMBEDDED_OBJECT": "VAR_6", "me": "VAR_7", "text": "VAR_8", "START_ARRAY": "VAR_9", "m2": "VAR_10", "e": "VAR_11", "p": "VAR_12", "t": "VAR_13", "_valueClass": "VAR_14", "MalformedURLException": "TYPE_1", "String": "TYPE_2", "T": "TYPE_3", "JsonMappingException": "TYPE_4", "DeserializationContext": "TYPE_5", "JsonToken": "TYPE_6", "IllegalArgumentException": "TYPE_7", "JsonParser": "TYPE_8", "IOException": "TYPE_9", "Exception": "TYPE_10", "Object": "TYPE_11", "getClass": "METHOD_1", "getValueAsString": "METHOD_2", "_deserialize": "METHOD_3", "isAssignableFrom": "METHOD_4", "_deserializeFromEmptyString": "METHOD_5", "trim": "METHOD_6", "getCurrentToken": "METHOD_7", "_deserializeFromArray": "METHOD_8", "deserialize": "METHOD_9", "_deserializeEmbedded": "METHOD_10", "weirdStringException": "METHOD_11", "length": "METHOD_12", "initCause": "METHOD_13", "getMessage": "METHOD_14", "getEmbeddedObject": "METHOD_15", "handleUnexpectedToken": "METHOD_16", "0": "INT_1", "\", problem: \"": "STRING_1", "\"not a valid textual representation\"": "STRING_2"}, "nodes": ["MethodDeclaration", "public", "ReferenceType", "T", "deserialize", "FormalParameter", "ReferenceType", "JsonParser", "p", "FormalParameter", "ReferenceType", "DeserializationContext", "ctxt", "IOException", "LocalVariableDeclaration", "ReferenceType", "String", "VariableDeclarator", "text", "MethodInvocation", "p", "getValueAsString", "IfStatement", "BinaryOperation", "MemberReference", "text", "!=", "Literal", "null", "BlockStatement", "IfStatement", "BinaryOperation", "BinaryOperation", "MethodInvocation", "text", "length", "==", "Literal", "0", "||", "BinaryOperation", "Assignment", "MemberReference", "text", "=", "MethodInvocation", "text", "trim", "==", "Literal", "0", "BlockStatement", "ReturnStatement", "MethodInvocation", "_deserializeFromEmptyString", "LocalVariableDeclaration", "ReferenceType", "Exception", "VariableDeclarator", "cause", "Literal", "null", "TryStatement", "IfStatement", "BinaryOperation", "MethodInvocation", "_deserialize", "MemberReference", "text", "MemberReference", "ctxt", "!=", "Literal", "null", "BlockStatement", "ReturnStatement", "MethodInvocation", "_deserialize", "MemberReference", "text", "MemberReference", "ctxt", "CatchClause", "CatchClauseParameter", "IllegalArgumentException", "iae", "StatementExpression", "Assignment", "MemberReference", "cause", "=", "MemberReference", "iae", "CatchClause", "CatchClauseParameter", "MalformedURLException", "me", "StatementExpression", "Assignment", "MemberReference", "cause", "=", "MemberReference", "me", "LocalVariableDeclaration", "ReferenceType", "String", "VariableDeclarator", "msg", "Literal", "\"not a valid textual representation\"", "IfStatement", "BinaryOperation", "MemberReference", "cause", "!=", "Literal", "null", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "String", "VariableDeclarator", "m2", "MethodInvocation", "cause", "getMessage", "IfStatement", "BinaryOperation", "MemberReference", "m2", "!=", "Literal", "null", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "msg", "=", "BinaryOperation", "BinaryOperation", "MemberReference", "msg", "+", "Literal", "\", problem: \"", "+", "MemberReference", "m2", "LocalVariableDeclaration", "ReferenceType", "JsonMappingException", "VariableDeclarator", "e", "MethodInvocation", "ctxt", "weirdStringException", "MemberReference", "text", "MemberReference", "_valueClass", "MemberReference", "msg", "IfStatement", "BinaryOperation", "MemberReference", "cause", "!=", "Literal", "null", "BlockStatement", "StatementExpression", "MethodInvocation", "e", "initCause", "MemberReference", "cause", "ThrowStatement", "MemberReference", "e", "LocalVariableDeclaration", "ReferenceType", "JsonToken", "VariableDeclarator", "t", "MethodInvocation", "p", "getCurrentToken", "IfStatement", "BinaryOperation", "MemberReference", "t", "==", "MemberReference", "JsonToken", "START_ARRAY", "BlockStatement", "ReturnStatement", "MethodInvocation", "_deserializeFromArray", "MemberReference", "p", "MemberReference", "ctxt", "IfStatement", "BinaryOperation", "MemberReference", "t", "==", "MemberReference", "JsonToken", "VALUE_EMBEDDED_OBJECT", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "Object", "VariableDeclarator", "ob", "MethodInvocation", "p", "getEmbeddedObject", "IfStatement", "BinaryOperation", "MemberReference", "ob", "==", "Literal", "null", "BlockStatement", "ReturnStatement", "Literal", "null", "IfStatement", "MethodInvocation", "_valueClass", "isAssignableFrom", "MethodInvocation", "ob", "getClass", "BlockStatement", "ReturnStatement", "Cast", "ReferenceType", "T", "MemberReference", "ob", "ReturnStatement", "MethodInvocation", "_deserializeEmbedded", "MemberReference", "ob", "MemberReference", "ctxt", "ReturnStatement", "Cast", "ReferenceType", "T", "MethodInvocation", "ctxt", "handleUnexpectedToken", "MemberReference", "_valueClass", "MemberReference", "p"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [5, 8, "name"], [0, 9, "parameters"], [9, 10, "type"], [10, 11, "name"], [9, 12, "name"], [0, 13, "throws"], [0, 14, "body"], [14, 15, "type"], [15, 16, "name"], [14, 17, "declarators"], [17, 18, "name"], [17, 19, "initializer"], [19, 20, "qualifier"], [19, 21, "member"], [0, 22, "body"], [22, 23, "condition"], [23, 24, "operandl"], [24, 25, "member"], [23, 26, "operator"], [23, 27, "operandr"], [27, 28, "value"], [22, 29, "then_statement"], [29, 30, "statements"], [30, 31, "condition"], [31, 32, "operandl"], [32, 33, "operandl"], [33, 34, "qualifier"], [33, 35, "member"], [32, 36, "operator"], [32, 37, "operandr"], [37, 38, "value"], [31, 39, "operator"], [31, 40, "operandr"], [40, 41, "operandl"], [41, 42, "expressionl"], [42, 43, "member"], [41, 44, "type"], [41, 45, "value"], [45, 46, "qualifier"], [45, 47, "member"], [40, 48, "operator"], [40, 49, "operandr"], [49, 50, "value"], [30, 51, "then_statement"], [51, 52, "statements"], [52, 53, "expression"], [53, 54, "member"], [29, 55, "statements"], [55, 56, "type"], [56, 57, "name"], [55, 58, "declarators"], [58, 59, "name"], [58, 60, "initializer"], [60, 61, "value"], [29, 62, "statements"], [62, 63, "block"], [63, 64, "condition"], [64, 65, "operandl"], [65, 66, "member"], [65, 67, "arguments"], [67, 68, "member"], [65, 69, "arguments"], [69, 70, "member"], [64, 71, "operator"], [64, 72, "operandr"], [72, 73, "value"], [63, 74, "then_statement"], [74, 75, "statements"], [75, 76, "expression"], [76, 77, "member"], [76, 78, "arguments"], [78, 79, "member"], [76, 80, "arguments"], [80, 81, "member"], [62, 82, "catches"], [82, 83, "parameter"], [83, 84, "types"], [83, 85, "name"], [82, 86, "block"], [86, 87, "expression"], [87, 88, "expressionl"], [88, 89, "member"], [87, 90, "type"], [87, 91, "value"], [91, 92, "member"], [62, 93, "catches"], [93, 94, "parameter"], [94, 95, "types"], [94, 96, "name"], [93, 97, "block"], [97, 98, "expression"], [98, 99, "expressionl"], [99, 100, "member"], [98, 101, "type"], [98, 102, "value"], [102, 103, "member"], [29, 104, "statements"], [104, 105, "type"], [105, 106, "name"], [104, 107, "declarators"], [107, 108, "name"], [107, 109, "initializer"], [109, 110, "value"], [29, 111, "statements"], [111, 112, "condition"], [112, 113, "operandl"], [113, 114, "member"], [112, 115, "operator"], [112, 116, "operandr"], [116, 117, "value"], [111, 118, "then_statement"], [118, 119, "statements"], [119, 120, "type"], [120, 121, "name"], [119, 122, "declarators"], [122, 123, "name"], [122, 124, "initializer"], [124, 125, "qualifier"], [124, 126, "member"], [118, 127, "statements"], [127, 128, "condition"], [128, 129, "operandl"], [129, 130, "member"], [128, 131, "operator"], [128, 132, "operandr"], [132, 133, "value"], [127, 134, "then_statement"], [134, 135, "statements"], [135, 136, "expression"], [136, 137, "expressionl"], [137, 138, "member"], [136, 139, "type"], [136, 140, "value"], [140, 141, "operandl"], [141, 142, "operandl"], [142, 143, "member"], [141, 144, "operator"], [141, 145, "operandr"], [145, 146, "value"], [140, 147, "operator"], [140, 148, "operandr"], [148, 149, "member"], [29, 150, "statements"], [150, 151, "type"], [151, 152, "name"], [150, 153, "declarators"], [153, 154, "name"], [153, 155, "initializer"], [155, 156, "qualifier"], [155, 157, "member"], [155, 158, "arguments"], [158, 159, "member"], [155, 160, "arguments"], [160, 161, "member"], [155, 162, "arguments"], [162, 163, "member"], [29, 164, "statements"], [164, 165, "condition"], [165, 166, "operandl"], [166, 167, "member"], [165, 168, "operator"], [165, 169, "operandr"], [169, 170, "value"], [164, 171, "then_statement"], [171, 172, "statements"], [172, 173, "expression"], [173, 174, "qualifier"], [173, 175, "member"], [173, 176, "arguments"], [176, 177, "member"], [29, 178, "statements"], [178, 179, "expression"], [179, 180, "member"], [0, 181, "body"], [181, 182, "type"], [182, 183, "name"], [181, 184, "declarators"], [184, 185, "name"], [184, 186, "initializer"], [186, 187, "qualifier"], [186, 188, "member"], [0, 189, "body"], [189, 190, "condition"], [190, 191, "operandl"], [191, 192, "member"], [190, 193, "operator"], [190, 194, "operandr"], [194, 195, "qualifier"], [194, 196, "member"], [189, 197, "then_statement"], [197, 198, "statements"], [198, 199, "expression"], [199, 200, "member"], [199, 201, "arguments"], [201, 202, "member"], [199, 203, "arguments"], [203, 204, "member"], [0, 205, "body"], [205, 206, "condition"], [206, 207, "operandl"], [207, 208, "member"], [206, 209, "operator"], [206, 210, "operandr"], [210, 211, "qualifier"], [210, 212, "member"], [205, 213, "then_statement"], [213, 214, "statements"], [214, 215, "type"], [215, 216, "name"], [214, 217, "declarators"], [217, 218, "name"], [217, 219, "initializer"], [219, 220, "qualifier"], [219, 221, "member"], [213, 222, "statements"], [222, 223, "condition"], [223, 224, "operandl"], [224, 225, "member"], [223, 226, "operator"], [223, 227, "operandr"], [227, 228, "value"], [222, 229, "then_statement"], [229, 230, "statements"], [230, 231, "expression"], [231, 232, "value"], [213, 233, "statements"], [233, 234, "condition"], [234, 235, "qualifier"], [234, 236, "member"], [234, 237, "arguments"], [237, 238, "qualifier"], [237, 239, "member"], [233, 240, "then_statement"], [240, 241, "statements"], [241, 242, "expression"], [242, 243, "type"], [243, 244, "name"], [242, 245, "expression"], [245, 246, "member"], [213, 247, "statements"], [247, 248, "expression"], [248, 249, "member"], [248, 250, "arguments"], [250, 251, "member"], [248, 252, "arguments"], [252, 253, "member"], [0, 254, "body"], [254, 255, "expression"], [255, 256, "type"], [256, 257, "name"], [255, 258, "expression"], [258, 259, "qualifier"], [258, 260, "member"], [258, 261, "arguments"], [261, 262, "member"], [258, 263, "arguments"], [263, 264, "member"]], "rem_roots": [63], "add_roots": []}, {"id": 82, "mappings": {"msg": "VAR_1", "ctxt": "VAR_2", "cause": "VAR_3", "iae": "VAR_4", "ob": "VAR_5", "VALUE_EMBEDDED_OBJECT": "VAR_6", "me": "VAR_7", "text": "VAR_8", "START_ARRAY": "VAR_9", "m2": "VAR_10", "e": "VAR_11", "p": "VAR_12", "t": "VAR_13", "_valueClass": "VAR_14", "MalformedURLException": "TYPE_1", "String": "TYPE_2", "T": "TYPE_3", "JsonMappingException": "TYPE_4", "DeserializationContext": "TYPE_5", "JsonToken": "TYPE_6", "IllegalArgumentException": "TYPE_7", "JsonParser": "TYPE_8", "IOException": "TYPE_9", "Exception": "TYPE_10", "Object": "TYPE_11", "getClass": "METHOD_1", "getValueAsString": "METHOD_2", "_deserialize": "METHOD_3", "isAssignableFrom": "METHOD_4", "_deserializeFromEmptyString": "METHOD_5", "trim": "METHOD_6", "getCurrentToken": "METHOD_7", "_deserializeFromArray": "METHOD_8", "deserialize": "METHOD_9", "_deserializeEmbedded": "METHOD_10", "weirdStringException": "METHOD_11", "length": "METHOD_12", "initCause": "METHOD_13", "getMessage": "METHOD_14", "getEmbeddedObject": "METHOD_15", "handleUnexpectedToken": "METHOD_16", "0": "INT_1", "\", problem: \"": "STRING_1", "\"not a valid textual representation\"": "STRING_2"}, "nodes": ["MethodDeclaration", "public", "ReferenceType", "T", "deserialize", "FormalParameter", "ReferenceType", "JsonParser", "p", "FormalParameter", "ReferenceType", "DeserializationContext", "ctxt", "IOException", "LocalVariableDeclaration", "ReferenceType", "String", "VariableDeclarator", "text", "MethodInvocation", "p", "getValueAsString", "IfStatement", "BinaryOperation", "MemberReference", "text", "!=", "Literal", "null", "BlockStatement", "IfStatement", "BinaryOperation", "BinaryOperation", "MethodInvocation", "text", "length", "==", "Literal", "0", "||", "BinaryOperation", "Assignment", "MemberReference", "text", "=", "MethodInvocation", "text", "trim", "==", "Literal", "0", "BlockStatement", "ReturnStatement", "MethodInvocation", "_deserializeFromEmptyString", "LocalVariableDeclaration", "ReferenceType", "Exception", "VariableDeclarator", "cause", "Literal", "null", "TryStatement", "IfStatement", "BinaryOperation", "MethodInvocation", "_deserialize", "MemberReference", "text", "MemberReference", "ctxt", "!=", "Literal", "null", "BlockStatement", "ReturnStatement", "MethodInvocation", "_deserialize", "MemberReference", "text", "MemberReference", "ctxt", "CatchClause", "CatchClauseParameter", "IllegalArgumentException", "iae", "StatementExpression", "Assignment", "MemberReference", "cause", "=", "MemberReference", "iae", "CatchClause", "CatchClauseParameter", "MalformedURLException", "me", "StatementExpression", "Assignment", "MemberReference", "cause", "=", "MemberReference", "me", "LocalVariableDeclaration", "ReferenceType", "String", "VariableDeclarator", "msg", "Literal", "\"not a valid textual representation\"", "IfStatement", "BinaryOperation", "MemberReference", "cause", "!=", "Literal", "null", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "String", "VariableDeclarator", "m2", "MethodInvocation", "cause", "getMessage", "IfStatement", "BinaryOperation", "MemberReference", "m2", "!=", "Literal", "null", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "msg", "=", "BinaryOperation", "BinaryOperation", "MemberReference", "msg", "+", "Literal", "\", problem: \"", "+", "MemberReference", "m2", "LocalVariableDeclaration", "ReferenceType", "JsonMappingException", "VariableDeclarator", "e", "MethodInvocation", "ctxt", "weirdStringException", "MemberReference", "text", "MemberReference", "_valueClass", "MemberReference", "msg", "IfStatement", "BinaryOperation", "MemberReference", "cause", "!=", "Literal", "null", "BlockStatement", "StatementExpression", "MethodInvocation", "e", "initCause", "MemberReference", "cause", "ThrowStatement", "MemberReference", "e", "LocalVariableDeclaration", "ReferenceType", "JsonToken", "VariableDeclarator", "t", "MethodInvocation", "p", "getCurrentToken", "IfStatement", "BinaryOperation", "MemberReference", "t", "==", "MemberReference", "JsonToken", "START_ARRAY", "BlockStatement", "ReturnStatement", "MethodInvocation", "_deserializeFromArray", "MemberReference", "p", "MemberReference", "ctxt", "IfStatement", "BinaryOperation", "MemberReference", "t", "==", "MemberReference", "JsonToken", "VALUE_EMBEDDED_OBJECT", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "Object", "VariableDeclarator", "ob", "MethodInvocation", "p", "getEmbeddedObject", "IfStatement", "BinaryOperation", "MemberReference", "ob", "==", "Literal", "null", "BlockStatement", "ReturnStatement", "Literal", "null", "IfStatement", "MethodInvocation", "_valueClass", "isAssignableFrom", "MethodInvocation", "ob", "getClass", "BlockStatement", "ReturnStatement", "Cast", "ReferenceType", "T", "MemberReference", "ob", "ReturnStatement", "MethodInvocation", "_deserializeEmbedded", "MemberReference", "ob", "MemberReference", "ctxt", "ReturnStatement", "Cast", "ReferenceType", "T", "MethodInvocation", "ctxt", "handleUnexpectedToken", "MemberReference", "_valueClass", "MemberReference", "p"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [5, 8, "name"], [0, 9, "parameters"], [9, 10, "type"], [10, 11, "name"], [9, 12, "name"], [0, 13, "throws"], [0, 14, "body"], [14, 15, "type"], [15, 16, "name"], [14, 17, "declarators"], [17, 18, "name"], [17, 19, "initializer"], [19, 20, "qualifier"], [19, 21, "member"], [0, 22, "body"], [22, 23, "condition"], [23, 24, "operandl"], [24, 25, "member"], [23, 26, "operator"], [23, 27, "operandr"], [27, 28, "value"], [22, 29, "then_statement"], [29, 30, "statements"], [30, 31, "condition"], [31, 32, "operandl"], [32, 33, "operandl"], [33, 34, "qualifier"], [33, 35, "member"], [32, 36, "operator"], [32, 37, "operandr"], [37, 38, "value"], [31, 39, "operator"], [31, 40, "operandr"], [40, 41, "operandl"], [41, 42, "expressionl"], [42, 43, "member"], [41, 44, "type"], [41, 45, "value"], [45, 46, "qualifier"], [45, 47, "member"], [40, 48, "operator"], [40, 49, "operandr"], [49, 50, "value"], [30, 51, "then_statement"], [51, 52, "statements"], [52, 53, "expression"], [53, 54, "member"], [29, 55, "statements"], [55, 56, "type"], [56, 57, "name"], [55, 58, "declarators"], [58, 59, "name"], [58, 60, "initializer"], [60, 61, "value"], [29, 62, "statements"], [62, 63, "block"], [63, 64, "condition"], [64, 65, "operandl"], [65, 66, "member"], [65, 67, "arguments"], [67, 68, "member"], [65, 69, "arguments"], [69, 70, "member"], [64, 71, "operator"], [64, 72, "operandr"], [72, 73, "value"], [63, 74, "then_statement"], [74, 75, "statements"], [75, 76, "expression"], [76, 77, "member"], [76, 78, "arguments"], [78, 79, "member"], [76, 80, "arguments"], [80, 81, "member"], [62, 82, "catches"], [82, 83, "parameter"], [83, 84, "types"], [83, 85, "name"], [82, 86, "block"], [86, 87, "expression"], [87, 88, "expressionl"], [88, 89, "member"], [87, 90, "type"], [87, 91, "value"], [91, 92, "member"], [62, 93, "catches"], [93, 94, "parameter"], [94, 95, "types"], [94, 96, "name"], [93, 97, "block"], [97, 98, "expression"], [98, 99, "expressionl"], [99, 100, "member"], [98, 101, "type"], [98, 102, "value"], [102, 103, "member"], [29, 104, "statements"], [104, 105, "type"], [105, 106, "name"], [104, 107, "declarators"], [107, 108, "name"], [107, 109, "initializer"], [109, 110, "value"], [29, 111, "statements"], [111, 112, "condition"], [112, 113, "operandl"], [113, 114, "member"], [112, 115, "operator"], [112, 116, "operandr"], [116, 117, "value"], [111, 118, "then_statement"], [118, 119, "statements"], [119, 120, "type"], [120, 121, "name"], [119, 122, "declarators"], [122, 123, "name"], [122, 124, "initializer"], [124, 125, "qualifier"], [124, 126, "member"], [118, 127, "statements"], [127, 128, "condition"], [128, 129, "operandl"], [129, 130, "member"], [128, 131, "operator"], [128, 132, "operandr"], [132, 133, "value"], [127, 134, "then_statement"], [134, 135, "statements"], [135, 136, "expression"], [136, 137, "expressionl"], [137, 138, "member"], [136, 139, "type"], [136, 140, "value"], [140, 141, "operandl"], [141, 142, "operandl"], [142, 143, "member"], [141, 144, "operator"], [141, 145, "operandr"], [145, 146, "value"], [140, 147, "operator"], [140, 148, "operandr"], [148, 149, "member"], [29, 150, "statements"], [150, 151, "type"], [151, 152, "name"], [150, 153, "declarators"], [153, 154, "name"], [153, 155, "initializer"], [155, 156, "qualifier"], [155, 157, "member"], [155, 158, "arguments"], [158, 159, "member"], [155, 160, "arguments"], [160, 161, "member"], [155, 162, "arguments"], [162, 163, "member"], [29, 164, "statements"], [164, 165, "condition"], [165, 166, "operandl"], [166, 167, "member"], [165, 168, "operator"], [165, 169, "operandr"], [169, 170, "value"], [164, 171, "then_statement"], [171, 172, "statements"], [172, 173, "expression"], [173, 174, "qualifier"], [173, 175, "member"], [173, 176, "arguments"], [176, 177, "member"], [29, 178, "statements"], [178, 179, "expression"], [179, 180, "member"], [0, 181, "body"], [181, 182, "type"], [182, 183, "name"], [181, 184, "declarators"], [184, 185, "name"], [184, 186, "initializer"], [186, 187, "qualifier"], [186, 188, "member"], [0, 189, "body"], [189, 190, "condition"], [190, 191, "operandl"], [191, 192, "member"], [190, 193, "operator"], [190, 194, "operandr"], [194, 195, "qualifier"], [194, 196, "member"], [189, 197, "then_statement"], [197, 198, "statements"], [198, 199, "expression"], [199, 200, "member"], [199, 201, "arguments"], [201, 202, "member"], [199, 203, "arguments"], [203, 204, "member"], [0, 205, "body"], [205, 206, "condition"], [206, 207, "operandl"], [207, 208, "member"], [206, 209, "operator"], [206, 210, "operandr"], [210, 211, "qualifier"], [210, 212, "member"], [205, 213, "then_statement"], [213, 214, "statements"], [214, 215, "type"], [215, 216, "name"], [214, 217, "declarators"], [217, 218, "name"], [217, 219, "initializer"], [219, 220, "qualifier"], [219, 221, "member"], [213, 222, "statements"], [222, 223, "condition"], [223, 224, "operandl"], [224, 225, "member"], [223, 226, "operator"], [223, 227, "operandr"], [227, 228, "value"], [222, 229, "then_statement"], [229, 230, "statements"], [230, 231, "expression"], [231, 232, "value"], [213, 233, "statements"], [233, 234, "condition"], [234, 235, "qualifier"], [234, 236, "member"], [234, 237, "arguments"], [237, 238, "qualifier"], [237, 239, "member"], [233, 240, "then_statement"], [240, 241, "statements"], [241, 242, "expression"], [242, 243, "type"], [243, 244, "name"], [242, 245, "expression"], [245, 246, "member"], [213, 247, "statements"], [247, 248, "expression"], [248, 249, "member"], [248, 250, "arguments"], [250, 251, "member"], [248, 252, "arguments"], [252, 253, "member"], [0, 254, "body"], [254, 255, "expression"], [255, 256, "type"], [256, 257, "name"], [255, 258, "expression"], [258, 259, "qualifier"], [258, 260, "member"], [258, 261, "arguments"], [261, 262, "member"], [258, 263, "arguments"], [263, 264, "member"]], "rem_roots": [63], "add_roots": []}, {"id": 83, "mappings": {"ctxt": "VAR_1", "oneNotInjected": "VAR_2", "creators": "VAR_3", "paramName": "VAR_4", "candidate": "VAR_5", "param": "VAR_6", "beanDesc": "VAR_7", "injectId": "VAR_8", "useProps": "VAR_9", "paramDef": "VAR_10", "properties": "VAR_11", "AnnotatedParameter": "TYPE_1", "JacksonInject": "TYPE_2", "JsonMappingException": "TYPE_3", "BeanPropertyDefinition": "TYPE_4", "DeserializationContext": "TYPE_5", "PropertyName": "TYPE_6", "SettableBeanProperty": "TYPE_7", "BeanDescription": "TYPE_8", "Value": "TYPE_9", "POJOPropertyBuilder": "TYPE_10", "CreatorCollector": "TYPE_11", "CreatorCandidate": "TYPE_12", "findOnlyParamWithoutInjection": "METHOD_1", "findImplicitParamName": "METHOD_2", "_addExplicitDelegatingCreator": "METHOD_3", "parameter": "METHOD_4", "propertyDef": "METHOD_5", "creator": "METHOD_6", "_addExplicitAnyCreator": "METHOD_7", "removeConstructors": "METHOD_8", "addPropertyCreator": "METHOD_9", "couldSerialize": "METHOD_10", "_handleSingleArgumentCreator": "METHOD_11", "paramCount": "METHOD_12", "constructCreatorProperty": "METHOD_13", "explicitParamName": "METHOD_14", "_addExplicitPropertyCreator": "METHOD_15", "injection": "METHOD_16", "0": "INT_1", "1": "INT_2"}, "nodes": ["MethodDeclaration", "protected", "void", "_addExplicitAnyCreator", "FormalParameter", "ReferenceType", "DeserializationContext", "ctxt", "FormalParameter", "ReferenceType", "BeanDescription", "beanDesc", "FormalParameter", "ReferenceType", "CreatorCollector", "creators", "FormalParameter", "ReferenceType", "CreatorCandidate", "candidate", "JsonMappingException", "IfStatement", "BinaryOperation", "Literal", "1", "!=", "MethodInvocation", "candidate", "paramCount", "BlockStatement", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "oneNotInjected", "MethodInvocation", "candidate", "findOnlyParamWithoutInjection", "IfStatement", "BinaryOperation", "MemberReference", "oneNotInjected", ">=", "Literal", "0", "BlockStatement", "IfStatement", "BinaryOperation", "MethodInvocation", "candidate", "paramName", "MemberReference", "oneNotInjected", "==", "Literal", "null", "BlockStatement", "StatementExpression", "MethodInvocation", "_addExplicitDelegatingCreator", "MemberReference", "ctxt", "MemberReference", "beanDesc", "MemberReference", "creators", "MemberReference", "candidate", "ReturnStatement", "StatementExpression", "MethodInvocation", "_addExplicitPropertyCreator", "MemberReference", "ctxt", "MemberReference", "beanDesc", "MemberReference", "creators", "MemberReference", "candidate", "ReturnStatement", "LocalVariableDeclaration", "ReferenceType", "AnnotatedParameter", "VariableDeclarator", "param", "MethodInvocation", "candidate", "parameter", "Literal", "0", "LocalVariableDeclaration", "ReferenceType", "JacksonInject", "ReferenceType", "Value", "VariableDeclarator", "injectId", "MethodInvocation", "candidate", "injection", "Literal", "0", "LocalVariableDeclaration", "ReferenceType", "PropertyName", "VariableDeclarator", "paramName", "MethodInvocation", "candidate", "explicitParamName", "Literal", "0", "LocalVariableDeclaration", "ReferenceType", "BeanPropertyDefinition", "VariableDeclarator", "paramDef", "MethodInvocation", "candidate", "propertyDef", "Literal", "0", "LocalVariableDeclaration", "BasicType", "boolean", "VariableDeclarator", "useProps", "BinaryOperation", "BinaryOperation", "MemberReference", "paramName", "!=", "Literal", "null", "||", "BinaryOperation", "MemberReference", "injectId", "!=", "Literal", "null", "IfStatement", "BinaryOperation", "MemberReference", "!", "useProps", "&&", "BinaryOperation", "MemberReference", "paramDef", "!=", "Literal", "null", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "paramName", "=", "MethodInvocation", "candidate", "findImplicitParamName", "Literal", "0", "StatementExpression", "Assignment", "MemberReference", "useProps", "=", "BinaryOperation", "BinaryOperation", "MemberReference", "paramName", "!=", "Literal", "null", "&&", "MethodInvocation", "paramDef", "couldSerialize", "IfStatement", "MemberReference", "useProps", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "SettableBeanProperty", "None", "VariableDeclarator", "properties", "ArrayCreator", "ReferenceType", "SettableBeanProperty", "None", "ArrayInitializer", "MethodInvocation", "constructCreatorProperty", "MemberReference", "ctxt", "MemberReference", "beanDesc", "MemberReference", "paramName", "Literal", "0", "MemberReference", "param", "MemberReference", "injectId", "StatementExpression", "MethodInvocation", "creators", "addPropertyCreator", "MethodInvocation", "candidate", "creator", "Literal", "true", "MemberReference", "properties", "ReturnStatement", "StatementExpression", "MethodInvocation", "_handleSingleArgumentCreator", "MemberReference", "creators", "MethodInvocation", "candidate", "creator", "Literal", "true", "Literal", "true", "IfStatement", "BinaryOperation", "MemberReference", "paramDef", "!=", "Literal", "null", "BlockStatement", "StatementExpression", "Cast", "ReferenceType", "POJOPropertyBuilder", "MemberReference", "paramDef", "MethodInvocation", "removeConstructors"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [0, 3, "name"], [0, 4, "parameters"], [4, 5, "type"], [5, 6, "name"], [4, 7, "name"], [0, 8, "parameters"], [8, 9, "type"], [9, 10, "name"], [8, 11, "name"], [0, 12, "parameters"], [12, 13, "type"], [13, 14, "name"], [12, 15, "name"], [0, 16, "parameters"], [16, 17, "type"], [17, 18, "name"], [16, 19, "name"], [0, 20, "throws"], [0, 21, "body"], [21, 22, "condition"], [22, 23, "operandl"], [23, 24, "value"], [22, 25, "operator"], [22, 26, "operandr"], [26, 27, "qualifier"], [26, 28, "member"], [21, 29, "then_statement"], [29, 30, "statements"], [30, 31, "type"], [31, 32, "name"], [30, 33, "declarators"], [33, 34, "name"], [33, 35, "initializer"], [35, 36, "qualifier"], [35, 37, "member"], [29, 38, "statements"], [38, 39, "condition"], [39, 40, "operandl"], [40, 41, "member"], [39, 42, "operator"], [39, 43, "operandr"], [43, 44, "value"], [38, 45, "then_statement"], [45, 46, "statements"], [46, 47, "condition"], [47, 48, "operandl"], [48, 49, "qualifier"], [48, 50, "member"], [48, 51, "arguments"], [51, 52, "member"], [47, 53, "operator"], [47, 54, "operandr"], [54, 55, "value"], [46, 56, "then_statement"], [56, 57, "statements"], [57, 58, "expression"], [58, 59, "member"], [58, 60, "arguments"], [60, 61, "member"], [58, 62, "arguments"], [62, 63, "member"], [58, 64, "arguments"], [64, 65, "member"], [58, 66, "arguments"], [66, 67, "member"], [56, 68, "statements"], [29, 69, "statements"], [69, 70, "expression"], [70, 71, "member"], [70, 72, "arguments"], [72, 73, "member"], [70, 74, "arguments"], [74, 75, "member"], [70, 76, "arguments"], [76, 77, "member"], [70, 78, "arguments"], [78, 79, "member"], [29, 80, "statements"], [0, 81, "body"], [81, 82, "type"], [82, 83, "name"], [81, 84, "declarators"], [84, 85, "name"], [84, 86, "initializer"], [86, 87, "qualifier"], [86, 88, "member"], [86, 89, "arguments"], [89, 90, "value"], [0, 91, "body"], [91, 92, "type"], [92, 93, "name"], [92, 94, "sub_type"], [94, 95, "name"], [91, 96, "declarators"], [96, 97, "name"], [96, 98, "initializer"], [98, 99, "qualifier"], [98, 100, "member"], [98, 101, "arguments"], [101, 102, "value"], [0, 103, "body"], [103, 104, "type"], [104, 105, "name"], [103, 106, "declarators"], [106, 107, "name"], [106, 108, "initializer"], [108, 109, "qualifier"], [108, 110, "member"], [108, 111, "arguments"], [111, 112, "value"], [0, 113, "body"], [113, 114, "type"], [114, 115, "name"], [113, 116, "declarators"], [116, 117, "name"], [116, 118, "initializer"], [118, 119, "qualifier"], [118, 120, "member"], [118, 121, "arguments"], [121, 122, "value"], [0, 123, "body"], [123, 124, "type"], [124, 125, "name"], [123, 126, "declarators"], [126, 127, "name"], [126, 128, "initializer"], [128, 129, "operandl"], [129, 130, "operandl"], [130, 131, "member"], [129, 132, "operator"], [129, 133, "operandr"], [133, 134, "value"], [128, 135, "operator"], [128, 136, "operandr"], [136, 137, "operandl"], [137, 138, "member"], [136, 139, "operator"], [136, 140, "operandr"], [140, 141, "value"], [0, 142, "body"], [142, 143, "condition"], [143, 144, "operandl"], [144, 145, "prefix_operators"], [144, 146, "member"], [143, 147, "operator"], [143, 148, "operandr"], [148, 149, "operandl"], [149, 150, "member"], [148, 151, "operator"], [148, 152, "operandr"], [152, 153, "value"], [142, 154, "then_statement"], [154, 155, "statements"], [155, 156, "expression"], [156, 157, "expressionl"], [157, 158, "member"], [156, 159, "type"], [156, 160, "value"], [160, 161, "qualifier"], [160, 162, "member"], [160, 163, "arguments"], [163, 164, "value"], [154, 165, "statements"], [165, 166, "expression"], [166, 167, "expressionl"], [167, 168, "member"], [166, 169, "type"], [166, 170, "value"], [170, 171, "operandl"], [171, 172, "operandl"], [172, 173, "member"], [171, 174, "operator"], [171, 175, "operandr"], [175, 176, "value"], [170, 177, "operator"], [170, 178, "operandr"], [178, 179, "qualifier"], [178, 180, "member"], [0, 181, "body"], [181, 182, "condition"], [182, 183, "member"], [181, 184, "then_statement"], [184, 185, "statements"], [185, 186, "type"], [186, 187, "name"], [186, 188, "dimensions"], [185, 189, "declarators"], [189, 190, "name"], [189, 191, "initializer"], [191, 192, "type"], [192, 193, "name"], [191, 194, "dimensions"], [191, 195, "initializer"], [195, 196, "initializers"], [196, 197, "member"], [196, 198, "arguments"], [198, 199, "member"], [196, 200, "arguments"], [200, 201, "member"], [196, 202, "arguments"], [202, 203, "member"], [196, 204, "arguments"], [204, 205, "value"], [196, 206, "arguments"], [206, 207, "member"], [196, 208, "arguments"], [208, 209, "member"], [184, 210, "statements"], [210, 211, "expression"], [211, 212, "qualifier"], [211, 213, "member"], [211, 214, "arguments"], [214, 215, "qualifier"], [214, 216, "member"], [211, 217, "arguments"], [217, 218, "value"], [211, 219, "arguments"], [219, 220, "member"], [184, 221, "statements"], [0, 222, "body"], [222, 223, "expression"], [223, 224, "member"], [223, 225, "arguments"], [225, 226, "member"], [223, 227, "arguments"], [227, 228, "qualifier"], [227, 229, "member"], [223, 230, "arguments"], [230, 231, "value"], [223, 232, "arguments"], [232, 233, "value"], [0, 234, "body"], [234, 235, "condition"], [235, 236, "operandl"], [236, 237, "member"], [235, 238, "operator"], [235, 239, "operandr"], [239, 240, "value"], [234, 241, "then_statement"], [241, 242, "statements"], [242, 243, "expression"], [243, 244, "type"], [244, 245, "name"], [243, 246, "expression"], [246, 247, "member"], [243, 248, "selectors"], [248, 249, "member"]], "rem_roots": [155], "add_roots": []}, {"id": 84, "mappings": {"gen": "VAR_1", "ctxt": "VAR_2", "_value": "VAR_3", "JsonSerializable": "TYPE_1", "JsonGenerator": "TYPE_2", "IOException": "TYPE_3", "SerializerProvider": "TYPE_4", "serialize": "METHOD_1", "writeObject": "METHOD_2", "defaultSerializeNull": "METHOD_3"}, "nodes": ["MethodDeclaration", "public final", "void", "serialize", "FormalParameter", "ReferenceType", "JsonGenerator", "gen", "FormalParameter", "ReferenceType", "SerializerProvider", "ctxt", "IOException", "IfStatement", "BinaryOperation", "MemberReference", "_value", "==", "Literal", "null", "BlockStatement", "StatementExpression", "MethodInvocation", "ctxt", "defaultSerializeNull", "MemberReference", "gen", "IfStatement", "BinaryOperation", "MemberReference", "_value", "instanceof", "ReferenceType", "JsonSerializable", "BlockStatement", "StatementExpression", "Cast", "ReferenceType", "JsonSerializable", "MemberReference", "_value", "MethodInvocation", "serialize", "MemberReference", "gen", "MemberReference", "ctxt", "BlockStatement", "StatementExpression", "MethodInvocation", "gen", "writeObject", "MemberReference", "_value"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [0, 3, "name"], [0, 4, "parameters"], [4, 5, "type"], [5, 6, "name"], [4, 7, "name"], [0, 8, "parameters"], [8, 9, "type"], [9, 10, "name"], [8, 11, "name"], [0, 12, "throws"], [0, 13, "body"], [13, 14, "condition"], [14, 15, "operandl"], [15, 16, "member"], [14, 17, "operator"], [14, 18, "operandr"], [18, 19, "value"], [13, 20, "then_statement"], [20, 21, "statements"], [21, 22, "expression"], [22, 23, "qualifier"], [22, 24, "member"], [22, 25, "arguments"], [25, 26, "member"], [13, 27, "else_statement"], [27, 28, "condition"], [28, 29, "operandl"], [29, 30, "member"], [28, 31, "operator"], [28, 32, "operandr"], [32, 33, "name"], [27, 34, "then_statement"], [34, 35, "statements"], [35, 36, "expression"], [36, 37, "type"], [37, 38, "name"], [36, 39, "expression"], [39, 40, "member"], [36, 41, "selectors"], [41, 42, "member"], [41, 43, "arguments"], [43, 44, "member"], [41, 45, "arguments"], [45, 46, "member"], [27, 47, "else_statement"], [47, 48, "statements"], [48, 49, "expression"], [49, 50, "qualifier"], [49, 51, "member"], [49, 52, "arguments"], [52, 53, "member"]], "rem_roots": [48], "add_roots": []}, {"id": 85, "mappings": {"_beanType": "VAR_1", "ctxt": "VAR_2", "values": "VAR_3", "extProp": "VAR_4", "_tokens": "VAR_5", "typeProp": "VAR_6", "len": "VAR_7", "prop": "VAR_8", "buffer": "VAR_9", "bean": "VAR_10", "creator": "VAR_11", "length": "VAR_12", "i": "VAR_13", "_typeIds": "VAR_14", "p": "VAR_15", "_properties": "VAR_16", "typeId": "VAR_17", "PropertyValueBuffer": "TYPE_1", "String": "TYPE_2", "ExtTypedProperty": "TYPE_3", "DeserializationContext": "TYPE_4", "JsonParser": "TYPE_5", "SettableBeanProperty": "TYPE_6", "IOException": "TYPE_7", "PropertyBasedCreator": "TYPE_8", "Object": "TYPE_9", "getName": "METHOD_1", "getDefaultTypeId": "METHOD_2", "hasDefaultType": "METHOD_3", "_deserialize": "METHOD_4", "getProperty": "METHOD_5", "set": "METHOD_6", "getTypePropertyName": "METHOD_7", "build": "METHOD_8", "getTypeProperty": "METHOD_9", "assignParameter": "METHOD_10", "complete": "METHOD_11", "reportInputMismatch": "METHOD_12", "getCreatorIndex": "METHOD_13", "0": "INT_1", "\"Missing external type id property '%s'\"": "STRING_1", "\"Missing property '%s' for external type id '%s'\"": "STRING_2"}, "nodes": ["MethodDeclaration", "public", "ReferenceType", "Object", "complete", "FormalParameter", "ReferenceType", "JsonParser", "p", "FormalParameter", "ReferenceType", "DeserializationContext", "ctxt", "FormalParameter", "ReferenceType", "PropertyValueBuffer", "buffer", "FormalParameter", "ReferenceType", "PropertyBasedCreator", "creator", "IOException", "LocalVariableDeclaration", "final", "BasicType", "int", "VariableDeclarator", "len", "MemberReference", "_properties", "length", "LocalVariableDeclaration", "ReferenceType", "Object", "None", "VariableDeclarator", "values", "ArrayCreator", "ReferenceType", "Object", "MemberReference", "len", "ForStatement", "ForControl", "VariableDeclaration", "BasicType", "int", "VariableDeclarator", "i", "Literal", "0", "BinaryOperation", "MemberReference", "i", "<", "MemberReference", "len", "MemberReference", "++", "i", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "String", "VariableDeclarator", "typeId", "MemberReference", "_typeIds", "ArraySelector", "MemberReference", "i", "LocalVariableDeclaration", "final", "ReferenceType", "ExtTypedProperty", "VariableDeclarator", "extProp", "MemberReference", "_properties", "ArraySelector", "MemberReference", "i", "IfStatement", "BinaryOperation", "MemberReference", "typeId", "==", "Literal", "null", "BlockStatement", "IfStatement", "BinaryOperation", "MemberReference", "_tokens", "ArraySelector", "MemberReference", "i", "==", "Literal", "null", "BlockStatement", "ContinueStatement", "IfStatement", "MethodInvocation", "!", "extProp", "hasDefaultType", "BlockStatement", "StatementExpression", "MethodInvocation", "ctxt", "reportInputMismatch", "MemberReference", "_beanType", "Literal", "\"Missing external type id property '%s'\"", "MethodInvocation", "extProp", "getTypePropertyName", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "typeId", "=", "MethodInvocation", "extProp", "getDefaultTypeId", "IfStatement", "BinaryOperation", "MemberReference", "_tokens", "ArraySelector", "MemberReference", "i", "==", "Literal", "null", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "SettableBeanProperty", "VariableDeclarator", "prop", "MethodInvocation", "extProp", "getProperty", "StatementExpression", "MethodInvocation", "ctxt", "reportInputMismatch", "MemberReference", "_beanType", "Literal", "\"Missing property '%s' for external type id '%s'\"", "MethodInvocation", "prop", "getName", "MemberReference", "_properties", "ArraySelector", "MemberReference", "i", "MethodInvocation", "getTypePropertyName", "StatementExpression", "Assignment", "MemberReference", "values", "ArraySelector", "MemberReference", "i", "=", "MethodInvocation", "_deserialize", "MemberReference", "p", "MemberReference", "ctxt", "MemberReference", "i", "MemberReference", "typeId", "LocalVariableDeclaration", "final", "ReferenceType", "SettableBeanProperty", "VariableDeclarator", "prop", "MethodInvocation", "extProp", "getProperty", "IfStatement", "BinaryOperation", "MethodInvocation", "prop", "getCreatorIndex", ">=", "Literal", "0", "BlockStatement", "StatementExpression", "MethodInvocation", "buffer", "assignParameter", "MemberReference", "prop", "MemberReference", "values", "ArraySelector", "MemberReference", "i", "LocalVariableDeclaration", "ReferenceType", "SettableBeanProperty", "VariableDeclarator", "typeProp", "MethodInvocation", "extProp", "getTypeProperty", "IfStatement", "BinaryOperation", "BinaryOperation", "MemberReference", "typeProp", "!=", "Literal", "null", "&&", "BinaryOperation", "MethodInvocation", "typeProp", "getCreatorIndex", ">=", "Literal", "0", "BlockStatement", "StatementExpression", "MethodInvocation", "buffer", "assignParameter", "MemberReference", "typeProp", "MemberReference", "typeId", "LocalVariableDeclaration", "ReferenceType", "Object", "VariableDeclarator", "bean", "MethodInvocation", "creator", "build", "MemberReference", "ctxt", "MemberReference", "buffer", "ForStatement", "ForControl", "VariableDeclaration", "BasicType", "int", "VariableDeclarator", "i", "Literal", "0", "BinaryOperation", "MemberReference", "i", "<", "MemberReference", "len", "MemberReference", "++", "i", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "SettableBeanProperty", "VariableDeclarator", "prop", "MemberReference", "_properties", "ArraySelector", "MemberReference", "i", "MethodInvocation", "getProperty", "IfStatement", "BinaryOperation", "MethodInvocation", "prop", "getCreatorIndex", "<", "Literal", "0", "BlockStatement", "StatementExpression", "MethodInvocation", "prop", "set", "MemberReference", "bean", "MemberReference", "values", "ArraySelector", "MemberReference", "i", "ReturnStatement", "MemberReference", "bean"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [5, 8, "name"], [0, 9, "parameters"], [9, 10, "type"], [10, 11, "name"], [9, 12, "name"], [0, 13, "parameters"], [13, 14, "type"], [14, 15, "name"], [13, 16, "name"], [0, 17, "parameters"], [17, 18, "type"], [18, 19, "name"], [17, 20, "name"], [0, 21, "throws"], [0, 22, "body"], [22, 23, "modifiers"], [22, 24, "type"], [24, 25, "name"], [22, 26, "declarators"], [26, 27, "name"], [26, 28, "initializer"], [28, 29, "qualifier"], [28, 30, "member"], [0, 31, "body"], [31, 32, "type"], [32, 33, "name"], [32, 34, "dimensions"], [31, 35, "declarators"], [35, 36, "name"], [35, 37, "initializer"], [37, 38, "type"], [38, 39, "name"], [37, 40, "dimensions"], [40, 41, "member"], [0, 42, "body"], [42, 43, "control"], [43, 44, "init"], [44, 45, "type"], [45, 46, "name"], [44, 47, "declarators"], [47, 48, "name"], [47, 49, "initializer"], [49, 50, "value"], [43, 51, "condition"], [51, 52, "operandl"], [52, 53, "member"], [51, 54, "operator"], [51, 55, "operandr"], [55, 56, "member"], [43, 57, "update"], [57, 58, "prefix_operators"], [57, 59, "member"], [42, 60, "body"], [60, 61, "statements"], [61, 62, "type"], [62, 63, "name"], [61, 64, "declarators"], [64, 65, "name"], [64, 66, "initializer"], [66, 67, "member"], [66, 68, "selectors"], [68, 69, "index"], [69, 70, "member"], [60, 71, "statements"], [71, 72, "modifiers"], [71, 73, "type"], [73, 74, "name"], [71, 75, "declarators"], [75, 76, "name"], [75, 77, "initializer"], [77, 78, "member"], [77, 79, "selectors"], [79, 80, "index"], [80, 81, "member"], [60, 82, "statements"], [82, 83, "condition"], [83, 84, "operandl"], [84, 85, "member"], [83, 86, "operator"], [83, 87, "operandr"], [87, 88, "value"], [82, 89, "then_statement"], [89, 90, "statements"], [90, 91, "condition"], [91, 92, "operandl"], [92, 93, "member"], [92, 94, "selectors"], [94, 95, "index"], [95, 96, "member"], [91, 97, "operator"], [91, 98, "operandr"], [98, 99, "value"], [90, 100, "then_statement"], [100, 101, "statements"], [89, 102, "statements"], [102, 103, "condition"], [103, 104, "prefix_operators"], [103, 105, "qualifier"], [103, 106, "member"], [102, 107, "then_statement"], [107, 108, "statements"], [108, 109, "expression"], [109, 110, "qualifier"], [109, 111, "member"], [109, 112, "arguments"], [112, 113, "member"], [109, 114, "arguments"], [114, 115, "value"], [109, 116, "arguments"], [116, 117, "qualifier"], [116, 118, "member"], [102, 119, "else_statement"], [119, 120, "statements"], [120, 121, "expression"], [121, 122, "expressionl"], [122, 123, "member"], [121, 124, "type"], [121, 125, "value"], [125, 126, "qualifier"], [125, 127, "member"], [82, 128, "else_statement"], [128, 129, "condition"], [129, 130, "operandl"], [130, 131, "member"], [130, 132, "selectors"], [132, 133, "index"], [133, 134, "member"], [129, 135, "operator"], [129, 136, "operandr"], [136, 137, "value"], [128, 138, "then_statement"], [138, 139, "statements"], [139, 140, "type"], [140, 141, "name"], [139, 142, "declarators"], [142, 143, "name"], [142, 144, "initializer"], [144, 145, "qualifier"], [144, 146, "member"], [138, 147, "statements"], [147, 148, "expression"], [148, 149, "qualifier"], [148, 150, "member"], [148, 151, "arguments"], [151, 152, "member"], [148, 153, "arguments"], [153, 154, "value"], [148, 155, "arguments"], [155, 156, "qualifier"], [155, 157, "member"], [148, 158, "arguments"], [158, 159, "member"], [158, 160, "selectors"], [160, 161, "index"], [161, 162, "member"], [158, 163, "selectors"], [163, 164, "member"], [60, 165, "statements"], [165, 166, "expression"], [166, 167, "expressionl"], [167, 168, "member"], [167, 169, "selectors"], [169, 170, "index"], [170, 171, "member"], [166, 172, "type"], [166, 173, "value"], [173, 174, "member"], [173, 175, "arguments"], [175, 176, "member"], [173, 177, "arguments"], [177, 178, "member"], [173, 179, "arguments"], [179, 180, "member"], [173, 181, "arguments"], [181, 182, "member"], [60, 183, "statements"], [183, 184, "modifiers"], [183, 185, "type"], [185, 186, "name"], [183, 187, "declarators"], [187, 188, "name"], [187, 189, "initializer"], [189, 190, "qualifier"], [189, 191, "member"], [60, 192, "statements"], [192, 193, "condition"], [193, 194, "operandl"], [194, 195, "qualifier"], [194, 196, "member"], [193, 197, "operator"], [193, 198, "operandr"], [198, 199, "value"], [192, 200, "then_statement"], [200, 201, "statements"], [201, 202, "expression"], [202, 203, "qualifier"], [202, 204, "member"], [202, 205, "arguments"], [205, 206, "member"], [202, 207, "arguments"], [207, 208, "member"], [207, 209, "selectors"], [209, 210, "index"], [210, 211, "member"], [200, 212, "statements"], [212, 213, "type"], [213, 214, "name"], [212, 215, "declarators"], [215, 216, "name"], [215, 217, "initializer"], [217, 218, "qualifier"], [217, 219, "member"], [200, 220, "statements"], [220, 221, "condition"], [221, 222, "operandl"], [222, 223, "operandl"], [223, 224, "member"], [222, 225, "operator"], [222, 226, "operandr"], [226, 227, "value"], [221, 228, "operator"], [221, 229, "operandr"], [229, 230, "operandl"], [230, 231, "qualifier"], [230, 232, "member"], [229, 233, "operator"], [229, 234, "operandr"], [234, 235, "value"], [220, 236, "then_statement"], [236, 237, "statements"], [237, 238, "expression"], [238, 239, "qualifier"], [238, 240, "member"], [238, 241, "arguments"], [241, 242, "member"], [238, 243, "arguments"], [243, 244, "member"], [0, 245, "body"], [245, 246, "type"], [246, 247, "name"], [245, 248, "declarators"], [248, 249, "name"], [248, 250, "initializer"], [250, 251, "qualifier"], [250, 252, "member"], [250, 253, "arguments"], [253, 254, "member"], [250, 255, "arguments"], [255, 256, "member"], [0, 257, "body"], [257, 258, "control"], [258, 259, "init"], [259, 260, "type"], [260, 261, "name"], [259, 262, "declarators"], [262, 263, "name"], [262, 264, "initializer"], [264, 265, "value"], [258, 266, "condition"], [266, 267, "operandl"], [267, 268, "member"], [266, 269, "operator"], [266, 270, "operandr"], [270, 271, "member"], [258, 272, "update"], [272, 273, "prefix_operators"], [272, 274, "member"], [257, 275, "body"], [275, 276, "statements"], [276, 277, "type"], [277, 278, "name"], [276, 279, "declarators"], [279, 280, "name"], [279, 281, "initializer"], [281, 282, "member"], [281, 283, "selectors"], [283, 284, "index"], [284, 285, "member"], [281, 286, "selectors"], [286, 287, "member"], [275, 288, "statements"], [288, 289, "condition"], [289, 290, "operandl"], [290, 291, "qualifier"], [290, 292, "member"], [289, 293, "operator"], [289, 294, "operandr"], [294, 295, "value"], [288, 296, "then_statement"], [296, 297, "statements"], [297, 298, "expression"], [298, 299, "qualifier"], [298, 300, "member"], [298, 301, "arguments"], [301, 302, "member"], [298, 303, "arguments"], [303, 304, "member"], [303, 305, "selectors"], [305, 306, "index"], [306, 307, "member"], [0, 308, "body"], [308, 309, "expression"], [309, 310, "member"]], "rem_roots": [237], "add_roots": []}, {"id": 86, "mappings": {"src": "VAR_1", "_rootNameLookup": "VAR_2", "XmlSerializerProvider": "TYPE_1"}, "nodes": ["ConstructorDeclaration", "protected", "XmlSerializerProvider", "FormalParameter", "ReferenceType", "XmlSerializerProvider", "src", "StatementExpression", "SuperConstructorInvocation", "MemberReference", "src", "StatementExpression", "Assignment", "MemberReference", "_rootNameLookup", "=", "MemberReference", "src", "_rootNameLookup"], "edges": [[0, 1, "modifiers"], [0, 2, "name"], [0, 3, "parameters"], [3, 4, "type"], [4, 5, "name"], [3, 6, "name"], [0, 7, "body"], [7, 8, "expression"], [8, 9, "arguments"], [9, 10, "member"], [0, 11, "body"], [11, 12, "expression"], [12, 13, "expressionl"], [13, 14, "member"], [12, 15, "type"], [12, 16, "value"], [16, 17, "qualifier"], [16, 18, "member"]], "rem_roots": [11], "add_roots": []}, {"id": 87, "mappings": {"SelfClosingStartTag": "VAR_1", "c": "VAR_2", "Data": "VAR_3", "r": "VAR_4", "t": "VAR_5", "BeforeAttributeName": "VAR_6", "name": "VAR_7", "t.tagPending": "VAR_8", "t.dataBuffer": "VAR_9", "String": "TYPE_1", "Tokeniser": "TYPE_2", "CharacterReader": "TYPE_3", "consume": "METHOD_1", "advance": "METHOD_2", "matchesLetter": "METHOD_3", "emitTagPending": "METHOD_4", "read": "METHOD_5", "consumeLetterSequence": "METHOD_6", "toLowerCase": "METHOD_7", "isEmpty": "METHOD_8", "anythingElse": "METHOD_9", "transition": "METHOD_10", "appendTagName": "METHOD_11", "isAppropriateEndTagToken": "METHOD_12", "append": "METHOD_13", "'\\f'": "CHAR_1", "'>'": "CHAR_2", "'\\t'": "CHAR_3", "'\\n'": "CHAR_4", "' '": "CHAR_5", "'/'": "CHAR_6"}, "nodes": ["MethodDeclaration", "void", "read", "FormalParameter", "ReferenceType", "Tokeniser", "t", "FormalParameter", "ReferenceType", "CharacterReader", "r", "IfStatement", "MethodInvocation", "r", "matchesLetter", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "String", "VariableDeclarator", "name", "MethodInvocation", "r", "consumeLetterSequence", "StatementExpression", "MethodInvocation", "t.tagPending", "appendTagName", "MethodInvocation", "name", "toLowerCase", "StatementExpression", "MethodInvocation", "t.dataBuffer", "append", "MemberReference", "name", "StatementExpression", "MethodInvocation", "r", "advance", "ReturnStatement", "IfStatement", "BinaryOperation", "MethodInvocation", "t", "isAppropriateEndTagToken", "&&", "MethodInvocation", "!", "r", "isEmpty", "BlockStatement", "LocalVariableDeclaration", "BasicType", "char", "VariableDeclarator", "c", "MethodInvocation", "r", "consume", "SwitchStatement", "MemberReference", "c", "SwitchStatementCase", "Literal", "'\\t'", "Literal", "'\\n'", "Literal", "'\\f'", "Literal", "' '", "StatementExpression", "MethodInvocation", "t", "transition", "MemberReference", "BeforeAttributeName", "BreakStatement", "SwitchStatementCase", "Literal", "'/'", "StatementExpression", "MethodInvocation", "t", "transition", "MemberReference", "SelfClosingStartTag", "BreakStatement", "SwitchStatementCase", "Literal", "'>'", "StatementExpression", "MethodInvocation", "t", "emitTagPending", "StatementExpression", "MethodInvocation", "t", "transition", "MemberReference", "Data", "BreakStatement", "SwitchStatementCase", "StatementExpression", "MethodInvocation", "t.dataBuffer", "append", "MemberReference", "c", "StatementExpression", "MethodInvocation", "anythingElse", "MemberReference", "t", "MemberReference", "r", "BreakStatement", "BlockStatement", "StatementExpression", "MethodInvocation", "anythingElse", "MemberReference", "t", "MemberReference", "r"], "edges": [[0, 1, "return_type"], [0, 2, "name"], [0, 3, "parameters"], [3, 4, "type"], [4, 5, "name"], [3, 6, "name"], [0, 7, "parameters"], [7, 8, "type"], [8, 9, "name"], [7, 10, "name"], [0, 11, "body"], [11, 12, "condition"], [12, 13, "qualifier"], [12, 14, "member"], [11, 15, "then_statement"], [15, 16, "statements"], [16, 17, "type"], [17, 18, "name"], [16, 19, "declarators"], [19, 20, "name"], [19, 21, "initializer"], [21, 22, "qualifier"], [21, 23, "member"], [15, 24, "statements"], [24, 25, "expression"], [25, 26, "qualifier"], [25, 27, "member"], [25, 28, "arguments"], [28, 29, "qualifier"], [28, 30, "member"], [15, 31, "statements"], [31, 32, "expression"], [32, 33, "qualifier"], [32, 34, "member"], [32, 35, "arguments"], [35, 36, "member"], [15, 37, "statements"], [37, 38, "expression"], [38, 39, "qualifier"], [38, 40, "member"], [15, 41, "statements"], [0, 42, "body"], [42, 43, "condition"], [43, 44, "operandl"], [44, 45, "qualifier"], [44, 46, "member"], [43, 47, "operator"], [43, 48, "operandr"], [48, 49, "prefix_operators"], [48, 50, "qualifier"], [48, 51, "member"], [42, 52, "then_statement"], [52, 53, "statements"], [53, 54, "type"], [54, 55, "name"], [53, 56, "declarators"], [56, 57, "name"], [56, 58, "initializer"], [58, 59, "qualifier"], [58, 60, "member"], [52, 61, "statements"], [61, 62, "expression"], [62, 63, "member"], [61, 64, "cases"], [64, 65, "case"], [65, 66, "value"], [64, 67, "case"], [67, 68, "value"], [64, 69, "case"], [69, 70, "value"], [64, 71, "case"], [71, 72, "value"], [64, 73, "statements"], [73, 74, "expression"], [74, 75, "qualifier"], [74, 76, "member"], [74, 77, "arguments"], [77, 78, "member"], [64, 79, "statements"], [61, 80, "cases"], [80, 81, "case"], [81, 82, "value"], [80, 83, "statements"], [83, 84, "expression"], [84, 85, "qualifier"], [84, 86, "member"], [84, 87, "arguments"], [87, 88, "member"], [80, 89, "statements"], [61, 90, "cases"], [90, 91, "case"], [91, 92, "value"], [90, 93, "statements"], [93, 94, "expression"], [94, 95, "qualifier"], [94, 96, "member"], [90, 97, "statements"], [97, 98, "expression"], [98, 99, "qualifier"], [98, 100, "member"], [98, 101, "arguments"], [101, 102, "member"], [90, 103, "statements"], [61, 104, "cases"], [104, 105, "statements"], [105, 106, "expression"], [106, 107, "qualifier"], [106, 108, "member"], [106, 109, "arguments"], [109, 110, "member"], [104, 111, "statements"], [111, 112, "expression"], [112, 113, "member"], [112, 114, "arguments"], [114, 115, "member"], [112, 116, "arguments"], [116, 117, "member"], [104, 118, "statements"], [42, 119, "else_statement"], [119, 120, "statements"], [120, 121, "expression"], [121, 122, "member"], [121, 123, "arguments"], [123, 124, "member"], [121, 125, "arguments"], [125, 126, "member"]], "rem_roots": [37], "add_roots": []}, {"id": 88, "mappings": {"offset": "VAR_1", "last": "VAR_2", "length": "VAR_3", "i": "VAR_4", "j": "VAR_5", "input": "VAR_6", "startChar": "VAR_7", "pos": "VAR_8", "seq": "VAR_9", "CharSequence": "TYPE_1", "nextIndexOf": "METHOD_1", "charAt": "METHOD_2", "0": "INT_1", "1": "INT_2"}, "nodes": ["MethodDeclaration", "BasicType", "int", "nextIndexOf", "FormalParameter", "ReferenceType", "CharSequence", "seq", "LocalVariableDeclaration", "BasicType", "char", "VariableDeclarator", "startChar", "MethodInvocation", "seq", "charAt", "Literal", "0", "ForStatement", "ForControl", "VariableDeclaration", "BasicType", "int", "VariableDeclarator", "offset", "MemberReference", "pos", "BinaryOperation", "MemberReference", "offset", "<", "MemberReference", "length", "MemberReference", "offset", "++", "BlockStatement", "IfStatement", "BinaryOperation", "MemberReference", "startChar", "!=", "MemberReference", "input", "ArraySelector", "MemberReference", "offset", "WhileStatement", "BinaryOperation", "BinaryOperation", "MemberReference", "++", "offset", "<", "MemberReference", "length", "&&", "BinaryOperation", "MemberReference", "startChar", "!=", "MemberReference", "input", "ArraySelector", "MemberReference", "offset", "Statement", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "i", "BinaryOperation", "MemberReference", "offset", "+", "Literal", "1", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "last", "BinaryOperation", "BinaryOperation", "MemberReference", "i", "+", "MethodInvocation", "seq", "length", "-", "Literal", "1", "IfStatement", "BinaryOperation", "MemberReference", "offset", "<", "MemberReference", "length", "BlockStatement", "ForStatement", "ForControl", "VariableDeclaration", "BasicType", "int", "VariableDeclarator", "j", "Literal", "1", "BinaryOperation", "BinaryOperation", "MemberReference", "i", "<", "MemberReference", "last", "&&", "BinaryOperation", "MethodInvocation", "seq", "charAt", "MemberReference", "j", "==", "MemberReference", "input", "ArraySelector", "MemberReference", "i", "MemberReference", "i", "++", "MemberReference", "j", "++", "Statement", "IfStatement", "BinaryOperation", "MemberReference", "i", "==", "MemberReference", "last", "ReturnStatement", "BinaryOperation", "MemberReference", "offset", "-", "MemberReference", "pos", "ReturnStatement", "Literal", "-", "1"], "edges": [[0, 1, "return_type"], [1, 2, "name"], [0, 3, "name"], [0, 4, "parameters"], [4, 5, "type"], [5, 6, "name"], [4, 7, "name"], [0, 8, "body"], [8, 9, "type"], [9, 10, "name"], [8, 11, "declarators"], [11, 12, "name"], [11, 13, "initializer"], [13, 14, "qualifier"], [13, 15, "member"], [13, 16, "arguments"], [16, 17, "value"], [0, 18, "body"], [18, 19, "control"], [19, 20, "init"], [20, 21, "type"], [21, 22, "name"], [20, 23, "declarators"], [23, 24, "name"], [23, 25, "initializer"], [25, 26, "member"], [19, 27, "condition"], [27, 28, "operandl"], [28, 29, "member"], [27, 30, "operator"], [27, 31, "operandr"], [31, 32, "member"], [19, 33, "update"], [33, 34, "member"], [33, 35, "postfix_operators"], [18, 36, "body"], [36, 37, "statements"], [37, 38, "condition"], [38, 39, "operandl"], [39, 40, "member"], [38, 41, "operator"], [38, 42, "operandr"], [42, 43, "member"], [42, 44, "selectors"], [44, 45, "index"], [45, 46, "member"], [37, 47, "then_statement"], [47, 48, "condition"], [48, 49, "operandl"], [49, 50, "operandl"], [50, 51, "prefix_operators"], [50, 52, "member"], [49, 53, "operator"], [49, 54, "operandr"], [54, 55, "member"], [48, 56, "operator"], [48, 57, "operandr"], [57, 58, "operandl"], [58, 59, "member"], [57, 60, "operator"], [57, 61, "operandr"], [61, 62, "member"], [61, 63, "selectors"], [63, 64, "index"], [64, 65, "member"], [47, 66, "body"], [36, 67, "statements"], [67, 68, "type"], [68, 69, "name"], [67, 70, "declarators"], [70, 71, "name"], [70, 72, "initializer"], [72, 73, "operandl"], [73, 74, "member"], [72, 75, "operator"], [72, 76, "operandr"], [76, 77, "value"], [36, 78, "statements"], [78, 79, "type"], [79, 80, "name"], [78, 81, "declarators"], [81, 82, "name"], [81, 83, "initializer"], [83, 84, "operandl"], [84, 85, "operandl"], [85, 86, "member"], [84, 87, "operator"], [84, 88, "operandr"], [88, 89, "qualifier"], [88, 90, "member"], [83, 91, "operator"], [83, 92, "operandr"], [92, 93, "value"], [36, 94, "statements"], [94, 95, "condition"], [95, 96, "operandl"], [96, 97, "member"], [95, 98, "operator"], [95, 99, "operandr"], [99, 100, "member"], [94, 101, "then_statement"], [101, 102, "statements"], [102, 103, "control"], [103, 104, "init"], [104, 105, "type"], [105, 106, "name"], [104, 107, "declarators"], [107, 108, "name"], [107, 109, "initializer"], [109, 110, "value"], [103, 111, "condition"], [111, 112, "operandl"], [112, 113, "operandl"], [113, 114, "member"], [112, 115, "operator"], [112, 116, "operandr"], [116, 117, "member"], [111, 118, "operator"], [111, 119, "operandr"], [119, 120, "operandl"], [120, 121, "qualifier"], [120, 122, "member"], [120, 123, "arguments"], [123, 124, "member"], [119, 125, "operator"], [119, 126, "operandr"], [126, 127, "member"], [126, 128, "selectors"], [128, 129, "index"], [129, 130, "member"], [103, 131, "update"], [131, 132, "member"], [131, 133, "postfix_operators"], [103, 134, "update"], [134, 135, "member"], [134, 136, "postfix_operators"], [102, 137, "body"], [101, 138, "statements"], [138, 139, "condition"], [139, 140, "operandl"], [140, 141, "member"], [139, 142, "operator"], [139, 143, "operandr"], [143, 144, "member"], [138, 145, "then_statement"], [145, 146, "expression"], [146, 147, "operandl"], [147, 148, "member"], [146, 149, "operator"], [146, 150, "operandr"], [150, 151, "member"], [0, 152, "body"], [152, 153, "expression"], [153, 154, "prefix_operators"], [153, 155, "value"]], "rem_roots": [95], "add_roots": []}, {"id": 89, "mappings": {"systemId": "VAR_1", "baseUri": "VAR_2", "name": "VAR_3", "DocumentType": "VAR_4", "publicId": "VAR_5", "Validate": "TYPE_1", "String": "TYPE_2", "notEmpty": "METHOD_1", "attr": "METHOD_2", "\"publicId\"": "STRING_1", "\"name\"": "STRING_2", "\"systemId\"": "STRING_3"}, "nodes": ["ConstructorDeclaration", "public", "DocumentType", "FormalParameter", "ReferenceType", "String", "name", "FormalParameter", "ReferenceType", "String", "publicId", "FormalParameter", "ReferenceType", "String", "systemId", "FormalParameter", "ReferenceType", "String", "baseUri", "StatementExpression", "SuperConstructorInvocation", "MemberReference", "baseUri", "StatementExpression", "MethodInvocation", "Validate", "notEmpty", "MemberReference", "name", "StatementExpression", "MethodInvocation", "attr", "Literal", "\"name\"", "MemberReference", "name", "StatementExpression", "MethodInvocation", "attr", "Literal", "\"publicId\"", "MemberReference", "publicId", "StatementExpression", "MethodInvocation", "attr", "Literal", "\"systemId\"", "MemberReference", "systemId"], "edges": [[0, 1, "modifiers"], [0, 2, "name"], [0, 3, "parameters"], [3, 4, "type"], [4, 5, "name"], [3, 6, "name"], [0, 7, "parameters"], [7, 8, "type"], [8, 9, "name"], [7, 10, "name"], [0, 11, "parameters"], [11, 12, "type"], [12, 13, "name"], [11, 14, "name"], [0, 15, "parameters"], [15, 16, "type"], [16, 17, "name"], [15, 18, "name"], [0, 19, "body"], [19, 20, "expression"], [20, 21, "arguments"], [21, 22, "member"], [0, 23, "body"], [23, 24, "expression"], [24, 25, "qualifier"], [24, 26, "member"], [24, 27, "arguments"], [27, 28, "member"], [0, 29, "body"], [29, 30, "expression"], [30, 31, "member"], [30, 32, "arguments"], [32, 33, "value"], [30, 34, "arguments"], [34, 35, "member"], [0, 36, "body"], [36, 37, "expression"], [37, 38, "member"], [37, 39, "arguments"], [39, 40, "value"], [37, 41, "arguments"], [41, 42, "member"], [0, 43, "body"], [43, 44, "expression"], [44, 45, "member"], [44, 46, "arguments"], [46, 47, "value"], [44, 48, "arguments"], [48, 49, "member"]], "rem_roots": [23], "add_roots": []}, {"id": 90, "mappings": {"o": "VAR_1", "element": "VAR_2", "Element": "TYPE_1", "Object": "TYPE_2", "getClass": "METHOD_1", "equals": "METHOD_2"}, "nodes": ["MethodDeclaration", "public", "BasicType", "boolean", "equals", "FormalParameter", "ReferenceType", "Object", "o", "IfStatement", "BinaryOperation", "This", "==", "MemberReference", "o", "ReturnStatement", "Literal", "true", "IfStatement", "BinaryOperation", "BinaryOperation", "MemberReference", "o", "==", "Literal", "null", "||", "BinaryOperation", "MethodInvocation", "getClass", "!=", "MethodInvocation", "o", "getClass", "ReturnStatement", "Literal", "false", "IfStatement", "SuperMethodInvocation", "!", "equals", "MemberReference", "o", "ReturnStatement", "Literal", "false", "LocalVariableDeclaration", "ReferenceType", "Element", "VariableDeclarator", "element", "Cast", "ReferenceType", "Element", "MemberReference", "o", "ReturnStatement", "BinaryOperation", "This", "==", "MemberReference", "o"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [5, 8, "name"], [0, 9, "body"], [9, 10, "condition"], [10, 11, "operandl"], [10, 12, "operator"], [10, 13, "operandr"], [13, 14, "member"], [9, 15, "then_statement"], [15, 16, "expression"], [16, 17, "value"], [0, 18, "body"], [18, 19, "condition"], [19, 20, "operandl"], [20, 21, "operandl"], [21, 22, "member"], [20, 23, "operator"], [20, 24, "operandr"], [24, 25, "value"], [19, 26, "operator"], [19, 27, "operandr"], [27, 28, "operandl"], [28, 29, "member"], [27, 30, "operator"], [27, 31, "operandr"], [31, 32, "qualifier"], [31, 33, "member"], [18, 34, "then_statement"], [34, 35, "expression"], [35, 36, "value"], [0, 37, "body"], [37, 38, "condition"], [38, 39, "prefix_operators"], [38, 40, "member"], [38, 41, "arguments"], [41, 42, "member"], [37, 43, "then_statement"], [43, 44, "expression"], [44, 45, "value"], [0, 46, "body"], [46, 47, "type"], [47, 48, "name"], [46, 49, "declarators"], [49, 50, "name"], [49, 51, "initializer"], [51, 52, "type"], [52, 53, "name"], [51, 54, "expression"], [54, 55, "member"], [0, 56, "body"], [56, 57, "expression"], [57, 58, "operandl"], [57, 59, "operator"], [57, 60, "operandr"], [60, 61, "member"]], "rem_roots": [56], "add_roots": []}, {"id": 91, "mappings": {"i": "VAR_1", "search": "VAR_2", "elements": "VAR_3", "element": "VAR_4", "E": "TYPE_1", "Element": "TYPE_2", "Integer": "TYPE_3", "Validate": "TYPE_4", "List": "TYPE_5", "notNull": "METHOD_1", "indexInList": "METHOD_2", "size": "METHOD_3", "get": "METHOD_4", "equals": "METHOD_5", "0": "INT_1"}, "nodes": ["MethodDeclaration", "static private", "TypeParameter", "E", "ReferenceType", "Element", "ReferenceType", "Integer", "indexInList", "FormalParameter", "ReferenceType", "Element", "search", "FormalParameter", "ReferenceType", "List", "TypeArgument", "ReferenceType", "E", "elements", "StatementExpression", "MethodInvocation", "Validate", "notNull", "MemberReference", "search", "StatementExpression", "MethodInvocation", "Validate", "notNull", "MemberReference", "elements", "ForStatement", "ForControl", "VariableDeclaration", "BasicType", "int", "VariableDeclarator", "i", "Literal", "0", "BinaryOperation", "MemberReference", "i", "<", "MethodInvocation", "elements", "size", "MemberReference", "i", "++", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "E", "VariableDeclarator", "element", "MethodInvocation", "elements", "get", "MemberReference", "i", "IfStatement", "MethodInvocation", "element", "equals", "MemberReference", "search", "ReturnStatement", "MemberReference", "i", "ReturnStatement", "Literal", "null"], "edges": [[0, 1, "modifiers"], [0, 2, "type_parameters"], [2, 3, "name"], [2, 4, "extends"], [4, 5, "name"], [0, 6, "return_type"], [6, 7, "name"], [0, 8, "name"], [0, 9, "parameters"], [9, 10, "type"], [10, 11, "name"], [9, 12, "name"], [0, 13, "parameters"], [13, 14, "type"], [14, 15, "name"], [14, 16, "arguments"], [16, 17, "type"], [17, 18, "name"], [13, 19, "name"], [0, 20, "body"], [20, 21, "expression"], [21, 22, "qualifier"], [21, 23, "member"], [21, 24, "arguments"], [24, 25, "member"], [0, 26, "body"], [26, 27, "expression"], [27, 28, "qualifier"], [27, 29, "member"], [27, 30, "arguments"], [30, 31, "member"], [0, 32, "body"], [32, 33, "control"], [33, 34, "init"], [34, 35, "type"], [35, 36, "name"], [34, 37, "declarators"], [37, 38, "name"], [37, 39, "initializer"], [39, 40, "value"], [33, 41, "condition"], [41, 42, "operandl"], [42, 43, "member"], [41, 44, "operator"], [41, 45, "operandr"], [45, 46, "qualifier"], [45, 47, "member"], [33, 48, "update"], [48, 49, "member"], [48, 50, "postfix_operators"], [32, 51, "body"], [51, 52, "statements"], [52, 53, "type"], [53, 54, "name"], [52, 55, "declarators"], [55, 56, "name"], [55, 57, "initializer"], [57, 58, "qualifier"], [57, 59, "member"], [57, 60, "arguments"], [60, 61, "member"], [51, 62, "statements"], [62, 63, "condition"], [63, 64, "qualifier"], [63, 65, "member"], [63, 66, "arguments"], [66, 67, "member"], [62, 68, "then_statement"], [68, 69, "expression"], [69, 70, "member"], [0, 71, "body"], [71, 72, "expression"], [72, 73, "value"]], "rem_roots": [63], "add_roots": []}, {"id": 92, "mappings": {"input": "VAR_1", "c": "VAR_2", "pos": "VAR_3", "isEmpty": "METHOD_1", "matchesLetter": "METHOD_2", "'Z'": "CHAR_1", "'z'": "CHAR_2", "'A'": "CHAR_3", "'a'": "CHAR_4"}, "nodes": ["MethodDeclaration", "BasicType", "boolean", "matchesLetter", "IfStatement", "MethodInvocation", "isEmpty", "ReturnStatement", "Literal", "false", "LocalVariableDeclaration", "BasicType", "char", "VariableDeclarator", "c", "MemberReference", "input", "ArraySelector", "MemberReference", "pos", "ReturnStatement", "BinaryOperation", "BinaryOperation", "BinaryOperation", "MemberReference", "c", ">=", "Literal", "'A'", "&&", "BinaryOperation", "MemberReference", "c", "<=", "Literal", "'Z'", "||", "BinaryOperation", "BinaryOperation", "MemberReference", "c", ">=", "Literal", "'a'", "&&", "BinaryOperation", "MemberReference", "c", "<=", "Literal", "'z'"], "edges": [[0, 1, "return_type"], [1, 2, "name"], [0, 3, "name"], [0, 4, "body"], [4, 5, "condition"], [5, 6, "member"], [4, 7, "then_statement"], [7, 8, "expression"], [8, 9, "value"], [0, 10, "body"], [10, 11, "type"], [11, 12, "name"], [10, 13, "declarators"], [13, 14, "name"], [13, 15, "initializer"], [15, 16, "member"], [15, 17, "selectors"], [17, 18, "index"], [18, 19, "member"], [0, 20, "body"], [20, 21, "expression"], [21, 22, "operandl"], [22, 23, "operandl"], [23, 24, "operandl"], [24, 25, "member"], [23, 26, "operator"], [23, 27, "operandr"], [27, 28, "value"], [22, 29, "operator"], [22, 30, "operandr"], [30, 31, "operandl"], [31, 32, "member"], [30, 33, "operator"], [30, 34, "operandr"], [34, 35, "value"], [21, 36, "operator"], [21, 37, "operandr"], [37, 38, "operandl"], [38, 39, "operandl"], [39, 40, "member"], [38, 41, "operator"], [38, 42, "operandr"], [42, 43, "value"], [37, 44, "operator"], [37, 45, "operandr"], [45, 46, "operandl"], [46, 47, "member"], [45, 48, "operator"], [45, 49, "operandr"], [49, 50, "value"]], "rem_roots": [20], "add_roots": []}, {"id": 93, "mappings": {"attrKey": "VAR_1", "it": "VAR_2", "attributes": "VAR_3", "key": "VAR_4", "String": "TYPE_1", "Validate": "TYPE_2", "Iterator": "TYPE_3", "next": "METHOD_1", "removeIgnoreCase": "METHOD_2", "hasNext": "METHOD_3", "remove": "METHOD_4", "iterator": "METHOD_5", "notEmpty": "METHOD_6", "equalsIgnoreCase": "METHOD_7", "keySet": "METHOD_8"}, "nodes": ["MethodDeclaration", "public", "void", "removeIgnoreCase", "FormalParameter", "ReferenceType", "String", "key", "StatementExpression", "MethodInvocation", "Validate", "notEmpty", "MemberReference", "key", "IfStatement", "BinaryOperation", "MemberReference", "attributes", "==", "Literal", "null", "ReturnStatement", "ForStatement", "ForControl", "VariableDeclaration", "ReferenceType", "Iterator", "TypeArgument", "ReferenceType", "String", "VariableDeclarator", "it", "MethodInvocation", "attributes", "keySet", "MethodInvocation", "iterator", "MethodInvocation", "it", "hasNext", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "String", "VariableDeclarator", "attrKey", "MethodInvocation", "it", "next", "IfStatement", "MethodInvocation", "attrKey", "equalsIgnoreCase", "MemberReference", "key", "StatementExpression", "MethodInvocation", "attributes", "remove", "MemberReference", "attrKey"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [0, 3, "name"], [0, 4, "parameters"], [4, 5, "type"], [5, 6, "name"], [4, 7, "name"], [0, 8, "body"], [8, 9, "expression"], [9, 10, "qualifier"], [9, 11, "member"], [9, 12, "arguments"], [12, 13, "member"], [0, 14, "body"], [14, 15, "condition"], [15, 16, "operandl"], [16, 17, "member"], [15, 18, "operator"], [15, 19, "operandr"], [19, 20, "value"], [14, 21, "then_statement"], [0, 22, "body"], [22, 23, "control"], [23, 24, "init"], [24, 25, "type"], [25, 26, "name"], [25, 27, "arguments"], [27, 28, "type"], [28, 29, "name"], [24, 30, "declarators"], [30, 31, "name"], [30, 32, "initializer"], [32, 33, "qualifier"], [32, 34, "member"], [32, 35, "selectors"], [35, 36, "member"], [23, 37, "condition"], [37, 38, "qualifier"], [37, 39, "member"], [22, 40, "body"], [40, 41, "statements"], [41, 42, "type"], [42, 43, "name"], [41, 44, "declarators"], [44, 45, "name"], [44, 46, "initializer"], [46, 47, "qualifier"], [46, 48, "member"], [40, 49, "statements"], [49, 50, "condition"], [50, 51, "qualifier"], [50, 52, "member"], [50, 53, "arguments"], [53, 54, "member"], [49, 55, "then_statement"], [55, 56, "expression"], [56, 57, "qualifier"], [56, 58, "member"], [56, 59, "arguments"], [59, 60, "member"]], "rem_roots": [55], "add_roots": []}, {"id": 94, "mappings": {"start": "VAR_1", "i": "VAR_2", "className": "VAR_3", "classAttr": "VAR_4", "wantLen": "VAR_5", "len": "VAR_6", "inClass": "VAR_7", "attributes": "VAR_8", "Character": "TYPE_1", "String": "TYPE_2", "hasClass": "METHOD_1", "length": "METHOD_2", "regionMatches": "METHOD_3", "isWhitespace": "METHOD_4", "get": "METHOD_5", "equalsIgnoreCase": "METHOD_6", "charAt": "METHOD_7", "0": "INT_1", "\"class\"": "STRING_1"}, "nodes": ["MethodDeclaration", "public", "BasicType", "boolean", "hasClass", "FormalParameter", "ReferenceType", "String", "className", "LocalVariableDeclaration", "final", "ReferenceType", "String", "VariableDeclarator", "classAttr", "MethodInvocation", "attributes", "get", "Literal", "\"class\"", "LocalVariableDeclaration", "final", "BasicType", "int", "VariableDeclarator", "len", "MethodInvocation", "classAttr", "length", "LocalVariableDeclaration", "final", "BasicType", "int", "VariableDeclarator", "wantLen", "MethodInvocation", "className", "length", "IfStatement", "BinaryOperation", "BinaryOperation", "MemberReference", "len", "==", "Literal", "0", "||", "BinaryOperation", "MemberReference", "len", "<", "MemberReference", "wantLen", "BlockStatement", "ReturnStatement", "Literal", "false", "IfStatement", "BinaryOperation", "MemberReference", "len", "==", "MemberReference", "wantLen", "BlockStatement", "ReturnStatement", "MethodInvocation", "className", "equalsIgnoreCase", "MemberReference", "classAttr", "LocalVariableDeclaration", "BasicType", "boolean", "VariableDeclarator", "inClass", "Literal", "false", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "start", "Literal", "0", "ForStatement", "ForControl", "VariableDeclaration", "BasicType", "int", "VariableDeclarator", "i", "Literal", "0", "BinaryOperation", "MemberReference", "i", "<", "MemberReference", "len", "MemberReference", "i", "++", "BlockStatement", "IfStatement", "MethodInvocation", "Character", "isWhitespace", "MethodInvocation", "classAttr", "charAt", "MemberReference", "i", "BlockStatement", "IfStatement", "MemberReference", "inClass", "BlockStatement", "IfStatement", "BinaryOperation", "BinaryOperation", "BinaryOperation", "MemberReference", "i", "-", "MemberReference", "start", "==", "MemberReference", "wantLen", "&&", "MethodInvocation", "classAttr", "regionMatches", "Literal", "true", "MemberReference", "start", "MemberReference", "className", "Literal", "0", "MemberReference", "wantLen", "BlockStatement", "ReturnStatement", "Literal", "true", "StatementExpression", "Assignment", "MemberReference", "inClass", "=", "Literal", "false", "BlockStatement", "IfStatement", "MemberReference", "!", "inClass", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "inClass", "=", "Literal", "true", "StatementExpression", "Assignment", "MemberReference", "start", "=", "MemberReference", "i", "IfStatement", "BinaryOperation", "MemberReference", "inClass", "&&", "BinaryOperation", "BinaryOperation", "MemberReference", "len", "-", "MemberReference", "start", "==", "MemberReference", "wantLen", "BlockStatement", "ReturnStatement", "MethodInvocation", "classAttr", "regionMatches", "Literal", "true", "MemberReference", "start", "MemberReference", "className", "Literal", "0", "MemberReference", "wantLen", "ReturnStatement", "Literal", "false"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [5, 8, "name"], [0, 9, "body"], [9, 10, "modifiers"], [9, 11, "type"], [11, 12, "name"], [9, 13, "declarators"], [13, 14, "name"], [13, 15, "initializer"], [15, 16, "qualifier"], [15, 17, "member"], [15, 18, "arguments"], [18, 19, "value"], [0, 20, "body"], [20, 21, "modifiers"], [20, 22, "type"], [22, 23, "name"], [20, 24, "declarators"], [24, 25, "name"], [24, 26, "initializer"], [26, 27, "qualifier"], [26, 28, "member"], [0, 29, "body"], [29, 30, "modifiers"], [29, 31, "type"], [31, 32, "name"], [29, 33, "declarators"], [33, 34, "name"], [33, 35, "initializer"], [35, 36, "qualifier"], [35, 37, "member"], [0, 38, "body"], [38, 39, "condition"], [39, 40, "operandl"], [40, 41, "operandl"], [41, 42, "member"], [40, 43, "operator"], [40, 44, "operandr"], [44, 45, "value"], [39, 46, "operator"], [39, 47, "operandr"], [47, 48, "operandl"], [48, 49, "member"], [47, 50, "operator"], [47, 51, "operandr"], [51, 52, "member"], [38, 53, "then_statement"], [53, 54, "statements"], [54, 55, "expression"], [55, 56, "value"], [0, 57, "body"], [57, 58, "condition"], [58, 59, "operandl"], [59, 60, "member"], [58, 61, "operator"], [58, 62, "operandr"], [62, 63, "member"], [57, 64, "then_statement"], [64, 65, "statements"], [65, 66, "expression"], [66, 67, "qualifier"], [66, 68, "member"], [66, 69, "arguments"], [69, 70, "member"], [0, 71, "body"], [71, 72, "type"], [72, 73, "name"], [71, 74, "declarators"], [74, 75, "name"], [74, 76, "initializer"], [76, 77, "value"], [0, 78, "body"], [78, 79, "type"], [79, 80, "name"], [78, 81, "declarators"], [81, 82, "name"], [81, 83, "initializer"], [83, 84, "value"], [0, 85, "body"], [85, 86, "control"], [86, 87, "init"], [87, 88, "type"], [88, 89, "name"], [87, 90, "declarators"], [90, 91, "name"], [90, 92, "initializer"], [92, 93, "value"], [86, 94, "condition"], [94, 95, "operandl"], [95, 96, "member"], [94, 97, "operator"], [94, 98, "operandr"], [98, 99, "member"], [86, 100, "update"], [100, 101, "member"], [100, 102, "postfix_operators"], [85, 103, "body"], [103, 104, "statements"], [104, 105, "condition"], [105, 106, "qualifier"], [105, 107, "member"], [105, 108, "arguments"], [108, 109, "qualifier"], [108, 110, "member"], [108, 111, "arguments"], [111, 112, "member"], [104, 113, "then_statement"], [113, 114, "statements"], [114, 115, "condition"], [115, 116, "member"], [114, 117, "then_statement"], [117, 118, "statements"], [118, 119, "condition"], [119, 120, "operandl"], [120, 121, "operandl"], [121, 122, "operandl"], [122, 123, "member"], [121, 124, "operator"], [121, 125, "operandr"], [125, 126, "member"], [120, 127, "operator"], [120, 128, "operandr"], [128, 129, "member"], [119, 130, "operator"], [119, 131, "operandr"], [131, 132, "qualifier"], [131, 133, "member"], [131, 134, "arguments"], [134, 135, "value"], [131, 136, "arguments"], [136, 137, "member"], [131, 138, "arguments"], [138, 139, "member"], [131, 140, "arguments"], [140, 141, "value"], [131, 142, "arguments"], [142, 143, "member"], [118, 144, "then_statement"], [144, 145, "statements"], [145, 146, "expression"], [146, 147, "value"], [117, 148, "statements"], [148, 149, "expression"], [149, 150, "expressionl"], [150, 151, "member"], [149, 152, "type"], [149, 153, "value"], [153, 154, "value"], [104, 155, "else_statement"], [155, 156, "statements"], [156, 157, "condition"], [157, 158, "prefix_operators"], [157, 159, "member"], [156, 160, "then_statement"], [160, 161, "statements"], [161, 162, "expression"], [162, 163, "expressionl"], [163, 164, "member"], [162, 165, "type"], [162, 166, "value"], [166, 167, "value"], [160, 168, "statements"], [168, 169, "expression"], [169, 170, "expressionl"], [170, 171, "member"], [169, 172, "type"], [169, 173, "value"], [173, 174, "member"], [0, 175, "body"], [175, 176, "condition"], [176, 177, "operandl"], [177, 178, "member"], [176, 179, "operator"], [176, 180, "operandr"], [180, 181, "operandl"], [181, 182, "operandl"], [182, 183, "member"], [181, 184, "operator"], [181, 185, "operandr"], [185, 186, "member"], [180, 187, "operator"], [180, 188, "operandr"], [188, 189, "member"], [175, 190, "then_statement"], [190, 191, "statements"], [191, 192, "expression"], [192, 193, "qualifier"], [192, 194, "member"], [192, 195, "arguments"], [195, 196, "value"], [192, 197, "arguments"], [197, 198, "member"], [192, 199, "arguments"], [199, 200, "member"], [192, 201, "arguments"], [201, 202, "value"], [192, 203, "arguments"], [203, 204, "member"], [0, 205, "body"], [205, 206, "expression"], [206, 207, "value"]], "rem_roots": [9], "add_roots": []}, {"id": 95, "mappings": {"next": "VAR_1", "elName": "VAR_2", "stack": "VAR_3", "endTag": "VAR_4", "pos": "VAR_5", "firstFound": "VAR_6", "EndTag": "TYPE_1", "Element": "TYPE_2", "Token": "TYPE_3", "String": "TYPE_4", "nodeName": "METHOD_1", "remove": "METHOD_2", "popStackToClose": "METHOD_3", "size": "METHOD_4", "get": "METHOD_5", "equals": "METHOD_6", "name": "METHOD_7", "0": "INT_1", "1": "INT_2"}, "nodes": ["MethodDeclaration", "private", "void", "popStackToClose", "FormalParameter", "ReferenceType", "Token", "ReferenceType", "EndTag", "endTag", "LocalVariableDeclaration", "ReferenceType", "String", "VariableDeclarator", "elName", "MethodInvocation", "endTag", "name", "LocalVariableDeclaration", "ReferenceType", "Element", "VariableDeclarator", "firstFound", "Literal", "null", "ForStatement", "ForControl", "VariableDeclaration", "BasicType", "int", "VariableDeclarator", "pos", "BinaryOperation", "MethodInvocation", "stack", "size", "-", "Literal", "1", "BinaryOperation", "MemberReference", "pos", ">=", "Literal", "0", "MemberReference", "pos", "--", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "Element", "VariableDeclarator", "next", "MethodInvocation", "stack", "get", "MemberReference", "pos", "IfStatement", "MethodInvocation", "next", "nodeName", "MethodInvocation", "equals", "MemberReference", "elName", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "firstFound", "=", "MemberReference", "next", "BreakStatement", "IfStatement", "BinaryOperation", "MemberReference", "firstFound", "==", "Literal", "null", "ReturnStatement", "ForStatement", "ForControl", "VariableDeclaration", "BasicType", "int", "VariableDeclarator", "pos", "BinaryOperation", "MethodInvocation", "stack", "size", "-", "Literal", "1", "BinaryOperation", "MemberReference", "pos", ">=", "Literal", "0", "MemberReference", "pos", "--", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "Element", "VariableDeclarator", "next", "MethodInvocation", "stack", "get", "MemberReference", "pos", "StatementExpression", "MethodInvocation", "stack", "remove", "MemberReference", "pos", "IfStatement", "BinaryOperation", "MemberReference", "next", "==", "MemberReference", "firstFound", "BreakStatement"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [0, 3, "name"], [0, 4, "parameters"], [4, 5, "type"], [5, 6, "name"], [5, 7, "sub_type"], [7, 8, "name"], [4, 9, "name"], [0, 10, "body"], [10, 11, "type"], [11, 12, "name"], [10, 13, "declarators"], [13, 14, "name"], [13, 15, "initializer"], [15, 16, "qualifier"], [15, 17, "member"], [0, 18, "body"], [18, 19, "type"], [19, 20, "name"], [18, 21, "declarators"], [21, 22, "name"], [21, 23, "initializer"], [23, 24, "value"], [0, 25, "body"], [25, 26, "control"], [26, 27, "init"], [27, 28, "type"], [28, 29, "name"], [27, 30, "declarators"], [30, 31, "name"], [30, 32, "initializer"], [32, 33, "operandl"], [33, 34, "qualifier"], [33, 35, "member"], [32, 36, "operator"], [32, 37, "operandr"], [37, 38, "value"], [26, 39, "condition"], [39, 40, "operandl"], [40, 41, "member"], [39, 42, "operator"], [39, 43, "operandr"], [43, 44, "value"], [26, 45, "update"], [45, 46, "member"], [45, 47, "postfix_operators"], [25, 48, "body"], [48, 49, "statements"], [49, 50, "type"], [50, 51, "name"], [49, 52, "declarators"], [52, 53, "name"], [52, 54, "initializer"], [54, 55, "qualifier"], [54, 56, "member"], [54, 57, "arguments"], [57, 58, "member"], [48, 59, "statements"], [59, 60, "condition"], [60, 61, "qualifier"], [60, 62, "member"], [60, 63, "selectors"], [63, 64, "member"], [63, 65, "arguments"], [65, 66, "member"], [59, 67, "then_statement"], [67, 68, "statements"], [68, 69, "expression"], [69, 70, "expressionl"], [70, 71, "member"], [69, 72, "type"], [69, 73, "value"], [73, 74, "member"], [67, 75, "statements"], [0, 76, "body"], [76, 77, "condition"], [77, 78, "operandl"], [78, 79, "member"], [77, 80, "operator"], [77, 81, "operandr"], [81, 82, "value"], [76, 83, "then_statement"], [0, 84, "body"], [84, 85, "control"], [85, 86, "init"], [86, 87, "type"], [87, 88, "name"], [86, 89, "declarators"], [89, 90, "name"], [89, 91, "initializer"], [91, 92, "operandl"], [92, 93, "qualifier"], [92, 94, "member"], [91, 95, "operator"], [91, 96, "operandr"], [96, 97, "value"], [85, 98, "condition"], [98, 99, "operandl"], [99, 100, "member"], [98, 101, "operator"], [98, 102, "operandr"], [102, 103, "value"], [85, 104, "update"], [104, 105, "member"], [104, 106, "postfix_operators"], [84, 107, "body"], [107, 108, "statements"], [108, 109, "type"], [109, 110, "name"], [108, 111, "declarators"], [111, 112, "name"], [111, 113, "initializer"], [113, 114, "qualifier"], [113, 115, "member"], [113, 116, "arguments"], [116, 117, "member"], [107, 118, "statements"], [118, 119, "expression"], [119, 120, "qualifier"], [119, 121, "member"], [119, 122, "arguments"], [122, 123, "member"], [107, 124, "statements"], [124, 125, "condition"], [125, 126, "operandl"], [126, 127, "member"], [125, 128, "operator"], [125, 129, "operandr"], [129, 130, "member"], [124, 131, "then_statement"]], "rem_roots": [10], "add_roots": []}, {"id": 96, "mappings": {"data": "VAR_1", "decl": "VAR_2", "el": "VAR_3", "doc": "VAR_4", "NodeUtils": "TYPE_1", "Element": "TYPE_2", "Jsoup": "TYPE_3", "String": "TYPE_4", "Document": "TYPE_5", "Parser": "TYPE_6", "XmlDeclaration": "TYPE_7", "substring": "METHOD_1", "normalizeTag": "METHOD_2", "getData": "METHOD_3", "settings": "METHOD_4", "length": "METHOD_5", "parse": "METHOD_6", "tagName": "METHOD_7", "xmlParser": "METHOD_8", "parser": "METHOD_9", "addAll": "METHOD_10", "baseUri": "METHOD_11", "asXmlDeclaration": "METHOD_12", "childNodeSize": "METHOD_13", "attributes": "METHOD_14", "child": "METHOD_15", "startsWith": "METHOD_16", "0": "INT_1", "1": "INT_2", "\"!\"": "STRING_1", "\">\"": "STRING_2", "\"<\"": "STRING_3"}, "nodes": ["MethodDeclaration", "public", "ReferenceType", "XmlDeclaration", "asXmlDeclaration", "LocalVariableDeclaration", "ReferenceType", "String", "VariableDeclarator", "data", "MethodInvocation", "getData", "LocalVariableDeclaration", "ReferenceType", "Document", "VariableDeclarator", "doc", "MethodInvocation", "Jsoup", "parse", "BinaryOperation", "BinaryOperation", "Literal", "\"<\"", "+", "MethodInvocation", "data", "substring", "Literal", "1", "BinaryOperation", "MethodInvocation", "data", "length", "-", "Literal", "1", "+", "Literal", "\">\"", "MethodInvocation", "baseUri", "MethodInvocation", "Parser", "xmlParser", "LocalVariableDeclaration", "ReferenceType", "XmlDeclaration", "VariableDeclarator", "decl", "Literal", "null", "IfStatement", "BinaryOperation", "MethodInvocation", "doc", "childNodeSize", ">", "Literal", "0", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "Element", "VariableDeclarator", "el", "MethodInvocation", "doc", "child", "Literal", "0", "StatementExpression", "Assignment", "MemberReference", "decl", "=", "ClassCreator", "ReferenceType", "XmlDeclaration", "MethodInvocation", "NodeUtils", "parser", "MemberReference", "doc", "MethodInvocation", "settings", "MethodInvocation", "normalizeTag", "MethodInvocation", "el", "tagName", "MethodInvocation", "data", "startsWith", "Literal", "\"!\"", "StatementExpression", "MethodInvocation", "decl", "attributes", "MethodInvocation", "addAll", "MethodInvocation", "el", "attributes", "ReturnStatement", "MemberReference", "decl"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "body"], [5, 6, "type"], [6, 7, "name"], [5, 8, "declarators"], [8, 9, "name"], [8, 10, "initializer"], [10, 11, "member"], [0, 12, "body"], [12, 13, "type"], [13, 14, "name"], [12, 15, "declarators"], [15, 16, "name"], [15, 17, "initializer"], [17, 18, "qualifier"], [17, 19, "member"], [17, 20, "arguments"], [20, 21, "operandl"], [21, 22, "operandl"], [22, 23, "value"], [21, 24, "operator"], [21, 25, "operandr"], [25, 26, "qualifier"], [25, 27, "member"], [25, 28, "arguments"], [28, 29, "value"], [25, 30, "arguments"], [30, 31, "operandl"], [31, 32, "qualifier"], [31, 33, "member"], [30, 34, "operator"], [30, 35, "operandr"], [35, 36, "value"], [20, 37, "operator"], [20, 38, "operandr"], [38, 39, "value"], [17, 40, "arguments"], [40, 41, "member"], [17, 42, "arguments"], [42, 43, "qualifier"], [42, 44, "member"], [0, 45, "body"], [45, 46, "type"], [46, 47, "name"], [45, 48, "declarators"], [48, 49, "name"], [48, 50, "initializer"], [50, 51, "value"], [0, 52, "body"], [52, 53, "condition"], [53, 54, "operandl"], [54, 55, "qualifier"], [54, 56, "member"], [53, 57, "operator"], [53, 58, "operandr"], [58, 59, "value"], [52, 60, "then_statement"], [60, 61, "statements"], [61, 62, "type"], [62, 63, "name"], [61, 64, "declarators"], [64, 65, "name"], [64, 66, "initializer"], [66, 67, "qualifier"], [66, 68, "member"], [66, 69, "arguments"], [69, 70, "value"], [60, 71, "statements"], [71, 72, "expression"], [72, 73, "expressionl"], [73, 74, "member"], [72, 75, "type"], [72, 76, "value"], [76, 77, "type"], [77, 78, "name"], [76, 79, "arguments"], [79, 80, "qualifier"], [79, 81, "member"], [79, 82, "arguments"], [82, 83, "member"], [79, 84, "selectors"], [84, 85, "member"], [79, 86, "selectors"], [86, 87, "member"], [86, 88, "arguments"], [88, 89, "qualifier"], [88, 90, "member"], [76, 91, "arguments"], [91, 92, "qualifier"], [91, 93, "member"], [91, 94, "arguments"], [94, 95, "value"], [60, 96, "statements"], [96, 97, "expression"], [97, 98, "qualifier"], [97, 99, "member"], [97, 100, "selectors"], [100, 101, "member"], [100, 102, "arguments"], [102, 103, "qualifier"], [102, 104, "member"], [0, 105, "body"], [105, 106, "expression"], [106, 107, "member"]], "rem_roots": [53], "add_roots": []}, {"id": 97, "mappings": {"val": "VAR_1", "String": "TYPE_1", "getValue": "METHOD_1"}, "nodes": ["MethodDeclaration", "public", "ReferenceType", "String", "getValue", "ReturnStatement", "MemberReference", "val"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "body"], [5, 6, "expression"], [6, 7, "member"]], "rem_roots": [5], "add_roots": []}, {"id": 98, "mappings": {"nodeNS": "VAR_1", "NODE_TYPE_PI": "VAR_2", "NODE_TYPE_NODE": "VAR_3", "wildcard": "VAR_4", "namespaceURI": "VAR_5", "testName": "VAR_6", "Compiler": "VAR_7", "pointer": "VAR_8", "nodeNameTest": "VAR_9", "test": "VAR_10", "node": "VAR_11", "NODE_TYPE_COMMENT": "VAR_12", "NODE_TYPE_TEXT": "VAR_13", "nodePI": "VAR_14", "testPI": "VAR_15", "testPrefix": "VAR_16", "Element": "TYPE_1", "JDOMNodePointer": "TYPE_2", "ProcessingInstructionTest": "TYPE_3", "NodePointer": "TYPE_4", "String": "TYPE_5", "NodeTest": "TYPE_6", "Comment": "TYPE_7", "QName": "TYPE_8", "NodeTypeTest": "TYPE_9", "Text": "TYPE_10", "NodeNameTest": "TYPE_11", "Object": "TYPE_12", "CDATA": "TYPE_13", "ProcessingInstruction": "TYPE_14", "getName": "METHOD_1", "getTarget": "METHOD_2", "testNode": "METHOD_3", "getNodeType": "METHOD_4", "getPrefix": "METHOD_5", "isWildcard": "METHOD_6", "getNodeName": "METHOD_7", "getLocalName": "METHOD_8", "equals": "METHOD_9", "equalStrings": "METHOD_10", "getNamespaceURI": "METHOD_11"}, "nodes": ["MethodDeclaration", "public static", "BasicType", "boolean", "testNode", "FormalParameter", "ReferenceType", "NodePointer", "pointer", "FormalParameter", "ReferenceType", "Object", "node", "FormalParameter", "ReferenceType", "NodeTest", "test", "IfStatement", "BinaryOperation", "MemberReference", "test", "==", "Literal", "null", "BlockStatement", "ReturnStatement", "Literal", "true", "IfStatement", "BinaryOperation", "MemberReference", "test", "instanceof", "ReferenceType", "NodeNameTest", "BlockStatement", "IfStatement", "BinaryOperation", "!", "MemberReference", "node", "instanceof", "ReferenceType", "Element", "BlockStatement", "ReturnStatement", "Literal", "false", "LocalVariableDeclaration", "ReferenceType", "NodeNameTest", "VariableDeclarator", "nodeNameTest", "Cast", "ReferenceType", "NodeNameTest", "MemberReference", "test", "LocalVariableDeclaration", "ReferenceType", "QName", "VariableDeclarator", "testName", "MethodInvocation", "nodeNameTest", "getNodeName", "LocalVariableDeclaration", "ReferenceType", "String", "VariableDeclarator", "namespaceURI", "MethodInvocation", "nodeNameTest", "getNamespaceURI", "LocalVariableDeclaration", "BasicType", "boolean", "VariableDeclarator", "wildcard", "MethodInvocation", "nodeNameTest", "isWildcard", "LocalVariableDeclaration", "ReferenceType", "String", "VariableDeclarator", "testPrefix", "MethodInvocation", "testName", "getPrefix", "IfStatement", "BinaryOperation", "MemberReference", "wildcard", "&&", "BinaryOperation", "MemberReference", "testPrefix", "==", "Literal", "null", "BlockStatement", "ReturnStatement", "Literal", "true", "IfStatement", "BinaryOperation", "MemberReference", "wildcard", "||", "MethodInvocation", "testName", "getName", "MethodInvocation", "equals", "MethodInvocation", "JDOMNodePointer", "getLocalName", "MemberReference", "node", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "String", "VariableDeclarator", "nodeNS", "MethodInvocation", "JDOMNodePointer", "getNamespaceURI", "MemberReference", "node", "ReturnStatement", "MethodInvocation", "equalStrings", "MemberReference", "namespaceURI", "MemberReference", "nodeNS", "IfStatement", "BinaryOperation", "MemberReference", "test", "instanceof", "ReferenceType", "NodeTypeTest", "BlockStatement", "SwitchStatement", "Cast", "ReferenceType", "NodeTypeTest", "MemberReference", "test", "MethodInvocation", "getNodeType", "SwitchStatementCase", "MemberReference", "Compiler", "NODE_TYPE_NODE", "ReturnStatement", "BinaryOperation", "MemberReference", "node", "instanceof", "ReferenceType", "Element", "SwitchStatementCase", "MemberReference", "Compiler", "NODE_TYPE_TEXT", "ReturnStatement", "BinaryOperation", "BinaryOperation", "MemberReference", "node", "instanceof", "ReferenceType", "Text", "||", "BinaryOperation", "MemberReference", "node", "instanceof", "ReferenceType", "CDATA", "SwitchStatementCase", "MemberReference", "Compiler", "NODE_TYPE_COMMENT", "ReturnStatement", "BinaryOperation", "MemberReference", "node", "instanceof", "ReferenceType", "Comment", "SwitchStatementCase", "MemberReference", "Compiler", "NODE_TYPE_PI", "ReturnStatement", "BinaryOperation", "MemberReference", "node", "instanceof", "ReferenceType", "ProcessingInstruction", "ReturnStatement", "Literal", "false", "IfStatement", "BinaryOperation", "MemberReference", "test", "instanceof", "ReferenceType", "ProcessingInstructionTest", "BlockStatement", "IfStatement", "BinaryOperation", "MemberReference", "node", "instanceof", "ReferenceType", "ProcessingInstruction", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "String", "VariableDeclarator", "testPI", "Cast", "ReferenceType", "ProcessingInstructionTest", "MemberReference", "test", "MethodInvocation", "getTarget", "LocalVariableDeclaration", "ReferenceType", "String", "VariableDeclarator", "nodePI", "Cast", "ReferenceType", "ProcessingInstruction", "MemberReference", "node", "MethodInvocation", "getTarget", "ReturnStatement", "MethodInvocation", "testPI", "equals", "MemberReference", "nodePI", "ReturnStatement", "Literal", "false"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [5, 8, "name"], [0, 9, "parameters"], [9, 10, "type"], [10, 11, "name"], [9, 12, "name"], [0, 13, "parameters"], [13, 14, "type"], [14, 15, "name"], [13, 16, "name"], [0, 17, "body"], [17, 18, "condition"], [18, 19, "operandl"], [19, 20, "member"], [18, 21, "operator"], [18, 22, "operandr"], [22, 23, "value"], [17, 24, "then_statement"], [24, 25, "statements"], [25, 26, "expression"], [26, 27, "value"], [17, 28, "else_statement"], [28, 29, "condition"], [29, 30, "operandl"], [30, 31, "member"], [29, 32, "operator"], [29, 33, "operandr"], [33, 34, "name"], [28, 35, "then_statement"], [35, 36, "statements"], [36, 37, "condition"], [37, 38, "prefix_operators"], [37, 39, "operandl"], [39, 40, "member"], [37, 41, "operator"], [37, 42, "operandr"], [42, 43, "name"], [36, 44, "then_statement"], [44, 45, "statements"], [45, 46, "expression"], [46, 47, "value"], [35, 48, "statements"], [48, 49, "type"], [49, 50, "name"], [48, 51, "declarators"], [51, 52, "name"], [51, 53, "initializer"], [53, 54, "type"], [54, 55, "name"], [53, 56, "expression"], [56, 57, "member"], [35, 58, "statements"], [58, 59, "type"], [59, 60, "name"], [58, 61, "declarators"], [61, 62, "name"], [61, 63, "initializer"], [63, 64, "qualifier"], [63, 65, "member"], [35, 66, "statements"], [66, 67, "type"], [67, 68, "name"], [66, 69, "declarators"], [69, 70, "name"], [69, 71, "initializer"], [71, 72, "qualifier"], [71, 73, "member"], [35, 74, "statements"], [74, 75, "type"], [75, 76, "name"], [74, 77, "declarators"], [77, 78, "name"], [77, 79, "initializer"], [79, 80, "qualifier"], [79, 81, "member"], [35, 82, "statements"], [82, 83, "type"], [83, 84, "name"], [82, 85, "declarators"], [85, 86, "name"], [85, 87, "initializer"], [87, 88, "qualifier"], [87, 89, "member"], [35, 90, "statements"], [90, 91, "condition"], [91, 92, "operandl"], [92, 93, "member"], [91, 94, "operator"], [91, 95, "operandr"], [95, 96, "operandl"], [96, 97, "member"], [95, 98, "operator"], [95, 99, "operandr"], [99, 100, "value"], [90, 101, "then_statement"], [101, 102, "statements"], [102, 103, "expression"], [103, 104, "value"], [35, 105, "statements"], [105, 106, "condition"], [106, 107, "operandl"], [107, 108, "member"], [106, 109, "operator"], [106, 110, "operandr"], [110, 111, "qualifier"], [110, 112, "member"], [110, 113, "selectors"], [113, 114, "member"], [113, 115, "arguments"], [115, 116, "qualifier"], [115, 117, "member"], [115, 118, "arguments"], [118, 119, "member"], [105, 120, "then_statement"], [120, 121, "statements"], [121, 122, "type"], [122, 123, "name"], [121, 124, "declarators"], [124, 125, "name"], [124, 126, "initializer"], [126, 127, "qualifier"], [126, 128, "member"], [126, 129, "arguments"], [129, 130, "member"], [120, 131, "statements"], [131, 132, "expression"], [132, 133, "member"], [132, 134, "arguments"], [134, 135, "member"], [132, 136, "arguments"], [136, 137, "member"], [28, 138, "else_statement"], [138, 139, "condition"], [139, 140, "operandl"], [140, 141, "member"], [139, 142, "operator"], [139, 143, "operandr"], [143, 144, "name"], [138, 145, "then_statement"], [145, 146, "statements"], [146, 147, "expression"], [147, 148, "type"], [148, 149, "name"], [147, 150, "expression"], [150, 151, "member"], [147, 152, "selectors"], [152, 153, "member"], [146, 154, "cases"], [154, 155, "case"], [155, 156, "qualifier"], [155, 157, "member"], [154, 158, "statements"], [158, 159, "expression"], [159, 160, "operandl"], [160, 161, "member"], [159, 162, "operator"], [159, 163, "operandr"], [163, 164, "name"], [146, 165, "cases"], [165, 166, "case"], [166, 167, "qualifier"], [166, 168, "member"], [165, 169, "statements"], [169, 170, "expression"], [170, 171, "operandl"], [171, 172, "operandl"], [172, 173, "member"], [171, 174, "operator"], [171, 175, "operandr"], [175, 176, "name"], [170, 177, "operator"], [170, 178, "operandr"], [178, 179, "operandl"], [179, 180, "member"], [178, 181, "operator"], [178, 182, "operandr"], [182, 183, "name"], [146, 184, "cases"], [184, 185, "case"], [185, 186, "qualifier"], [185, 187, "member"], [184, 188, "statements"], [188, 189, "expression"], [189, 190, "operandl"], [190, 191, "member"], [189, 192, "operator"], [189, 193, "operandr"], [193, 194, "name"], [146, 195, "cases"], [195, 196, "case"], [196, 197, "qualifier"], [196, 198, "member"], [195, 199, "statements"], [199, 200, "expression"], [200, 201, "operandl"], [201, 202, "member"], [200, 203, "operator"], [200, 204, "operandr"], [204, 205, "name"], [145, 206, "statements"], [206, 207, "expression"], [207, 208, "value"], [138, 209, "else_statement"], [209, 210, "condition"], [210, 211, "operandl"], [211, 212, "member"], [210, 213, "operator"], [210, 214, "operandr"], [214, 215, "name"], [209, 216, "then_statement"], [216, 217, "statements"], [217, 218, "condition"], [218, 219, "operandl"], [219, 220, "member"], [218, 221, "operator"], [218, 222, "operandr"], [222, 223, "name"], [217, 224, "then_statement"], [224, 225, "statements"], [225, 226, "type"], [226, 227, "name"], [225, 228, "declarators"], [228, 229, "name"], [228, 230, "initializer"], [230, 231, "type"], [231, 232, "name"], [230, 233, "expression"], [233, 234, "member"], [230, 235, "selectors"], [235, 236, "member"], [224, 237, "statements"], [237, 238, "type"], [238, 239, "name"], [237, 240, "declarators"], [240, 241, "name"], [240, 242, "initializer"], [242, 243, "type"], [243, 244, "name"], [242, 245, "expression"], [245, 246, "member"], [242, 247, "selectors"], [247, 248, "member"], [224, 249, "statements"], [249, 250, "expression"], [250, 251, "qualifier"], [250, 252, "member"], [250, 253, "arguments"], [253, 254, "member"], [0, 255, "body"], [255, 256, "expression"], [256, 257, "value"]], "rem_roots": [158], "add_roots": []}, {"id": 99, "mappings": {"args": "VAR_1", "context": "VAR_2", "TRUE": "VAR_3", "FALSE": "VAR_4", "Boolean": "VAR_5", "EvalContext": "TYPE_1", "Object": "TYPE_2", "compute": "METHOD_1", "computeValue": "METHOD_2", "0": "INT_1", "1": "INT_2"}, "nodes": ["MethodDeclaration", "public final", "ReferenceType", "Object", "computeValue", "FormalParameter", "ReferenceType", "EvalContext", "context", "ReturnStatement", "TernaryExpression", "MethodInvocation", "compute", "MemberReference", "args", "ArraySelector", "Literal", "0", "MethodInvocation", "computeValue", "MemberReference", "context", "MemberReference", "args", "ArraySelector", "Literal", "1", "MethodInvocation", "computeValue", "MemberReference", "context", "MemberReference", "Boolean", "TRUE", "MemberReference", "Boolean", "FALSE"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [5, 8, "name"], [0, 9, "body"], [9, 10, "expression"], [10, 11, "condition"], [11, 12, "member"], [11, 13, "arguments"], [13, 14, "member"], [13, 15, "selectors"], [15, 16, "index"], [16, 17, "value"], [13, 18, "selectors"], [18, 19, "member"], [18, 20, "arguments"], [20, 21, "member"], [11, 22, "arguments"], [22, 23, "member"], [22, 24, "selectors"], [24, 25, "index"], [25, 26, "value"], [22, 27, "selectors"], [27, 28, "member"], [27, 29, "arguments"], [29, 30, "member"], [10, 31, "if_true"], [31, 32, "qualifier"], [31, 33, "member"], [10, 34, "if_false"], [34, 35, "qualifier"], [34, 36, "member"]], "rem_roots": [11], "add_roots": []}, {"id": 100, "mappings": {"nodeNS": "VAR_1", "NODE_TYPE_PI": "VAR_2", "NODE_TYPE_NODE": "VAR_3", "wildcard": "VAR_4", "namespaceURI": "VAR_5", "testName": "VAR_6", "Compiler": "VAR_7", "pointer": "VAR_8", "nodeNameTest": "VAR_9", "test": "VAR_10", "node": "VAR_11", "NODE_TYPE_COMMENT": "VAR_12", "NODE_TYPE_TEXT": "VAR_13", "nodePI": "VAR_14", "testPI": "VAR_15", "testPrefix": "VAR_16", "Element": "TYPE_1", "JDOMNodePointer": "TYPE_2", "ProcessingInstructionTest": "TYPE_3", "NodePointer": "TYPE_4", "String": "TYPE_5", "Document": "TYPE_6", "NodeTest": "TYPE_7", "Comment": "TYPE_8", "QName": "TYPE_9", "NodeTypeTest": "TYPE_10", "Text": "TYPE_11", "NodeNameTest": "TYPE_12", "Object": "TYPE_13", "CDATA": "TYPE_14", "ProcessingInstruction": "TYPE_15", "getName": "METHOD_1", "getTarget": "METHOD_2", "testNode": "METHOD_3", "getNodeType": "METHOD_4", "getPrefix": "METHOD_5", "isWildcard": "METHOD_6", "getNodeName": "METHOD_7", "getLocalName": "METHOD_8", "equals": "METHOD_9", "equalStrings": "METHOD_10", "getNamespaceURI": "METHOD_11"}, "nodes": ["MethodDeclaration", "public static", "BasicType", "boolean", "testNode", "FormalParameter", "ReferenceType", "NodePointer", "pointer", "FormalParameter", "ReferenceType", "Object", "node", "FormalParameter", "ReferenceType", "NodeTest", "test", "IfStatement", "BinaryOperation", "MemberReference", "test", "==", "Literal", "null", "BlockStatement", "ReturnStatement", "Literal", "true", "IfStatement", "BinaryOperation", "MemberReference", "test", "instanceof", "ReferenceType", "NodeNameTest", "BlockStatement", "IfStatement", "BinaryOperation", "!", "MemberReference", "node", "instanceof", "ReferenceType", "Element", "BlockStatement", "ReturnStatement", "Literal", "false", "LocalVariableDeclaration", "ReferenceType", "NodeNameTest", "VariableDeclarator", "nodeNameTest", "Cast", "ReferenceType", "NodeNameTest", "MemberReference", "test", "LocalVariableDeclaration", "ReferenceType", "QName", "VariableDeclarator", "testName", "MethodInvocation", "nodeNameTest", "getNodeName", "LocalVariableDeclaration", "ReferenceType", "String", "VariableDeclarator", "namespaceURI", "MethodInvocation", "nodeNameTest", "getNamespaceURI", "LocalVariableDeclaration", "BasicType", "boolean", "VariableDeclarator", "wildcard", "MethodInvocation", "nodeNameTest", "isWildcard", "LocalVariableDeclaration", "ReferenceType", "String", "VariableDeclarator", "testPrefix", "MethodInvocation", "testName", "getPrefix", "IfStatement", "BinaryOperation", "MemberReference", "wildcard", "&&", "BinaryOperation", "MemberReference", "testPrefix", "==", "Literal", "null", "BlockStatement", "ReturnStatement", "Literal", "true", "IfStatement", "BinaryOperation", "MemberReference", "wildcard", "||", "MethodInvocation", "testName", "getName", "MethodInvocation", "equals", "MethodInvocation", "JDOMNodePointer", "getLocalName", "MemberReference", "node", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "String", "VariableDeclarator", "nodeNS", "MethodInvocation", "JDOMNodePointer", "getNamespaceURI", "MemberReference", "node", "ReturnStatement", "BinaryOperation", "MethodInvocation", "equalStrings", "MemberReference", "namespaceURI", "MemberReference", "nodeNS", "||", "BinaryOperation", "BinaryOperation", "MemberReference", "nodeNS", "==", "Literal", "null", "&&", "MethodInvocation", "equalStrings", "MemberReference", "testPrefix", "MethodInvocation", "getPrefix", "MemberReference", "node", "ReturnStatement", "Literal", "false", "IfStatement", "BinaryOperation", "MemberReference", "test", "instanceof", "ReferenceType", "NodeTypeTest", "BlockStatement", "SwitchStatement", "Cast", "ReferenceType", "NodeTypeTest", "MemberReference", "test", "MethodInvocation", "getNodeType", "SwitchStatementCase", "MemberReference", "Compiler", "NODE_TYPE_NODE", "ReturnStatement", "BinaryOperation", "BinaryOperation", "MemberReference", "node", "instanceof", "ReferenceType", "Element", "||", "BinaryOperation", "MemberReference", "node", "instanceof", "ReferenceType", "Document", "SwitchStatementCase", "MemberReference", "Compiler", "NODE_TYPE_TEXT", "ReturnStatement", "BinaryOperation", "BinaryOperation", "MemberReference", "node", "instanceof", "ReferenceType", "Text", "||", "BinaryOperation", "MemberReference", "node", "instanceof", "ReferenceType", "CDATA", "SwitchStatementCase", "MemberReference", "Compiler", "NODE_TYPE_COMMENT", "ReturnStatement", "BinaryOperation", "MemberReference", "node", "instanceof", "ReferenceType", "Comment", "SwitchStatementCase", "MemberReference", "Compiler", "NODE_TYPE_PI", "ReturnStatement", "BinaryOperation", "MemberReference", "node", "instanceof", "ReferenceType", "ProcessingInstruction", "ReturnStatement", "Literal", "false", "IfStatement", "BinaryOperation", "BinaryOperation", "MemberReference", "test", "instanceof", "ReferenceType", "ProcessingInstructionTest", "&&", "BinaryOperation", "MemberReference", "node", "instanceof", "ReferenceType", "ProcessingInstruction", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "String", "VariableDeclarator", "testPI", "Cast", "ReferenceType", "ProcessingInstructionTest", "MemberReference", "test", "MethodInvocation", "getTarget", "LocalVariableDeclaration", "ReferenceType", "String", "VariableDeclarator", "nodePI", "Cast", "ReferenceType", "ProcessingInstruction", "MemberReference", "node", "MethodInvocation", "getTarget", "ReturnStatement", "MethodInvocation", "testPI", "equals", "MemberReference", "nodePI", "ReturnStatement", "Literal", "false"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [5, 8, "name"], [0, 9, "parameters"], [9, 10, "type"], [10, 11, "name"], [9, 12, "name"], [0, 13, "parameters"], [13, 14, "type"], [14, 15, "name"], [13, 16, "name"], [0, 17, "body"], [17, 18, "condition"], [18, 19, "operandl"], [19, 20, "member"], [18, 21, "operator"], [18, 22, "operandr"], [22, 23, "value"], [17, 24, "then_statement"], [24, 25, "statements"], [25, 26, "expression"], [26, 27, "value"], [0, 28, "body"], [28, 29, "condition"], [29, 30, "operandl"], [30, 31, "member"], [29, 32, "operator"], [29, 33, "operandr"], [33, 34, "name"], [28, 35, "then_statement"], [35, 36, "statements"], [36, 37, "condition"], [37, 38, "prefix_operators"], [37, 39, "operandl"], [39, 40, "member"], [37, 41, "operator"], [37, 42, "operandr"], [42, 43, "name"], [36, 44, "then_statement"], [44, 45, "statements"], [45, 46, "expression"], [46, 47, "value"], [35, 48, "statements"], [48, 49, "type"], [49, 50, "name"], [48, 51, "declarators"], [51, 52, "name"], [51, 53, "initializer"], [53, 54, "type"], [54, 55, "name"], [53, 56, "expression"], [56, 57, "member"], [35, 58, "statements"], [58, 59, "type"], [59, 60, "name"], [58, 61, "declarators"], [61, 62, "name"], [61, 63, "initializer"], [63, 64, "qualifier"], [63, 65, "member"], [35, 66, "statements"], [66, 67, "type"], [67, 68, "name"], [66, 69, "declarators"], [69, 70, "name"], [69, 71, "initializer"], [71, 72, "qualifier"], [71, 73, "member"], [35, 74, "statements"], [74, 75, "type"], [75, 76, "name"], [74, 77, "declarators"], [77, 78, "name"], [77, 79, "initializer"], [79, 80, "qualifier"], [79, 81, "member"], [35, 82, "statements"], [82, 83, "type"], [83, 84, "name"], [82, 85, "declarators"], [85, 86, "name"], [85, 87, "initializer"], [87, 88, "qualifier"], [87, 89, "member"], [35, 90, "statements"], [90, 91, "condition"], [91, 92, "operandl"], [92, 93, "member"], [91, 94, "operator"], [91, 95, "operandr"], [95, 96, "operandl"], [96, 97, "member"], [95, 98, "operator"], [95, 99, "operandr"], [99, 100, "value"], [90, 101, "then_statement"], [101, 102, "statements"], [102, 103, "expression"], [103, 104, "value"], [35, 105, "statements"], [105, 106, "condition"], [106, 107, "operandl"], [107, 108, "member"], [106, 109, "operator"], [106, 110, "operandr"], [110, 111, "qualifier"], [110, 112, "member"], [110, 113, "selectors"], [113, 114, "member"], [113, 115, "arguments"], [115, 116, "qualifier"], [115, 117, "member"], [115, 118, "arguments"], [118, 119, "member"], [105, 120, "then_statement"], [120, 121, "statements"], [121, 122, "type"], [122, 123, "name"], [121, 124, "declarators"], [124, 125, "name"], [124, 126, "initializer"], [126, 127, "qualifier"], [126, 128, "member"], [126, 129, "arguments"], [129, 130, "member"], [120, 131, "statements"], [131, 132, "expression"], [132, 133, "operandl"], [133, 134, "member"], [133, 135, "arguments"], [135, 136, "member"], [133, 137, "arguments"], [137, 138, "member"], [132, 139, "operator"], [132, 140, "operandr"], [140, 141, "operandl"], [141, 142, "operandl"], [142, 143, "member"], [141, 144, "operator"], [141, 145, "operandr"], [145, 146, "value"], [140, 147, "operator"], [140, 148, "operandr"], [148, 149, "member"], [148, 150, "arguments"], [150, 151, "member"], [148, 152, "arguments"], [152, 153, "member"], [152, 154, "arguments"], [154, 155, "member"], [35, 156, "statements"], [156, 157, "expression"], [157, 158, "value"], [0, 159, "body"], [159, 160, "condition"], [160, 161, "operandl"], [161, 162, "member"], [160, 163, "operator"], [160, 164, "operandr"], [164, 165, "name"], [159, 166, "then_statement"], [166, 167, "statements"], [167, 168, "expression"], [168, 169, "type"], [169, 170, "name"], [168, 171, "expression"], [171, 172, "member"], [168, 173, "selectors"], [173, 174, "member"], [167, 175, "cases"], [175, 176, "case"], [176, 177, "qualifier"], [176, 178, "member"], [175, 179, "statements"], [179, 180, "expression"], [180, 181, "operandl"], [181, 182, "operandl"], [182, 183, "member"], [181, 184, "operator"], [181, 185, "operandr"], [185, 186, "name"], [180, 187, "operator"], [180, 188, "operandr"], [188, 189, "operandl"], [189, 190, "member"], [188, 191, "operator"], [188, 192, "operandr"], [192, 193, "name"], [167, 194, "cases"], [194, 195, "case"], [195, 196, "qualifier"], [195, 197, "member"], [194, 198, "statements"], [198, 199, "expression"], [199, 200, "operandl"], [200, 201, "operandl"], [201, 202, "member"], [200, 203, "operator"], [200, 204, "operandr"], [204, 205, "name"], [199, 206, "operator"], [199, 207, "operandr"], [207, 208, "operandl"], [208, 209, "member"], [207, 210, "operator"], [207, 211, "operandr"], [211, 212, "name"], [167, 213, "cases"], [213, 214, "case"], [214, 215, "qualifier"], [214, 216, "member"], [213, 217, "statements"], [217, 218, "expression"], [218, 219, "operandl"], [219, 220, "member"], [218, 221, "operator"], [218, 222, "operandr"], [222, 223, "name"], [167, 224, "cases"], [224, 225, "case"], [225, 226, "qualifier"], [225, 227, "member"], [224, 228, "statements"], [228, 229, "expression"], [229, 230, "operandl"], [230, 231, "member"], [229, 232, "operator"], [229, 233, "operandr"], [233, 234, "name"], [166, 235, "statements"], [235, 236, "expression"], [236, 237, "value"], [0, 238, "body"], [238, 239, "condition"], [239, 240, "operandl"], [240, 241, "operandl"], [241, 242, "member"], [240, 243, "operator"], [240, 244, "operandr"], [244, 245, "name"], [239, 246, "operator"], [239, 247, "operandr"], [247, 248, "operandl"], [248, 249, "member"], [247, 250, "operator"], [247, 251, "operandr"], [251, 252, "name"], [238, 253, "then_statement"], [253, 254, "statements"], [254, 255, "type"], [255, 256, "name"], [254, 257, "declarators"], [257, 258, "name"], [257, 259, "initializer"], [259, 260, "type"], [260, 261, "name"], [259, 262, "expression"], [262, 263, "member"], [259, 264, "selectors"], [264, 265, "member"], [253, 266, "statements"], [266, 267, "type"], [267, 268, "name"], [266, 269, "declarators"], [269, 270, "name"], [269, 271, "initializer"], [271, 272, "type"], [272, 273, "name"], [271, 274, "expression"], [274, 275, "member"], [271, 276, "selectors"], [276, 277, "member"], [253, 278, "statements"], [278, 279, "expression"], [279, 280, "qualifier"], [279, 281, "member"], [279, 282, "arguments"], [282, 283, "member"], [0, 284, "body"], [284, 285, "expression"], [285, 286, "value"]], "rem_roots": [179], "add_roots": []}, {"id": 101, "mappings": {"ValueUtils": "TYPE_1", "getLength": "METHOD_1", "getBaseValue": "METHOD_2"}, "nodes": ["MethodDeclaration", "public", "BasicType", "int", "getLength", "ReturnStatement", "MethodInvocation", "ValueUtils", "getLength", "MethodInvocation", "getBaseValue"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "body"], [5, 6, "expression"], [6, 7, "qualifier"], [6, 8, "member"], [6, 9, "arguments"], [9, 10, "member"]], "rem_roots": [5], "add_roots": []}, {"id": 102, "mappings": {"p1": "VAR_1", "parent": "VAR_2", "p2": "VAR_3", "p1.parent": "VAR_4", "depth1": "VAR_5", "depth2": "VAR_6", "r": "VAR_7", "NodePointer": "TYPE_1", "JXPathException": "TYPE_2", "compareNodePointers": "METHOD_1", "compareChildNodePointers": "METHOD_2", "equals": "METHOD_3", "0": "INT_1", "1": "INT_2", "\"Cannot compare pointers that do not belong to the same tree: '\"": "STRING_1", "\"' and '\"": "STRING_2", "\"'\"": "STRING_3"}, "nodes": ["MethodDeclaration", "private", "BasicType", "int", "compareNodePointers", "FormalParameter", "ReferenceType", "NodePointer", "p1", "FormalParameter", "BasicType", "int", "depth1", "FormalParameter", "ReferenceType", "NodePointer", "p2", "FormalParameter", "BasicType", "int", "depth2", "IfStatement", "BinaryOperation", "MemberReference", "depth1", "<", "MemberReference", "depth2", "BlockStatement", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "r", "MethodInvocation", "compareNodePointers", "MemberReference", "p1", "MemberReference", "depth1", "MemberReference", "p2", "parent", "BinaryOperation", "MemberReference", "depth2", "-", "Literal", "1", "ReturnStatement", "TernaryExpression", "BinaryOperation", "MemberReference", "r", "==", "Literal", "0", "Literal", "-", "1", "MemberReference", "r", "IfStatement", "BinaryOperation", "MemberReference", "depth1", ">", "MemberReference", "depth2", "BlockStatement", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "r", "MethodInvocation", "compareNodePointers", "MemberReference", "p1", "parent", "BinaryOperation", "MemberReference", "depth1", "-", "Literal", "1", "MemberReference", "p2", "MemberReference", "depth2", "ReturnStatement", "TernaryExpression", "BinaryOperation", "MemberReference", "r", "==", "Literal", "0", "Literal", "1", "MemberReference", "r", "IfStatement", "BinaryOperation", "BinaryOperation", "MemberReference", "p1", "==", "Literal", "null", "&&", "BinaryOperation", "MemberReference", "p2", "==", "Literal", "null", "BlockStatement", "ReturnStatement", "Literal", "0", "IfStatement", "BinaryOperation", "BinaryOperation", "MemberReference", "p1", "!=", "Literal", "null", "&&", "MethodInvocation", "p1", "equals", "MemberReference", "p2", "BlockStatement", "ReturnStatement", "Literal", "0", "IfStatement", "BinaryOperation", "MemberReference", "depth1", "==", "Literal", "1", "BlockStatement", "ThrowStatement", "ClassCreator", "ReferenceType", "JXPathException", "BinaryOperation", "BinaryOperation", "BinaryOperation", "BinaryOperation", "Literal", "\"Cannot compare pointers that do not belong to the same tree: '\"", "+", "MemberReference", "p1", "+", "Literal", "\"' and '\"", "+", "MemberReference", "p2", "+", "Literal", "\"'\"", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "r", "MethodInvocation", "compareNodePointers", "MemberReference", "p1", "parent", "BinaryOperation", "MemberReference", "depth1", "-", "Literal", "1", "MemberReference", "p2", "parent", "BinaryOperation", "MemberReference", "depth2", "-", "Literal", "1", "IfStatement", "BinaryOperation", "MemberReference", "r", "!=", "Literal", "0", "BlockStatement", "ReturnStatement", "MemberReference", "r", "ReturnStatement", "MethodInvocation", "p1.parent", "compareChildNodePointers", "MemberReference", "p1", "MemberReference", "p2"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [5, 8, "name"], [0, 9, "parameters"], [9, 10, "type"], [10, 11, "name"], [9, 12, "name"], [0, 13, "parameters"], [13, 14, "type"], [14, 15, "name"], [13, 16, "name"], [0, 17, "parameters"], [17, 18, "type"], [18, 19, "name"], [17, 20, "name"], [0, 21, "body"], [21, 22, "condition"], [22, 23, "operandl"], [23, 24, "member"], [22, 25, "operator"], [22, 26, "operandr"], [26, 27, "member"], [21, 28, "then_statement"], [28, 29, "statements"], [29, 30, "type"], [30, 31, "name"], [29, 32, "declarators"], [32, 33, "name"], [32, 34, "initializer"], [34, 35, "member"], [34, 36, "arguments"], [36, 37, "member"], [34, 38, "arguments"], [38, 39, "member"], [34, 40, "arguments"], [40, 41, "qualifier"], [40, 42, "member"], [34, 43, "arguments"], [43, 44, "operandl"], [44, 45, "member"], [43, 46, "operator"], [43, 47, "operandr"], [47, 48, "value"], [28, 49, "statements"], [49, 50, "expression"], [50, 51, "condition"], [51, 52, "operandl"], [52, 53, "member"], [51, 54, "operator"], [51, 55, "operandr"], [55, 56, "value"], [50, 57, "if_true"], [57, 58, "prefix_operators"], [57, 59, "value"], [50, 60, "if_false"], [60, 61, "member"], [0, 62, "body"], [62, 63, "condition"], [63, 64, "operandl"], [64, 65, "member"], [63, 66, "operator"], [63, 67, "operandr"], [67, 68, "member"], [62, 69, "then_statement"], [69, 70, "statements"], [70, 71, "type"], [71, 72, "name"], [70, 73, "declarators"], [73, 74, "name"], [73, 75, "initializer"], [75, 76, "member"], [75, 77, "arguments"], [77, 78, "qualifier"], [77, 79, "member"], [75, 80, "arguments"], [80, 81, "operandl"], [81, 82, "member"], [80, 83, "operator"], [80, 84, "operandr"], [84, 85, "value"], [75, 86, "arguments"], [86, 87, "member"], [75, 88, "arguments"], [88, 89, "member"], [69, 90, "statements"], [90, 91, "expression"], [91, 92, "condition"], [92, 93, "operandl"], [93, 94, "member"], [92, 95, "operator"], [92, 96, "operandr"], [96, 97, "value"], [91, 98, "if_true"], [98, 99, "value"], [91, 100, "if_false"], [100, 101, "member"], [0, 102, "body"], [102, 103, "condition"], [103, 104, "operandl"], [104, 105, "operandl"], [105, 106, "member"], [104, 107, "operator"], [104, 108, "operandr"], [108, 109, "value"], [103, 110, "operator"], [103, 111, "operandr"], [111, 112, "operandl"], [112, 113, "member"], [111, 114, "operator"], [111, 115, "operandr"], [115, 116, "value"], [102, 117, "then_statement"], [117, 118, "statements"], [118, 119, "expression"], [119, 120, "value"], [0, 121, "body"], [121, 122, "condition"], [122, 123, "operandl"], [123, 124, "operandl"], [124, 125, "member"], [123, 126, "operator"], [123, 127, "operandr"], [127, 128, "value"], [122, 129, "operator"], [122, 130, "operandr"], [130, 131, "qualifier"], [130, 132, "member"], [130, 133, "arguments"], [133, 134, "member"], [121, 135, "then_statement"], [135, 136, "statements"], [136, 137, "expression"], [137, 138, "value"], [0, 139, "body"], [139, 140, "condition"], [140, 141, "operandl"], [141, 142, "member"], [140, 143, "operator"], [140, 144, "operandr"], [144, 145, "value"], [139, 146, "then_statement"], [146, 147, "statements"], [147, 148, "expression"], [148, 149, "type"], [149, 150, "name"], [148, 151, "arguments"], [151, 152, "operandl"], [152, 153, "operandl"], [153, 154, "operandl"], [154, 155, "operandl"], [155, 156, "value"], [154, 157, "operator"], [154, 158, "operandr"], [158, 159, "member"], [153, 160, "operator"], [153, 161, "operandr"], [161, 162, "value"], [152, 163, "operator"], [152, 164, "operandr"], [164, 165, "member"], [151, 166, "operator"], [151, 167, "operandr"], [167, 168, "value"], [0, 169, "body"], [169, 170, "type"], [170, 171, "name"], [169, 172, "declarators"], [172, 173, "name"], [172, 174, "initializer"], [174, 175, "member"], [174, 176, "arguments"], [176, 177, "qualifier"], [176, 178, "member"], [174, 179, "arguments"], [179, 180, "operandl"], [180, 181, "member"], [179, 182, "operator"], [179, 183, "operandr"], [183, 184, "value"], [174, 185, "arguments"], [185, 186, "qualifier"], [185, 187, "member"], [174, 188, "arguments"], [188, 189, "operandl"], [189, 190, "member"], [188, 191, "operator"], [188, 192, "operandr"], [192, 193, "value"], [0, 194, "body"], [194, 195, "condition"], [195, 196, "operandl"], [196, 197, "member"], [195, 198, "operator"], [195, 199, "operandr"], [199, 200, "value"], [194, 201, "then_statement"], [201, 202, "statements"], [202, 203, "expression"], [203, 204, "member"], [0, 205, "body"], [205, 206, "expression"], [206, 207, "qualifier"], [206, 208, "member"], [206, 209, "arguments"], [209, 210, "member"], [206, 211, "arguments"], [211, 212, "member"]], "rem_roots": [147], "add_roots": []}, {"id": 103, "mappings": {"value": "VAR_1", "unquote": "VAR_2", "wasWhite": "VAR_3", "c": "VAR_4", "i": "VAR_5", "regex": "VAR_6", "StringBuilder": "TYPE_1", "String": "TYPE_2", "Character": "TYPE_3", "escapeRegex": "METHOD_1", "length": "METHOD_2", "isWhitespace": "METHOD_3", "charAt": "METHOD_4", "append": "METHOD_5", "0": "INT_1", "\"\\\\s*+\"": "STRING_1", "'+'": "CHAR_1", "')'": "CHAR_2", "']'": "CHAR_3", "'|'": "CHAR_4", "'['": "CHAR_5", "'.'": "CHAR_6", "'*'": "CHAR_7", "'\\''": "CHAR_8", "'('": "CHAR_9", "'$'": "CHAR_10", "'?'": "CHAR_11", "'^'": "CHAR_12", "'}'": "CHAR_13", "'{'": "CHAR_14", "'\\\\'": "CHAR_15"}, "nodes": ["MethodDeclaration", "static private", "ReferenceType", "StringBuilder", "escapeRegex", "FormalParameter", "ReferenceType", "StringBuilder", "regex", "FormalParameter", "ReferenceType", "String", "value", "FormalParameter", "BasicType", "boolean", "unquote", "LocalVariableDeclaration", "BasicType", "boolean", "VariableDeclarator", "wasWhite", "Literal", "false", "ForStatement", "ForControl", "VariableDeclaration", "BasicType", "int", "VariableDeclarator", "i", "Literal", "0", "BinaryOperation", "MemberReference", "i", "<", "MethodInvocation", "value", "length", "MemberReference", "++", "i", "BlockStatement", "LocalVariableDeclaration", "BasicType", "char", "VariableDeclarator", "c", "MethodInvocation", "value", "charAt", "MemberReference", "i", "IfStatement", "MethodInvocation", "Character", "isWhitespace", "MemberReference", "c", "BlockStatement", "IfStatement", "MemberReference", "!", "wasWhite", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "wasWhite", "=", "Literal", "true", "StatementExpression", "MethodInvocation", "regex", "append", "Literal", "\"\\\\s*+\"", "ContinueStatement", "StatementExpression", "Assignment", "MemberReference", "wasWhite", "=", "Literal", "false", "SwitchStatement", "MemberReference", "c", "SwitchStatementCase", "Literal", "'\\''", "IfStatement", "MemberReference", "unquote", "BlockStatement", "IfStatement", "BinaryOperation", "MemberReference", "++", "i", "==", "MethodInvocation", "value", "length", "BlockStatement", "ReturnStatement", "MemberReference", "regex", "StatementExpression", "Assignment", "MemberReference", "c", "=", "MethodInvocation", "value", "charAt", "MemberReference", "i", "BreakStatement", "SwitchStatementCase", "Literal", "'?'", "Literal", "'['", "Literal", "']'", "Literal", "'('", "Literal", "')'", "Literal", "'{'", "Literal", "'}'", "Literal", "'\\\\'", "Literal", "'|'", "Literal", "'*'", "Literal", "'+'", "Literal", "'^'", "Literal", "'$'", "Literal", "'.'", "StatementExpression", "MethodInvocation", "regex", "append", "Literal", "'\\\\'", "StatementExpression", "MethodInvocation", "regex", "append", "MemberReference", "c", "ReturnStatement", "MemberReference", "regex"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [5, 8, "name"], [0, 9, "parameters"], [9, 10, "type"], [10, 11, "name"], [9, 12, "name"], [0, 13, "parameters"], [13, 14, "type"], [14, 15, "name"], [13, 16, "name"], [0, 17, "body"], [17, 18, "type"], [18, 19, "name"], [17, 20, "declarators"], [20, 21, "name"], [20, 22, "initializer"], [22, 23, "value"], [0, 24, "body"], [24, 25, "control"], [25, 26, "init"], [26, 27, "type"], [27, 28, "name"], [26, 29, "declarators"], [29, 30, "name"], [29, 31, "initializer"], [31, 32, "value"], [25, 33, "condition"], [33, 34, "operandl"], [34, 35, "member"], [33, 36, "operator"], [33, 37, "operandr"], [37, 38, "qualifier"], [37, 39, "member"], [25, 40, "update"], [40, 41, "prefix_operators"], [40, 42, "member"], [24, 43, "body"], [43, 44, "statements"], [44, 45, "type"], [45, 46, "name"], [44, 47, "declarators"], [47, 48, "name"], [47, 49, "initializer"], [49, 50, "qualifier"], [49, 51, "member"], [49, 52, "arguments"], [52, 53, "member"], [43, 54, "statements"], [54, 55, "condition"], [55, 56, "qualifier"], [55, 57, "member"], [55, 58, "arguments"], [58, 59, "member"], [54, 60, "then_statement"], [60, 61, "statements"], [61, 62, "condition"], [62, 63, "prefix_operators"], [62, 64, "member"], [61, 65, "then_statement"], [65, 66, "statements"], [66, 67, "expression"], [67, 68, "expressionl"], [68, 69, "member"], [67, 70, "type"], [67, 71, "value"], [71, 72, "value"], [65, 73, "statements"], [73, 74, "expression"], [74, 75, "qualifier"], [74, 76, "member"], [74, 77, "arguments"], [77, 78, "value"], [60, 79, "statements"], [43, 80, "statements"], [80, 81, "expression"], [81, 82, "expressionl"], [82, 83, "member"], [81, 84, "type"], [81, 85, "value"], [85, 86, "value"], [43, 87, "statements"], [87, 88, "expression"], [88, 89, "member"], [87, 90, "cases"], [90, 91, "case"], [91, 92, "value"], [90, 93, "statements"], [93, 94, "condition"], [94, 95, "member"], [93, 96, "then_statement"], [96, 97, "statements"], [97, 98, "condition"], [98, 99, "operandl"], [99, 100, "prefix_operators"], [99, 101, "member"], [98, 102, "operator"], [98, 103, "operandr"], [103, 104, "qualifier"], [103, 105, "member"], [97, 106, "then_statement"], [106, 107, "statements"], [107, 108, "expression"], [108, 109, "member"], [96, 110, "statements"], [110, 111, "expression"], [111, 112, "expressionl"], [112, 113, "member"], [111, 114, "type"], [111, 115, "value"], [115, 116, "qualifier"], [115, 117, "member"], [115, 118, "arguments"], [118, 119, "member"], [90, 120, "statements"], [87, 121, "cases"], [121, 122, "case"], [122, 123, "value"], [121, 124, "case"], [124, 125, "value"], [121, 126, "case"], [126, 127, "value"], [121, 128, "case"], [128, 129, "value"], [121, 130, "case"], [130, 131, "value"], [121, 132, "case"], [132, 133, "value"], [121, 134, "case"], [134, 135, "value"], [121, 136, "case"], [136, 137, "value"], [121, 138, "case"], [138, 139, "value"], [121, 140, "case"], [140, 141, "value"], [121, 142, "case"], [142, 143, "value"], [121, 144, "case"], [144, 145, "value"], [121, 146, "case"], [146, 147, "value"], [121, 148, "case"], [148, 149, "value"], [121, 150, "statements"], [150, 151, "expression"], [151, 152, "qualifier"], [151, 153, "member"], [151, 154, "arguments"], [154, 155, "value"], [43, 156, "statements"], [156, 157, "expression"], [157, 158, "qualifier"], [157, 159, "member"], [157, 160, "arguments"], [160, 161, "member"], [0, 162, "body"], [162, 163, "expression"], [163, 164, "member"]], "rem_roots": [54], "add_roots": []}, {"id": 104, "mappings": {"DAY_OF_YEAR": "VAR_1", "HOUR": "VAR_2", "cal2": "VAR_3", "cal1": "VAR_4", "YEAR": "VAR_5", "ERA": "VAR_6", "SECOND": "VAR_7", "MINUTE": "VAR_8", "MILLISECOND": "VAR_9", "Calendar": "TYPE_1", "IllegalArgumentException": "TYPE_2", "getClass": "METHOD_1", "isSameLocalTime": "METHOD_2", "get": "METHOD_3", "\"The date must not be null\"": "STRING_1"}, "nodes": ["MethodDeclaration", "public static", "BasicType", "boolean", "isSameLocalTime", "FormalParameter", "ReferenceType", "Calendar", "cal1", "FormalParameter", "ReferenceType", "Calendar", "cal2", "IfStatement", "BinaryOperation", "BinaryOperation", "MemberReference", "cal1", "==", "Literal", "null", "||", "BinaryOperation", "MemberReference", "cal2", "==", "Literal", "null", "BlockStatement", "ThrowStatement", "ClassCreator", "ReferenceType", "IllegalArgumentException", "Literal", "\"The date must not be null\"", "ReturnStatement", "BinaryOperation", "BinaryOperation", "BinaryOperation", "BinaryOperation", "BinaryOperation", "BinaryOperation", "BinaryOperation", "BinaryOperation", "MethodInvocation", "cal1", "get", "MemberReference", "Calendar", "MILLISECOND", "==", "MethodInvocation", "cal2", "get", "MemberReference", "Calendar", "MILLISECOND", "&&", "BinaryOperation", "MethodInvocation", "cal1", "get", "MemberReference", "Calendar", "SECOND", "==", "MethodInvocation", "cal2", "get", "MemberReference", "Calendar", "SECOND", "&&", "BinaryOperation", "MethodInvocation", "cal1", "get", "MemberReference", "Calendar", "MINUTE", "==", "MethodInvocation", "cal2", "get", "MemberReference", "Calendar", "MINUTE", "&&", "BinaryOperation", "MethodInvocation", "cal1", "get", "MemberReference", "Calendar", "HOUR", "==", "MethodInvocation", "cal2", "get", "MemberReference", "Calendar", "HOUR", "&&", "BinaryOperation", "MethodInvocation", "cal1", "get", "MemberReference", "Calendar", "DAY_OF_YEAR", "==", "MethodInvocation", "cal2", "get", "MemberReference", "Calendar", "DAY_OF_YEAR", "&&", "BinaryOperation", "MethodInvocation", "cal1", "get", "MemberReference", "Calendar", "YEAR", "==", "MethodInvocation", "cal2", "get", "MemberReference", "Calendar", "YEAR", "&&", "BinaryOperation", "MethodInvocation", "cal1", "get", "MemberReference", "Calendar", "ERA", "==", "MethodInvocation", "cal2", "get", "MemberReference", "Calendar", "ERA", "&&", "BinaryOperation", "MethodInvocation", "cal1", "getClass", "==", "MethodInvocation", "cal2", "getClass"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [5, 8, "name"], [0, 9, "parameters"], [9, 10, "type"], [10, 11, "name"], [9, 12, "name"], [0, 13, "body"], [13, 14, "condition"], [14, 15, "operandl"], [15, 16, "operandl"], [16, 17, "member"], [15, 18, "operator"], [15, 19, "operandr"], [19, 20, "value"], [14, 21, "operator"], [14, 22, "operandr"], [22, 23, "operandl"], [23, 24, "member"], [22, 25, "operator"], [22, 26, "operandr"], [26, 27, "value"], [13, 28, "then_statement"], [28, 29, "statements"], [29, 30, "expression"], [30, 31, "type"], [31, 32, "name"], [30, 33, "arguments"], [33, 34, "value"], [0, 35, "body"], [35, 36, "expression"], [36, 37, "operandl"], [37, 38, "operandl"], [38, 39, "operandl"], [39, 40, "operandl"], [40, 41, "operandl"], [41, 42, "operandl"], [42, 43, "operandl"], [43, 44, "operandl"], [44, 45, "qualifier"], [44, 46, "member"], [44, 47, "arguments"], [47, 48, "qualifier"], [47, 49, "member"], [43, 50, "operator"], [43, 51, "operandr"], [51, 52, "qualifier"], [51, 53, "member"], [51, 54, "arguments"], [54, 55, "qualifier"], [54, 56, "member"], [42, 57, "operator"], [42, 58, "operandr"], [58, 59, "operandl"], [59, 60, "qualifier"], [59, 61, "member"], [59, 62, "arguments"], [62, 63, "qualifier"], [62, 64, "member"], [58, 65, "operator"], [58, 66, "operandr"], [66, 67, "qualifier"], [66, 68, "member"], [66, 69, "arguments"], [69, 70, "qualifier"], [69, 71, "member"], [41, 72, "operator"], [41, 73, "operandr"], [73, 74, "operandl"], [74, 75, "qualifier"], [74, 76, "member"], [74, 77, "arguments"], [77, 78, "qualifier"], [77, 79, "member"], [73, 80, "operator"], [73, 81, "operandr"], [81, 82, "qualifier"], [81, 83, "member"], [81, 84, "arguments"], [84, 85, "qualifier"], [84, 86, "member"], [40, 87, "operator"], [40, 88, "operandr"], [88, 89, "operandl"], [89, 90, "qualifier"], [89, 91, "member"], [89, 92, "arguments"], [92, 93, "qualifier"], [92, 94, "member"], [88, 95, "operator"], [88, 96, "operandr"], [96, 97, "qualifier"], [96, 98, "member"], [96, 99, "arguments"], [99, 100, "qualifier"], [99, 101, "member"], [39, 102, "operator"], [39, 103, "operandr"], [103, 104, "operandl"], [104, 105, "qualifier"], [104, 106, "member"], [104, 107, "arguments"], [107, 108, "qualifier"], [107, 109, "member"], [103, 110, "operator"], [103, 111, "operandr"], [111, 112, "qualifier"], [111, 113, "member"], [111, 114, "arguments"], [114, 115, "qualifier"], [114, 116, "member"], [38, 117, "operator"], [38, 118, "operandr"], [118, 119, "operandl"], [119, 120, "qualifier"], [119, 121, "member"], [119, 122, "arguments"], [122, 123, "qualifier"], [122, 124, "member"], [118, 125, "operator"], [118, 126, "operandr"], [126, 127, "qualifier"], [126, 128, "member"], [126, 129, "arguments"], [129, 130, "qualifier"], [129, 131, "member"], [37, 132, "operator"], [37, 133, "operandr"], [133, 134, "operandl"], [134, 135, "qualifier"], [134, 136, "member"], [134, 137, "arguments"], [137, 138, "qualifier"], [137, 139, "member"], [133, 140, "operator"], [133, 141, "operandr"], [141, 142, "qualifier"], [141, 143, "member"], [141, 144, "arguments"], [144, 145, "qualifier"], [144, 146, "member"], [36, 147, "operator"], [36, 148, "operandr"], [148, 149, "operandl"], [149, 150, "qualifier"], [149, 151, "member"], [148, 152, "operator"], [148, 153, "operandr"], [153, 154, "qualifier"], [153, 155, "member"]], "rem_roots": [88], "add_roots": []}, {"id": 105, "mappings": {"version": "VAR_1", "JAVA_VERSION_TRIM_SIZE": "VAR_2", "String": "TYPE_1", "toVersionInt": "METHOD_1", "toJavaVersionInt": "METHOD_2", "toJavaVersionIntArray": "METHOD_3"}, "nodes": ["MethodDeclaration", "static", "BasicType", "float", "toJavaVersionInt", "FormalParameter", "ReferenceType", "String", "version", "ReturnStatement", "MethodInvocation", "toVersionInt", "MethodInvocation", "toJavaVersionIntArray", "MemberReference", "version", "MemberReference", "JAVA_VERSION_TRIM_SIZE"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [5, 8, "name"], [0, 9, "body"], [9, 10, "expression"], [10, 11, "member"], [10, 12, "arguments"], [12, 13, "member"], [12, 14, "arguments"], [14, 15, "member"], [12, 16, "arguments"], [16, 17, "member"]], "rem_roots": [0], "add_roots": []}, {"id": 106, "mappings": {"array": "VAR_1", "classes": "VAR_2", "length": "VAR_3", "ArrayUtils": "VAR_4", "i": "VAR_5", "EMPTY_CLASS_ARRAY": "VAR_6", "Class": "TYPE_1", "Object": "TYPE_2", "getClass": "METHOD_1", "toClass": "METHOD_2", "0": "INT_1"}, "nodes": ["MethodDeclaration", "public static", "ReferenceType", "Class", "TypeArgument", "?", "None", "toClass", "FormalParameter", "ReferenceType", "Object", "None", "array", "IfStatement", "BinaryOperation", "MemberReference", "array", "==", "Literal", "null", "BlockStatement", "ReturnStatement", "Literal", "null", "IfStatement", "BinaryOperation", "MemberReference", "array", "length", "==", "Literal", "0", "BlockStatement", "ReturnStatement", "MemberReference", "ArrayUtils", "EMPTY_CLASS_ARRAY", "LocalVariableDeclaration", "ReferenceType", "Class", "TypeArgument", "?", "None", "VariableDeclarator", "classes", "ArrayCreator", "ReferenceType", "Class", "MemberReference", "array", "length", "ForStatement", "ForControl", "VariableDeclaration", "BasicType", "int", "VariableDeclarator", "i", "Literal", "0", "BinaryOperation", "MemberReference", "i", "<", "MemberReference", "array", "length", "MemberReference", "i", "++", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "classes", "ArraySelector", "MemberReference", "i", "=", "MemberReference", "array", "ArraySelector", "MemberReference", "i", "MethodInvocation", "getClass", "ReturnStatement", "MemberReference", "classes"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [2, 4, "arguments"], [4, 5, "pattern_type"], [2, 6, "dimensions"], [0, 7, "name"], [0, 8, "parameters"], [8, 9, "type"], [9, 10, "name"], [9, 11, "dimensions"], [8, 12, "name"], [0, 13, "body"], [13, 14, "condition"], [14, 15, "operandl"], [15, 16, "member"], [14, 17, "operator"], [14, 18, "operandr"], [18, 19, "value"], [13, 20, "then_statement"], [20, 21, "statements"], [21, 22, "expression"], [22, 23, "value"], [13, 24, "else_statement"], [24, 25, "condition"], [25, 26, "operandl"], [26, 27, "qualifier"], [26, 28, "member"], [25, 29, "operator"], [25, 30, "operandr"], [30, 31, "value"], [24, 32, "then_statement"], [32, 33, "statements"], [33, 34, "expression"], [34, 35, "qualifier"], [34, 36, "member"], [0, 37, "body"], [37, 38, "type"], [38, 39, "name"], [38, 40, "arguments"], [40, 41, "pattern_type"], [38, 42, "dimensions"], [37, 43, "declarators"], [43, 44, "name"], [43, 45, "initializer"], [45, 46, "type"], [46, 47, "name"], [45, 48, "dimensions"], [48, 49, "qualifier"], [48, 50, "member"], [0, 51, "body"], [51, 52, "control"], [52, 53, "init"], [53, 54, "type"], [54, 55, "name"], [53, 56, "declarators"], [56, 57, "name"], [56, 58, "initializer"], [58, 59, "value"], [52, 60, "condition"], [60, 61, "operandl"], [61, 62, "member"], [60, 63, "operator"], [60, 64, "operandr"], [64, 65, "qualifier"], [64, 66, "member"], [52, 67, "update"], [67, 68, "member"], [67, 69, "postfix_operators"], [51, 70, "body"], [70, 71, "statements"], [71, 72, "expression"], [72, 73, "expressionl"], [73, 74, "member"], [73, 75, "selectors"], [75, 76, "index"], [76, 77, "member"], [72, 78, "type"], [72, 79, "value"], [79, 80, "member"], [79, 81, "selectors"], [81, 82, "index"], [82, 83, "member"], [79, 84, "selectors"], [84, 85, "member"], [0, 86, "body"], [86, 87, "expression"], [87, 88, "member"]], "rem_roots": [71], "add_roots": []}, {"id": 107, "mappings": {"calendar": "VAR_1", "buf": "VAR_2", "mTimeZoneForced": "VAR_3", "mTimeZone": "VAR_4", "StringBuffer": "TYPE_1", "Calendar": "TYPE_2", "applyRules": "METHOD_1", "format": "METHOD_2", "clone": "METHOD_3", "setTimeZone": "METHOD_4"}, "nodes": ["MethodDeclaration", "public", "ReferenceType", "StringBuffer", "format", "FormalParameter", "ReferenceType", "Calendar", "calendar", "FormalParameter", "ReferenceType", "StringBuffer", "buf", "IfStatement", "MemberReference", "mTimeZoneForced", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "calendar", "=", "Cast", "ReferenceType", "Calendar", "MethodInvocation", "calendar", "clone", "StatementExpression", "MethodInvocation", "calendar", "setTimeZone", "MemberReference", "mTimeZone", "ReturnStatement", "MethodInvocation", "applyRules", "MemberReference", "calendar", "MemberReference", "buf"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [5, 8, "name"], [0, 9, "parameters"], [9, 10, "type"], [10, 11, "name"], [9, 12, "name"], [0, 13, "body"], [13, 14, "condition"], [14, 15, "member"], [13, 16, "then_statement"], [16, 17, "statements"], [17, 18, "expression"], [18, 19, "expressionl"], [19, 20, "member"], [18, 21, "type"], [18, 22, "value"], [22, 23, "type"], [23, 24, "name"], [22, 25, "expression"], [25, 26, "qualifier"], [25, 27, "member"], [16, 28, "statements"], [28, 29, "expression"], [29, 30, "qualifier"], [29, 31, "member"], [29, 32, "arguments"], [32, 33, "member"], [0, 34, "body"], [34, 35, "expression"], [35, 36, "member"], [35, 37, "arguments"], [37, 38, "member"], [35, 39, "arguments"], [39, 40, "member"]], "rem_roots": [17], "add_roots": []}, {"id": 108, "mappings": {"str": "VAR_1", "searchStr": "VAR_2", "String": "TYPE_1", "contains": "METHOD_1", "toUpperCase": "METHOD_2", "containsIgnoreCase": "METHOD_3"}, "nodes": ["MethodDeclaration", "public static", "BasicType", "boolean", "containsIgnoreCase", "FormalParameter", "ReferenceType", "String", "str", "FormalParameter", "ReferenceType", "String", "searchStr", "IfStatement", "BinaryOperation", "BinaryOperation", "MemberReference", "str", "==", "Literal", "null", "||", "BinaryOperation", "MemberReference", "searchStr", "==", "Literal", "null", "BlockStatement", "ReturnStatement", "Literal", "false", "ReturnStatement", "MethodInvocation", "contains", "MethodInvocation", "str", "toUpperCase", "MethodInvocation", "searchStr", "toUpperCase"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [5, 8, "name"], [0, 9, "parameters"], [9, 10, "type"], [10, 11, "name"], [9, 12, "name"], [0, 13, "body"], [13, 14, "condition"], [14, 15, "operandl"], [15, 16, "operandl"], [16, 17, "member"], [15, 18, "operator"], [15, 19, "operandr"], [19, 20, "value"], [14, 21, "operator"], [14, 22, "operandr"], [22, 23, "operandl"], [23, 24, "member"], [22, 25, "operator"], [22, 26, "operandr"], [26, 27, "value"], [13, 28, "then_statement"], [28, 29, "statements"], [29, 30, "expression"], [30, 31, "value"], [0, 32, "body"], [32, 33, "expression"], [33, 34, "member"], [33, 35, "arguments"], [35, 36, "qualifier"], [35, 37, "member"], [33, 38, "arguments"], [38, 39, "qualifier"], [38, 40, "member"]], "rem_roots": [32], "add_roots": []}, {"id": 109, "mappings": {"QUOTE": "VAR_1", "c": "VAR_2", "pattern": "VAR_3", "start": "VAR_4", "lastHold": "VAR_5", "i": "VAR_6", "pos": "VAR_7", "appendTo": "VAR_8", "escapingOn": "VAR_9", "String": "TYPE_1", "StringBuffer": "TYPE_2", "IllegalArgumentException": "TYPE_3", "ParsePosition": "TYPE_4", "ESCAPED_QUOTE": "TYPE_5", "next": "METHOD_1", "toCharArray": "METHOD_2", "getIndex": "METHOD_3", "length": "METHOD_4", "substring": "METHOD_5", "setIndex": "METHOD_6", "appendQuotedString": "METHOD_7", "append": "METHOD_8", "startsWith": "METHOD_9", "\"Unterminated quoted string at position \"": "STRING_1"}, "nodes": ["MethodDeclaration", "private", "ReferenceType", "StringBuffer", "appendQuotedString", "FormalParameter", "ReferenceType", "String", "pattern", "FormalParameter", "ReferenceType", "ParsePosition", "pos", "FormalParameter", "ReferenceType", "StringBuffer", "appendTo", "FormalParameter", "BasicType", "boolean", "escapingOn", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "start", "MethodInvocation", "pos", "getIndex", "LocalVariableDeclaration", "BasicType", "char", "None", "VariableDeclarator", "c", "MethodInvocation", "pattern", "toCharArray", "IfStatement", "BinaryOperation", "MemberReference", "escapingOn", "&&", "BinaryOperation", "MemberReference", "c", "ArraySelector", "MemberReference", "start", "==", "MemberReference", "QUOTE", "BlockStatement", "ReturnStatement", "TernaryExpression", "BinaryOperation", "MemberReference", "appendTo", "==", "Literal", "null", "Literal", "null", "MethodInvocation", "appendTo", "append", "MemberReference", "QUOTE", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "lastHold", "MemberReference", "start", "ForStatement", "ForControl", "VariableDeclaration", "BasicType", "int", "VariableDeclarator", "i", "MethodInvocation", "pos", "getIndex", "BinaryOperation", "MemberReference", "i", "<", "MethodInvocation", "pattern", "length", "MemberReference", "i", "++", "BlockStatement", "IfStatement", "BinaryOperation", "MemberReference", "escapingOn", "&&", "MethodInvocation", "pattern", "substring", "MemberReference", "i", "MethodInvocation", "startsWith", "MemberReference", "ESCAPED_QUOTE", "BlockStatement", "StatementExpression", "MethodInvocation", "appendTo", "append", "MemberReference", "c", "MemberReference", "lastHold", "BinaryOperation", "MethodInvocation", "pos", "getIndex", "-", "MemberReference", "lastHold", "MethodInvocation", "append", "MemberReference", "QUOTE", "StatementExpression", "MethodInvocation", "pos", "setIndex", "BinaryOperation", "MemberReference", "i", "+", "MethodInvocation", "ESCAPED_QUOTE", "length", "StatementExpression", "Assignment", "MemberReference", "lastHold", "=", "MethodInvocation", "pos", "getIndex", "ContinueStatement", "SwitchStatement", "MemberReference", "c", "ArraySelector", "MethodInvocation", "pos", "getIndex", "SwitchStatementCase", "QUOTE", "StatementExpression", "MethodInvocation", "next", "MemberReference", "pos", "ReturnStatement", "TernaryExpression", "BinaryOperation", "MemberReference", "appendTo", "==", "Literal", "null", "Literal", "null", "MethodInvocation", "appendTo", "append", "MemberReference", "c", "MemberReference", "lastHold", "BinaryOperation", "MethodInvocation", "pos", "getIndex", "-", "MemberReference", "lastHold", "SwitchStatementCase", "StatementExpression", "MethodInvocation", "next", "MemberReference", "pos", "ThrowStatement", "ClassCreator", "ReferenceType", "IllegalArgumentException", "BinaryOperation", "Literal", "\"Unterminated quoted string at position \"", "+", "MemberReference", "start"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [5, 8, "name"], [0, 9, "parameters"], [9, 10, "type"], [10, 11, "name"], [9, 12, "name"], [0, 13, "parameters"], [13, 14, "type"], [14, 15, "name"], [13, 16, "name"], [0, 17, "parameters"], [17, 18, "type"], [18, 19, "name"], [17, 20, "name"], [0, 21, "body"], [21, 22, "type"], [22, 23, "name"], [21, 24, "declarators"], [24, 25, "name"], [24, 26, "initializer"], [26, 27, "qualifier"], [26, 28, "member"], [0, 29, "body"], [29, 30, "type"], [30, 31, "name"], [30, 32, "dimensions"], [29, 33, "declarators"], [33, 34, "name"], [33, 35, "initializer"], [35, 36, "qualifier"], [35, 37, "member"], [0, 38, "body"], [38, 39, "condition"], [39, 40, "operandl"], [40, 41, "member"], [39, 42, "operator"], [39, 43, "operandr"], [43, 44, "operandl"], [44, 45, "member"], [44, 46, "selectors"], [46, 47, "index"], [47, 48, "member"], [43, 49, "operator"], [43, 50, "operandr"], [50, 51, "member"], [38, 52, "then_statement"], [52, 53, "statements"], [53, 54, "expression"], [54, 55, "condition"], [55, 56, "operandl"], [56, 57, "member"], [55, 58, "operator"], [55, 59, "operandr"], [59, 60, "value"], [54, 61, "if_true"], [61, 62, "value"], [54, 63, "if_false"], [63, 64, "qualifier"], [63, 65, "member"], [63, 66, "arguments"], [66, 67, "member"], [0, 68, "body"], [68, 69, "type"], [69, 70, "name"], [68, 71, "declarators"], [71, 72, "name"], [71, 73, "initializer"], [73, 74, "member"], [0, 75, "body"], [75, 76, "control"], [76, 77, "init"], [77, 78, "type"], [78, 79, "name"], [77, 80, "declarators"], [80, 81, "name"], [80, 82, "initializer"], [82, 83, "qualifier"], [82, 84, "member"], [76, 85, "condition"], [85, 86, "operandl"], [86, 87, "member"], [85, 88, "operator"], [85, 89, "operandr"], [89, 90, "qualifier"], [89, 91, "member"], [76, 92, "update"], [92, 93, "member"], [92, 94, "postfix_operators"], [75, 95, "body"], [95, 96, "statements"], [96, 97, "condition"], [97, 98, "operandl"], [98, 99, "member"], [97, 100, "operator"], [97, 101, "operandr"], [101, 102, "qualifier"], [101, 103, "member"], [101, 104, "arguments"], [104, 105, "member"], [101, 106, "selectors"], [106, 107, "member"], [106, 108, "arguments"], [108, 109, "member"], [96, 110, "then_statement"], [110, 111, "statements"], [111, 112, "expression"], [112, 113, "qualifier"], [112, 114, "member"], [112, 115, "arguments"], [115, 116, "member"], [112, 117, "arguments"], [117, 118, "member"], [112, 119, "arguments"], [119, 120, "operandl"], [120, 121, "qualifier"], [120, 122, "member"], [119, 123, "operator"], [119, 124, "operandr"], [124, 125, "member"], [112, 126, "selectors"], [126, 127, "member"], [126, 128, "arguments"], [128, 129, "member"], [110, 130, "statements"], [130, 131, "expression"], [131, 132, "qualifier"], [131, 133, "member"], [131, 134, "arguments"], [134, 135, "operandl"], [135, 136, "member"], [134, 137, "operator"], [134, 138, "operandr"], [138, 139, "qualifier"], [138, 140, "member"], [110, 141, "statements"], [141, 142, "expression"], [142, 143, "expressionl"], [143, 144, "member"], [142, 145, "type"], [142, 146, "value"], [146, 147, "qualifier"], [146, 148, "member"], [110, 149, "statements"], [95, 150, "statements"], [150, 151, "expression"], [151, 152, "member"], [151, 153, "selectors"], [153, 154, "index"], [154, 155, "qualifier"], [154, 156, "member"], [150, 157, "cases"], [157, 158, "case"], [157, 159, "statements"], [159, 160, "expression"], [160, 161, "member"], [160, 162, "arguments"], [162, 163, "member"], [157, 164, "statements"], [164, 165, "expression"], [165, 166, "condition"], [166, 167, "operandl"], [167, 168, "member"], [166, 169, "operator"], [166, 170, "operandr"], [170, 171, "value"], [165, 172, "if_true"], [172, 173, "value"], [165, 174, "if_false"], [174, 175, "qualifier"], [174, 176, "member"], [174, 177, "arguments"], [177, 178, "member"], [174, 179, "arguments"], [179, 180, "member"], [174, 181, "arguments"], [181, 182, "operandl"], [182, 183, "qualifier"], [182, 184, "member"], [181, 185, "operator"], [181, 186, "operandr"], [186, 187, "member"], [150, 188, "cases"], [188, 189, "statements"], [189, 190, "expression"], [190, 191, "member"], [190, 192, "arguments"], [192, 193, "member"], [0, 194, "body"], [194, 195, "expression"], [195, 196, "type"], [196, 197, "name"], [195, 198, "arguments"], [198, 199, "operandl"], [199, 200, "value"], [198, 201, "operator"], [198, 202, "operandr"], [202, 203, "member"]], "rem_roots": [53], "add_roots": []}, {"id": 110, "mappings": {"ch": "VAR_1", "ch0": "VAR_2", "ch1": "VAR_3", "str": "VAR_4", "String": "TYPE_1", "toBoolean": "METHOD_1", "length": "METHOD_2", "charAt": "METHOD_3", "0": "INT_1", "1": "INT_2", "2": "INT_3", "3": "INT_4", "4": "INT_5", "\"true\"": "STRING_1", "'N'": "CHAR_1", "'e'": "CHAR_2", "'Y'": "CHAR_3", "'U'": "CHAR_4", "'t'": "CHAR_5", "'S'": "CHAR_6", "'r'": "CHAR_7", "'O'": "CHAR_8", "'n'": "CHAR_9", "'E'": "CHAR_10", "'y'": "CHAR_11", "'u'": "CHAR_12", "'T'": "CHAR_13", "'s'": "CHAR_14", "'R'": "CHAR_15", "'o'": "CHAR_16"}, "nodes": ["MethodDeclaration", "public static", "BasicType", "boolean", "toBoolean", "FormalParameter", "ReferenceType", "String", "str", "IfStatement", "BinaryOperation", "MemberReference", "str", "==", "Literal", "\"true\"", "BlockStatement", "ReturnStatement", "Literal", "true", "IfStatement", "BinaryOperation", "MemberReference", "str", "==", "Literal", "null", "BlockStatement", "ReturnStatement", "Literal", "false", "SwitchStatement", "MethodInvocation", "str", "length", "SwitchStatementCase", "Literal", "2", "BlockStatement", "LocalVariableDeclaration", "BasicType", "char", "VariableDeclarator", "ch0", "MethodInvocation", "str", "charAt", "Literal", "0", "LocalVariableDeclaration", "BasicType", "char", "VariableDeclarator", "ch1", "MethodInvocation", "str", "charAt", "Literal", "1", "ReturnStatement", "BinaryOperation", "BinaryOperation", "BinaryOperation", "MemberReference", "ch0", "==", "Literal", "'o'", "||", "BinaryOperation", "MemberReference", "ch0", "==", "Literal", "'O'", "&&", "BinaryOperation", "BinaryOperation", "MemberReference", "ch1", "==", "Literal", "'n'", "||", "BinaryOperation", "MemberReference", "ch1", "==", "Literal", "'N'", "SwitchStatementCase", "Literal", "3", "BlockStatement", "LocalVariableDeclaration", "BasicType", "char", "VariableDeclarator", "ch", "MethodInvocation", "str", "charAt", "Literal", "0", "IfStatement", "BinaryOperation", "MemberReference", "ch", "==", "Literal", "'y'", "BlockStatement", "ReturnStatement", "BinaryOperation", "BinaryOperation", "BinaryOperation", "MethodInvocation", "str", "charAt", "Literal", "1", "==", "Literal", "'e'", "||", "BinaryOperation", "MethodInvocation", "str", "charAt", "Literal", "1", "==", "Literal", "'E'", "&&", "BinaryOperation", "BinaryOperation", "MethodInvocation", "str", "charAt", "Literal", "2", "==", "Literal", "'s'", "||", "BinaryOperation", "MethodInvocation", "str", "charAt", "Literal", "2", "==", "Literal", "'S'", "IfStatement", "BinaryOperation", "MemberReference", "ch", "==", "Literal", "'Y'", "BlockStatement", "ReturnStatement", "BinaryOperation", "BinaryOperation", "BinaryOperation", "MethodInvocation", "str", "charAt", "Literal", "1", "==", "Literal", "'E'", "||", "BinaryOperation", "MethodInvocation", "str", "charAt", "Literal", "1", "==", "Literal", "'e'", "&&", "BinaryOperation", "BinaryOperation", "MethodInvocation", "str", "charAt", "Literal", "2", "==", "Literal", "'S'", "||", "BinaryOperation", "MethodInvocation", "str", "charAt", "Literal", "2", "==", "Literal", "'s'", "SwitchStatementCase", "Literal", "4", "BlockStatement", "LocalVariableDeclaration", "BasicType", "char", "VariableDeclarator", "ch", "MethodInvocation", "str", "charAt", "Literal", "0", "IfStatement", "BinaryOperation", "MemberReference", "ch", "==", "Literal", "'t'", "BlockStatement", "ReturnStatement", "BinaryOperation", "BinaryOperation", "BinaryOperation", "BinaryOperation", "MethodInvocation", "str", "charAt", "Literal", "1", "==", "Literal", "'r'", "||", "BinaryOperation", "MethodInvocation", "str", "charAt", "Literal", "1", "==", "Literal", "'R'", "&&", "BinaryOperation", "BinaryOperation", "MethodInvocation", "str", "charAt", "Literal", "2", "==", "Literal", "'u'", "||", "BinaryOperation", "MethodInvocation", "str", "charAt", "Literal", "2", "==", "Literal", "'U'", "&&", "BinaryOperation", "BinaryOperation", "MethodInvocation", "str", "charAt", "Literal", "3", "==", "Literal", "'e'", "||", "BinaryOperation", "MethodInvocation", "str", "charAt", "Literal", "3", "==", "Literal", "'E'", "IfStatement", "BinaryOperation", "MemberReference", "ch", "==", "Literal", "'T'", "BlockStatement", "ReturnStatement", "BinaryOperation", "BinaryOperation", "BinaryOperation", "BinaryOperation", "MethodInvocation", "str", "charAt", "Literal", "1", "==", "Literal", "'R'", "||", "BinaryOperation", "MethodInvocation", "str", "charAt", "Literal", "1", "==", "Literal", "'r'", "&&", "BinaryOperation", "BinaryOperation", "MethodInvocation", "str", "charAt", "Literal", "2", "==", "Literal", "'U'", "||", "BinaryOperation", "MethodInvocation", "str", "charAt", "Literal", "2", "==", "Literal", "'u'", "&&", "BinaryOperation", "BinaryOperation", "MethodInvocation", "str", "charAt", "Literal", "3", "==", "Literal", "'E'", "||", "BinaryOperation", "MethodInvocation", "str", "charAt", "Literal", "3", "==", "Literal", "'e'", "ReturnStatement", "Literal", "false"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [5, 8, "name"], [0, 9, "body"], [9, 10, "condition"], [10, 11, "operandl"], [11, 12, "member"], [10, 13, "operator"], [10, 14, "operandr"], [14, 15, "value"], [9, 16, "then_statement"], [16, 17, "statements"], [17, 18, "expression"], [18, 19, "value"], [0, 20, "body"], [20, 21, "condition"], [21, 22, "operandl"], [22, 23, "member"], [21, 24, "operator"], [21, 25, "operandr"], [25, 26, "value"], [20, 27, "then_statement"], [27, 28, "statements"], [28, 29, "expression"], [29, 30, "value"], [0, 31, "body"], [31, 32, "expression"], [32, 33, "qualifier"], [32, 34, "member"], [31, 35, "cases"], [35, 36, "case"], [36, 37, "value"], [35, 38, "statements"], [38, 39, "statements"], [39, 40, "type"], [40, 41, "name"], [39, 42, "declarators"], [42, 43, "name"], [42, 44, "initializer"], [44, 45, "qualifier"], [44, 46, "member"], [44, 47, "arguments"], [47, 48, "value"], [38, 49, "statements"], [49, 50, "type"], [50, 51, "name"], [49, 52, "declarators"], [52, 53, "name"], [52, 54, "initializer"], [54, 55, "qualifier"], [54, 56, "member"], [54, 57, "arguments"], [57, 58, "value"], [38, 59, "statements"], [59, 60, "expression"], [60, 61, "operandl"], [61, 62, "operandl"], [62, 63, "operandl"], [63, 64, "member"], [62, 65, "operator"], [62, 66, "operandr"], [66, 67, "value"], [61, 68, "operator"], [61, 69, "operandr"], [69, 70, "operandl"], [70, 71, "member"], [69, 72, "operator"], [69, 73, "operandr"], [73, 74, "value"], [60, 75, "operator"], [60, 76, "operandr"], [76, 77, "operandl"], [77, 78, "operandl"], [78, 79, "member"], [77, 80, "operator"], [77, 81, "operandr"], [81, 82, "value"], [76, 83, "operator"], [76, 84, "operandr"], [84, 85, "operandl"], [85, 86, "member"], [84, 87, "operator"], [84, 88, "operandr"], [88, 89, "value"], [31, 90, "cases"], [90, 91, "case"], [91, 92, "value"], [90, 93, "statements"], [93, 94, "statements"], [94, 95, "type"], [95, 96, "name"], [94, 97, "declarators"], [97, 98, "name"], [97, 99, "initializer"], [99, 100, "qualifier"], [99, 101, "member"], [99, 102, "arguments"], [102, 103, "value"], [93, 104, "statements"], [104, 105, "condition"], [105, 106, "operandl"], [106, 107, "member"], [105, 108, "operator"], [105, 109, "operandr"], [109, 110, "value"], [104, 111, "then_statement"], [111, 112, "statements"], [112, 113, "expression"], [113, 114, "operandl"], [114, 115, "operandl"], [115, 116, "operandl"], [116, 117, "qualifier"], [116, 118, "member"], [116, 119, "arguments"], [119, 120, "value"], [115, 121, "operator"], [115, 122, "operandr"], [122, 123, "value"], [114, 124, "operator"], [114, 125, "operandr"], [125, 126, "operandl"], [126, 127, "qualifier"], [126, 128, "member"], [126, 129, "arguments"], [129, 130, "value"], [125, 131, "operator"], [125, 132, "operandr"], [132, 133, "value"], [113, 134, "operator"], [113, 135, "operandr"], [135, 136, "operandl"], [136, 137, "operandl"], [137, 138, "qualifier"], [137, 139, "member"], [137, 140, "arguments"], [140, 141, "value"], [136, 142, "operator"], [136, 143, "operandr"], [143, 144, "value"], [135, 145, "operator"], [135, 146, "operandr"], [146, 147, "operandl"], [147, 148, "qualifier"], [147, 149, "member"], [147, 150, "arguments"], [150, 151, "value"], [146, 152, "operator"], [146, 153, "operandr"], [153, 154, "value"], [93, 155, "statements"], [155, 156, "condition"], [156, 157, "operandl"], [157, 158, "member"], [156, 159, "operator"], [156, 160, "operandr"], [160, 161, "value"], [155, 162, "then_statement"], [162, 163, "statements"], [163, 164, "expression"], [164, 165, "operandl"], [165, 166, "operandl"], [166, 167, "operandl"], [167, 168, "qualifier"], [167, 169, "member"], [167, 170, "arguments"], [170, 171, "value"], [166, 172, "operator"], [166, 173, "operandr"], [173, 174, "value"], [165, 175, "operator"], [165, 176, "operandr"], [176, 177, "operandl"], [177, 178, "qualifier"], [177, 179, "member"], [177, 180, "arguments"], [180, 181, "value"], [176, 182, "operator"], [176, 183, "operandr"], [183, 184, "value"], [164, 185, "operator"], [164, 186, "operandr"], [186, 187, "operandl"], [187, 188, "operandl"], [188, 189, "qualifier"], [188, 190, "member"], [188, 191, "arguments"], [191, 192, "value"], [187, 193, "operator"], [187, 194, "operandr"], [194, 195, "value"], [186, 196, "operator"], [186, 197, "operandr"], [197, 198, "operandl"], [198, 199, "qualifier"], [198, 200, "member"], [198, 201, "arguments"], [201, 202, "value"], [197, 203, "operator"], [197, 204, "operandr"], [204, 205, "value"], [31, 206, "cases"], [206, 207, "case"], [207, 208, "value"], [206, 209, "statements"], [209, 210, "statements"], [210, 211, "type"], [211, 212, "name"], [210, 213, "declarators"], [213, 214, "name"], [213, 215, "initializer"], [215, 216, "qualifier"], [215, 217, "member"], [215, 218, "arguments"], [218, 219, "value"], [209, 220, "statements"], [220, 221, "condition"], [221, 222, "operandl"], [222, 223, "member"], [221, 224, "operator"], [221, 225, "operandr"], [225, 226, "value"], [220, 227, "then_statement"], [227, 228, "statements"], [228, 229, "expression"], [229, 230, "operandl"], [230, 231, "operandl"], [231, 232, "operandl"], [232, 233, "operandl"], [233, 234, "qualifier"], [233, 235, "member"], [233, 236, "arguments"], [236, 237, "value"], [232, 238, "operator"], [232, 239, "operandr"], [239, 240, "value"], [231, 241, "operator"], [231, 242, "operandr"], [242, 243, "operandl"], [243, 244, "qualifier"], [243, 245, "member"], [243, 246, "arguments"], [246, 247, "value"], [242, 248, "operator"], [242, 249, "operandr"], [249, 250, "value"], [230, 251, "operator"], [230, 252, "operandr"], [252, 253, "operandl"], [253, 254, "operandl"], [254, 255, "qualifier"], [254, 256, "member"], [254, 257, "arguments"], [257, 258, "value"], [253, 259, "operator"], [253, 260, "operandr"], [260, 261, "value"], [252, 262, "operator"], [252, 263, "operandr"], [263, 264, "operandl"], [264, 265, "qualifier"], [264, 266, "member"], [264, 267, "arguments"], [267, 268, "value"], [263, 269, "operator"], [263, 270, "operandr"], [270, 271, "value"], [229, 272, "operator"], [229, 273, "operandr"], [273, 274, "operandl"], [274, 275, "operandl"], [275, 276, "qualifier"], [275, 277, "member"], [275, 278, "arguments"], [278, 279, "value"], [274, 280, "operator"], [274, 281, "operandr"], [281, 282, "value"], [273, 283, "operator"], [273, 284, "operandr"], [284, 285, "operandl"], [285, 286, "qualifier"], [285, 287, "member"], [285, 288, "arguments"], [288, 289, "value"], [284, 290, "operator"], [284, 291, "operandr"], [291, 292, "value"], [209, 293, "statements"], [293, 294, "condition"], [294, 295, "operandl"], [295, 296, "member"], [294, 297, "operator"], [294, 298, "operandr"], [298, 299, "value"], [293, 300, "then_statement"], [300, 301, "statements"], [301, 302, "expression"], [302, 303, "operandl"], [303, 304, "operandl"], [304, 305, "operandl"], [305, 306, "operandl"], [306, 307, "qualifier"], [306, 308, "member"], [306, 309, "arguments"], [309, 310, "value"], [305, 311, "operator"], [305, 312, "operandr"], [312, 313, "value"], [304, 314, "operator"], [304, 315, "operandr"], [315, 316, "operandl"], [316, 317, "qualifier"], [316, 318, "member"], [316, 319, "arguments"], [319, 320, "value"], [315, 321, "operator"], [315, 322, "operandr"], [322, 323, "value"], [303, 324, "operator"], [303, 325, "operandr"], [325, 326, "operandl"], [326, 327, "operandl"], [327, 328, "qualifier"], [327, 329, "member"], [327, 330, "arguments"], [330, 331, "value"], [326, 332, "operator"], [326, 333, "operandr"], [333, 334, "value"], [325, 335, "operator"], [325, 336, "operandr"], [336, 337, "operandl"], [337, 338, "qualifier"], [337, 339, "member"], [337, 340, "arguments"], [340, 341, "value"], [336, 342, "operator"], [336, 343, "operandr"], [343, 344, "value"], [302, 345, "operator"], [302, 346, "operandr"], [346, 347, "operandl"], [347, 348, "operandl"], [348, 349, "qualifier"], [348, 350, "member"], [348, 351, "arguments"], [351, 352, "value"], [347, 353, "operator"], [347, 354, "operandr"], [354, 355, "value"], [346, 356, "operator"], [346, 357, "operandr"], [357, 358, "operandl"], [358, 359, "qualifier"], [358, 360, "member"], [358, 361, "arguments"], [361, 362, "value"], [357, 363, "operator"], [357, 364, "operandr"], [364, 365, "value"], [0, 366, "body"], [366, 367, "expression"], [367, 368, "value"]], "rem_roots": [31], "add_roots": []}, {"id": 111, "mappings": {"locale": "VAR_1", "cAvailableLocaleSet": "VAR_2", "Locale": "TYPE_1", "contains": "METHOD_1", "isAvailableLocale": "METHOD_2"}, "nodes": ["MethodDeclaration", "public static", "BasicType", "boolean", "isAvailableLocale", "FormalParameter", "ReferenceType", "Locale", "locale", "ReturnStatement", "MethodInvocation", "cAvailableLocaleSet", "contains", "MemberReference", "locale"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [5, 8, "name"], [0, 9, "body"], [9, 10, "expression"], [10, 11, "qualifier"], [10, 12, "member"], [10, 13, "arguments"], [13, 14, "member"]], "rem_roots": [9], "add_roots": []}, {"id": 112, "mappings": {"padLen": "VAR_1", "padChar": "VAR_2", "i": "VAR_3", "str": "VAR_4", "strLen": "VAR_5", "size": "VAR_6", "obj": "VAR_7", "width": "VAR_8", "buffer": "VAR_9", "String": "TYPE_1", "Object": "TYPE_2", "StrBuilder": "TYPE_3", "getChars": "METHOD_1", "length": "METHOD_2", "getNullText": "METHOD_3", "appendFixedWidthPadRight": "METHOD_4", "toString": "METHOD_5", "ensureCapacity": "METHOD_6", "0": "INT_1"}, "nodes": ["MethodDeclaration", "public", "ReferenceType", "StrBuilder", "appendFixedWidthPadRight", "FormalParameter", "ReferenceType", "Object", "obj", "FormalParameter", "BasicType", "int", "width", "FormalParameter", "BasicType", "char", "padChar", "IfStatement", "BinaryOperation", "MemberReference", "width", ">", "Literal", "0", "BlockStatement", "StatementExpression", "MethodInvocation", "ensureCapacity", "BinaryOperation", "MemberReference", "size", "+", "MemberReference", "width", "LocalVariableDeclaration", "ReferenceType", "String", "VariableDeclarator", "str", "TernaryExpression", "BinaryOperation", "MemberReference", "obj", "==", "Literal", "null", "MethodInvocation", "getNullText", "MethodInvocation", "obj", "toString", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "strLen", "MethodInvocation", "str", "length", "IfStatement", "BinaryOperation", "MemberReference", "strLen", ">=", "MemberReference", "width", "BlockStatement", "StatementExpression", "MethodInvocation", "str", "getChars", "Literal", "0", "MemberReference", "strLen", "MemberReference", "buffer", "MemberReference", "size", "BlockStatement", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "padLen", "BinaryOperation", "MemberReference", "width", "-", "MemberReference", "strLen", "StatementExpression", "MethodInvocation", "str", "getChars", "Literal", "0", "MemberReference", "strLen", "MemberReference", "buffer", "MemberReference", "size", "ForStatement", "ForControl", "VariableDeclaration", "BasicType", "int", "VariableDeclarator", "i", "Literal", "0", "BinaryOperation", "MemberReference", "i", "<", "MemberReference", "padLen", "MemberReference", "i", "++", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "buffer", "ArraySelector", "BinaryOperation", "BinaryOperation", "MemberReference", "size", "+", "MemberReference", "strLen", "+", "MemberReference", "i", "=", "MemberReference", "padChar", "StatementExpression", "Assignment", "MemberReference", "size", "+=", "MemberReference", "width", "ReturnStatement", "This"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [5, 8, "name"], [0, 9, "parameters"], [9, 10, "type"], [10, 11, "name"], [9, 12, "name"], [0, 13, "parameters"], [13, 14, "type"], [14, 15, "name"], [13, 16, "name"], [0, 17, "body"], [17, 18, "condition"], [18, 19, "operandl"], [19, 20, "member"], [18, 21, "operator"], [18, 22, "operandr"], [22, 23, "value"], [17, 24, "then_statement"], [24, 25, "statements"], [25, 26, "expression"], [26, 27, "member"], [26, 28, "arguments"], [28, 29, "operandl"], [29, 30, "member"], [28, 31, "operator"], [28, 32, "operandr"], [32, 33, "member"], [24, 34, "statements"], [34, 35, "type"], [35, 36, "name"], [34, 37, "declarators"], [37, 38, "name"], [37, 39, "initializer"], [39, 40, "condition"], [40, 41, "operandl"], [41, 42, "member"], [40, 43, "operator"], [40, 44, "operandr"], [44, 45, "value"], [39, 46, "if_true"], [46, 47, "member"], [39, 48, "if_false"], [48, 49, "qualifier"], [48, 50, "member"], [24, 51, "statements"], [51, 52, "type"], [52, 53, "name"], [51, 54, "declarators"], [54, 55, "name"], [54, 56, "initializer"], [56, 57, "qualifier"], [56, 58, "member"], [24, 59, "statements"], [59, 60, "condition"], [60, 61, "operandl"], [61, 62, "member"], [60, 63, "operator"], [60, 64, "operandr"], [64, 65, "member"], [59, 66, "then_statement"], [66, 67, "statements"], [67, 68, "expression"], [68, 69, "qualifier"], [68, 70, "member"], [68, 71, "arguments"], [71, 72, "value"], [68, 73, "arguments"], [73, 74, "member"], [68, 75, "arguments"], [75, 76, "member"], [68, 77, "arguments"], [77, 78, "member"], [59, 79, "else_statement"], [79, 80, "statements"], [80, 81, "type"], [81, 82, "name"], [80, 83, "declarators"], [83, 84, "name"], [83, 85, "initializer"], [85, 86, "operandl"], [86, 87, "member"], [85, 88, "operator"], [85, 89, "operandr"], [89, 90, "member"], [79, 91, "statements"], [91, 92, "expression"], [92, 93, "qualifier"], [92, 94, "member"], [92, 95, "arguments"], [95, 96, "value"], [92, 97, "arguments"], [97, 98, "member"], [92, 99, "arguments"], [99, 100, "member"], [92, 101, "arguments"], [101, 102, "member"], [79, 103, "statements"], [103, 104, "control"], [104, 105, "init"], [105, 106, "type"], [106, 107, "name"], [105, 108, "declarators"], [108, 109, "name"], [108, 110, "initializer"], [110, 111, "value"], [104, 112, "condition"], [112, 113, "operandl"], [113, 114, "member"], [112, 115, "operator"], [112, 116, "operandr"], [116, 117, "member"], [104, 118, "update"], [118, 119, "member"], [118, 120, "postfix_operators"], [103, 121, "body"], [121, 122, "statements"], [122, 123, "expression"], [123, 124, "expressionl"], [124, 125, "member"], [124, 126, "selectors"], [126, 127, "index"], [127, 128, "operandl"], [128, 129, "operandl"], [129, 130, "member"], [128, 131, "operator"], [128, 132, "operandr"], [132, 133, "member"], [127, 134, "operator"], [127, 135, "operandr"], [135, 136, "member"], [123, 137, "type"], [123, 138, "value"], [138, 139, "member"], [24, 140, "statements"], [140, 141, "expression"], [141, 142, "expressionl"], [142, 143, "member"], [141, 144, "type"], [141, 145, "value"], [145, 146, "member"], [0, 147, "body"], [147, 148, "expression"]], "rem_roots": [67], "add_roots": []}, {"id": 113, "mappings": {"consumed": "VAR_1", "c": "VAR_2", "pt": "VAR_3", "length": "VAR_4", "out": "VAR_5", "input": "VAR_6", "len": "VAR_7", "pos": "VAR_8", "Character": "TYPE_1", "CharSequence": "TYPE_2", "IOException": "TYPE_3", "Writer": "TYPE_4", "IllegalArgumentException": "TYPE_5", "charCount": "METHOD_1", "codePointAt": "METHOD_2", "translate": "METHOD_3", "write": "METHOD_4", "toChars": "METHOD_5", "0": "INT_1", "\"The Writer must not be null\"": "STRING_1"}, "nodes": ["MethodDeclaration", "public final", "void", "translate", "FormalParameter", "ReferenceType", "CharSequence", "input", "FormalParameter", "ReferenceType", "Writer", "out", "IOException", "IfStatement", "BinaryOperation", "MemberReference", "out", "==", "Literal", "null", "BlockStatement", "ThrowStatement", "ClassCreator", "ReferenceType", "IllegalArgumentException", "Literal", "\"The Writer must not be null\"", "IfStatement", "BinaryOperation", "MemberReference", "input", "==", "Literal", "null", "BlockStatement", "ReturnStatement", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "pos", "Literal", "0", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "len", "MethodInvocation", "input", "length", "WhileStatement", "BinaryOperation", "MemberReference", "pos", "<", "MemberReference", "len", "BlockStatement", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "consumed", "MethodInvocation", "translate", "MemberReference", "input", "MemberReference", "pos", "MemberReference", "out", "IfStatement", "BinaryOperation", "MemberReference", "consumed", "==", "Literal", "0", "BlockStatement", "LocalVariableDeclaration", "BasicType", "char", "None", "VariableDeclarator", "c", "MethodInvocation", "Character", "toChars", "MethodInvocation", "Character", "codePointAt", "MemberReference", "input", "MemberReference", "pos", "StatementExpression", "MethodInvocation", "out", "write", "MemberReference", "c", "StatementExpression", "Assignment", "MemberReference", "pos", "+=", "MemberReference", "c", "length", "ContinueStatement", "ForStatement", "ForControl", "VariableDeclaration", "BasicType", "int", "VariableDeclarator", "pt", "Literal", "0", "BinaryOperation", "MemberReference", "pt", "<", "MemberReference", "consumed", "MemberReference", "pt", "++", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "pos", "+=", "MethodInvocation", "Character", "charCount", "MethodInvocation", "Character", "codePointAt", "MemberReference", "input", "MemberReference", "pos"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [0, 3, "name"], [0, 4, "parameters"], [4, 5, "type"], [5, 6, "name"], [4, 7, "name"], [0, 8, "parameters"], [8, 9, "type"], [9, 10, "name"], [8, 11, "name"], [0, 12, "throws"], [0, 13, "body"], [13, 14, "condition"], [14, 15, "operandl"], [15, 16, "member"], [14, 17, "operator"], [14, 18, "operandr"], [18, 19, "value"], [13, 20, "then_statement"], [20, 21, "statements"], [21, 22, "expression"], [22, 23, "type"], [23, 24, "name"], [22, 25, "arguments"], [25, 26, "value"], [0, 27, "body"], [27, 28, "condition"], [28, 29, "operandl"], [29, 30, "member"], [28, 31, "operator"], [28, 32, "operandr"], [32, 33, "value"], [27, 34, "then_statement"], [34, 35, "statements"], [0, 36, "body"], [36, 37, "type"], [37, 38, "name"], [36, 39, "declarators"], [39, 40, "name"], [39, 41, "initializer"], [41, 42, "value"], [0, 43, "body"], [43, 44, "type"], [44, 45, "name"], [43, 46, "declarators"], [46, 47, "name"], [46, 48, "initializer"], [48, 49, "qualifier"], [48, 50, "member"], [0, 51, "body"], [51, 52, "condition"], [52, 53, "operandl"], [53, 54, "member"], [52, 55, "operator"], [52, 56, "operandr"], [56, 57, "member"], [51, 58, "body"], [58, 59, "statements"], [59, 60, "type"], [60, 61, "name"], [59, 62, "declarators"], [62, 63, "name"], [62, 64, "initializer"], [64, 65, "member"], [64, 66, "arguments"], [66, 67, "member"], [64, 68, "arguments"], [68, 69, "member"], [64, 70, "arguments"], [70, 71, "member"], [58, 72, "statements"], [72, 73, "condition"], [73, 74, "operandl"], [74, 75, "member"], [73, 76, "operator"], [73, 77, "operandr"], [77, 78, "value"], [72, 79, "then_statement"], [79, 80, "statements"], [80, 81, "type"], [81, 82, "name"], [81, 83, "dimensions"], [80, 84, "declarators"], [84, 85, "name"], [84, 86, "initializer"], [86, 87, "qualifier"], [86, 88, "member"], [86, 89, "arguments"], [89, 90, "qualifier"], [89, 91, "member"], [89, 92, "arguments"], [92, 93, "member"], [89, 94, "arguments"], [94, 95, "member"], [79, 96, "statements"], [96, 97, "expression"], [97, 98, "qualifier"], [97, 99, "member"], [97, 100, "arguments"], [100, 101, "member"], [79, 102, "statements"], [102, 103, "expression"], [103, 104, "expressionl"], [104, 105, "member"], [103, 106, "type"], [103, 107, "value"], [107, 108, "qualifier"], [107, 109, "member"], [79, 110, "statements"], [58, 111, "statements"], [111, 112, "control"], [112, 113, "init"], [113, 114, "type"], [114, 115, "name"], [113, 116, "declarators"], [116, 117, "name"], [116, 118, "initializer"], [118, 119, "value"], [112, 120, "condition"], [120, 121, "operandl"], [121, 122, "member"], [120, 123, "operator"], [120, 124, "operandr"], [124, 125, "member"], [112, 126, "update"], [126, 127, "member"], [126, 128, "postfix_operators"], [111, 129, "body"], [129, 130, "statements"], [130, 131, "expression"], [131, 132, "expressionl"], [132, 133, "member"], [131, 134, "type"], [131, 135, "value"], [135, 136, "qualifier"], [135, 137, "member"], [135, 138, "arguments"], [138, 139, "qualifier"], [138, 140, "member"], [138, 141, "arguments"], [141, 142, "member"], [138, 143, "arguments"], [143, 144, "member"]], "rem_roots": [130], "add_roots": []}, {"id": 114, "mappings": {"length": "VAR_1", "i": "VAR_2", "j": "VAR_3", "str": "VAR_4", "strLen": "VAR_5", "startIndex": "VAR_6", "thisBuf": "VAR_7", "size": "VAR_8", "len": "VAR_9", "buffer": "VAR_10", "String": "TYPE_1", "indexOf": "METHOD_1", "charAt": "METHOD_2", "0": "INT_1", "1": "INT_2"}, "nodes": ["MethodDeclaration", "public", "BasicType", "int", "indexOf", "FormalParameter", "ReferenceType", "String", "str", "FormalParameter", "BasicType", "int", "startIndex", "StatementExpression", "Assignment", "MemberReference", "startIndex", "=", "TernaryExpression", "BinaryOperation", "MemberReference", "startIndex", "<", "Literal", "0", "Literal", "0", "MemberReference", "startIndex", "IfStatement", "BinaryOperation", "BinaryOperation", "MemberReference", "str", "==", "Literal", "null", "||", "BinaryOperation", "MemberReference", "startIndex", ">=", "MemberReference", "size", "BlockStatement", "ReturnStatement", "Literal", "-", "1", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "strLen", "MethodInvocation", "str", "length", "IfStatement", "BinaryOperation", "MemberReference", "strLen", "==", "Literal", "1", "BlockStatement", "ReturnStatement", "MethodInvocation", "indexOf", "MethodInvocation", "str", "charAt", "Literal", "0", "MemberReference", "startIndex", "IfStatement", "BinaryOperation", "MemberReference", "strLen", "==", "Literal", "0", "BlockStatement", "ReturnStatement", "MemberReference", "startIndex", "IfStatement", "BinaryOperation", "MemberReference", "strLen", ">", "MemberReference", "size", "BlockStatement", "ReturnStatement", "Literal", "-", "1", "LocalVariableDeclaration", "BasicType", "char", "None", "VariableDeclarator", "thisBuf", "MemberReference", "buffer", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "len", "BinaryOperation", "MemberReference", "thisBuf", "length", "-", "MemberReference", "strLen", "ForStatement", "ForControl", "VariableDeclaration", "BasicType", "int", "VariableDeclarator", "i", "MemberReference", "startIndex", "BinaryOperation", "MemberReference", "i", "<", "MemberReference", "len", "MemberReference", "i", "++", "BlockStatement", "ForStatement", "ForControl", "VariableDeclaration", "BasicType", "int", "VariableDeclarator", "j", "Literal", "0", "BinaryOperation", "MemberReference", "j", "<", "MemberReference", "strLen", "MemberReference", "j", "++", "BlockStatement", "IfStatement", "BinaryOperation", "MethodInvocation", "str", "charAt", "MemberReference", "j", "!=", "MemberReference", "thisBuf", "ArraySelector", "BinaryOperation", "MemberReference", "i", "+", "MemberReference", "j", "BlockStatement", "ContinueStatement", "ReturnStatement", "MemberReference", "i", "ReturnStatement", "Literal", "-", "1"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [5, 8, "name"], [0, 9, "parameters"], [9, 10, "type"], [10, 11, "name"], [9, 12, "name"], [0, 13, "body"], [13, 14, "expression"], [14, 15, "expressionl"], [15, 16, "member"], [14, 17, "type"], [14, 18, "value"], [18, 19, "condition"], [19, 20, "operandl"], [20, 21, "member"], [19, 22, "operator"], [19, 23, "operandr"], [23, 24, "value"], [18, 25, "if_true"], [25, 26, "value"], [18, 27, "if_false"], [27, 28, "member"], [0, 29, "body"], [29, 30, "condition"], [30, 31, "operandl"], [31, 32, "operandl"], [32, 33, "member"], [31, 34, "operator"], [31, 35, "operandr"], [35, 36, "value"], [30, 37, "operator"], [30, 38, "operandr"], [38, 39, "operandl"], [39, 40, "member"], [38, 41, "operator"], [38, 42, "operandr"], [42, 43, "member"], [29, 44, "then_statement"], [44, 45, "statements"], [45, 46, "expression"], [46, 47, "prefix_operators"], [46, 48, "value"], [0, 49, "body"], [49, 50, "type"], [50, 51, "name"], [49, 52, "declarators"], [52, 53, "name"], [52, 54, "initializer"], [54, 55, "qualifier"], [54, 56, "member"], [0, 57, "body"], [57, 58, "condition"], [58, 59, "operandl"], [59, 60, "member"], [58, 61, "operator"], [58, 62, "operandr"], [62, 63, "value"], [57, 64, "then_statement"], [64, 65, "statements"], [65, 66, "expression"], [66, 67, "member"], [66, 68, "arguments"], [68, 69, "qualifier"], [68, 70, "member"], [68, 71, "arguments"], [71, 72, "value"], [66, 73, "arguments"], [73, 74, "member"], [0, 75, "body"], [75, 76, "condition"], [76, 77, "operandl"], [77, 78, "member"], [76, 79, "operator"], [76, 80, "operandr"], [80, 81, "value"], [75, 82, "then_statement"], [82, 83, "statements"], [83, 84, "expression"], [84, 85, "member"], [0, 86, "body"], [86, 87, "condition"], [87, 88, "operandl"], [88, 89, "member"], [87, 90, "operator"], [87, 91, "operandr"], [91, 92, "member"], [86, 93, "then_statement"], [93, 94, "statements"], [94, 95, "expression"], [95, 96, "prefix_operators"], [95, 97, "value"], [0, 98, "body"], [98, 99, "type"], [99, 100, "name"], [99, 101, "dimensions"], [98, 102, "declarators"], [102, 103, "name"], [102, 104, "initializer"], [104, 105, "member"], [0, 106, "body"], [106, 107, "type"], [107, 108, "name"], [106, 109, "declarators"], [109, 110, "name"], [109, 111, "initializer"], [111, 112, "operandl"], [112, 113, "qualifier"], [112, 114, "member"], [111, 115, "operator"], [111, 116, "operandr"], [116, 117, "member"], [0, 118, "body"], [118, 119, "control"], [119, 120, "init"], [120, 121, "type"], [121, 122, "name"], [120, 123, "declarators"], [123, 124, "name"], [123, 125, "initializer"], [125, 126, "member"], [119, 127, "condition"], [127, 128, "operandl"], [128, 129, "member"], [127, 130, "operator"], [127, 131, "operandr"], [131, 132, "member"], [119, 133, "update"], [133, 134, "member"], [133, 135, "postfix_operators"], [118, 136, "body"], [136, 137, "statements"], [137, 138, "control"], [138, 139, "init"], [139, 140, "type"], [140, 141, "name"], [139, 142, "declarators"], [142, 143, "name"], [142, 144, "initializer"], [144, 145, "value"], [138, 146, "condition"], [146, 147, "operandl"], [147, 148, "member"], [146, 149, "operator"], [146, 150, "operandr"], [150, 151, "member"], [138, 152, "update"], [152, 153, "member"], [152, 154, "postfix_operators"], [137, 155, "body"], [155, 156, "statements"], [156, 157, "condition"], [157, 158, "operandl"], [158, 159, "qualifier"], [158, 160, "member"], [158, 161, "arguments"], [161, 162, "member"], [157, 163, "operator"], [157, 164, "operandr"], [164, 165, "member"], [164, 166, "selectors"], [166, 167, "index"], [167, 168, "operandl"], [168, 169, "member"], [167, 170, "operator"], [167, 171, "operandr"], [171, 172, "member"], [156, 173, "then_statement"], [173, 174, "statements"], [136, 175, "statements"], [175, 176, "expression"], [176, 177, "member"], [0, 178, "body"], [178, 179, "expression"], [179, 180, "prefix_operators"], [179, 181, "value"]], "rem_roots": [106], "add_roots": []}, {"id": 115, "mappings": {"sumYY": "VAR_1", "sumXX": "VAR_2", "sumXY": "VAR_3", "getSumSquaredErrors": "METHOD_1"}, "nodes": ["MethodDeclaration", "public", "BasicType", "double", "getSumSquaredErrors", "ReturnStatement", "BinaryOperation", "MemberReference", "sumYY", "-", "BinaryOperation", "BinaryOperation", "MemberReference", "sumXY", "*", "MemberReference", "sumXY", "/", "MemberReference", "sumXX"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "body"], [5, 6, "expression"], [6, 7, "operandl"], [7, 8, "member"], [6, 9, "operator"], [6, 10, "operandr"], [10, 11, "operandl"], [11, 12, "operandl"], [12, 13, "member"], [11, 14, "operator"], [11, 15, "operandr"], [15, 16, "member"], [10, 17, "operator"], [10, 18, "operandr"], [18, 19, "member"]], "rem_roots": [5], "add_roots": []}, {"id": 116, "mappings": {"covarianceMatrixDeterminant": "VAR_1", "vals": "VAR_2", "length": "VAR_3", "dim": "VAR_4", "PI": "VAR_5", "DimensionMismatchException": "TYPE_1", "FastMath": "TYPE_2", "density": "METHOD_1", "getExponentTerm": "METHOD_2", "getDimension": "METHOD_3", "pow": "METHOD_4", "2": "INT_1", "0.5": "FLOAT_1"}, "nodes": ["MethodDeclaration", "public", "BasicType", "double", "density", "FormalParameter", "BasicType", "double", "None", "vals", "DimensionMismatchException", "LocalVariableDeclaration", "final", "BasicType", "int", "VariableDeclarator", "dim", "MethodInvocation", "getDimension", "IfStatement", "BinaryOperation", "MemberReference", "vals", "length", "!=", "MemberReference", "dim", "BlockStatement", "ThrowStatement", "ClassCreator", "ReferenceType", "DimensionMismatchException", "MemberReference", "vals", "length", "MemberReference", "dim", "ReturnStatement", "BinaryOperation", "BinaryOperation", "MethodInvocation", "FastMath", "pow", "BinaryOperation", "Literal", "2", "*", "MemberReference", "FastMath", "PI", "BinaryOperation", "MemberReference", "-", "dim", "/", "Literal", "2", "*", "MethodInvocation", "FastMath", "pow", "MemberReference", "covarianceMatrixDeterminant", "Literal", "-", "0.5", "*", "MethodInvocation", "getExponentTerm", "MemberReference", "vals"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [6, 8, "dimensions"], [5, 9, "name"], [0, 10, "throws"], [0, 11, "body"], [11, 12, "modifiers"], [11, 13, "type"], [13, 14, "name"], [11, 15, "declarators"], [15, 16, "name"], [15, 17, "initializer"], [17, 18, "member"], [0, 19, "body"], [19, 20, "condition"], [20, 21, "operandl"], [21, 22, "qualifier"], [21, 23, "member"], [20, 24, "operator"], [20, 25, "operandr"], [25, 26, "member"], [19, 27, "then_statement"], [27, 28, "statements"], [28, 29, "expression"], [29, 30, "type"], [30, 31, "name"], [29, 32, "arguments"], [32, 33, "qualifier"], [32, 34, "member"], [29, 35, "arguments"], [35, 36, "member"], [0, 37, "body"], [37, 38, "expression"], [38, 39, "operandl"], [39, 40, "operandl"], [40, 41, "qualifier"], [40, 42, "member"], [40, 43, "arguments"], [43, 44, "operandl"], [44, 45, "value"], [43, 46, "operator"], [43, 47, "operandr"], [47, 48, "qualifier"], [47, 49, "member"], [40, 50, "arguments"], [50, 51, "operandl"], [51, 52, "prefix_operators"], [51, 53, "member"], [50, 54, "operator"], [50, 55, "operandr"], [55, 56, "value"], [39, 57, "operator"], [39, 58, "operandr"], [58, 59, "qualifier"], [58, 60, "member"], [58, 61, "arguments"], [61, 62, "member"], [58, 63, "arguments"], [63, 64, "prefix_operators"], [63, 65, "value"], [38, 66, "operator"], [38, 67, "operandr"], [67, 68, "member"], [67, 69, "arguments"], [69, 70, "member"]], "rem_roots": [40], "add_roots": []}, {"id": 117, "mappings": {"getNumberOfSuccesses": "METHOD_1", "getNumericalMean": "METHOD_2", "getSampleSize": "METHOD_3", "getPopulationSize": "METHOD_4"}, "nodes": ["MethodDeclaration", "public", "BasicType", "double", "getNumericalMean", "ReturnStatement", "BinaryOperation", "Cast", "BasicType", "double", "BinaryOperation", "MethodInvocation", "getSampleSize", "*", "MethodInvocation", "getNumberOfSuccesses", "/", "Cast", "BasicType", "double", "MethodInvocation", "getPopulationSize"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "body"], [5, 6, "expression"], [6, 7, "operandl"], [7, 8, "type"], [8, 9, "name"], [7, 10, "expression"], [10, 11, "operandl"], [11, 12, "member"], [10, 13, "operator"], [10, 14, "operandr"], [14, 15, "member"], [6, 16, "operator"], [6, 17, "operandr"], [17, 18, "type"], [18, 19, "name"], [17, 20, "expression"], [20, 21, "member"]], "rem_roots": [5], "add_roots": []}, {"id": 118, "mappings": {"percentageValue": "METHOD_1", "doubleValue": "METHOD_2", "multiply": "METHOD_3", "100": "INT_1"}, "nodes": ["MethodDeclaration", "public", "BasicType", "double", "percentageValue", "ReturnStatement", "MethodInvocation", "multiply", "Literal", "100", "MethodInvocation", "doubleValue"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "body"], [5, 6, "expression"], [6, 7, "member"], [6, 8, "arguments"], [8, 9, "value"], [6, 10, "selectors"], [10, 11, "member"]], "rem_roots": [5], "add_roots": []}, {"id": 119, "mappings": {"n1n2prod": "VAR_1", "n1": "VAR_2", "n2": "VAR_3", "VarU": "VAR_4", "EU": "VAR_5", "standardNormal": "VAR_6", "Umin": "VAR_7", "z": "VAR_8", "MaxCountExceededException": "TYPE_1", "NormalDistribution": "TYPE_2", "ConvergenceException": "TYPE_3", "FastMath": "TYPE_4", "cumulativeProbability": "METHOD_1", "calculateAsymptoticPValue": "METHOD_2", "sqrt": "METHOD_3", "0": "INT_1", "1": "INT_2", "2": "INT_3", "2.0": "FLOAT_1", "12.0": "FLOAT_2"}, "nodes": ["MethodDeclaration", "private", "BasicType", "double", "calculateAsymptoticPValue", "FormalParameter", "BasicType", "double", "Umin", "FormalParameter", "BasicType", "int", "n1", "FormalParameter", "BasicType", "int", "n2", "ConvergenceException", "MaxCountExceededException", "LocalVariableDeclaration", "final", "BasicType", "int", "VariableDeclarator", "n1n2prod", "BinaryOperation", "MemberReference", "n1", "*", "MemberReference", "n2", "LocalVariableDeclaration", "final", "BasicType", "double", "VariableDeclarator", "EU", "BinaryOperation", "MemberReference", "n1n2prod", "/", "Literal", "2.0", "LocalVariableDeclaration", "final", "BasicType", "double", "VariableDeclarator", "VarU", "BinaryOperation", "BinaryOperation", "MemberReference", "n1n2prod", "*", "BinaryOperation", "BinaryOperation", "MemberReference", "n1", "+", "MemberReference", "n2", "+", "Literal", "1", "/", "Literal", "12.0", "LocalVariableDeclaration", "final", "BasicType", "double", "VariableDeclarator", "z", "BinaryOperation", "BinaryOperation", "MemberReference", "Umin", "-", "MemberReference", "EU", "/", "MethodInvocation", "FastMath", "sqrt", "MemberReference", "VarU", "LocalVariableDeclaration", "final", "ReferenceType", "NormalDistribution", "VariableDeclarator", "standardNormal", "ClassCreator", "ReferenceType", "NormalDistribution", "Literal", "0", "Literal", "1", "ReturnStatement", "BinaryOperation", "Literal", "2", "*", "MethodInvocation", "standardNormal", "cumulativeProbability", "MemberReference", "z"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [5, 8, "name"], [0, 9, "parameters"], [9, 10, "type"], [10, 11, "name"], [9, 12, "name"], [0, 13, "parameters"], [13, 14, "type"], [14, 15, "name"], [13, 16, "name"], [0, 17, "throws"], [0, 18, "throws"], [0, 19, "body"], [19, 20, "modifiers"], [19, 21, "type"], [21, 22, "name"], [19, 23, "declarators"], [23, 24, "name"], [23, 25, "initializer"], [25, 26, "operandl"], [26, 27, "member"], [25, 28, "operator"], [25, 29, "operandr"], [29, 30, "member"], [0, 31, "body"], [31, 32, "modifiers"], [31, 33, "type"], [33, 34, "name"], [31, 35, "declarators"], [35, 36, "name"], [35, 37, "initializer"], [37, 38, "operandl"], [38, 39, "member"], [37, 40, "operator"], [37, 41, "operandr"], [41, 42, "value"], [0, 43, "body"], [43, 44, "modifiers"], [43, 45, "type"], [45, 46, "name"], [43, 47, "declarators"], [47, 48, "name"], [47, 49, "initializer"], [49, 50, "operandl"], [50, 51, "operandl"], [51, 52, "member"], [50, 53, "operator"], [50, 54, "operandr"], [54, 55, "operandl"], [55, 56, "operandl"], [56, 57, "member"], [55, 58, "operator"], [55, 59, "operandr"], [59, 60, "member"], [54, 61, "operator"], [54, 62, "operandr"], [62, 63, "value"], [49, 64, "operator"], [49, 65, "operandr"], [65, 66, "value"], [0, 67, "body"], [67, 68, "modifiers"], [67, 69, "type"], [69, 70, "name"], [67, 71, "declarators"], [71, 72, "name"], [71, 73, "initializer"], [73, 74, "operandl"], [74, 75, "operandl"], [75, 76, "member"], [74, 77, "operator"], [74, 78, "operandr"], [78, 79, "member"], [73, 80, "operator"], [73, 81, "operandr"], [81, 82, "qualifier"], [81, 83, "member"], [81, 84, "arguments"], [84, 85, "member"], [0, 86, "body"], [86, 87, "modifiers"], [86, 88, "type"], [88, 89, "name"], [86, 90, "declarators"], [90, 91, "name"], [90, 92, "initializer"], [92, 93, "type"], [93, 94, "name"], [92, 95, "arguments"], [95, 96, "value"], [92, 97, "arguments"], [97, 98, "value"], [0, 99, "body"], [99, 100, "expression"], [100, 101, "operandl"], [101, 102, "value"], [100, 103, "operator"], [100, 104, "operandr"], [104, 105, "qualifier"], [104, 106, "member"], [104, 107, "arguments"], [107, 108, "member"]], "rem_roots": [19], "add_roots": []}, {"id": 120, "mappings": {"col": "VAR_1", "matrix": "VAR_2", "maxUlps": "VAR_3", "numArtificialVariables": "VAR_4", "columnLabels": "VAR_5", "columnsToDrop": "VAR_6", "i": "VAR_7", "j": "VAR_8", "entry": "VAR_9", "tableau": "VAR_10", "ArrayList": "TYPE_1", "Array2DRowRealMatrix": "TYPE_2", "List": "TYPE_3", "Integer": "TYPE_4", "Precision": "TYPE_5", "compareTo": "METHOD_1", "getWidth": "METHOD_2", "remove": "METHOD_3", "getHeight": "METHOD_4", "get": "METHOD_5", "dropPhase1Objective": "METHOD_6", "getEntry": "METHOD_7", "getArtificialVariableOffset": "METHOD_8", "getNumArtificialVariables": "METHOD_9", "add": "METHOD_10", "getNumObjectiveFunctions": "METHOD_11", "contains": "METHOD_12", "size": "METHOD_13", "getBasicRow": "METHOD_14", "0": "INT_1", "1": "INT_2", "0d": "FLOAT_1"}, "nodes": ["MethodDeclaration", "protected", "void", "dropPhase1Objective", "IfStatement", "BinaryOperation", "MethodInvocation", "getNumObjectiveFunctions", "==", "Literal", "1", "BlockStatement", "ReturnStatement", "LocalVariableDeclaration", "ReferenceType", "List", "TypeArgument", "ReferenceType", "Integer", "VariableDeclarator", "columnsToDrop", "ClassCreator", "ReferenceType", "ArrayList", "TypeArgument", "ReferenceType", "Integer", "StatementExpression", "MethodInvocation", "columnsToDrop", "add", "Literal", "0", "ForStatement", "ForControl", "VariableDeclaration", "BasicType", "int", "VariableDeclarator", "i", "MethodInvocation", "getNumObjectiveFunctions", "BinaryOperation", "MemberReference", "i", "<", "MethodInvocation", "getArtificialVariableOffset", "MemberReference", "i", "++", "BlockStatement", "LocalVariableDeclaration", "final", "BasicType", "double", "VariableDeclarator", "entry", "MethodInvocation", "tableau", "getEntry", "Literal", "0", "MemberReference", "i", "IfStatement", "BinaryOperation", "MethodInvocation", "Precision", "compareTo", "MemberReference", "entry", "Literal", "0d", "MemberReference", "maxUlps", ">", "Literal", "0", "BlockStatement", "StatementExpression", "MethodInvocation", "columnsToDrop", "add", "MemberReference", "i", "ForStatement", "ForControl", "VariableDeclaration", "BasicType", "int", "VariableDeclarator", "i", "Literal", "0", "BinaryOperation", "MemberReference", "i", "<", "MethodInvocation", "getNumArtificialVariables", "MemberReference", "i", "++", "BlockStatement", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "col", "BinaryOperation", "MemberReference", "i", "+", "MethodInvocation", "getArtificialVariableOffset", "IfStatement", "BinaryOperation", "MethodInvocation", "getBasicRow", "MemberReference", "col", "==", "Literal", "null", "BlockStatement", "StatementExpression", "MethodInvocation", "columnsToDrop", "add", "MemberReference", "col", "LocalVariableDeclaration", "BasicType", "double", "None", "None", "VariableDeclarator", "matrix", "ArrayCreator", "BasicType", "double", "BinaryOperation", "MethodInvocation", "getHeight", "-", "Literal", "1", "BinaryOperation", "MethodInvocation", "getWidth", "-", "MethodInvocation", "columnsToDrop", "size", "ForStatement", "ForControl", "VariableDeclaration", "BasicType", "int", "VariableDeclarator", "i", "Literal", "1", "BinaryOperation", "MemberReference", "i", "<", "MethodInvocation", "getHeight", "MemberReference", "i", "++", "BlockStatement", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "col", "Literal", "0", "ForStatement", "ForControl", "VariableDeclaration", "BasicType", "int", "VariableDeclarator", "j", "Literal", "0", "BinaryOperation", "MemberReference", "j", "<", "MethodInvocation", "getWidth", "MemberReference", "j", "++", "BlockStatement", "IfStatement", "MethodInvocation", "!", "columnsToDrop", "contains", "MemberReference", "j", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "matrix", "ArraySelector", "BinaryOperation", "MemberReference", "i", "-", "Literal", "1", "ArraySelector", "MemberReference", "col", "++", "=", "MethodInvocation", "tableau", "getEntry", "MemberReference", "i", "MemberReference", "j", "ForStatement", "ForControl", "VariableDeclaration", "BasicType", "int", "VariableDeclarator", "i", "BinaryOperation", "MethodInvocation", "columnsToDrop", "size", "-", "Literal", "1", "BinaryOperation", "MemberReference", "i", ">=", "Literal", "0", "MemberReference", "i", "--", "BlockStatement", "StatementExpression", "MethodInvocation", "columnLabels", "remove", "Cast", "BasicType", "int", "MethodInvocation", "columnsToDrop", "get", "MemberReference", "i", "StatementExpression", "Assignment", "This", "MemberReference", "tableau", "=", "ClassCreator", "ReferenceType", "Array2DRowRealMatrix", "MemberReference", "matrix", "StatementExpression", "Assignment", "This", "MemberReference", "numArtificialVariables", "=", "Literal", "0"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [0, 3, "name"], [0, 4, "body"], [4, 5, "condition"], [5, 6, "operandl"], [6, 7, "member"], [5, 8, "operator"], [5, 9, "operandr"], [9, 10, "value"], [4, 11, "then_statement"], [11, 12, "statements"], [0, 13, "body"], [13, 14, "type"], [14, 15, "name"], [14, 16, "arguments"], [16, 17, "type"], [17, 18, "name"], [13, 19, "declarators"], [19, 20, "name"], [19, 21, "initializer"], [21, 22, "type"], [22, 23, "name"], [22, 24, "arguments"], [24, 25, "type"], [25, 26, "name"], [0, 27, "body"], [27, 28, "expression"], [28, 29, "qualifier"], [28, 30, "member"], [28, 31, "arguments"], [31, 32, "value"], [0, 33, "body"], [33, 34, "control"], [34, 35, "init"], [35, 36, "type"], [36, 37, "name"], [35, 38, "declarators"], [38, 39, "name"], [38, 40, "initializer"], [40, 41, "member"], [34, 42, "condition"], [42, 43, "operandl"], [43, 44, "member"], [42, 45, "operator"], [42, 46, "operandr"], [46, 47, "member"], [34, 48, "update"], [48, 49, "member"], [48, 50, "postfix_operators"], [33, 51, "body"], [51, 52, "statements"], [52, 53, "modifiers"], [52, 54, "type"], [54, 55, "name"], [52, 56, "declarators"], [56, 57, "name"], [56, 58, "initializer"], [58, 59, "qualifier"], [58, 60, "member"], [58, 61, "arguments"], [61, 62, "value"], [58, 63, "arguments"], [63, 64, "member"], [51, 65, "statements"], [65, 66, "condition"], [66, 67, "operandl"], [67, 68, "qualifier"], [67, 69, "member"], [67, 70, "arguments"], [70, 71, "member"], [67, 72, "arguments"], [72, 73, "value"], [67, 74, "arguments"], [74, 75, "member"], [66, 76, "operator"], [66, 77, "operandr"], [77, 78, "value"], [65, 79, "then_statement"], [79, 80, "statements"], [80, 81, "expression"], [81, 82, "qualifier"], [81, 83, "member"], [81, 84, "arguments"], [84, 85, "member"], [0, 86, "body"], [86, 87, "control"], [87, 88, "init"], [88, 89, "type"], [89, 90, "name"], [88, 91, "declarators"], [91, 92, "name"], [91, 93, "initializer"], [93, 94, "value"], [87, 95, "condition"], [95, 96, "operandl"], [96, 97, "member"], [95, 98, "operator"], [95, 99, "operandr"], [99, 100, "member"], [87, 101, "update"], [101, 102, "member"], [101, 103, "postfix_operators"], [86, 104, "body"], [104, 105, "statements"], [105, 106, "type"], [106, 107, "name"], [105, 108, "declarators"], [108, 109, "name"], [108, 110, "initializer"], [110, 111, "operandl"], [111, 112, "member"], [110, 113, "operator"], [110, 114, "operandr"], [114, 115, "member"], [104, 116, "statements"], [116, 117, "condition"], [117, 118, "operandl"], [118, 119, "member"], [118, 120, "arguments"], [120, 121, "member"], [117, 122, "operator"], [117, 123, "operandr"], [123, 124, "value"], [116, 125, "then_statement"], [125, 126, "statements"], [126, 127, "expression"], [127, 128, "qualifier"], [127, 129, "member"], [127, 130, "arguments"], [130, 131, "member"], [0, 132, "body"], [132, 133, "type"], [133, 134, "name"], [133, 135, "dimensions"], [133, 136, "dimensions"], [132, 137, "declarators"], [137, 138, "name"], [137, 139, "initializer"], [139, 140, "type"], [140, 141, "name"], [139, 142, "dimensions"], [142, 143, "operandl"], [143, 144, "member"], [142, 145, "operator"], [142, 146, "operandr"], [146, 147, "value"], [139, 148, "dimensions"], [148, 149, "operandl"], [149, 150, "member"], [148, 151, "operator"], [148, 152, "operandr"], [152, 153, "qualifier"], [152, 154, "member"], [0, 155, "body"], [155, 156, "control"], [156, 157, "init"], [157, 158, "type"], [158, 159, "name"], [157, 160, "declarators"], [160, 161, "name"], [160, 162, "initializer"], [162, 163, "value"], [156, 164, "condition"], [164, 165, "operandl"], [165, 166, "member"], [164, 167, "operator"], [164, 168, "operandr"], [168, 169, "member"], [156, 170, "update"], [170, 171, "member"], [170, 172, "postfix_operators"], [155, 173, "body"], [173, 174, "statements"], [174, 175, "type"], [175, 176, "name"], [174, 177, "declarators"], [177, 178, "name"], [177, 179, "initializer"], [179, 180, "value"], [173, 181, "statements"], [181, 182, "control"], [182, 183, "init"], [183, 184, "type"], [184, 185, "name"], [183, 186, "declarators"], [186, 187, "name"], [186, 188, "initializer"], [188, 189, "value"], [182, 190, "condition"], [190, 191, "operandl"], [191, 192, "member"], [190, 193, "operator"], [190, 194, "operandr"], [194, 195, "member"], [182, 196, "update"], [196, 197, "member"], [196, 198, "postfix_operators"], [181, 199, "body"], [199, 200, "statements"], [200, 201, "condition"], [201, 202, "prefix_operators"], [201, 203, "qualifier"], [201, 204, "member"], [201, 205, "arguments"], [205, 206, "member"], [200, 207, "then_statement"], [207, 208, "statements"], [208, 209, "expression"], [209, 210, "expressionl"], [210, 211, "member"], [210, 212, "selectors"], [212, 213, "index"], [213, 214, "operandl"], [214, 215, "member"], [213, 216, "operator"], [213, 217, "operandr"], [217, 218, "value"], [210, 219, "selectors"], [219, 220, "index"], [220, 221, "member"], [220, 222, "postfix_operators"], [209, 223, "type"], [209, 224, "value"], [224, 225, "qualifier"], [224, 226, "member"], [224, 227, "arguments"], [227, 228, "member"], [224, 229, "arguments"], [229, 230, "member"], [0, 231, "body"], [231, 232, "control"], [232, 233, "init"], [233, 234, "type"], [234, 235, "name"], [233, 236, "declarators"], [236, 237, "name"], [236, 238, "initializer"], [238, 239, "operandl"], [239, 240, "qualifier"], [239, 241, "member"], [238, 242, "operator"], [238, 243, "operandr"], [243, 244, "value"], [232, 245, "condition"], [245, 246, "operandl"], [246, 247, "member"], [245, 248, "operator"], [245, 249, "operandr"], [249, 250, "value"], [232, 251, "update"], [251, 252, "member"], [251, 253, "postfix_operators"], [231, 254, "body"], [254, 255, "statements"], [255, 256, "expression"], [256, 257, "qualifier"], [256, 258, "member"], [256, 259, "arguments"], [259, 260, "type"], [260, 261, "name"], [259, 262, "expression"], [262, 263, "qualifier"], [262, 264, "member"], [262, 265, "arguments"], [265, 266, "member"], [0, 267, "body"], [267, 268, "expression"], [268, 269, "expressionl"], [269, 270, "selectors"], [270, 271, "member"], [268, 272, "type"], [268, 273, "value"], [273, 274, "type"], [274, 275, "name"], [273, 276, "arguments"], [276, 277, "member"], [0, 278, "body"], [278, 279, "expression"], [279, 280, "expressionl"], [280, 281, "selectors"], [281, 282, "member"], [279, 283, "type"], [279, 284, "value"], [284, 285, "value"]], "rem_roots": [66], "add_roots": []}, {"id": 121, "mappings": {"chromosomes": "VAR_1", "Iterator": "TYPE_1", "Chromosome": "TYPE_2", "iterator": "METHOD_1"}, "nodes": ["MethodDeclaration", "public", "ReferenceType", "Iterator", "TypeArgument", "ReferenceType", "Chromosome", "iterator", "ReturnStatement", "MethodInvocation", "chromosomes", "iterator"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [2, 4, "arguments"], [4, 5, "type"], [5, 6, "name"], [0, 7, "name"], [0, 8, "body"], [8, 9, "expression"], [9, 10, "qualifier"], [9, 11, "member"]], "rem_roots": [8], "add_roots": []}, {"id": 122, "mappings": {"isBiasCorrected": "VAR_1", "var": "VAR_2", "values": "VAR_3", "length": "VAR_4", "i": "VAR_5", "sumWts": "VAR_6", "weights": "VAR_7", "Double": "VAR_8", "dev": "VAR_9", "mean": "VAR_10", "NaN": "VAR_11", "accum": "VAR_12", "begin": "VAR_13", "accum2": "VAR_14", "test": "METHOD_1", "evaluate": "METHOD_2", "0": "INT_1", "1": "INT_2", "0.0": "FLOAT_1", "1.0": "FLOAT_2"}, "nodes": ["MethodDeclaration", "public", "BasicType", "double", "evaluate", "FormalParameter", "BasicType", "double", "None", "values", "FormalParameter", "BasicType", "double", "None", "weights", "FormalParameter", "BasicType", "double", "mean", "FormalParameter", "BasicType", "int", "begin", "FormalParameter", "BasicType", "int", "length", "LocalVariableDeclaration", "BasicType", "double", "VariableDeclarator", "var", "MemberReference", "Double", "NaN", "IfStatement", "MethodInvocation", "test", "MemberReference", "values", "MemberReference", "weights", "MemberReference", "begin", "MemberReference", "length", "BlockStatement", "IfStatement", "BinaryOperation", "MemberReference", "length", "==", "Literal", "1", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "var", "=", "Literal", "0.0", "IfStatement", "BinaryOperation", "MemberReference", "length", ">", "Literal", "1", "BlockStatement", "LocalVariableDeclaration", "BasicType", "double", "VariableDeclarator", "accum", "Literal", "0.0", "LocalVariableDeclaration", "BasicType", "double", "VariableDeclarator", "dev", "Literal", "0.0", "LocalVariableDeclaration", "BasicType", "double", "VariableDeclarator", "accum2", "Literal", "0.0", "ForStatement", "ForControl", "VariableDeclaration", "BasicType", "int", "VariableDeclarator", "i", "MemberReference", "begin", "BinaryOperation", "MemberReference", "i", "<", "BinaryOperation", "MemberReference", "begin", "+", "MemberReference", "length", "MemberReference", "i", "++", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "dev", "=", "BinaryOperation", "MemberReference", "values", "ArraySelector", "MemberReference", "i", "-", "MemberReference", "mean", "StatementExpression", "Assignment", "MemberReference", "accum", "+=", "BinaryOperation", "MemberReference", "weights", "ArraySelector", "MemberReference", "i", "*", "BinaryOperation", "MemberReference", "dev", "*", "MemberReference", "dev", "StatementExpression", "Assignment", "MemberReference", "accum2", "+=", "BinaryOperation", "MemberReference", "weights", "ArraySelector", "MemberReference", "i", "*", "MemberReference", "dev", "LocalVariableDeclaration", "BasicType", "double", "VariableDeclarator", "sumWts", "Literal", "0", "ForStatement", "ForControl", "VariableDeclaration", "BasicType", "int", "VariableDeclarator", "i", "Literal", "0", "BinaryOperation", "MemberReference", "i", "<", "MemberReference", "weights", "length", "MemberReference", "i", "++", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "sumWts", "+=", "MemberReference", "weights", "ArraySelector", "MemberReference", "i", "IfStatement", "MemberReference", "isBiasCorrected", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "var", "=", "BinaryOperation", "BinaryOperation", "MemberReference", "accum", "-", "BinaryOperation", "BinaryOperation", "MemberReference", "accum2", "*", "MemberReference", "accum2", "/", "MemberReference", "sumWts", "/", "BinaryOperation", "MemberReference", "sumWts", "-", "Literal", "1.0", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "var", "=", "BinaryOperation", "BinaryOperation", "MemberReference", "accum", "-", "BinaryOperation", "BinaryOperation", "MemberReference", "accum2", "*", "MemberReference", "accum2", "/", "MemberReference", "sumWts", "/", "MemberReference", "sumWts", "ReturnStatement", "MemberReference", "var"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [6, 8, "dimensions"], [5, 9, "name"], [0, 10, "parameters"], [10, 11, "type"], [11, 12, "name"], [11, 13, "dimensions"], [10, 14, "name"], [0, 15, "parameters"], [15, 16, "type"], [16, 17, "name"], [15, 18, "name"], [0, 19, "parameters"], [19, 20, "type"], [20, 21, "name"], [19, 22, "name"], [0, 23, "parameters"], [23, 24, "type"], [24, 25, "name"], [23, 26, "name"], [0, 27, "body"], [27, 28, "type"], [28, 29, "name"], [27, 30, "declarators"], [30, 31, "name"], [30, 32, "initializer"], [32, 33, "qualifier"], [32, 34, "member"], [0, 35, "body"], [35, 36, "condition"], [36, 37, "member"], [36, 38, "arguments"], [38, 39, "member"], [36, 40, "arguments"], [40, 41, "member"], [36, 42, "arguments"], [42, 43, "member"], [36, 44, "arguments"], [44, 45, "member"], [35, 46, "then_statement"], [46, 47, "statements"], [47, 48, "condition"], [48, 49, "operandl"], [49, 50, "member"], [48, 51, "operator"], [48, 52, "operandr"], [52, 53, "value"], [47, 54, "then_statement"], [54, 55, "statements"], [55, 56, "expression"], [56, 57, "expressionl"], [57, 58, "member"], [56, 59, "type"], [56, 60, "value"], [60, 61, "value"], [47, 62, "else_statement"], [62, 63, "condition"], [63, 64, "operandl"], [64, 65, "member"], [63, 66, "operator"], [63, 67, "operandr"], [67, 68, "value"], [62, 69, "then_statement"], [69, 70, "statements"], [70, 71, "type"], [71, 72, "name"], [70, 73, "declarators"], [73, 74, "name"], [73, 75, "initializer"], [75, 76, "value"], [69, 77, "statements"], [77, 78, "type"], [78, 79, "name"], [77, 80, "declarators"], [80, 81, "name"], [80, 82, "initializer"], [82, 83, "value"], [69, 84, "statements"], [84, 85, "type"], [85, 86, "name"], [84, 87, "declarators"], [87, 88, "name"], [87, 89, "initializer"], [89, 90, "value"], [69, 91, "statements"], [91, 92, "control"], [92, 93, "init"], [93, 94, "type"], [94, 95, "name"], [93, 96, "declarators"], [96, 97, "name"], [96, 98, "initializer"], [98, 99, "member"], [92, 100, "condition"], [100, 101, "operandl"], [101, 102, "member"], [100, 103, "operator"], [100, 104, "operandr"], [104, 105, "operandl"], [105, 106, "member"], [104, 107, "operator"], [104, 108, "operandr"], [108, 109, "member"], [92, 110, "update"], [110, 111, "member"], [110, 112, "postfix_operators"], [91, 113, "body"], [113, 114, "statements"], [114, 115, "expression"], [115, 116, "expressionl"], [116, 117, "member"], [115, 118, "type"], [115, 119, "value"], [119, 120, "operandl"], [120, 121, "member"], [120, 122, "selectors"], [122, 123, "index"], [123, 124, "member"], [119, 125, "operator"], [119, 126, "operandr"], [126, 127, "member"], [113, 128, "statements"], [128, 129, "expression"], [129, 130, "expressionl"], [130, 131, "member"], [129, 132, "type"], [129, 133, "value"], [133, 134, "operandl"], [134, 135, "member"], [134, 136, "selectors"], [136, 137, "index"], [137, 138, "member"], [133, 139, "operator"], [133, 140, "operandr"], [140, 141, "operandl"], [141, 142, "member"], [140, 143, "operator"], [140, 144, "operandr"], [144, 145, "member"], [113, 146, "statements"], [146, 147, "expression"], [147, 148, "expressionl"], [148, 149, "member"], [147, 150, "type"], [147, 151, "value"], [151, 152, "operandl"], [152, 153, "member"], [152, 154, "selectors"], [154, 155, "index"], [155, 156, "member"], [151, 157, "operator"], [151, 158, "operandr"], [158, 159, "member"], [69, 160, "statements"], [160, 161, "type"], [161, 162, "name"], [160, 163, "declarators"], [163, 164, "name"], [163, 165, "initializer"], [165, 166, "value"], [69, 167, "statements"], [167, 168, "control"], [168, 169, "init"], [169, 170, "type"], [170, 171, "name"], [169, 172, "declarators"], [172, 173, "name"], [172, 174, "initializer"], [174, 175, "value"], [168, 176, "condition"], [176, 177, "operandl"], [177, 178, "member"], [176, 179, "operator"], [176, 180, "operandr"], [180, 181, "qualifier"], [180, 182, "member"], [168, 183, "update"], [183, 184, "member"], [183, 185, "postfix_operators"], [167, 186, "body"], [186, 187, "statements"], [187, 188, "expression"], [188, 189, "expressionl"], [189, 190, "member"], [188, 191, "type"], [188, 192, "value"], [192, 193, "member"], [192, 194, "selectors"], [194, 195, "index"], [195, 196, "member"], [69, 197, "statements"], [197, 198, "condition"], [198, 199, "member"], [197, 200, "then_statement"], [200, 201, "statements"], [201, 202, "expression"], [202, 203, "expressionl"], [203, 204, "member"], [202, 205, "type"], [202, 206, "value"], [206, 207, "operandl"], [207, 208, "operandl"], [208, 209, "member"], [207, 210, "operator"], [207, 211, "operandr"], [211, 212, "operandl"], [212, 213, "operandl"], [213, 214, "member"], [212, 215, "operator"], [212, 216, "operandr"], [216, 217, "member"], [211, 218, "operator"], [211, 219, "operandr"], [219, 220, "member"], [206, 221, "operator"], [206, 222, "operandr"], [222, 223, "operandl"], [223, 224, "member"], [222, 225, "operator"], [222, 226, "operandr"], [226, 227, "value"], [197, 228, "else_statement"], [228, 229, "statements"], [229, 230, "expression"], [230, 231, "expressionl"], [231, 232, "member"], [230, 233, "type"], [230, 234, "value"], [234, 235, "operandl"], [235, 236, "operandl"], [236, 237, "member"], [235, 238, "operator"], [235, 239, "operandr"], [239, 240, "operandl"], [240, 241, "operandl"], [241, 242, "member"], [240, 243, "operator"], [240, 244, "operandr"], [244, 245, "member"], [239, 246, "operator"], [239, 247, "operandr"], [247, 248, "member"], [234, 249, "operator"], [234, 250, "operandr"], [250, 251, "member"], [0, 252, "body"], [252, 253, "expression"], [253, 254, "member"]], "rem_roots": [167], "add_roots": []}, {"id": 123, "mappings": {"allowed": "VAR_1", "f0": "VAR_2", "f1": "VAR_3", "RIGHT_SIDE": "VAR_4", "fx": "VAR_5", "REGULA_FALSI": "VAR_6", "BELOW_SIDE": "VAR_7", "ftol": "VAR_8", "inverted": "VAR_9", "LEFT_SIDE": "VAR_10", "ILLINOIS": "VAR_11", "method": "VAR_12", "ABOVE_SIDE": "VAR_13", "rtol": "VAR_14", "x0": "VAR_15", "x": "VAR_16", "x1": "VAR_17", "ANY_SIDE": "VAR_18", "PEGASUS": "VAR_19", "atol": "VAR_20", "MathInternalError": "TYPE_1", "FastMath": "TYPE_2", "getFunctionValueAccuracy": "METHOD_1", "computeObjectiveValue": "METHOD_2", "getAbsoluteAccuracy": "METHOD_3", "getMin": "METHOD_4", "verifyBracketing": "METHOD_5", "getRelativeAccuracy": "METHOD_6", "max": "METHOD_7", "getMax": "METHOD_8", "doSolve": "METHOD_9", "abs": "METHOD_10", "0": "INT_1", "0.0": "FLOAT_1", "0.5": "FLOAT_2"}, "nodes": ["MethodDeclaration", "final protected", "BasicType", "double", "doSolve", "LocalVariableDeclaration", "BasicType", "double", "VariableDeclarator", "x0", "MethodInvocation", "getMin", "LocalVariableDeclaration", "BasicType", "double", "VariableDeclarator", "x1", "MethodInvocation", "getMax", "LocalVariableDeclaration", "BasicType", "double", "VariableDeclarator", "f0", "MethodInvocation", "computeObjectiveValue", "MemberReference", "x0", "LocalVariableDeclaration", "BasicType", "double", "VariableDeclarator", "f1", "MethodInvocation", "computeObjectiveValue", "MemberReference", "x1", "IfStatement", "BinaryOperation", "MemberReference", "f0", "==", "Literal", "0.0", "BlockStatement", "ReturnStatement", "MemberReference", "x0", "IfStatement", "BinaryOperation", "MemberReference", "f1", "==", "Literal", "0.0", "BlockStatement", "ReturnStatement", "MemberReference", "x1", "StatementExpression", "MethodInvocation", "verifyBracketing", "MemberReference", "x0", "MemberReference", "x1", "LocalVariableDeclaration", "final", "BasicType", "double", "VariableDeclarator", "ftol", "MethodInvocation", "getFunctionValueAccuracy", "LocalVariableDeclaration", "final", "BasicType", "double", "VariableDeclarator", "atol", "MethodInvocation", "getAbsoluteAccuracy", "LocalVariableDeclaration", "final", "BasicType", "double", "VariableDeclarator", "rtol", "MethodInvocation", "getRelativeAccuracy", "LocalVariableDeclaration", "BasicType", "boolean", "VariableDeclarator", "inverted", "Literal", "false", "WhileStatement", "Literal", "true", "BlockStatement", "LocalVariableDeclaration", "final", "BasicType", "double", "VariableDeclarator", "x", "BinaryOperation", "MemberReference", "x1", "-", "BinaryOperation", "BinaryOperation", "MemberReference", "f1", "*", "BinaryOperation", "MemberReference", "x1", "-", "MemberReference", "x0", "/", "BinaryOperation", "MemberReference", "f1", "-", "MemberReference", "f0", "LocalVariableDeclaration", "final", "BasicType", "double", "VariableDeclarator", "fx", "MethodInvocation", "computeObjectiveValue", "MemberReference", "x", "IfStatement", "BinaryOperation", "MemberReference", "fx", "==", "Literal", "0.0", "BlockStatement", "ReturnStatement", "MemberReference", "x", "IfStatement", "BinaryOperation", "BinaryOperation", "MemberReference", "f1", "*", "MemberReference", "fx", "<", "Literal", "0", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "x0", "=", "MemberReference", "x1", "StatementExpression", "Assignment", "MemberReference", "f0", "=", "MemberReference", "f1", "StatementExpression", "Assignment", "MemberReference", "inverted", "=", "MemberReference", "!", "inverted", "BlockStatement", "SwitchStatement", "MemberReference", "method", "SwitchStatementCase", "ILLINOIS", "StatementExpression", "Assignment", "MemberReference", "f0", "*=", "Literal", "0.5", "BreakStatement", "SwitchStatementCase", "PEGASUS", "StatementExpression", "Assignment", "MemberReference", "f0", "*=", "BinaryOperation", "MemberReference", "f1", "/", "BinaryOperation", "MemberReference", "f1", "+", "MemberReference", "fx", "BreakStatement", "SwitchStatementCase", "REGULA_FALSI", "BreakStatement", "SwitchStatementCase", "ThrowStatement", "ClassCreator", "ReferenceType", "MathInternalError", "StatementExpression", "Assignment", "MemberReference", "x1", "=", "MemberReference", "x", "StatementExpression", "Assignment", "MemberReference", "f1", "=", "MemberReference", "fx", "IfStatement", "BinaryOperation", "MethodInvocation", "FastMath", "abs", "MemberReference", "f1", "<=", "MemberReference", "ftol", "BlockStatement", "SwitchStatement", "MemberReference", "allowed", "SwitchStatementCase", "ANY_SIDE", "ReturnStatement", "MemberReference", "x1", "SwitchStatementCase", "LEFT_SIDE", "IfStatement", "MemberReference", "inverted", "BlockStatement", "ReturnStatement", "MemberReference", "x1", "BreakStatement", "SwitchStatementCase", "RIGHT_SIDE", "IfStatement", "MemberReference", "!", "inverted", "BlockStatement", "ReturnStatement", "MemberReference", "x1", "BreakStatement", "SwitchStatementCase", "BELOW_SIDE", "IfStatement", "BinaryOperation", "MemberReference", "f1", "<=", "Literal", "0", "BlockStatement", "ReturnStatement", "MemberReference", "x1", "BreakStatement", "SwitchStatementCase", "ABOVE_SIDE", "IfStatement", "BinaryOperation", "MemberReference", "f1", ">=", "Literal", "0", "BlockStatement", "ReturnStatement", "MemberReference", "x1", "BreakStatement", "SwitchStatementCase", "ThrowStatement", "ClassCreator", "ReferenceType", "MathInternalError", "IfStatement", "BinaryOperation", "MethodInvocation", "FastMath", "abs", "BinaryOperation", "MemberReference", "x1", "-", "MemberReference", "x0", "<", "MethodInvocation", "FastMath", "max", "BinaryOperation", "MemberReference", "rtol", "*", "MethodInvocation", "FastMath", "abs", "MemberReference", "x1", "MemberReference", "atol", "BlockStatement", "SwitchStatement", "MemberReference", "allowed", "SwitchStatementCase", "ANY_SIDE", "ReturnStatement", "MemberReference", "x1", "SwitchStatementCase", "LEFT_SIDE", "ReturnStatement", "TernaryExpression", "MemberReference", "inverted", "MemberReference", "x1", "MemberReference", "x0", "SwitchStatementCase", "RIGHT_SIDE", "ReturnStatement", "TernaryExpression", "MemberReference", "inverted", "MemberReference", "x0", "MemberReference", "x1", "SwitchStatementCase", "BELOW_SIDE", "ReturnStatement", "TernaryExpression", "BinaryOperation", "MemberReference", "f1", "<=", "Literal", "0", "MemberReference", "x1", "MemberReference", "x0", "SwitchStatementCase", "ABOVE_SIDE", "ReturnStatement", "TernaryExpression", "BinaryOperation", "MemberReference", "f1", ">=", "Literal", "0", "MemberReference", "x1", "MemberReference", "x0", "SwitchStatementCase", "ThrowStatement", "ClassCreator", "ReferenceType", "MathInternalError"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "body"], [5, 6, "type"], [6, 7, "name"], [5, 8, "declarators"], [8, 9, "name"], [8, 10, "initializer"], [10, 11, "member"], [0, 12, "body"], [12, 13, "type"], [13, 14, "name"], [12, 15, "declarators"], [15, 16, "name"], [15, 17, "initializer"], [17, 18, "member"], [0, 19, "body"], [19, 20, "type"], [20, 21, "name"], [19, 22, "declarators"], [22, 23, "name"], [22, 24, "initializer"], [24, 25, "member"], [24, 26, "arguments"], [26, 27, "member"], [0, 28, "body"], [28, 29, "type"], [29, 30, "name"], [28, 31, "declarators"], [31, 32, "name"], [31, 33, "initializer"], [33, 34, "member"], [33, 35, "arguments"], [35, 36, "member"], [0, 37, "body"], [37, 38, "condition"], [38, 39, "operandl"], [39, 40, "member"], [38, 41, "operator"], [38, 42, "operandr"], [42, 43, "value"], [37, 44, "then_statement"], [44, 45, "statements"], [45, 46, "expression"], [46, 47, "member"], [0, 48, "body"], [48, 49, "condition"], [49, 50, "operandl"], [50, 51, "member"], [49, 52, "operator"], [49, 53, "operandr"], [53, 54, "value"], [48, 55, "then_statement"], [55, 56, "statements"], [56, 57, "expression"], [57, 58, "member"], [0, 59, "body"], [59, 60, "expression"], [60, 61, "member"], [60, 62, "arguments"], [62, 63, "member"], [60, 64, "arguments"], [64, 65, "member"], [0, 66, "body"], [66, 67, "modifiers"], [66, 68, "type"], [68, 69, "name"], [66, 70, "declarators"], [70, 71, "name"], [70, 72, "initializer"], [72, 73, "member"], [0, 74, "body"], [74, 75, "modifiers"], [74, 76, "type"], [76, 77, "name"], [74, 78, "declarators"], [78, 79, "name"], [78, 80, "initializer"], [80, 81, "member"], [0, 82, "body"], [82, 83, "modifiers"], [82, 84, "type"], [84, 85, "name"], [82, 86, "declarators"], [86, 87, "name"], [86, 88, "initializer"], [88, 89, "member"], [0, 90, "body"], [90, 91, "type"], [91, 92, "name"], [90, 93, "declarators"], [93, 94, "name"], [93, 95, "initializer"], [95, 96, "value"], [0, 97, "body"], [97, 98, "condition"], [98, 99, "value"], [97, 100, "body"], [100, 101, "statements"], [101, 102, "modifiers"], [101, 103, "type"], [103, 104, "name"], [101, 105, "declarators"], [105, 106, "name"], [105, 107, "initializer"], [107, 108, "operandl"], [108, 109, "member"], [107, 110, "operator"], [107, 111, "operandr"], [111, 112, "operandl"], [112, 113, "operandl"], [113, 114, "member"], [112, 115, "operator"], [112, 116, "operandr"], [116, 117, "operandl"], [117, 118, "member"], [116, 119, "operator"], [116, 120, "operandr"], [120, 121, "member"], [111, 122, "operator"], [111, 123, "operandr"], [123, 124, "operandl"], [124, 125, "member"], [123, 126, "operator"], [123, 127, "operandr"], [127, 128, "member"], [100, 129, "statements"], [129, 130, "modifiers"], [129, 131, "type"], [131, 132, "name"], [129, 133, "declarators"], [133, 134, "name"], [133, 135, "initializer"], [135, 136, "member"], [135, 137, "arguments"], [137, 138, "member"], [100, 139, "statements"], [139, 140, "condition"], [140, 141, "operandl"], [141, 142, "member"], [140, 143, "operator"], [140, 144, "operandr"], [144, 145, "value"], [139, 146, "then_statement"], [146, 147, "statements"], [147, 148, "expression"], [148, 149, "member"], [100, 150, "statements"], [150, 151, "condition"], [151, 152, "operandl"], [152, 153, "operandl"], [153, 154, "member"], [152, 155, "operator"], [152, 156, "operandr"], [156, 157, "member"], [151, 158, "operator"], [151, 159, "operandr"], [159, 160, "value"], [150, 161, "then_statement"], [161, 162, "statements"], [162, 163, "expression"], [163, 164, "expressionl"], [164, 165, "member"], [163, 166, "type"], [163, 167, "value"], [167, 168, "member"], [161, 169, "statements"], [169, 170, "expression"], [170, 171, "expressionl"], [171, 172, "member"], [170, 173, "type"], [170, 174, "value"], [174, 175, "member"], [161, 176, "statements"], [176, 177, "expression"], [177, 178, "expressionl"], [178, 179, "member"], [177, 180, "type"], [177, 181, "value"], [181, 182, "prefix_operators"], [181, 183, "member"], [150, 184, "else_statement"], [184, 185, "statements"], [185, 186, "expression"], [186, 187, "member"], [185, 188, "cases"], [188, 189, "case"], [188, 190, "statements"], [190, 191, "expression"], [191, 192, "expressionl"], [192, 193, "member"], [191, 194, "type"], [191, 195, "value"], [195, 196, "value"], [188, 197, "statements"], [185, 198, "cases"], [198, 199, "case"], [198, 200, "statements"], [200, 201, "expression"], [201, 202, "expressionl"], [202, 203, "member"], [201, 204, "type"], [201, 205, "value"], [205, 206, "operandl"], [206, 207, "member"], [205, 208, "operator"], [205, 209, "operandr"], [209, 210, "operandl"], [210, 211, "member"], [209, 212, "operator"], [209, 213, "operandr"], [213, 214, "member"], [198, 215, "statements"], [185, 216, "cases"], [216, 217, "case"], [216, 218, "statements"], [185, 219, "cases"], [219, 220, "statements"], [220, 221, "expression"], [221, 222, "type"], [222, 223, "name"], [100, 224, "statements"], [224, 225, "expression"], [225, 226, "expressionl"], [226, 227, "member"], [225, 228, "type"], [225, 229, "value"], [229, 230, "member"], [100, 231, "statements"], [231, 232, "expression"], [232, 233, "expressionl"], [233, 234, "member"], [232, 235, "type"], [232, 236, "value"], [236, 237, "member"], [100, 238, "statements"], [238, 239, "condition"], [239, 240, "operandl"], [240, 241, "qualifier"], [240, 242, "member"], [240, 243, "arguments"], [243, 244, "member"], [239, 245, "operator"], [239, 246, "operandr"], [246, 247, "member"], [238, 248, "then_statement"], [248, 249, "statements"], [249, 250, "expression"], [250, 251, "member"], [249, 252, "cases"], [252, 253, "case"], [252, 254, "statements"], [254, 255, "expression"], [255, 256, "member"], [249, 257, "cases"], [257, 258, "case"], [257, 259, "statements"], [259, 260, "condition"], [260, 261, "member"], [259, 262, "then_statement"], [262, 263, "statements"], [263, 264, "expression"], [264, 265, "member"], [257, 266, "statements"], [249, 267, "cases"], [267, 268, "case"], [267, 269, "statements"], [269, 270, "condition"], [270, 271, "prefix_operators"], [270, 272, "member"], [269, 273, "then_statement"], [273, 274, "statements"], [274, 275, "expression"], [275, 276, "member"], [267, 277, "statements"], [249, 278, "cases"], [278, 279, "case"], [278, 280, "statements"], [280, 281, "condition"], [281, 282, "operandl"], [282, 283, "member"], [281, 284, "operator"], [281, 285, "operandr"], [285, 286, "value"], [280, 287, "then_statement"], [287, 288, "statements"], [288, 289, "expression"], [289, 290, "member"], [278, 291, "statements"], [249, 292, "cases"], [292, 293, "case"], [292, 294, "statements"], [294, 295, "condition"], [295, 296, "operandl"], [296, 297, "member"], [295, 298, "operator"], [295, 299, "operandr"], [299, 300, "value"], [294, 301, "then_statement"], [301, 302, "statements"], [302, 303, "expression"], [303, 304, "member"], [292, 305, "statements"], [249, 306, "cases"], [306, 307, "statements"], [307, 308, "expression"], [308, 309, "type"], [309, 310, "name"], [100, 311, "statements"], [311, 312, "condition"], [312, 313, "operandl"], [313, 314, "qualifier"], [313, 315, "member"], [313, 316, "arguments"], [316, 317, "operandl"], [317, 318, "member"], [316, 319, "operator"], [316, 320, "operandr"], [320, 321, "member"], [312, 322, "operator"], [312, 323, "operandr"], [323, 324, "qualifier"], [323, 325, "member"], [323, 326, "arguments"], [326, 327, "operandl"], [327, 328, "member"], [326, 329, "operator"], [326, 330, "operandr"], [330, 331, "qualifier"], [330, 332, "member"], [330, 333, "arguments"], [333, 334, "member"], [323, 335, "arguments"], [335, 336, "member"], [311, 337, "then_statement"], [337, 338, "statements"], [338, 339, "expression"], [339, 340, "member"], [338, 341, "cases"], [341, 342, "case"], [341, 343, "statements"], [343, 344, "expression"], [344, 345, "member"], [338, 346, "cases"], [346, 347, "case"], [346, 348, "statements"], [348, 349, "expression"], [349, 350, "condition"], [350, 351, "member"], [349, 352, "if_true"], [352, 353, "member"], [349, 354, "if_false"], [354, 355, "member"], [338, 356, "cases"], [356, 357, "case"], [356, 358, "statements"], [358, 359, "expression"], [359, 360, "condition"], [360, 361, "member"], [359, 362, "if_true"], [362, 363, "member"], [359, 364, "if_false"], [364, 365, "member"], [338, 366, "cases"], [366, 367, "case"], [366, 368, "statements"], [368, 369, "expression"], [369, 370, "condition"], [370, 371, "operandl"], [371, 372, "member"], [370, 373, "operator"], [370, 374, "operandr"], [374, 375, "value"], [369, 376, "if_true"], [376, 377, "member"], [369, 378, "if_false"], [378, 379, "member"], [338, 380, "cases"], [380, 381, "case"], [380, 382, "statements"], [382, 383, "expression"], [383, 384, "condition"], [384, 385, "operandl"], [385, 386, "member"], [384, 387, "operator"], [384, 388, "operandr"], [388, 389, "value"], [383, 390, "if_true"], [390, 391, "member"], [383, 392, "if_false"], [392, 393, "member"], [338, 394, "cases"], [394, 395, "statements"], [395, 396, "expression"], [396, 397, "type"], [397, 398, "name"]], "rem_roots": [218], "add_roots": []}, {"id": 124, "mappings": {"ZERO": "VAR_1", "scale": "VAR_2", "real": "VAR_3", "isNaN": "VAR_4", "q": "VAR_5", "isInfinite": "VAR_6", "imaginary": "VAR_7", "NaN": "VAR_8", "Complex": "TYPE_1", "FastMath": "TYPE_2", "reciprocal": "METHOD_1", "abs": "METHOD_2", "createComplex": "METHOD_3", "0.0": "FLOAT_1", "1.": "FLOAT_2"}, "nodes": ["MethodDeclaration", "public", "ReferenceType", "Complex", "reciprocal", "IfStatement", "MemberReference", "isNaN", "BlockStatement", "ReturnStatement", "MemberReference", "NaN", "IfStatement", "BinaryOperation", "BinaryOperation", "MemberReference", "real", "==", "Literal", "0.0", "&&", "BinaryOperation", "MemberReference", "imaginary", "==", "Literal", "0.0", "BlockStatement", "ReturnStatement", "MemberReference", "NaN", "IfStatement", "MemberReference", "isInfinite", "BlockStatement", "ReturnStatement", "MemberReference", "ZERO", "IfStatement", "BinaryOperation", "MethodInvocation", "FastMath", "abs", "MemberReference", "real", "<", "MethodInvocation", "FastMath", "abs", "MemberReference", "imaginary", "BlockStatement", "LocalVariableDeclaration", "BasicType", "double", "VariableDeclarator", "q", "BinaryOperation", "MemberReference", "real", "/", "MemberReference", "imaginary", "LocalVariableDeclaration", "BasicType", "double", "VariableDeclarator", "scale", "BinaryOperation", "Literal", "1.", "/", "BinaryOperation", "BinaryOperation", "MemberReference", "real", "*", "MemberReference", "q", "+", "MemberReference", "imaginary", "ReturnStatement", "MethodInvocation", "createComplex", "BinaryOperation", "MemberReference", "scale", "*", "MemberReference", "q", "MemberReference", "-", "scale", "BlockStatement", "LocalVariableDeclaration", "BasicType", "double", "VariableDeclarator", "q", "BinaryOperation", "MemberReference", "imaginary", "/", "MemberReference", "real", "LocalVariableDeclaration", "BasicType", "double", "VariableDeclarator", "scale", "BinaryOperation", "Literal", "1.", "/", "BinaryOperation", "BinaryOperation", "MemberReference", "imaginary", "*", "MemberReference", "q", "+", "MemberReference", "real", "ReturnStatement", "MethodInvocation", "createComplex", "MemberReference", "scale", "BinaryOperation", "MemberReference", "-", "scale", "*", "MemberReference", "q"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "body"], [5, 6, "condition"], [6, 7, "member"], [5, 8, "then_statement"], [8, 9, "statements"], [9, 10, "expression"], [10, 11, "member"], [0, 12, "body"], [12, 13, "condition"], [13, 14, "operandl"], [14, 15, "operandl"], [15, 16, "member"], [14, 17, "operator"], [14, 18, "operandr"], [18, 19, "value"], [13, 20, "operator"], [13, 21, "operandr"], [21, 22, "operandl"], [22, 23, "member"], [21, 24, "operator"], [21, 25, "operandr"], [25, 26, "value"], [12, 27, "then_statement"], [27, 28, "statements"], [28, 29, "expression"], [29, 30, "member"], [0, 31, "body"], [31, 32, "condition"], [32, 33, "member"], [31, 34, "then_statement"], [34, 35, "statements"], [35, 36, "expression"], [36, 37, "member"], [0, 38, "body"], [38, 39, "condition"], [39, 40, "operandl"], [40, 41, "qualifier"], [40, 42, "member"], [40, 43, "arguments"], [43, 44, "member"], [39, 45, "operator"], [39, 46, "operandr"], [46, 47, "qualifier"], [46, 48, "member"], [46, 49, "arguments"], [49, 50, "member"], [38, 51, "then_statement"], [51, 52, "statements"], [52, 53, "type"], [53, 54, "name"], [52, 55, "declarators"], [55, 56, "name"], [55, 57, "initializer"], [57, 58, "operandl"], [58, 59, "member"], [57, 60, "operator"], [57, 61, "operandr"], [61, 62, "member"], [51, 63, "statements"], [63, 64, "type"], [64, 65, "name"], [63, 66, "declarators"], [66, 67, "name"], [66, 68, "initializer"], [68, 69, "operandl"], [69, 70, "value"], [68, 71, "operator"], [68, 72, "operandr"], [72, 73, "operandl"], [73, 74, "operandl"], [74, 75, "member"], [73, 76, "operator"], [73, 77, "operandr"], [77, 78, "member"], [72, 79, "operator"], [72, 80, "operandr"], [80, 81, "member"], [51, 82, "statements"], [82, 83, "expression"], [83, 84, "member"], [83, 85, "arguments"], [85, 86, "operandl"], [86, 87, "member"], [85, 88, "operator"], [85, 89, "operandr"], [89, 90, "member"], [83, 91, "arguments"], [91, 92, "prefix_operators"], [91, 93, "member"], [38, 94, "else_statement"], [94, 95, "statements"], [95, 96, "type"], [96, 97, "name"], [95, 98, "declarators"], [98, 99, "name"], [98, 100, "initializer"], [100, 101, "operandl"], [101, 102, "member"], [100, 103, "operator"], [100, 104, "operandr"], [104, 105, "member"], [94, 106, "statements"], [106, 107, "type"], [107, 108, "name"], [106, 109, "declarators"], [109, 110, "name"], [109, 111, "initializer"], [111, 112, "operandl"], [112, 113, "value"], [111, 114, "operator"], [111, 115, "operandr"], [115, 116, "operandl"], [116, 117, "operandl"], [117, 118, "member"], [116, 119, "operator"], [116, 120, "operandr"], [120, 121, "member"], [115, 122, "operator"], [115, 123, "operandr"], [123, 124, "member"], [94, 125, "statements"], [125, 126, "expression"], [126, 127, "member"], [126, 128, "arguments"], [128, 129, "member"], [126, 130, "arguments"], [130, 131, "operandl"], [131, 132, "prefix_operators"], [131, 133, "member"], [130, 134, "operator"], [130, 135, "operandr"], [135, 136, "member"]], "rem_roots": [28], "add_roots": []}, {"id": 125, "mappings": {"allowed": "VAR_1", "f0": "VAR_2", "f1": "VAR_3", "RIGHT_SIDE": "VAR_4", "fx": "VAR_5", "REGULA_FALSI": "VAR_6", "BELOW_SIDE": "VAR_7", "ftol": "VAR_8", "inverted": "VAR_9", "LEFT_SIDE": "VAR_10", "ILLINOIS": "VAR_11", "method": "VAR_12", "ABOVE_SIDE": "VAR_13", "rtol": "VAR_14", "x0": "VAR_15", "x": "VAR_16", "x1": "VAR_17", "ANY_SIDE": "VAR_18", "PEGASUS": "VAR_19", "atol": "VAR_20", "MathInternalError": "TYPE_1", "FastMath": "TYPE_2", "getFunctionValueAccuracy": "METHOD_1", "computeObjectiveValue": "METHOD_2", "getAbsoluteAccuracy": "METHOD_3", "getMin": "METHOD_4", "verifyBracketing": "METHOD_5", "getRelativeAccuracy": "METHOD_6", "max": "METHOD_7", "getMax": "METHOD_8", "doSolve": "METHOD_9", "abs": "METHOD_10", "0": "INT_1", "0.0": "FLOAT_1", "0.5": "FLOAT_2"}, "nodes": ["MethodDeclaration", "final protected", "BasicType", "double", "doSolve", "LocalVariableDeclaration", "BasicType", "double", "VariableDeclarator", "x0", "MethodInvocation", "getMin", "LocalVariableDeclaration", "BasicType", "double", "VariableDeclarator", "x1", "MethodInvocation", "getMax", "LocalVariableDeclaration", "BasicType", "double", "VariableDeclarator", "f0", "MethodInvocation", "computeObjectiveValue", "MemberReference", "x0", "LocalVariableDeclaration", "BasicType", "double", "VariableDeclarator", "f1", "MethodInvocation", "computeObjectiveValue", "MemberReference", "x1", "IfStatement", "BinaryOperation", "MemberReference", "f0", "==", "Literal", "0.0", "BlockStatement", "ReturnStatement", "MemberReference", "x0", "IfStatement", "BinaryOperation", "MemberReference", "f1", "==", "Literal", "0.0", "BlockStatement", "ReturnStatement", "MemberReference", "x1", "StatementExpression", "MethodInvocation", "verifyBracketing", "MemberReference", "x0", "MemberReference", "x1", "LocalVariableDeclaration", "final", "BasicType", "double", "VariableDeclarator", "ftol", "MethodInvocation", "getFunctionValueAccuracy", "LocalVariableDeclaration", "final", "BasicType", "double", "VariableDeclarator", "atol", "MethodInvocation", "getAbsoluteAccuracy", "LocalVariableDeclaration", "final", "BasicType", "double", "VariableDeclarator", "rtol", "MethodInvocation", "getRelativeAccuracy", "LocalVariableDeclaration", "BasicType", "boolean", "VariableDeclarator", "inverted", "Literal", "false", "WhileStatement", "Literal", "true", "BlockStatement", "LocalVariableDeclaration", "final", "BasicType", "double", "VariableDeclarator", "x", "BinaryOperation", "MemberReference", "x1", "-", "BinaryOperation", "BinaryOperation", "MemberReference", "f1", "*", "BinaryOperation", "MemberReference", "x1", "-", "MemberReference", "x0", "/", "BinaryOperation", "MemberReference", "f1", "-", "MemberReference", "f0", "LocalVariableDeclaration", "final", "BasicType", "double", "VariableDeclarator", "fx", "MethodInvocation", "computeObjectiveValue", "MemberReference", "x", "IfStatement", "BinaryOperation", "MemberReference", "fx", "==", "Literal", "0.0", "BlockStatement", "ReturnStatement", "MemberReference", "x", "IfStatement", "BinaryOperation", "BinaryOperation", "MemberReference", "f1", "*", "MemberReference", "fx", "<", "Literal", "0", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "x0", "=", "MemberReference", "x1", "StatementExpression", "Assignment", "MemberReference", "f0", "=", "MemberReference", "f1", "StatementExpression", "Assignment", "MemberReference", "inverted", "=", "MemberReference", "!", "inverted", "BlockStatement", "SwitchStatement", "MemberReference", "method", "SwitchStatementCase", "ILLINOIS", "StatementExpression", "Assignment", "MemberReference", "f0", "*=", "Literal", "0.5", "BreakStatement", "SwitchStatementCase", "PEGASUS", "StatementExpression", "Assignment", "MemberReference", "f0", "*=", "BinaryOperation", "MemberReference", "f1", "/", "BinaryOperation", "MemberReference", "f1", "+", "MemberReference", "fx", "BreakStatement", "SwitchStatementCase", "REGULA_FALSI", "IfStatement", "BinaryOperation", "MemberReference", "x", "==", "MemberReference", "x1", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "x0", "=", "BinaryOperation", "Literal", "0.5", "*", "BinaryOperation", "BinaryOperation", "MemberReference", "x0", "+", "MemberReference", "x1", "-", "MethodInvocation", "FastMath", "max", "BinaryOperation", "MemberReference", "rtol", "*", "MethodInvocation", "FastMath", "abs", "MemberReference", "x1", "MemberReference", "atol", "StatementExpression", "Assignment", "MemberReference", "f0", "=", "MethodInvocation", "computeObjectiveValue", "MemberReference", "x0", "BreakStatement", "SwitchStatementCase", "ThrowStatement", "ClassCreator", "ReferenceType", "MathInternalError", "StatementExpression", "Assignment", "MemberReference", "x1", "=", "MemberReference", "x", "StatementExpression", "Assignment", "MemberReference", "f1", "=", "MemberReference", "fx", "IfStatement", "BinaryOperation", "MethodInvocation", "FastMath", "abs", "MemberReference", "f1", "<=", "MemberReference", "ftol", "BlockStatement", "SwitchStatement", "MemberReference", "allowed", "SwitchStatementCase", "ANY_SIDE", "ReturnStatement", "MemberReference", "x1", "SwitchStatementCase", "LEFT_SIDE", "IfStatement", "MemberReference", "inverted", "BlockStatement", "ReturnStatement", "MemberReference", "x1", "BreakStatement", "SwitchStatementCase", "RIGHT_SIDE", "IfStatement", "MemberReference", "!", "inverted", "BlockStatement", "ReturnStatement", "MemberReference", "x1", "BreakStatement", "SwitchStatementCase", "BELOW_SIDE", "IfStatement", "BinaryOperation", "MemberReference", "f1", "<=", "Literal", "0", "BlockStatement", "ReturnStatement", "MemberReference", "x1", "BreakStatement", "SwitchStatementCase", "ABOVE_SIDE", "IfStatement", "BinaryOperation", "MemberReference", "f1", ">=", "Literal", "0", "BlockStatement", "ReturnStatement", "MemberReference", "x1", "BreakStatement", "SwitchStatementCase", "ThrowStatement", "ClassCreator", "ReferenceType", "MathInternalError", "IfStatement", "BinaryOperation", "MethodInvocation", "FastMath", "abs", "BinaryOperation", "MemberReference", "x1", "-", "MemberReference", "x0", "<", "MethodInvocation", "FastMath", "max", "BinaryOperation", "MemberReference", "rtol", "*", "MethodInvocation", "FastMath", "abs", "MemberReference", "x1", "MemberReference", "atol", "BlockStatement", "SwitchStatement", "MemberReference", "allowed", "SwitchStatementCase", "ANY_SIDE", "ReturnStatement", "MemberReference", "x1", "SwitchStatementCase", "LEFT_SIDE", "ReturnStatement", "TernaryExpression", "MemberReference", "inverted", "MemberReference", "x1", "MemberReference", "x0", "SwitchStatementCase", "RIGHT_SIDE", "ReturnStatement", "TernaryExpression", "MemberReference", "inverted", "MemberReference", "x0", "MemberReference", "x1", "SwitchStatementCase", "BELOW_SIDE", "ReturnStatement", "TernaryExpression", "BinaryOperation", "MemberReference", "f1", "<=", "Literal", "0", "MemberReference", "x1", "MemberReference", "x0", "SwitchStatementCase", "ABOVE_SIDE", "ReturnStatement", "TernaryExpression", "BinaryOperation", "MemberReference", "f1", ">=", "Literal", "0", "MemberReference", "x1", "MemberReference", "x0", "SwitchStatementCase", "ThrowStatement", "ClassCreator", "ReferenceType", "MathInternalError"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "body"], [5, 6, "type"], [6, 7, "name"], [5, 8, "declarators"], [8, 9, "name"], [8, 10, "initializer"], [10, 11, "member"], [0, 12, "body"], [12, 13, "type"], [13, 14, "name"], [12, 15, "declarators"], [15, 16, "name"], [15, 17, "initializer"], [17, 18, "member"], [0, 19, "body"], [19, 20, "type"], [20, 21, "name"], [19, 22, "declarators"], [22, 23, "name"], [22, 24, "initializer"], [24, 25, "member"], [24, 26, "arguments"], [26, 27, "member"], [0, 28, "body"], [28, 29, "type"], [29, 30, "name"], [28, 31, "declarators"], [31, 32, "name"], [31, 33, "initializer"], [33, 34, "member"], [33, 35, "arguments"], [35, 36, "member"], [0, 37, "body"], [37, 38, "condition"], [38, 39, "operandl"], [39, 40, "member"], [38, 41, "operator"], [38, 42, "operandr"], [42, 43, "value"], [37, 44, "then_statement"], [44, 45, "statements"], [45, 46, "expression"], [46, 47, "member"], [0, 48, "body"], [48, 49, "condition"], [49, 50, "operandl"], [50, 51, "member"], [49, 52, "operator"], [49, 53, "operandr"], [53, 54, "value"], [48, 55, "then_statement"], [55, 56, "statements"], [56, 57, "expression"], [57, 58, "member"], [0, 59, "body"], [59, 60, "expression"], [60, 61, "member"], [60, 62, "arguments"], [62, 63, "member"], [60, 64, "arguments"], [64, 65, "member"], [0, 66, "body"], [66, 67, "modifiers"], [66, 68, "type"], [68, 69, "name"], [66, 70, "declarators"], [70, 71, "name"], [70, 72, "initializer"], [72, 73, "member"], [0, 74, "body"], [74, 75, "modifiers"], [74, 76, "type"], [76, 77, "name"], [74, 78, "declarators"], [78, 79, "name"], [78, 80, "initializer"], [80, 81, "member"], [0, 82, "body"], [82, 83, "modifiers"], [82, 84, "type"], [84, 85, "name"], [82, 86, "declarators"], [86, 87, "name"], [86, 88, "initializer"], [88, 89, "member"], [0, 90, "body"], [90, 91, "type"], [91, 92, "name"], [90, 93, "declarators"], [93, 94, "name"], [93, 95, "initializer"], [95, 96, "value"], [0, 97, "body"], [97, 98, "condition"], [98, 99, "value"], [97, 100, "body"], [100, 101, "statements"], [101, 102, "modifiers"], [101, 103, "type"], [103, 104, "name"], [101, 105, "declarators"], [105, 106, "name"], [105, 107, "initializer"], [107, 108, "operandl"], [108, 109, "member"], [107, 110, "operator"], [107, 111, "operandr"], [111, 112, "operandl"], [112, 113, "operandl"], [113, 114, "member"], [112, 115, "operator"], [112, 116, "operandr"], [116, 117, "operandl"], [117, 118, "member"], [116, 119, "operator"], [116, 120, "operandr"], [120, 121, "member"], [111, 122, "operator"], [111, 123, "operandr"], [123, 124, "operandl"], [124, 125, "member"], [123, 126, "operator"], [123, 127, "operandr"], [127, 128, "member"], [100, 129, "statements"], [129, 130, "modifiers"], [129, 131, "type"], [131, 132, "name"], [129, 133, "declarators"], [133, 134, "name"], [133, 135, "initializer"], [135, 136, "member"], [135, 137, "arguments"], [137, 138, "member"], [100, 139, "statements"], [139, 140, "condition"], [140, 141, "operandl"], [141, 142, "member"], [140, 143, "operator"], [140, 144, "operandr"], [144, 145, "value"], [139, 146, "then_statement"], [146, 147, "statements"], [147, 148, "expression"], [148, 149, "member"], [100, 150, "statements"], [150, 151, "condition"], [151, 152, "operandl"], [152, 153, "operandl"], [153, 154, "member"], [152, 155, "operator"], [152, 156, "operandr"], [156, 157, "member"], [151, 158, "operator"], [151, 159, "operandr"], [159, 160, "value"], [150, 161, "then_statement"], [161, 162, "statements"], [162, 163, "expression"], [163, 164, "expressionl"], [164, 165, "member"], [163, 166, "type"], [163, 167, "value"], [167, 168, "member"], [161, 169, "statements"], [169, 170, "expression"], [170, 171, "expressionl"], [171, 172, "member"], [170, 173, "type"], [170, 174, "value"], [174, 175, "member"], [161, 176, "statements"], [176, 177, "expression"], [177, 178, "expressionl"], [178, 179, "member"], [177, 180, "type"], [177, 181, "value"], [181, 182, "prefix_operators"], [181, 183, "member"], [150, 184, "else_statement"], [184, 185, "statements"], [185, 186, "expression"], [186, 187, "member"], [185, 188, "cases"], [188, 189, "case"], [188, 190, "statements"], [190, 191, "expression"], [191, 192, "expressionl"], [192, 193, "member"], [191, 194, "type"], [191, 195, "value"], [195, 196, "value"], [188, 197, "statements"], [185, 198, "cases"], [198, 199, "case"], [198, 200, "statements"], [200, 201, "expression"], [201, 202, "expressionl"], [202, 203, "member"], [201, 204, "type"], [201, 205, "value"], [205, 206, "operandl"], [206, 207, "member"], [205, 208, "operator"], [205, 209, "operandr"], [209, 210, "operandl"], [210, 211, "member"], [209, 212, "operator"], [209, 213, "operandr"], [213, 214, "member"], [198, 215, "statements"], [185, 216, "cases"], [216, 217, "case"], [216, 218, "statements"], [218, 219, "condition"], [219, 220, "operandl"], [220, 221, "member"], [219, 222, "operator"], [219, 223, "operandr"], [223, 224, "member"], [218, 225, "then_statement"], [225, 226, "statements"], [226, 227, "expression"], [227, 228, "expressionl"], [228, 229, "member"], [227, 230, "type"], [227, 231, "value"], [231, 232, "operandl"], [232, 233, "value"], [231, 234, "operator"], [231, 235, "operandr"], [235, 236, "operandl"], [236, 237, "operandl"], [237, 238, "member"], [236, 239, "operator"], [236, 240, "operandr"], [240, 241, "member"], [235, 242, "operator"], [235, 243, "operandr"], [243, 244, "qualifier"], [243, 245, "member"], [243, 246, "arguments"], [246, 247, "operandl"], [247, 248, "member"], [246, 249, "operator"], [246, 250, "operandr"], [250, 251, "qualifier"], [250, 252, "member"], [250, 253, "arguments"], [253, 254, "member"], [243, 255, "arguments"], [255, 256, "member"], [225, 257, "statements"], [257, 258, "expression"], [258, 259, "expressionl"], [259, 260, "member"], [258, 261, "type"], [258, 262, "value"], [262, 263, "member"], [262, 264, "arguments"], [264, 265, "member"], [216, 266, "statements"], [185, 267, "cases"], [267, 268, "statements"], [268, 269, "expression"], [269, 270, "type"], [270, 271, "name"], [100, 272, "statements"], [272, 273, "expression"], [273, 274, "expressionl"], [274, 275, "member"], [273, 276, "type"], [273, 277, "value"], [277, 278, "member"], [100, 279, "statements"], [279, 280, "expression"], [280, 281, "expressionl"], [281, 282, "member"], [280, 283, "type"], [280, 284, "value"], [284, 285, "member"], [100, 286, "statements"], [286, 287, "condition"], [287, 288, "operandl"], [288, 289, "qualifier"], [288, 290, "member"], [288, 291, "arguments"], [291, 292, "member"], [287, 293, "operator"], [287, 294, "operandr"], [294, 295, "member"], [286, 296, "then_statement"], [296, 297, "statements"], [297, 298, "expression"], [298, 299, "member"], [297, 300, "cases"], [300, 301, "case"], [300, 302, "statements"], [302, 303, "expression"], [303, 304, "member"], [297, 305, "cases"], [305, 306, "case"], [305, 307, "statements"], [307, 308, "condition"], [308, 309, "member"], [307, 310, "then_statement"], [310, 311, "statements"], [311, 312, "expression"], [312, 313, "member"], [305, 314, "statements"], [297, 315, "cases"], [315, 316, "case"], [315, 317, "statements"], [317, 318, "condition"], [318, 319, "prefix_operators"], [318, 320, "member"], [317, 321, "then_statement"], [321, 322, "statements"], [322, 323, "expression"], [323, 324, "member"], [315, 325, "statements"], [297, 326, "cases"], [326, 327, "case"], [326, 328, "statements"], [328, 329, "condition"], [329, 330, "operandl"], [330, 331, "member"], [329, 332, "operator"], [329, 333, "operandr"], [333, 334, "value"], [328, 335, "then_statement"], [335, 336, "statements"], [336, 337, "expression"], [337, 338, "member"], [326, 339, "statements"], [297, 340, "cases"], [340, 341, "case"], [340, 342, "statements"], [342, 343, "condition"], [343, 344, "operandl"], [344, 345, "member"], [343, 346, "operator"], [343, 347, "operandr"], [347, 348, "value"], [342, 349, "then_statement"], [349, 350, "statements"], [350, 351, "expression"], [351, 352, "member"], [340, 353, "statements"], [297, 354, "cases"], [354, 355, "statements"], [355, 356, "expression"], [356, 357, "type"], [357, 358, "name"], [100, 359, "statements"], [359, 360, "condition"], [360, 361, "operandl"], [361, 362, "qualifier"], [361, 363, "member"], [361, 364, "arguments"], [364, 365, "operandl"], [365, 366, "member"], [364, 367, "operator"], [364, 368, "operandr"], [368, 369, "member"], [360, 370, "operator"], [360, 371, "operandr"], [371, 372, "qualifier"], [371, 373, "member"], [371, 374, "arguments"], [374, 375, "operandl"], [375, 376, "member"], [374, 377, "operator"], [374, 378, "operandr"], [378, 379, "qualifier"], [378, 380, "member"], [378, 381, "arguments"], [381, 382, "member"], [371, 383, "arguments"], [383, 384, "member"], [359, 385, "then_statement"], [385, 386, "statements"], [386, 387, "expression"], [387, 388, "member"], [386, 389, "cases"], [389, 390, "case"], [389, 391, "statements"], [391, 392, "expression"], [392, 393, "member"], [386, 394, "cases"], [394, 395, "case"], [394, 396, "statements"], [396, 397, "expression"], [397, 398, "condition"], [398, 399, "member"], [397, 400, "if_true"], [400, 401, "member"], [397, 402, "if_false"], [402, 403, "member"], [386, 404, "cases"], [404, 405, "case"], [404, 406, "statements"], [406, 407, "expression"], [407, 408, "condition"], [408, 409, "member"], [407, 410, "if_true"], [410, 411, "member"], [407, 412, "if_false"], [412, 413, "member"], [386, 414, "cases"], [414, 415, "case"], [414, 416, "statements"], [416, 417, "expression"], [417, 418, "condition"], [418, 419, "operandl"], [419, 420, "member"], [418, 421, "operator"], [418, 422, "operandr"], [422, 423, "value"], [417, 424, "if_true"], [424, 425, "member"], [417, 426, "if_false"], [426, 427, "member"], [386, 428, "cases"], [428, 429, "case"], [428, 430, "statements"], [430, 431, "expression"], [431, 432, "condition"], [432, 433, "operandl"], [433, 434, "member"], [432, 435, "operator"], [432, 436, "operandr"], [436, 437, "value"], [431, 438, "if_true"], [438, 439, "member"], [431, 440, "if_false"], [440, 441, "member"], [386, 442, "cases"], [442, 443, "statements"], [443, 444, "expression"], [444, 445, "type"], [445, 446, "name"]], "rem_roots": [218], "add_roots": []}, {"id": 127, "mappings": {"sum": "VAR_1", "nearest": "VAR_2", "resultSet": "VAR_3", "points": "VAR_4", "random": "VAR_5", "firstPoint": "VAR_6", "dx2": "VAR_7", "d": "VAR_8", "length": "VAR_9", "i": "VAR_10", "k": "VAR_11", "p": "VAR_12", "r": "VAR_13", "pointSet": "VAR_14", "ArrayList": "TYPE_1", "Clusterable": "TYPE_2", "T": "TYPE_3", "Random": "TYPE_4", "List": "TYPE_5", "Cluster": "TYPE_6", "Collection": "TYPE_7", "getNearestCluster": "METHOD_1", "getCenter": "METHOD_2", "remove": "METHOD_3", "chooseInitialCenters": "METHOD_4", "get": "METHOD_5", "add": "METHOD_6", "nextInt": "METHOD_7", "distanceFrom": "METHOD_8", "nextDouble": "METHOD_9", "size": "METHOD_10", "0": "INT_1"}, "nodes": ["MethodDeclaration", "static private", "TypeParameter", "T", "ReferenceType", "Clusterable", "TypeArgument", "ReferenceType", "T", "ReferenceType", "List", "TypeArgument", "ReferenceType", "Cluster", "TypeArgument", "ReferenceType", "T", "chooseInitialCenters", "FormalParameter", "ReferenceType", "Collection", "TypeArgument", "ReferenceType", "T", "points", "FormalParameter", "BasicType", "int", "k", "FormalParameter", "ReferenceType", "Random", "random", "LocalVariableDeclaration", "final", "ReferenceType", "List", "TypeArgument", "ReferenceType", "T", "VariableDeclarator", "pointSet", "ClassCreator", "ReferenceType", "ArrayList", "TypeArgument", "ReferenceType", "T", "MemberReference", "points", "LocalVariableDeclaration", "final", "ReferenceType", "List", "TypeArgument", "ReferenceType", "Cluster", "TypeArgument", "ReferenceType", "T", "VariableDeclarator", "resultSet", "ClassCreator", "ReferenceType", "ArrayList", "TypeArgument", "ReferenceType", "Cluster", "TypeArgument", "ReferenceType", "T", "LocalVariableDeclaration", "final", "ReferenceType", "T", "VariableDeclarator", "firstPoint", "MethodInvocation", "pointSet", "remove", "MethodInvocation", "random", "nextInt", "MethodInvocation", "pointSet", "size", "StatementExpression", "MethodInvocation", "resultSet", "add", "ClassCreator", "ReferenceType", "Cluster", "TypeArgument", "ReferenceType", "T", "MemberReference", "firstPoint", "LocalVariableDeclaration", "final", "BasicType", "double", "None", "VariableDeclarator", "dx2", "ArrayCreator", "BasicType", "double", "MethodInvocation", "pointSet", "size", "WhileStatement", "BinaryOperation", "MethodInvocation", "resultSet", "size", "<", "MemberReference", "k", "BlockStatement", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "sum", "Literal", "0", "ForStatement", "ForControl", "VariableDeclaration", "BasicType", "int", "VariableDeclarator", "i", "Literal", "0", "BinaryOperation", "MemberReference", "i", "<", "MethodInvocation", "pointSet", "size", "MemberReference", "i", "++", "BlockStatement", "LocalVariableDeclaration", "final", "ReferenceType", "T", "VariableDeclarator", "p", "MethodInvocation", "pointSet", "get", "MemberReference", "i", "LocalVariableDeclaration", "final", "ReferenceType", "Cluster", "TypeArgument", "ReferenceType", "T", "VariableDeclarator", "nearest", "MethodInvocation", "getNearestCluster", "MemberReference", "resultSet", "MemberReference", "p", "LocalVariableDeclaration", "final", "BasicType", "double", "VariableDeclarator", "d", "MethodInvocation", "p", "distanceFrom", "MethodInvocation", "nearest", "getCenter", "StatementExpression", "Assignment", "MemberReference", "sum", "+=", "BinaryOperation", "MemberReference", "d", "*", "MemberReference", "d", "StatementExpression", "Assignment", "MemberReference", "dx2", "ArraySelector", "MemberReference", "i", "=", "MemberReference", "sum", "LocalVariableDeclaration", "final", "BasicType", "double", "VariableDeclarator", "r", "BinaryOperation", "MethodInvocation", "random", "nextDouble", "*", "MemberReference", "sum", "ForStatement", "ForControl", "VariableDeclaration", "BasicType", "int", "VariableDeclarator", "i", "Literal", "0", "BinaryOperation", "MemberReference", "i", "<", "MemberReference", "dx2", "length", "MemberReference", "i", "++", "BlockStatement", "IfStatement", "BinaryOperation", "MemberReference", "dx2", "ArraySelector", "MemberReference", "i", ">=", "MemberReference", "r", "BlockStatement", "LocalVariableDeclaration", "final", "ReferenceType", "T", "VariableDeclarator", "p", "MethodInvocation", "pointSet", "remove", "MemberReference", "i", "StatementExpression", "MethodInvocation", "resultSet", "add", "ClassCreator", "ReferenceType", "Cluster", "TypeArgument", "ReferenceType", "T", "MemberReference", "p", "BreakStatement", "ReturnStatement", "MemberReference", "resultSet"], "edges": [[0, 1, "modifiers"], [0, 2, "type_parameters"], [2, 3, "name"], [2, 4, "extends"], [4, 5, "name"], [4, 6, "arguments"], [6, 7, "type"], [7, 8, "name"], [0, 9, "return_type"], [9, 10, "name"], [9, 11, "arguments"], [11, 12, "type"], [12, 13, "name"], [12, 14, "arguments"], [14, 15, "type"], [15, 16, "name"], [0, 17, "name"], [0, 18, "parameters"], [18, 19, "type"], [19, 20, "name"], [19, 21, "arguments"], [21, 22, "type"], [22, 23, "name"], [18, 24, "name"], [0, 25, "parameters"], [25, 26, "type"], [26, 27, "name"], [25, 28, "name"], [0, 29, "parameters"], [29, 30, "type"], [30, 31, "name"], [29, 32, "name"], [0, 33, "body"], [33, 34, "modifiers"], [33, 35, "type"], [35, 36, "name"], [35, 37, "arguments"], [37, 38, "type"], [38, 39, "name"], [33, 40, "declarators"], [40, 41, "name"], [40, 42, "initializer"], [42, 43, "type"], [43, 44, "name"], [43, 45, "arguments"], [45, 46, "type"], [46, 47, "name"], [42, 48, "arguments"], [48, 49, "member"], [0, 50, "body"], [50, 51, "modifiers"], [50, 52, "type"], [52, 53, "name"], [52, 54, "arguments"], [54, 55, "type"], [55, 56, "name"], [55, 57, "arguments"], [57, 58, "type"], [58, 59, "name"], [50, 60, "declarators"], [60, 61, "name"], [60, 62, "initializer"], [62, 63, "type"], [63, 64, "name"], [63, 65, "arguments"], [65, 66, "type"], [66, 67, "name"], [66, 68, "arguments"], [68, 69, "type"], [69, 70, "name"], [0, 71, "body"], [71, 72, "modifiers"], [71, 73, "type"], [73, 74, "name"], [71, 75, "declarators"], [75, 76, "name"], [75, 77, "initializer"], [77, 78, "qualifier"], [77, 79, "member"], [77, 80, "arguments"], [80, 81, "qualifier"], [80, 82, "member"], [80, 83, "arguments"], [83, 84, "qualifier"], [83, 85, "member"], [0, 86, "body"], [86, 87, "expression"], [87, 88, "qualifier"], [87, 89, "member"], [87, 90, "arguments"], [90, 91, "type"], [91, 92, "name"], [91, 93, "arguments"], [93, 94, "type"], [94, 95, "name"], [90, 96, "arguments"], [96, 97, "member"], [0, 98, "body"], [98, 99, "modifiers"], [98, 100, "type"], [100, 101, "name"], [100, 102, "dimensions"], [98, 103, "declarators"], [103, 104, "name"], [103, 105, "initializer"], [105, 106, "type"], [106, 107, "name"], [105, 108, "dimensions"], [108, 109, "qualifier"], [108, 110, "member"], [0, 111, "body"], [111, 112, "condition"], [112, 113, "operandl"], [113, 114, "qualifier"], [113, 115, "member"], [112, 116, "operator"], [112, 117, "operandr"], [117, 118, "member"], [111, 119, "body"], [119, 120, "statements"], [120, 121, "type"], [121, 122, "name"], [120, 123, "declarators"], [123, 124, "name"], [123, 125, "initializer"], [125, 126, "value"], [119, 127, "statements"], [127, 128, "control"], [128, 129, "init"], [129, 130, "type"], [130, 131, "name"], [129, 132, "declarators"], [132, 133, "name"], [132, 134, "initializer"], [134, 135, "value"], [128, 136, "condition"], [136, 137, "operandl"], [137, 138, "member"], [136, 139, "operator"], [136, 140, "operandr"], [140, 141, "qualifier"], [140, 142, "member"], [128, 143, "update"], [143, 144, "member"], [143, 145, "postfix_operators"], [127, 146, "body"], [146, 147, "statements"], [147, 148, "modifiers"], [147, 149, "type"], [149, 150, "name"], [147, 151, "declarators"], [151, 152, "name"], [151, 153, "initializer"], [153, 154, "qualifier"], [153, 155, "member"], [153, 156, "arguments"], [156, 157, "member"], [146, 158, "statements"], [158, 159, "modifiers"], [158, 160, "type"], [160, 161, "name"], [160, 162, "arguments"], [162, 163, "type"], [163, 164, "name"], [158, 165, "declarators"], [165, 166, "name"], [165, 167, "initializer"], [167, 168, "member"], [167, 169, "arguments"], [169, 170, "member"], [167, 171, "arguments"], [171, 172, "member"], [146, 173, "statements"], [173, 174, "modifiers"], [173, 175, "type"], [175, 176, "name"], [173, 177, "declarators"], [177, 178, "name"], [177, 179, "initializer"], [179, 180, "qualifier"], [179, 181, "member"], [179, 182, "arguments"], [182, 183, "qualifier"], [182, 184, "member"], [146, 185, "statements"], [185, 186, "expression"], [186, 187, "expressionl"], [187, 188, "member"], [186, 189, "type"], [186, 190, "value"], [190, 191, "operandl"], [191, 192, "member"], [190, 193, "operator"], [190, 194, "operandr"], [194, 195, "member"], [146, 196, "statements"], [196, 197, "expression"], [197, 198, "expressionl"], [198, 199, "member"], [198, 200, "selectors"], [200, 201, "index"], [201, 202, "member"], [197, 203, "type"], [197, 204, "value"], [204, 205, "member"], [119, 206, "statements"], [206, 207, "modifiers"], [206, 208, "type"], [208, 209, "name"], [206, 210, "declarators"], [210, 211, "name"], [210, 212, "initializer"], [212, 213, "operandl"], [213, 214, "qualifier"], [213, 215, "member"], [212, 216, "operator"], [212, 217, "operandr"], [217, 218, "member"], [119, 219, "statements"], [219, 220, "control"], [220, 221, "init"], [221, 222, "type"], [222, 223, "name"], [221, 224, "declarators"], [224, 225, "name"], [224, 226, "initializer"], [226, 227, "value"], [220, 228, "condition"], [228, 229, "operandl"], [229, 230, "member"], [228, 231, "operator"], [228, 232, "operandr"], [232, 233, "qualifier"], [232, 234, "member"], [220, 235, "update"], [235, 236, "member"], [235, 237, "postfix_operators"], [219, 238, "body"], [238, 239, "statements"], [239, 240, "condition"], [240, 241, "operandl"], [241, 242, "member"], [241, 243, "selectors"], [243, 244, "index"], [244, 245, "member"], [240, 246, "operator"], [240, 247, "operandr"], [247, 248, "member"], [239, 249, "then_statement"], [249, 250, "statements"], [250, 251, "modifiers"], [250, 252, "type"], [252, 253, "name"], [250, 254, "declarators"], [254, 255, "name"], [254, 256, "initializer"], [256, 257, "qualifier"], [256, 258, "member"], [256, 259, "arguments"], [259, 260, "member"], [249, 261, "statements"], [261, 262, "expression"], [262, 263, "qualifier"], [262, 264, "member"], [262, 265, "arguments"], [265, 266, "type"], [266, 267, "name"], [266, 268, "arguments"], [268, 269, "type"], [269, 270, "name"], [265, 271, "arguments"], [271, 272, "member"], [249, 273, "statements"], [0, 274, "body"], [274, 275, "expression"], [275, 276, "member"]], "rem_roots": [120], "add_roots": []}, {"id": 128, "mappings": {"guess": "VAR_1", "ParameterGuesser": "TYPE_1", "Parametric": "TYPE_2", "Gaussian": "TYPE_3", "fit": "METHOD_1", "getObservations": "METHOD_2"}, "nodes": ["MethodDeclaration", "public", "BasicType", "double", "None", "fit", "LocalVariableDeclaration", "final", "BasicType", "double", "None", "VariableDeclarator", "guess", "ClassCreator", "ReferenceType", "ParameterGuesser", "MethodInvocation", "getObservations", "MethodInvocation", "guess", "ReturnStatement", "MethodInvocation", "fit", "ClassCreator", "ReferenceType", "Gaussian", "ReferenceType", "Parametric", "MemberReference", "guess"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [2, 4, "dimensions"], [0, 5, "name"], [0, 6, "body"], [6, 7, "modifiers"], [6, 8, "type"], [8, 9, "name"], [8, 10, "dimensions"], [6, 11, "declarators"], [11, 12, "name"], [11, 13, "initializer"], [13, 14, "type"], [14, 15, "name"], [13, 16, "arguments"], [16, 17, "member"], [13, 18, "selectors"], [18, 19, "member"], [0, 20, "body"], [20, 21, "expression"], [21, 22, "member"], [21, 23, "arguments"], [23, 24, "type"], [24, 25, "name"], [24, 26, "sub_type"], [26, 27, "name"], [21, 28, "arguments"], [28, 29, "member"]], "rem_roots": [20], "add_roots": []}, {"id": 129, "mappings": {"a": "VAR_1", "b": "VAR_2", "NaN": "VAR_3", "Float": "TYPE_1", "max": "METHOD_1", "isNaN": "METHOD_2"}, "nodes": ["MethodDeclaration", "public static", "BasicType", "float", "max", "FormalParameter", "BasicType", "float", "a", "FormalParameter", "BasicType", "float", "b", "ReturnStatement", "TernaryExpression", "BinaryOperation", "MemberReference", "a", "<=", "MemberReference", "b", "MemberReference", "b", "TernaryExpression", "MethodInvocation", "Float", "isNaN", "BinaryOperation", "MemberReference", "a", "+", "MemberReference", "b", "MemberReference", "Float", "NaN", "MemberReference", "b"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [5, 8, "name"], [0, 9, "parameters"], [9, 10, "type"], [10, 11, "name"], [9, 12, "name"], [0, 13, "body"], [13, 14, "expression"], [14, 15, "condition"], [15, 16, "operandl"], [16, 17, "member"], [15, 18, "operator"], [15, 19, "operandr"], [19, 20, "member"], [14, 21, "if_true"], [21, 22, "member"], [14, 23, "if_false"], [23, 24, "condition"], [24, 25, "qualifier"], [24, 26, "member"], [24, 27, "arguments"], [27, 28, "operandl"], [28, 29, "member"], [27, 30, "operator"], [27, 31, "operandr"], [31, 32, "member"], [23, 33, "if_true"], [33, 34, "qualifier"], [33, 35, "member"], [23, 36, "if_false"], [36, 37, "member"]], "rem_roots": [13], "add_roots": []}, {"id": 130, "mappings": {"x": "VAR_1", "y": "VAR_2", "Double": "TYPE_1", "equals": "METHOD_1", "isNaN": "METHOD_2"}, "nodes": ["MethodDeclaration", "public static", "BasicType", "boolean", "equals", "FormalParameter", "BasicType", "double", "x", "FormalParameter", "BasicType", "double", "y", "ReturnStatement", "BinaryOperation", "BinaryOperation", "MethodInvocation", "Double", "isNaN", "MemberReference", "x", "&&", "MethodInvocation", "Double", "isNaN", "MemberReference", "y", "||", "BinaryOperation", "MemberReference", "x", "==", "MemberReference", "y"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [5, 8, "name"], [0, 9, "parameters"], [9, 10, "type"], [10, 11, "name"], [9, 12, "name"], [0, 13, "body"], [13, 14, "expression"], [14, 15, "operandl"], [15, 16, "operandl"], [16, 17, "qualifier"], [16, 18, "member"], [16, 19, "arguments"], [19, 20, "member"], [15, 21, "operator"], [15, 22, "operandr"], [22, 23, "qualifier"], [22, 24, "member"], [22, 25, "arguments"], [25, 26, "member"], [14, 27, "operator"], [14, 28, "operandr"], [28, 29, "operandl"], [29, 30, "member"], [28, 31, "operator"], [28, 32, "operandr"], [32, 33, "member"]], "rem_roots": [13], "add_roots": []}, {"id": 131, "mappings": {"chiSquare": "VAR_1", "residualsWeights": "VAR_2", "i": "VAR_3", "residual": "VAR_4", "rows": "VAR_5", "residuals": "VAR_6", "getChiSquare": "METHOD_1", "0": "INT_1"}, "nodes": ["MethodDeclaration", "public", "BasicType", "double", "getChiSquare", "LocalVariableDeclaration", "BasicType", "double", "VariableDeclarator", "chiSquare", "Literal", "0", "ForStatement", "ForControl", "VariableDeclaration", "BasicType", "int", "VariableDeclarator", "i", "Literal", "0", "BinaryOperation", "MemberReference", "i", "<", "MemberReference", "rows", "MemberReference", "++", "i", "BlockStatement", "LocalVariableDeclaration", "final", "BasicType", "double", "VariableDeclarator", "residual", "MemberReference", "residuals", "ArraySelector", "MemberReference", "i", "StatementExpression", "Assignment", "MemberReference", "chiSquare", "+=", "BinaryOperation", "BinaryOperation", "MemberReference", "residual", "*", "MemberReference", "residual", "/", "MemberReference", "residualsWeights", "ArraySelector", "MemberReference", "i", "ReturnStatement", "MemberReference", "chiSquare"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "body"], [5, 6, "type"], [6, 7, "name"], [5, 8, "declarators"], [8, 9, "name"], [8, 10, "initializer"], [10, 11, "value"], [0, 12, "body"], [12, 13, "control"], [13, 14, "init"], [14, 15, "type"], [15, 16, "name"], [14, 17, "declarators"], [17, 18, "name"], [17, 19, "initializer"], [19, 20, "value"], [13, 21, "condition"], [21, 22, "operandl"], [22, 23, "member"], [21, 24, "operator"], [21, 25, "operandr"], [25, 26, "member"], [13, 27, "update"], [27, 28, "prefix_operators"], [27, 29, "member"], [12, 30, "body"], [30, 31, "statements"], [31, 32, "modifiers"], [31, 33, "type"], [33, 34, "name"], [31, 35, "declarators"], [35, 36, "name"], [35, 37, "initializer"], [37, 38, "member"], [37, 39, "selectors"], [39, 40, "index"], [40, 41, "member"], [30, 42, "statements"], [42, 43, "expression"], [43, 44, "expressionl"], [44, 45, "member"], [43, 46, "type"], [43, 47, "value"], [47, 48, "operandl"], [48, 49, "operandl"], [49, 50, "member"], [48, 51, "operator"], [48, 52, "operandr"], [52, 53, "member"], [47, 54, "operator"], [47, 55, "operandr"], [55, 56, "member"], [55, 57, "selectors"], [57, 58, "index"], [58, 59, "member"], [0, 60, "body"], [60, 61, "expression"], [61, 62, "member"]], "rem_roots": [42], "add_roots": []}, {"id": 132, "mappings": {"min": "VAR_1", "max": "VAR_2", "initial": "VAR_3", "f": "VAR_4", "UnivariateRealFunction": "TYPE_1", "MaxIterationsExceededException": "TYPE_2", "FunctionEvaluationException": "TYPE_3", "solve": "METHOD_1"}, "nodes": ["MethodDeclaration", "public", "BasicType", "double", "solve", "FormalParameter", "ReferenceType", "UnivariateRealFunction", "f", "FormalParameter", "BasicType", "double", "min", "FormalParameter", "BasicType", "double", "max", "FormalParameter", "BasicType", "double", "initial", "MaxIterationsExceededException", "FunctionEvaluationException", "ReturnStatement", "MethodInvocation", "solve", "MemberReference", "min", "MemberReference", "max"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [5, 8, "name"], [0, 9, "parameters"], [9, 10, "type"], [10, 11, "name"], [9, 12, "name"], [0, 13, "parameters"], [13, 14, "type"], [14, 15, "name"], [13, 16, "name"], [0, 17, "parameters"], [17, 18, "type"], [18, 19, "name"], [17, 20, "name"], [0, 21, "throws"], [0, 22, "throws"], [0, 23, "body"], [23, 24, "expression"], [24, 25, "member"], [24, 26, "arguments"], [26, 27, "member"], [24, 28, "arguments"], [28, 29, "member"]], "rem_roots": [23], "add_roots": []}, {"id": 133, "mappings": {"v": "VAR_1", "Comparable": "TYPE_1", "Object": "TYPE_2", "getPct": "METHOD_1", "getCumPct": "METHOD_2"}, "nodes": ["MethodDeclaration", "public", "BasicType", "double", "getPct", "FormalParameter", "ReferenceType", "Object", "v", "ReturnStatement", "MethodInvocation", "getCumPct", "Cast", "ReferenceType", "Comparable", "TypeArgument", "?", "MemberReference", "v"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [5, 8, "name"], [0, 9, "body"], [9, 10, "expression"], [10, 11, "member"], [10, 12, "arguments"], [12, 13, "type"], [13, 14, "name"], [13, 15, "arguments"], [15, 16, "pattern_type"], [12, 17, "expression"], [17, 18, "member"]], "rem_roots": [9], "add_roots": []}, {"id": 134, "mappings": {"work": "VAR_1", "i": "VAR_2", "j": "VAR_3", "k": "VAR_4", "n": "VAR_5", "pingPong": "VAR_6", "tmp": "VAR_7", "step": "VAR_8", "flipIfWarranted": "METHOD_1", "0": "INT_1", "1": "INT_2", "4": "INT_3", "1.5": "FLOAT_1"}, "nodes": ["MethodDeclaration", "private", "BasicType", "boolean", "flipIfWarranted", "FormalParameter", "BasicType", "int", "n", "FormalParameter", "BasicType", "int", "step", "IfStatement", "BinaryOperation", "BinaryOperation", "Literal", "1.5", "*", "MemberReference", "work", "ArraySelector", "MemberReference", "pingPong", "<", "MemberReference", "work", "ArraySelector", "BinaryOperation", "BinaryOperation", "Literal", "4", "*", "BinaryOperation", "MemberReference", "n", "-", "Literal", "1", "+", "MemberReference", "pingPong", "BlockStatement", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "j", "BinaryOperation", "BinaryOperation", "Literal", "4", "*", "MemberReference", "n", "-", "Literal", "1", "ForStatement", "ForControl", "VariableDeclaration", "BasicType", "int", "VariableDeclarator", "i", "Literal", "0", "BinaryOperation", "MemberReference", "i", "<", "MemberReference", "j", "Assignment", "MemberReference", "i", "+=", "Literal", "4", "BlockStatement", "ForStatement", "ForControl", "VariableDeclaration", "BasicType", "int", "VariableDeclarator", "k", "Literal", "0", "BinaryOperation", "MemberReference", "k", "<", "Literal", "4", "Assignment", "MemberReference", "k", "+=", "MemberReference", "step", "BlockStatement", "LocalVariableDeclaration", "final", "BasicType", "double", "VariableDeclarator", "tmp", "MemberReference", "work", "ArraySelector", "BinaryOperation", "MemberReference", "i", "+", "MemberReference", "k", "StatementExpression", "Assignment", "MemberReference", "work", "ArraySelector", "BinaryOperation", "MemberReference", "i", "+", "MemberReference", "k", "=", "MemberReference", "work", "ArraySelector", "BinaryOperation", "MemberReference", "j", "-", "MemberReference", "k", "StatementExpression", "Assignment", "MemberReference", "work", "ArraySelector", "BinaryOperation", "MemberReference", "j", "-", "MemberReference", "k", "=", "MemberReference", "tmp", "StatementExpression", "Assignment", "MemberReference", "j", "-=", "Literal", "4", "ReturnStatement", "Literal", "true", "ReturnStatement", "Literal", "false"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [5, 8, "name"], [0, 9, "parameters"], [9, 10, "type"], [10, 11, "name"], [9, 12, "name"], [0, 13, "body"], [13, 14, "condition"], [14, 15, "operandl"], [15, 16, "operandl"], [16, 17, "value"], [15, 18, "operator"], [15, 19, "operandr"], [19, 20, "member"], [19, 21, "selectors"], [21, 22, "index"], [22, 23, "member"], [14, 24, "operator"], [14, 25, "operandr"], [25, 26, "member"], [25, 27, "selectors"], [27, 28, "index"], [28, 29, "operandl"], [29, 30, "operandl"], [30, 31, "value"], [29, 32, "operator"], [29, 33, "operandr"], [33, 34, "operandl"], [34, 35, "member"], [33, 36, "operator"], [33, 37, "operandr"], [37, 38, "value"], [28, 39, "operator"], [28, 40, "operandr"], [40, 41, "member"], [13, 42, "then_statement"], [42, 43, "statements"], [43, 44, "type"], [44, 45, "name"], [43, 46, "declarators"], [46, 47, "name"], [46, 48, "initializer"], [48, 49, "operandl"], [49, 50, "operandl"], [50, 51, "value"], [49, 52, "operator"], [49, 53, "operandr"], [53, 54, "member"], [48, 55, "operator"], [48, 56, "operandr"], [56, 57, "value"], [42, 58, "statements"], [58, 59, "control"], [59, 60, "init"], [60, 61, "type"], [61, 62, "name"], [60, 63, "declarators"], [63, 64, "name"], [63, 65, "initializer"], [65, 66, "value"], [59, 67, "condition"], [67, 68, "operandl"], [68, 69, "member"], [67, 70, "operator"], [67, 71, "operandr"], [71, 72, "member"], [59, 73, "update"], [73, 74, "expressionl"], [74, 75, "member"], [73, 76, "type"], [73, 77, "value"], [77, 78, "value"], [58, 79, "body"], [79, 80, "statements"], [80, 81, "control"], [81, 82, "init"], [82, 83, "type"], [83, 84, "name"], [82, 85, "declarators"], [85, 86, "name"], [85, 87, "initializer"], [87, 88, "value"], [81, 89, "condition"], [89, 90, "operandl"], [90, 91, "member"], [89, 92, "operator"], [89, 93, "operandr"], [93, 94, "value"], [81, 95, "update"], [95, 96, "expressionl"], [96, 97, "member"], [95, 98, "type"], [95, 99, "value"], [99, 100, "member"], [80, 101, "body"], [101, 102, "statements"], [102, 103, "modifiers"], [102, 104, "type"], [104, 105, "name"], [102, 106, "declarators"], [106, 107, "name"], [106, 108, "initializer"], [108, 109, "member"], [108, 110, "selectors"], [110, 111, "index"], [111, 112, "operandl"], [112, 113, "member"], [111, 114, "operator"], [111, 115, "operandr"], [115, 116, "member"], [101, 117, "statements"], [117, 118, "expression"], [118, 119, "expressionl"], [119, 120, "member"], [119, 121, "selectors"], [121, 122, "index"], [122, 123, "operandl"], [123, 124, "member"], [122, 125, "operator"], [122, 126, "operandr"], [126, 127, "member"], [118, 128, "type"], [118, 129, "value"], [129, 130, "member"], [129, 131, "selectors"], [131, 132, "index"], [132, 133, "operandl"], [133, 134, "member"], [132, 135, "operator"], [132, 136, "operandr"], [136, 137, "member"], [101, 138, "statements"], [138, 139, "expression"], [139, 140, "expressionl"], [140, 141, "member"], [140, 142, "selectors"], [142, 143, "index"], [143, 144, "operandl"], [144, 145, "member"], [143, 146, "operator"], [143, 147, "operandr"], [147, 148, "member"], [139, 149, "type"], [139, 150, "value"], [150, 151, "member"], [79, 152, "statements"], [152, 153, "expression"], [153, 154, "expressionl"], [154, 155, "member"], [153, 156, "type"], [153, 157, "value"], [157, 158, "value"], [42, 159, "statements"], [159, 160, "expression"], [160, 161, "value"], [0, 162, "body"], [162, 163, "expression"], [163, 164, "value"]], "rem_roots": [43], "add_roots": []}, {"id": 135, "mappings": {"col": "VAR_1", "i": "VAR_2", "minRatioPos": "VAR_3", "MAX_VALUE": "VAR_4", "minRatio": "VAR_5", "Double": "VAR_6", "epsilon": "VAR_7", "entry": "VAR_8", "tableau": "VAR_9", "rhs": "VAR_10", "ratio": "VAR_11", "Integer": "TYPE_1", "SimplexTableau": "TYPE_2", "MathUtils": "TYPE_3", "getWidth": "METHOD_1", "compareTo": "METHOD_2", "getNumObjectiveFunctions": "METHOD_3", "getHeight": "METHOD_4", "getPivotRow": "METHOD_5", "getEntry": "METHOD_6", "0": "INT_1", "1": "INT_2"}, "nodes": ["MethodDeclaration", "private", "ReferenceType", "Integer", "getPivotRow", "FormalParameter", "BasicType", "int", "col", "FormalParameter", "ReferenceType", "SimplexTableau", "tableau", "LocalVariableDeclaration", "BasicType", "double", "VariableDeclarator", "minRatio", "MemberReference", "Double", "MAX_VALUE", "LocalVariableDeclaration", "ReferenceType", "Integer", "VariableDeclarator", "minRatioPos", "Literal", "null", "ForStatement", "ForControl", "VariableDeclaration", "BasicType", "int", "VariableDeclarator", "i", "MethodInvocation", "tableau", "getNumObjectiveFunctions", "BinaryOperation", "MemberReference", "i", "<", "MethodInvocation", "tableau", "getHeight", "MemberReference", "i", "++", "BlockStatement", "LocalVariableDeclaration", "final", "BasicType", "double", "VariableDeclarator", "rhs", "MethodInvocation", "tableau", "getEntry", "MemberReference", "i", "BinaryOperation", "MethodInvocation", "tableau", "getWidth", "-", "Literal", "1", "LocalVariableDeclaration", "final", "BasicType", "double", "VariableDeclarator", "entry", "MethodInvocation", "tableau", "getEntry", "MemberReference", "i", "MemberReference", "col", "IfStatement", "BinaryOperation", "MethodInvocation", "MathUtils", "compareTo", "MemberReference", "entry", "Literal", "0", "MemberReference", "epsilon", ">=", "Literal", "0", "BlockStatement", "LocalVariableDeclaration", "final", "BasicType", "double", "VariableDeclarator", "ratio", "BinaryOperation", "MemberReference", "rhs", "/", "MemberReference", "entry", "IfStatement", "BinaryOperation", "MemberReference", "ratio", "<", "MemberReference", "minRatio", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "minRatio", "=", "MemberReference", "ratio", "StatementExpression", "Assignment", "MemberReference", "minRatioPos", "=", "MemberReference", "i", "ReturnStatement", "MemberReference", "minRatioPos"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [5, 8, "name"], [0, 9, "parameters"], [9, 10, "type"], [10, 11, "name"], [9, 12, "name"], [0, 13, "body"], [13, 14, "type"], [14, 15, "name"], [13, 16, "declarators"], [16, 17, "name"], [16, 18, "initializer"], [18, 19, "qualifier"], [18, 20, "member"], [0, 21, "body"], [21, 22, "type"], [22, 23, "name"], [21, 24, "declarators"], [24, 25, "name"], [24, 26, "initializer"], [26, 27, "value"], [0, 28, "body"], [28, 29, "control"], [29, 30, "init"], [30, 31, "type"], [31, 32, "name"], [30, 33, "declarators"], [33, 34, "name"], [33, 35, "initializer"], [35, 36, "qualifier"], [35, 37, "member"], [29, 38, "condition"], [38, 39, "operandl"], [39, 40, "member"], [38, 41, "operator"], [38, 42, "operandr"], [42, 43, "qualifier"], [42, 44, "member"], [29, 45, "update"], [45, 46, "member"], [45, 47, "postfix_operators"], [28, 48, "body"], [48, 49, "statements"], [49, 50, "modifiers"], [49, 51, "type"], [51, 52, "name"], [49, 53, "declarators"], [53, 54, "name"], [53, 55, "initializer"], [55, 56, "qualifier"], [55, 57, "member"], [55, 58, "arguments"], [58, 59, "member"], [55, 60, "arguments"], [60, 61, "operandl"], [61, 62, "qualifier"], [61, 63, "member"], [60, 64, "operator"], [60, 65, "operandr"], [65, 66, "value"], [48, 67, "statements"], [67, 68, "modifiers"], [67, 69, "type"], [69, 70, "name"], [67, 71, "declarators"], [71, 72, "name"], [71, 73, "initializer"], [73, 74, "qualifier"], [73, 75, "member"], [73, 76, "arguments"], [76, 77, "member"], [73, 78, "arguments"], [78, 79, "member"], [48, 80, "statements"], [80, 81, "condition"], [81, 82, "operandl"], [82, 83, "qualifier"], [82, 84, "member"], [82, 85, "arguments"], [85, 86, "member"], [82, 87, "arguments"], [87, 88, "value"], [82, 89, "arguments"], [89, 90, "member"], [81, 91, "operator"], [81, 92, "operandr"], [92, 93, "value"], [80, 94, "then_statement"], [94, 95, "statements"], [95, 96, "modifiers"], [95, 97, "type"], [97, 98, "name"], [95, 99, "declarators"], [99, 100, "name"], [99, 101, "initializer"], [101, 102, "operandl"], [102, 103, "member"], [101, 104, "operator"], [101, 105, "operandr"], [105, 106, "member"], [94, 107, "statements"], [107, 108, "condition"], [108, 109, "operandl"], [109, 110, "member"], [108, 111, "operator"], [108, 112, "operandr"], [112, 113, "member"], [107, 114, "then_statement"], [114, 115, "statements"], [115, 116, "expression"], [116, 117, "expressionl"], [117, 118, "member"], [116, 119, "type"], [116, 120, "value"], [120, 121, "member"], [114, 122, "statements"], [122, 123, "expression"], [123, 124, "expressionl"], [124, 125, "member"], [123, 126, "type"], [123, 127, "value"], [127, 128, "member"], [0, 129, "body"], [129, 130, "expression"], [130, 131, "member"]], "rem_roots": [81], "add_roots": []}, {"id": 136, "mappings": {"upperBound": "VAR_1", "numIterations": "VAR_2", "function": "VAR_3", "maximumIterations": "VAR_4", "a": "VAR_5", "b": "VAR_6", "initial": "VAR_7", "lowerBound": "VAR_8", "fa": "VAR_9", "fb": "VAR_10", "UnivariateRealFunction": "TYPE_1", "Math": "TYPE_2", "ConvergenceException": "TYPE_3", "MathRuntimeException": "TYPE_4", "FunctionEvaluationException": "TYPE_5", "createIllegalArgumentException": "METHOD_1", "min": "METHOD_2", "bracket": "METHOD_3", "value": "METHOD_4", "max": "METHOD_5", "0": "INT_1", "\"number of iterations={0}, maximum iterations={1}, \"": "STRING_1", "\"function is null\"": "STRING_2", "\"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \"": "STRING_3", "\"invalid bracketing parameters: lower bound={0}, initial={1}, upper bound={2}\"": "STRING_4", "\"bad value for maximum iterations number: {0}\"": "STRING_5", "\"final b value={6}, f(a)={7}, f(b)={8}\"": "STRING_6", "0.0": "FLOAT_1", "1.0": "FLOAT_2"}, "nodes": ["MethodDeclaration", "public static", "BasicType", "double", "None", "bracket", "FormalParameter", "ReferenceType", "UnivariateRealFunction", "function", "FormalParameter", "BasicType", "double", "initial", "FormalParameter", "BasicType", "double", "lowerBound", "FormalParameter", "BasicType", "double", "upperBound", "FormalParameter", "BasicType", "int", "maximumIterations", "ConvergenceException", "FunctionEvaluationException", "IfStatement", "BinaryOperation", "MemberReference", "function", "==", "Literal", "null", "BlockStatement", "ThrowStatement", "MethodInvocation", "MathRuntimeException", "createIllegalArgumentException", "Literal", "\"function is null\"", "IfStatement", "BinaryOperation", "MemberReference", "maximumIterations", "<=", "Literal", "0", "BlockStatement", "ThrowStatement", "MethodInvocation", "MathRuntimeException", "createIllegalArgumentException", "Literal", "\"bad value for maximum iterations number: {0}\"", "MemberReference", "maximumIterations", "IfStatement", "BinaryOperation", "BinaryOperation", "BinaryOperation", "MemberReference", "initial", "<", "MemberReference", "lowerBound", "||", "BinaryOperation", "MemberReference", "initial", ">", "MemberReference", "upperBound", "||", "BinaryOperation", "MemberReference", "lowerBound", ">=", "MemberReference", "upperBound", "BlockStatement", "ThrowStatement", "MethodInvocation", "MathRuntimeException", "createIllegalArgumentException", "Literal", "\"invalid bracketing parameters: lower bound={0}, initial={1}, upper bound={2}\"", "MemberReference", "lowerBound", "MemberReference", "initial", "MemberReference", "upperBound", "LocalVariableDeclaration", "BasicType", "double", "VariableDeclarator", "a", "MemberReference", "initial", "LocalVariableDeclaration", "BasicType", "double", "VariableDeclarator", "b", "MemberReference", "initial", "LocalVariableDeclaration", "BasicType", "double", "VariableDeclarator", "fa", "LocalVariableDeclaration", "BasicType", "double", "VariableDeclarator", "fb", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "numIterations", "Literal", "0", "DoStatement", "BinaryOperation", "BinaryOperation", "BinaryOperation", "BinaryOperation", "MemberReference", "fa", "*", "MemberReference", "fb", ">", "Literal", "0.0", "&&", "BinaryOperation", "MemberReference", "numIterations", "<", "MemberReference", "maximumIterations", "&&", "BinaryOperation", "BinaryOperation", "MemberReference", "a", ">", "MemberReference", "lowerBound", "||", "BinaryOperation", "MemberReference", "b", "<", "MemberReference", "upperBound", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "a", "=", "MethodInvocation", "Math", "max", "BinaryOperation", "MemberReference", "a", "-", "Literal", "1.0", "MemberReference", "lowerBound", "StatementExpression", "Assignment", "MemberReference", "b", "=", "MethodInvocation", "Math", "min", "BinaryOperation", "MemberReference", "b", "+", "Literal", "1.0", "MemberReference", "upperBound", "StatementExpression", "Assignment", "MemberReference", "fa", "=", "MethodInvocation", "function", "value", "MemberReference", "a", "StatementExpression", "Assignment", "MemberReference", "fb", "=", "MethodInvocation", "function", "value", "MemberReference", "b", "StatementExpression", "MemberReference", "numIterations", "++", "IfStatement", "BinaryOperation", "BinaryOperation", "MemberReference", "fa", "*", "MemberReference", "fb", ">=", "Literal", "0.0", "BlockStatement", "ThrowStatement", "ClassCreator", "ReferenceType", "ConvergenceException", "BinaryOperation", "BinaryOperation", "Literal", "\"number of iterations={0}, maximum iterations={1}, \"", "+", "Literal", "\"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \"", "+", "Literal", "\"final b value={6}, f(a)={7}, f(b)={8}\"", "MemberReference", "numIterations", "MemberReference", "maximumIterations", "MemberReference", "initial", "MemberReference", "lowerBound", "MemberReference", "upperBound", "MemberReference", "a", "MemberReference", "b", "MemberReference", "fa", "MemberReference", "fb", "ReturnStatement", "ArrayCreator", "BasicType", "double", "None", "ArrayInitializer", "MemberReference", "a", "MemberReference", "b"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [2, 4, "dimensions"], [0, 5, "name"], [0, 6, "parameters"], [6, 7, "type"], [7, 8, "name"], [6, 9, "name"], [0, 10, "parameters"], [10, 11, "type"], [11, 12, "name"], [10, 13, "name"], [0, 14, "parameters"], [14, 15, "type"], [15, 16, "name"], [14, 17, "name"], [0, 18, "parameters"], [18, 19, "type"], [19, 20, "name"], [18, 21, "name"], [0, 22, "parameters"], [22, 23, "type"], [23, 24, "name"], [22, 25, "name"], [0, 26, "throws"], [0, 27, "throws"], [0, 28, "body"], [28, 29, "condition"], [29, 30, "operandl"], [30, 31, "member"], [29, 32, "operator"], [29, 33, "operandr"], [33, 34, "value"], [28, 35, "then_statement"], [35, 36, "statements"], [36, 37, "expression"], [37, 38, "qualifier"], [37, 39, "member"], [37, 40, "arguments"], [40, 41, "value"], [0, 42, "body"], [42, 43, "condition"], [43, 44, "operandl"], [44, 45, "member"], [43, 46, "operator"], [43, 47, "operandr"], [47, 48, "value"], [42, 49, "then_statement"], [49, 50, "statements"], [50, 51, "expression"], [51, 52, "qualifier"], [51, 53, "member"], [51, 54, "arguments"], [54, 55, "value"], [51, 56, "arguments"], [56, 57, "member"], [0, 58, "body"], [58, 59, "condition"], [59, 60, "operandl"], [60, 61, "operandl"], [61, 62, "operandl"], [62, 63, "member"], [61, 64, "operator"], [61, 65, "operandr"], [65, 66, "member"], [60, 67, "operator"], [60, 68, "operandr"], [68, 69, "operandl"], [69, 70, "member"], [68, 71, "operator"], [68, 72, "operandr"], [72, 73, "member"], [59, 74, "operator"], [59, 75, "operandr"], [75, 76, "operandl"], [76, 77, "member"], [75, 78, "operator"], [75, 79, "operandr"], [79, 80, "member"], [58, 81, "then_statement"], [81, 82, "statements"], [82, 83, "expression"], [83, 84, "qualifier"], [83, 85, "member"], [83, 86, "arguments"], [86, 87, "value"], [83, 88, "arguments"], [88, 89, "member"], [83, 90, "arguments"], [90, 91, "member"], [83, 92, "arguments"], [92, 93, "member"], [0, 94, "body"], [94, 95, "type"], [95, 96, "name"], [94, 97, "declarators"], [97, 98, "name"], [97, 99, "initializer"], [99, 100, "member"], [0, 101, "body"], [101, 102, "type"], [102, 103, "name"], [101, 104, "declarators"], [104, 105, "name"], [104, 106, "initializer"], [106, 107, "member"], [0, 108, "body"], [108, 109, "type"], [109, 110, "name"], [108, 111, "declarators"], [111, 112, "name"], [0, 113, "body"], [113, 114, "type"], [114, 115, "name"], [113, 116, "declarators"], [116, 117, "name"], [0, 118, "body"], [118, 119, "type"], [119, 120, "name"], [118, 121, "declarators"], [121, 122, "name"], [121, 123, "initializer"], [123, 124, "value"], [0, 125, "body"], [125, 126, "condition"], [126, 127, "operandl"], [127, 128, "operandl"], [128, 129, "operandl"], [129, 130, "operandl"], [130, 131, "member"], [129, 132, "operator"], [129, 133, "operandr"], [133, 134, "member"], [128, 135, "operator"], [128, 136, "operandr"], [136, 137, "value"], [127, 138, "operator"], [127, 139, "operandr"], [139, 140, "operandl"], [140, 141, "member"], [139, 142, "operator"], [139, 143, "operandr"], [143, 144, "member"], [126, 145, "operator"], [126, 146, "operandr"], [146, 147, "operandl"], [147, 148, "operandl"], [148, 149, "member"], [147, 150, "operator"], [147, 151, "operandr"], [151, 152, "member"], [146, 153, "operator"], [146, 154, "operandr"], [154, 155, "operandl"], [155, 156, "member"], [154, 157, "operator"], [154, 158, "operandr"], [158, 159, "member"], [125, 160, "body"], [160, 161, "statements"], [161, 162, "expression"], [162, 163, "expressionl"], [163, 164, "member"], [162, 165, "type"], [162, 166, "value"], [166, 167, "qualifier"], [166, 168, "member"], [166, 169, "arguments"], [169, 170, "operandl"], [170, 171, "member"], [169, 172, "operator"], [169, 173, "operandr"], [173, 174, "value"], [166, 175, "arguments"], [175, 176, "member"], [160, 177, "statements"], [177, 178, "expression"], [178, 179, "expressionl"], [179, 180, "member"], [178, 181, "type"], [178, 182, "value"], [182, 183, "qualifier"], [182, 184, "member"], [182, 185, "arguments"], [185, 186, "operandl"], [186, 187, "member"], [185, 188, "operator"], [185, 189, "operandr"], [189, 190, "value"], [182, 191, "arguments"], [191, 192, "member"], [160, 193, "statements"], [193, 194, "expression"], [194, 195, "expressionl"], [195, 196, "member"], [194, 197, "type"], [194, 198, "value"], [198, 199, "qualifier"], [198, 200, "member"], [198, 201, "arguments"], [201, 202, "member"], [160, 203, "statements"], [203, 204, "expression"], [204, 205, "expressionl"], [205, 206, "member"], [204, 207, "type"], [204, 208, "value"], [208, 209, "qualifier"], [208, 210, "member"], [208, 211, "arguments"], [211, 212, "member"], [160, 213, "statements"], [213, 214, "expression"], [214, 215, "member"], [214, 216, "postfix_operators"], [0, 217, "body"], [217, 218, "condition"], [218, 219, "operandl"], [219, 220, "operandl"], [220, 221, "member"], [219, 222, "operator"], [219, 223, "operandr"], [223, 224, "member"], [218, 225, "operator"], [218, 226, "operandr"], [226, 227, "value"], [217, 228, "then_statement"], [228, 229, "statements"], [229, 230, "expression"], [230, 231, "type"], [231, 232, "name"], [230, 233, "arguments"], [233, 234, "operandl"], [234, 235, "operandl"], [235, 236, "value"], [234, 237, "operator"], [234, 238, "operandr"], [238, 239, "value"], [233, 240, "operator"], [233, 241, "operandr"], [241, 242, "value"], [230, 243, "arguments"], [243, 244, "member"], [230, 245, "arguments"], [245, 246, "member"], [230, 247, "arguments"], [247, 248, "member"], [230, 249, "arguments"], [249, 250, "member"], [230, 251, "arguments"], [251, 252, "member"], [230, 253, "arguments"], [253, 254, "member"], [230, 255, "arguments"], [255, 256, "member"], [230, 257, "arguments"], [257, 258, "member"], [230, 259, "arguments"], [259, 260, "member"], [0, 261, "body"], [261, 262, "expression"], [262, 263, "type"], [263, 264, "name"], [262, 265, "dimensions"], [262, 266, "initializer"], [266, 267, "initializers"], [267, 268, "member"], [266, 269, "initializers"], [269, 270, "member"]], "rem_roots": [218], "add_roots": []}, {"id": 137, "mappings": {"k": "VAR_1", "t": "VAR_2", "u": "VAR_3", "v": "VAR_4", "Math": "TYPE_1", "ArithmeticException": "TYPE_2", "gcd": "METHOD_1", "abs": "METHOD_2", "0": "INT_1", "1": "INT_2", "2": "INT_3", "31": "INT_4", "\"overflow: gcd is 2^31\"": "STRING_1"}, "nodes": ["MethodDeclaration", "public static", "BasicType", "int", "gcd", "FormalParameter", "BasicType", "int", "u", "FormalParameter", "BasicType", "int", "v", "IfStatement", "BinaryOperation", "BinaryOperation", "MemberReference", "u", "*", "MemberReference", "v", "==", "Literal", "0", "BlockStatement", "ReturnStatement", "BinaryOperation", "MethodInvocation", "Math", "abs", "MemberReference", "u", "+", "MethodInvocation", "Math", "abs", "MemberReference", "v", "IfStatement", "BinaryOperation", "MemberReference", "u", ">", "Literal", "0", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "u", "=", "MemberReference", "-", "u", "IfStatement", "BinaryOperation", "MemberReference", "v", ">", "Literal", "0", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "v", "=", "MemberReference", "-", "v", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "k", "Literal", "0", "WhileStatement", "BinaryOperation", "BinaryOperation", "BinaryOperation", "BinaryOperation", "MemberReference", "u", "&", "Literal", "1", "==", "Literal", "0", "&&", "BinaryOperation", "BinaryOperation", "MemberReference", "v", "&", "Literal", "1", "==", "Literal", "0", "&&", "BinaryOperation", "MemberReference", "k", "<", "Literal", "31", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "u", "/=", "Literal", "2", "StatementExpression", "Assignment", "MemberReference", "v", "/=", "Literal", "2", "StatementExpression", "MemberReference", "k", "++", "IfStatement", "BinaryOperation", "MemberReference", "k", "==", "Literal", "31", "BlockStatement", "ThrowStatement", "ClassCreator", "ReferenceType", "ArithmeticException", "Literal", "\"overflow: gcd is 2^31\"", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "t", "TernaryExpression", "BinaryOperation", "BinaryOperation", "MemberReference", "u", "&", "Literal", "1", "==", "Literal", "1", "MemberReference", "v", "BinaryOperation", "-", "MemberReference", "u", "/", "Literal", "2", "DoStatement", "BinaryOperation", "MemberReference", "t", "!=", "Literal", "0", "BlockStatement", "WhileStatement", "BinaryOperation", "BinaryOperation", "MemberReference", "t", "&", "Literal", "1", "==", "Literal", "0", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "t", "/=", "Literal", "2", "IfStatement", "BinaryOperation", "MemberReference", "t", ">", "Literal", "0", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "u", "=", "MemberReference", "-", "t", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "v", "=", "MemberReference", "t", "StatementExpression", "Assignment", "MemberReference", "t", "=", "BinaryOperation", "BinaryOperation", "MemberReference", "v", "-", "MemberReference", "u", "/", "Literal", "2", "ReturnStatement", "BinaryOperation", "MemberReference", "-", "u", "*", "BinaryOperation", "Literal", "1", "<<", "MemberReference", "k"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [5, 8, "name"], [0, 9, "parameters"], [9, 10, "type"], [10, 11, "name"], [9, 12, "name"], [0, 13, "body"], [13, 14, "condition"], [14, 15, "operandl"], [15, 16, "operandl"], [16, 17, "member"], [15, 18, "operator"], [15, 19, "operandr"], [19, 20, "member"], [14, 21, "operator"], [14, 22, "operandr"], [22, 23, "value"], [13, 24, "then_statement"], [24, 25, "statements"], [25, 26, "expression"], [26, 27, "operandl"], [27, 28, "qualifier"], [27, 29, "member"], [27, 30, "arguments"], [30, 31, "member"], [26, 32, "operator"], [26, 33, "operandr"], [33, 34, "qualifier"], [33, 35, "member"], [33, 36, "arguments"], [36, 37, "member"], [0, 38, "body"], [38, 39, "condition"], [39, 40, "operandl"], [40, 41, "member"], [39, 42, "operator"], [39, 43, "operandr"], [43, 44, "value"], [38, 45, "then_statement"], [45, 46, "statements"], [46, 47, "expression"], [47, 48, "expressionl"], [48, 49, "member"], [47, 50, "type"], [47, 51, "value"], [51, 52, "prefix_operators"], [51, 53, "member"], [0, 54, "body"], [54, 55, "condition"], [55, 56, "operandl"], [56, 57, "member"], [55, 58, "operator"], [55, 59, "operandr"], [59, 60, "value"], [54, 61, "then_statement"], [61, 62, "statements"], [62, 63, "expression"], [63, 64, "expressionl"], [64, 65, "member"], [63, 66, "type"], [63, 67, "value"], [67, 68, "prefix_operators"], [67, 69, "member"], [0, 70, "body"], [70, 71, "type"], [71, 72, "name"], [70, 73, "declarators"], [73, 74, "name"], [73, 75, "initializer"], [75, 76, "value"], [0, 77, "body"], [77, 78, "condition"], [78, 79, "operandl"], [79, 80, "operandl"], [80, 81, "operandl"], [81, 82, "operandl"], [82, 83, "member"], [81, 84, "operator"], [81, 85, "operandr"], [85, 86, "value"], [80, 87, "operator"], [80, 88, "operandr"], [88, 89, "value"], [79, 90, "operator"], [79, 91, "operandr"], [91, 92, "operandl"], [92, 93, "operandl"], [93, 94, "member"], [92, 95, "operator"], [92, 96, "operandr"], [96, 97, "value"], [91, 98, "operator"], [91, 99, "operandr"], [99, 100, "value"], [78, 101, "operator"], [78, 102, "operandr"], [102, 103, "operandl"], [103, 104, "member"], [102, 105, "operator"], [102, 106, "operandr"], [106, 107, "value"], [77, 108, "body"], [108, 109, "statements"], [109, 110, "expression"], [110, 111, "expressionl"], [111, 112, "member"], [110, 113, "type"], [110, 114, "value"], [114, 115, "value"], [108, 116, "statements"], [116, 117, "expression"], [117, 118, "expressionl"], [118, 119, "member"], [117, 120, "type"], [117, 121, "value"], [121, 122, "value"], [108, 123, "statements"], [123, 124, "expression"], [124, 125, "member"], [124, 126, "postfix_operators"], [0, 127, "body"], [127, 128, "condition"], [128, 129, "operandl"], [129, 130, "member"], [128, 131, "operator"], [128, 132, "operandr"], [132, 133, "value"], [127, 134, "then_statement"], [134, 135, "statements"], [135, 136, "expression"], [136, 137, "type"], [137, 138, "name"], [136, 139, "arguments"], [139, 140, "value"], [0, 141, "body"], [141, 142, "type"], [142, 143, "name"], [141, 144, "declarators"], [144, 145, "name"], [144, 146, "initializer"], [146, 147, "condition"], [147, 148, "operandl"], [148, 149, "operandl"], [149, 150, "member"], [148, 151, "operator"], [148, 152, "operandr"], [152, 153, "value"], [147, 154, "operator"], [147, 155, "operandr"], [155, 156, "value"], [146, 157, "if_true"], [157, 158, "member"], [146, 159, "if_false"], [159, 160, "prefix_operators"], [159, 161, "operandl"], [161, 162, "member"], [159, 163, "operator"], [159, 164, "operandr"], [164, 165, "value"], [0, 166, "body"], [166, 167, "condition"], [167, 168, "operandl"], [168, 169, "member"], [167, 170, "operator"], [167, 171, "operandr"], [171, 172, "value"], [166, 173, "body"], [173, 174, "statements"], [174, 175, "condition"], [175, 176, "operandl"], [176, 177, "operandl"], [177, 178, "member"], [176, 179, "operator"], [176, 180, "operandr"], [180, 181, "value"], [175, 182, "operator"], [175, 183, "operandr"], [183, 184, "value"], [174, 185, "body"], [185, 186, "statements"], [186, 187, "expression"], [187, 188, "expressionl"], [188, 189, "member"], [187, 190, "type"], [187, 191, "value"], [191, 192, "value"], [173, 193, "statements"], [193, 194, "condition"], [194, 195, "operandl"], [195, 196, "member"], [194, 197, "operator"], [194, 198, "operandr"], [198, 199, "value"], [193, 200, "then_statement"], [200, 201, "statements"], [201, 202, "expression"], [202, 203, "expressionl"], [203, 204, "member"], [202, 205, "type"], [202, 206, "value"], [206, 207, "prefix_operators"], [206, 208, "member"], [193, 209, "else_statement"], [209, 210, "statements"], [210, 211, "expression"], [211, 212, "expressionl"], [212, 213, "member"], [211, 214, "type"], [211, 215, "value"], [215, 216, "member"], [173, 217, "statements"], [217, 218, "expression"], [218, 219, "expressionl"], [219, 220, "member"], [218, 221, "type"], [218, 222, "value"], [222, 223, "operandl"], [223, 224, "operandl"], [224, 225, "member"], [223, 226, "operator"], [223, 227, "operandr"], [227, 228, "member"], [222, 229, "operator"], [222, 230, "operandr"], [230, 231, "value"], [0, 232, "body"], [232, 233, "expression"], [233, 234, "operandl"], [234, 235, "prefix_operators"], [234, 236, "member"], [233, 237, "operator"], [233, 238, "operandr"], [238, 239, "operandl"], [239, 240, "value"], [238, 241, "operator"], [238, 242, "operandr"], [242, 243, "member"]], "rem_roots": [14], "add_roots": []}, {"id": 138, "mappings": {"ZERO": "VAR_1", "data": "VAR_2", "length": "VAR_3", "i": "VAR_4", "sum": "VAR_5", "nCols": "VAR_6", "out": "VAR_7", "nRows": "VAR_8", "v": "VAR_9", "row": "VAR_10", "BigDecimal": "TYPE_1", "IllegalArgumentException": "TYPE_2", "add": "METHOD_1", "getColumnDimension": "METHOD_2", "getRowDimension": "METHOD_3", "operate": "METHOD_4", "multiply": "METHOD_5", "0": "INT_1", "\"vector has wrong length\"": "STRING_1"}, "nodes": ["MethodDeclaration", "public", "ReferenceType", "BigDecimal", "None", "operate", "FormalParameter", "ReferenceType", "BigDecimal", "None", "v", "IllegalArgumentException", "IfStatement", "BinaryOperation", "MemberReference", "v", "length", "!=", "This", "MethodInvocation", "getColumnDimension", "BlockStatement", "ThrowStatement", "ClassCreator", "ReferenceType", "IllegalArgumentException", "Literal", "\"vector has wrong length\"", "LocalVariableDeclaration", "final", "BasicType", "int", "VariableDeclarator", "nRows", "This", "MethodInvocation", "getRowDimension", "LocalVariableDeclaration", "final", "BasicType", "int", "VariableDeclarator", "nCols", "This", "MethodInvocation", "getColumnDimension", "LocalVariableDeclaration", "final", "ReferenceType", "BigDecimal", "None", "VariableDeclarator", "out", "ArrayCreator", "ReferenceType", "BigDecimal", "MemberReference", "v", "length", "ForStatement", "ForControl", "VariableDeclaration", "BasicType", "int", "VariableDeclarator", "row", "Literal", "0", "BinaryOperation", "MemberReference", "row", "<", "MemberReference", "nRows", "MemberReference", "row", "++", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "BigDecimal", "VariableDeclarator", "sum", "MemberReference", "ZERO", "ForStatement", "ForControl", "VariableDeclaration", "BasicType", "int", "VariableDeclarator", "i", "Literal", "0", "BinaryOperation", "MemberReference", "i", "<", "MemberReference", "nCols", "MemberReference", "i", "++", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "sum", "=", "MethodInvocation", "sum", "add", "MemberReference", "data", "ArraySelector", "MemberReference", "row", "ArraySelector", "MemberReference", "i", "MethodInvocation", "multiply", "MemberReference", "v", "ArraySelector", "MemberReference", "i", "StatementExpression", "Assignment", "MemberReference", "out", "ArraySelector", "MemberReference", "row", "=", "MemberReference", "sum", "ReturnStatement", "MemberReference", "out"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [2, 4, "dimensions"], [0, 5, "name"], [0, 6, "parameters"], [6, 7, "type"], [7, 8, "name"], [7, 9, "dimensions"], [6, 10, "name"], [0, 11, "throws"], [0, 12, "body"], [12, 13, "condition"], [13, 14, "operandl"], [14, 15, "qualifier"], [14, 16, "member"], [13, 17, "operator"], [13, 18, "operandr"], [18, 19, "selectors"], [19, 20, "member"], [12, 21, "then_statement"], [21, 22, "statements"], [22, 23, "expression"], [23, 24, "type"], [24, 25, "name"], [23, 26, "arguments"], [26, 27, "value"], [0, 28, "body"], [28, 29, "modifiers"], [28, 30, "type"], [30, 31, "name"], [28, 32, "declarators"], [32, 33, "name"], [32, 34, "initializer"], [34, 35, "selectors"], [35, 36, "member"], [0, 37, "body"], [37, 38, "modifiers"], [37, 39, "type"], [39, 40, "name"], [37, 41, "declarators"], [41, 42, "name"], [41, 43, "initializer"], [43, 44, "selectors"], [44, 45, "member"], [0, 46, "body"], [46, 47, "modifiers"], [46, 48, "type"], [48, 49, "name"], [48, 50, "dimensions"], [46, 51, "declarators"], [51, 52, "name"], [51, 53, "initializer"], [53, 54, "type"], [54, 55, "name"], [53, 56, "dimensions"], [56, 57, "qualifier"], [56, 58, "member"], [0, 59, "body"], [59, 60, "control"], [60, 61, "init"], [61, 62, "type"], [62, 63, "name"], [61, 64, "declarators"], [64, 65, "name"], [64, 66, "initializer"], [66, 67, "value"], [60, 68, "condition"], [68, 69, "operandl"], [69, 70, "member"], [68, 71, "operator"], [68, 72, "operandr"], [72, 73, "member"], [60, 74, "update"], [74, 75, "member"], [74, 76, "postfix_operators"], [59, 77, "body"], [77, 78, "statements"], [78, 79, "type"], [79, 80, "name"], [78, 81, "declarators"], [81, 82, "name"], [81, 83, "initializer"], [83, 84, "member"], [77, 85, "statements"], [85, 86, "control"], [86, 87, "init"], [87, 88, "type"], [88, 89, "name"], [87, 90, "declarators"], [90, 91, "name"], [90, 92, "initializer"], [92, 93, "value"], [86, 94, "condition"], [94, 95, "operandl"], [95, 96, "member"], [94, 97, "operator"], [94, 98, "operandr"], [98, 99, "member"], [86, 100, "update"], [100, 101, "member"], [100, 102, "postfix_operators"], [85, 103, "body"], [103, 104, "statements"], [104, 105, "expression"], [105, 106, "expressionl"], [106, 107, "member"], [105, 108, "type"], [105, 109, "value"], [109, 110, "qualifier"], [109, 111, "member"], [109, 112, "arguments"], [112, 113, "member"], [112, 114, "selectors"], [114, 115, "index"], [115, 116, "member"], [112, 117, "selectors"], [117, 118, "index"], [118, 119, "member"], [112, 120, "selectors"], [120, 121, "member"], [120, 122, "arguments"], [122, 123, "member"], [122, 124, "selectors"], [124, 125, "index"], [125, 126, "member"], [77, 127, "statements"], [127, 128, "expression"], [128, 129, "expressionl"], [129, 130, "member"], [129, 131, "selectors"], [131, 132, "index"], [132, 133, "member"], [128, 134, "type"], [128, 135, "value"], [135, 136, "member"], [0, 137, "body"], [137, 138, "expression"], [138, 139, "member"]], "rem_roots": [46], "add_roots": []}, {"id": 139, "mappings": {"o1": "VAR_1", "o2": "VAR_2", "Object": "TYPE_1", "areEqual": "METHOD_1", "equals": "METHOD_2", "isArray": "METHOD_3", "areArraysEqual": "METHOD_4"}, "nodes": ["MethodDeclaration", "public static", "BasicType", "boolean", "areEqual", "FormalParameter", "ReferenceType", "Object", "o1", "FormalParameter", "ReferenceType", "Object", "o2", "IfStatement", "BinaryOperation", "BinaryOperation", "MemberReference", "o1", "==", "Literal", "null", "||", "BinaryOperation", "MemberReference", "o2", "==", "Literal", "null", "BlockStatement", "ReturnStatement", "BinaryOperation", "BinaryOperation", "MemberReference", "o1", "==", "Literal", "null", "&&", "BinaryOperation", "MemberReference", "o2", "==", "Literal", "null", "IfStatement", "MethodInvocation", "isArray", "MemberReference", "o1", "BlockStatement", "ReturnStatement", "BinaryOperation", "MethodInvocation", "isArray", "MemberReference", "o2", "&&", "MethodInvocation", "areArraysEqual", "MemberReference", "o1", "MemberReference", "o2", "BlockStatement", "ReturnStatement", "MethodInvocation", "o1", "equals", "MemberReference", "o2"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [5, 8, "name"], [0, 9, "parameters"], [9, 10, "type"], [10, 11, "name"], [9, 12, "name"], [0, 13, "body"], [13, 14, "condition"], [14, 15, "operandl"], [15, 16, "operandl"], [16, 17, "member"], [15, 18, "operator"], [15, 19, "operandr"], [19, 20, "value"], [14, 21, "operator"], [14, 22, "operandr"], [22, 23, "operandl"], [23, 24, "member"], [22, 25, "operator"], [22, 26, "operandr"], [26, 27, "value"], [13, 28, "then_statement"], [28, 29, "statements"], [29, 30, "expression"], [30, 31, "operandl"], [31, 32, "operandl"], [32, 33, "member"], [31, 34, "operator"], [31, 35, "operandr"], [35, 36, "value"], [30, 37, "operator"], [30, 38, "operandr"], [38, 39, "operandl"], [39, 40, "member"], [38, 41, "operator"], [38, 42, "operandr"], [42, 43, "value"], [13, 44, "else_statement"], [44, 45, "condition"], [45, 46, "member"], [45, 47, "arguments"], [47, 48, "member"], [44, 49, "then_statement"], [49, 50, "statements"], [50, 51, "expression"], [51, 52, "operandl"], [52, 53, "member"], [52, 54, "arguments"], [54, 55, "member"], [51, 56, "operator"], [51, 57, "operandr"], [57, 58, "member"], [57, 59, "arguments"], [59, 60, "member"], [57, 61, "arguments"], [61, 62, "member"], [44, 63, "else_statement"], [63, 64, "statements"], [64, 65, "expression"], [65, 66, "qualifier"], [65, 67, "member"], [65, 68, "arguments"], [68, 69, "member"]], "rem_roots": [14], "add_roots": []}, {"id": 140, "mappings": {"wanted": "VAR_1", "description": "VAR_2", "Description": "TYPE_1", "describeTo": "METHOD_1", "appendQuoting": "METHOD_2", "toString": "METHOD_3", "appendText": "METHOD_4", "\"same(\"": "STRING_1", "\")\"": "STRING_2"}, "nodes": ["MethodDeclaration", "public", "void", "describeTo", "FormalParameter", "ReferenceType", "Description", "description", "StatementExpression", "MethodInvocation", "description", "appendText", "Literal", "\"same(\"", "StatementExpression", "MethodInvocation", "appendQuoting", "MemberReference", "description", "StatementExpression", "MethodInvocation", "description", "appendText", "MethodInvocation", "wanted", "toString", "StatementExpression", "MethodInvocation", "appendQuoting", "MemberReference", "description", "StatementExpression", "MethodInvocation", "description", "appendText", "Literal", "\")\""], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [0, 3, "name"], [0, 4, "parameters"], [4, 5, "type"], [5, 6, "name"], [4, 7, "name"], [0, 8, "body"], [8, 9, "expression"], [9, 10, "qualifier"], [9, 11, "member"], [9, 12, "arguments"], [12, 13, "value"], [0, 14, "body"], [14, 15, "expression"], [15, 16, "member"], [15, 17, "arguments"], [17, 18, "member"], [0, 19, "body"], [19, 20, "expression"], [20, 21, "qualifier"], [20, 22, "member"], [20, 23, "arguments"], [23, 24, "qualifier"], [23, 25, "member"], [0, 26, "body"], [26, 27, "expression"], [27, 28, "member"], [27, 29, "arguments"], [29, 30, "member"], [0, 31, "body"], [31, 32, "expression"], [32, 33, "qualifier"], [32, 34, "member"], [32, 35, "arguments"], [35, 36, "value"]], "rem_roots": [19], "add_roots": []}, {"id": 141, "mappings": {"arg": "VAR_1", "m": "VAR_2", "Matcher": "TYPE_1", "StringDescription": "TYPE_2", "Object": "TYPE_3", "toStringEquals": "METHOD_1", "equals": "METHOD_2", "toString": "METHOD_3"}, "nodes": ["MethodDeclaration", "private", "BasicType", "boolean", "toStringEquals", "FormalParameter", "ReferenceType", "Matcher", "m", "FormalParameter", "ReferenceType", "Object", "arg", "ReturnStatement", "MethodInvocation", "StringDescription", "toString", "MemberReference", "m", "MethodInvocation", "equals", "MethodInvocation", "arg", "toString"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [5, 8, "name"], [0, 9, "parameters"], [9, 10, "type"], [10, 11, "name"], [9, 12, "name"], [0, 13, "body"], [13, 14, "expression"], [14, 15, "qualifier"], [14, 16, "member"], [14, 17, "arguments"], [17, 18, "member"], [14, 19, "selectors"], [19, 20, "member"], [19, 21, "arguments"], [21, 22, "qualifier"], [21, 23, "member"]], "rem_roots": [13], "add_roots": []}, {"id": 142, "mappings": {"data": "VAR_1", "e": "VAR_2", "error": "VAR_3", "returnOnSuccess": "VAR_4", "delegate": "VAR_5", "timer": "VAR_6", "MockitoAssertionError": "TYPE_1", "VerificationData": "TYPE_2", "AssertionError": "TYPE_3", "start": "METHOD_1", "handleVerifyException": "METHOD_2", "isCounting": "METHOD_3", "verify": "METHOD_4"}, "nodes": ["MethodDeclaration", "public", "void", "verify", "FormalParameter", "ReferenceType", "VerificationData", "data", "LocalVariableDeclaration", "ReferenceType", "AssertionError", "VariableDeclarator", "error", "Literal", "null", "StatementExpression", "MethodInvocation", "timer", "start", "WhileStatement", "MethodInvocation", "timer", "isCounting", "BlockStatement", "TryStatement", "StatementExpression", "MethodInvocation", "delegate", "verify", "MemberReference", "data", "IfStatement", "MemberReference", "returnOnSuccess", "BlockStatement", "ReturnStatement", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "error", "=", "Literal", "null", "CatchClause", "CatchClauseParameter", "MockitoAssertionError", "e", "StatementExpression", "Assignment", "MemberReference", "error", "=", "MethodInvocation", "handleVerifyException", "MemberReference", "e", "CatchClause", "CatchClauseParameter", "org.mockito.exceptions.verification.junit.ArgumentsAreDifferent", "e", "StatementExpression", "Assignment", "MemberReference", "error", "=", "MethodInvocation", "handleVerifyException", "MemberReference", "e", "IfStatement", "BinaryOperation", "MemberReference", "error", "!=", "Literal", "null", "BlockStatement", "ThrowStatement", "MemberReference", "error"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [0, 3, "name"], [0, 4, "parameters"], [4, 5, "type"], [5, 6, "name"], [4, 7, "name"], [0, 8, "body"], [8, 9, "type"], [9, 10, "name"], [8, 11, "declarators"], [11, 12, "name"], [11, 13, "initializer"], [13, 14, "value"], [0, 15, "body"], [15, 16, "expression"], [16, 17, "qualifier"], [16, 18, "member"], [0, 19, "body"], [19, 20, "condition"], [20, 21, "qualifier"], [20, 22, "member"], [19, 23, "body"], [23, 24, "statements"], [24, 25, "block"], [25, 26, "expression"], [26, 27, "qualifier"], [26, 28, "member"], [26, 29, "arguments"], [29, 30, "member"], [24, 31, "block"], [31, 32, "condition"], [32, 33, "member"], [31, 34, "then_statement"], [34, 35, "statements"], [31, 36, "else_statement"], [36, 37, "statements"], [37, 38, "expression"], [38, 39, "expressionl"], [39, 40, "member"], [38, 41, "type"], [38, 42, "value"], [42, 43, "value"], [24, 44, "catches"], [44, 45, "parameter"], [45, 46, "types"], [45, 47, "name"], [44, 48, "block"], [48, 49, "expression"], [49, 50, "expressionl"], [50, 51, "member"], [49, 52, "type"], [49, 53, "value"], [53, 54, "member"], [53, 55, "arguments"], [55, 56, "member"], [24, 57, "catches"], [57, 58, "parameter"], [58, 59, "types"], [58, 60, "name"], [57, 61, "block"], [61, 62, "expression"], [62, 63, "expressionl"], [63, 64, "member"], [62, 65, "type"], [62, 66, "value"], [66, 67, "member"], [66, 68, "arguments"], [68, 69, "member"], [0, 70, "body"], [70, 71, "condition"], [71, 72, "operandl"], [72, 73, "member"], [71, 74, "operator"], [71, 75, "operandr"], [75, 76, "value"], [70, 77, "then_statement"], [77, 78, "statements"], [78, 79, "expression"], [79, 80, "member"]], "rem_roots": [58], "add_roots": []}, {"id": 143, "mappings": {"actualTypeArgument": "VAR_1", "typeParameter": "VAR_2", "actualTypeArguments": "VAR_3", "length": "VAR_4", "i": "VAR_5", "contextualActualTypeParameters": "VAR_6", "parameterizedType": "VAR_7", "typeParameters": "VAR_8", "classType": "VAR_9", "ParameterizedType": "TYPE_1", "Type": "TYPE_2", "WildcardType": "TYPE_3", "TypeVariable": "TYPE_4", "Class": "TYPE_5", "getRawType": "METHOD_1", "getActualTypeArguments": "METHOD_2", "boundsOf": "METHOD_3", "registerTypeVariablesOn": "METHOD_4", "put": "METHOD_5", "getTypeParameters": "METHOD_6", "0": "INT_1"}, "nodes": ["MethodDeclaration", "protected", "void", "registerTypeVariablesOn", "FormalParameter", "ReferenceType", "Type", "classType", "IfStatement", "BinaryOperation", "!", "MemberReference", "classType", "instanceof", "ReferenceType", "ParameterizedType", "BlockStatement", "ReturnStatement", "LocalVariableDeclaration", "ReferenceType", "ParameterizedType", "VariableDeclarator", "parameterizedType", "Cast", "ReferenceType", "ParameterizedType", "MemberReference", "classType", "LocalVariableDeclaration", "ReferenceType", "TypeVariable", "None", "VariableDeclarator", "typeParameters", "Cast", "ReferenceType", "Class", "TypeArgument", "?", "MethodInvocation", "parameterizedType", "getRawType", "MethodInvocation", "getTypeParameters", "LocalVariableDeclaration", "ReferenceType", "Type", "None", "VariableDeclarator", "actualTypeArguments", "MethodInvocation", "parameterizedType", "getActualTypeArguments", "ForStatement", "ForControl", "VariableDeclaration", "BasicType", "int", "VariableDeclarator", "i", "Literal", "0", "BinaryOperation", "MemberReference", "i", "<", "MemberReference", "actualTypeArguments", "length", "MemberReference", "i", "++", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "TypeVariable", "VariableDeclarator", "typeParameter", "MemberReference", "typeParameters", "ArraySelector", "MemberReference", "i", "LocalVariableDeclaration", "ReferenceType", "Type", "VariableDeclarator", "actualTypeArgument", "MemberReference", "actualTypeArguments", "ArraySelector", "MemberReference", "i", "IfStatement", "BinaryOperation", "MemberReference", "actualTypeArgument", "instanceof", "ReferenceType", "WildcardType", "BlockStatement", "StatementExpression", "MethodInvocation", "contextualActualTypeParameters", "put", "MemberReference", "typeParameter", "MethodInvocation", "boundsOf", "Cast", "ReferenceType", "WildcardType", "MemberReference", "actualTypeArgument", "BlockStatement", "StatementExpression", "MethodInvocation", "contextualActualTypeParameters", "put", "MemberReference", "typeParameter", "MemberReference", "actualTypeArgument"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [0, 3, "name"], [0, 4, "parameters"], [4, 5, "type"], [5, 6, "name"], [4, 7, "name"], [0, 8, "body"], [8, 9, "condition"], [9, 10, "prefix_operators"], [9, 11, "operandl"], [11, 12, "member"], [9, 13, "operator"], [9, 14, "operandr"], [14, 15, "name"], [8, 16, "then_statement"], [16, 17, "statements"], [0, 18, "body"], [18, 19, "type"], [19, 20, "name"], [18, 21, "declarators"], [21, 22, "name"], [21, 23, "initializer"], [23, 24, "type"], [24, 25, "name"], [23, 26, "expression"], [26, 27, "member"], [0, 28, "body"], [28, 29, "type"], [29, 30, "name"], [29, 31, "dimensions"], [28, 32, "declarators"], [32, 33, "name"], [32, 34, "initializer"], [34, 35, "type"], [35, 36, "name"], [35, 37, "arguments"], [37, 38, "pattern_type"], [34, 39, "expression"], [39, 40, "qualifier"], [39, 41, "member"], [34, 42, "selectors"], [42, 43, "member"], [0, 44, "body"], [44, 45, "type"], [45, 46, "name"], [45, 47, "dimensions"], [44, 48, "declarators"], [48, 49, "name"], [48, 50, "initializer"], [50, 51, "qualifier"], [50, 52, "member"], [0, 53, "body"], [53, 54, "control"], [54, 55, "init"], [55, 56, "type"], [56, 57, "name"], [55, 58, "declarators"], [58, 59, "name"], [58, 60, "initializer"], [60, 61, "value"], [54, 62, "condition"], [62, 63, "operandl"], [63, 64, "member"], [62, 65, "operator"], [62, 66, "operandr"], [66, 67, "qualifier"], [66, 68, "member"], [54, 69, "update"], [69, 70, "member"], [69, 71, "postfix_operators"], [53, 72, "body"], [72, 73, "statements"], [73, 74, "type"], [74, 75, "name"], [73, 76, "declarators"], [76, 77, "name"], [76, 78, "initializer"], [78, 79, "member"], [78, 80, "selectors"], [80, 81, "index"], [81, 82, "member"], [72, 83, "statements"], [83, 84, "type"], [84, 85, "name"], [83, 86, "declarators"], [86, 87, "name"], [86, 88, "initializer"], [88, 89, "member"], [88, 90, "selectors"], [90, 91, "index"], [91, 92, "member"], [72, 93, "statements"], [93, 94, "condition"], [94, 95, "operandl"], [95, 96, "member"], [94, 97, "operator"], [94, 98, "operandr"], [98, 99, "name"], [93, 100, "then_statement"], [100, 101, "statements"], [101, 102, "expression"], [102, 103, "qualifier"], [102, 104, "member"], [102, 105, "arguments"], [105, 106, "member"], [102, 107, "arguments"], [107, 108, "member"], [107, 109, "arguments"], [109, 110, "type"], [110, 111, "name"], [109, 112, "expression"], [112, 113, "member"], [93, 114, "else_statement"], [114, 115, "statements"], [115, 116, "expression"], [116, 117, "qualifier"], [116, 118, "member"], [116, 119, "arguments"], [119, 120, "member"], [116, 121, "arguments"], [121, 122, "member"]], "rem_roots": [93], "add_roots": []}, {"id": 144, "mappings": {"total": "VAR_1", "val2": "VAR_2", "val1": "VAR_3", "ArithmeticException": "TYPE_1", "safeMultiply": "METHOD_1", "0": "INT_1", "1": "INT_2", "0L": "INT_3", "\" * \"": "STRING_1", "\"Multiplication overflows a long: \"": "STRING_2"}, "nodes": ["MethodDeclaration", "public static", "BasicType", "long", "safeMultiply", "FormalParameter", "BasicType", "long", "val1", "FormalParameter", "BasicType", "int", "val2", "SwitchStatement", "MemberReference", "val2", "SwitchStatementCase", "Literal", "-", "1", "ReturnStatement", "MemberReference", "-", "val1", "SwitchStatementCase", "Literal", "0", "ReturnStatement", "Literal", "0L", "SwitchStatementCase", "Literal", "1", "ReturnStatement", "MemberReference", "val1", "LocalVariableDeclaration", "BasicType", "long", "VariableDeclarator", "total", "BinaryOperation", "MemberReference", "val1", "*", "MemberReference", "val2", "IfStatement", "BinaryOperation", "BinaryOperation", "MemberReference", "total", "/", "MemberReference", "val2", "!=", "MemberReference", "val1", "BlockStatement", "ThrowStatement", "ClassCreator", "ReferenceType", "ArithmeticException", "BinaryOperation", "BinaryOperation", "BinaryOperation", "Literal", "\"Multiplication overflows a long: \"", "+", "MemberReference", "val1", "+", "Literal", "\" * \"", "+", "MemberReference", "val2", "ReturnStatement", "MemberReference", "total"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [5, 8, "name"], [0, 9, "parameters"], [9, 10, "type"], [10, 11, "name"], [9, 12, "name"], [0, 13, "body"], [13, 14, "expression"], [14, 15, "member"], [13, 16, "cases"], [16, 17, "case"], [17, 18, "prefix_operators"], [17, 19, "value"], [16, 20, "statements"], [20, 21, "expression"], [21, 22, "prefix_operators"], [21, 23, "member"], [13, 24, "cases"], [24, 25, "case"], [25, 26, "value"], [24, 27, "statements"], [27, 28, "expression"], [28, 29, "value"], [13, 30, "cases"], [30, 31, "case"], [31, 32, "value"], [30, 33, "statements"], [33, 34, "expression"], [34, 35, "member"], [0, 36, "body"], [36, 37, "type"], [37, 38, "name"], [36, 39, "declarators"], [39, 40, "name"], [39, 41, "initializer"], [41, 42, "operandl"], [42, 43, "member"], [41, 44, "operator"], [41, 45, "operandr"], [45, 46, "member"], [0, 47, "body"], [47, 48, "condition"], [48, 49, "operandl"], [49, 50, "operandl"], [50, 51, "member"], [49, 52, "operator"], [49, 53, "operandr"], [53, 54, "member"], [48, 55, "operator"], [48, 56, "operandr"], [56, 57, "member"], [47, 58, "then_statement"], [58, 59, "statements"], [59, 60, "expression"], [60, 61, "type"], [61, 62, "name"], [60, 63, "arguments"], [63, 64, "operandl"], [64, 65, "operandl"], [65, 66, "operandl"], [66, 67, "value"], [65, 68, "operator"], [65, 69, "operandr"], [69, 70, "member"], [64, 71, "operator"], [64, 72, "operandr"], [72, 73, "value"], [63, 74, "operator"], [63, 75, "operandr"], [75, 76, "member"], [0, 77, "body"], [77, 78, "expression"], [78, 79, "member"]], "rem_roots": [20], "add_roots": []}, {"id": 145, "mappings": {"offsetAdjusted": "VAR_1", "nextAdjusted": "VAR_2", "offsetPrev": "VAR_3", "nextLocal": "VAR_4", "prev": "VAR_5", "diff": "VAR_6", "instantAdjusted": "VAR_7", "offsetLocal": "VAR_8", "instantLocal": "VAR_9", "getOffsetFromLocal": "METHOD_1", "previousTransition": "METHOD_2", "getOffset": "METHOD_3", "nextTransition": "METHOD_4", "0": "INT_1"}, "nodes": ["MethodDeclaration", "public", "BasicType", "int", "getOffsetFromLocal", "FormalParameter", "BasicType", "long", "instantLocal", "LocalVariableDeclaration", "final", "BasicType", "int", "VariableDeclarator", "offsetLocal", "MethodInvocation", "getOffset", "MemberReference", "instantLocal", "LocalVariableDeclaration", "final", "BasicType", "long", "VariableDeclarator", "instantAdjusted", "BinaryOperation", "MemberReference", "instantLocal", "-", "MemberReference", "offsetLocal", "LocalVariableDeclaration", "final", "BasicType", "int", "VariableDeclarator", "offsetAdjusted", "MethodInvocation", "getOffset", "MemberReference", "instantAdjusted", "IfStatement", "BinaryOperation", "MemberReference", "offsetLocal", "!=", "MemberReference", "offsetAdjusted", "BlockStatement", "IfStatement", "BinaryOperation", "BinaryOperation", "MemberReference", "offsetLocal", "-", "MemberReference", "offsetAdjusted", "<", "Literal", "0", "BlockStatement", "LocalVariableDeclaration", "BasicType", "long", "VariableDeclarator", "nextLocal", "MethodInvocation", "nextTransition", "MemberReference", "instantAdjusted", "LocalVariableDeclaration", "BasicType", "long", "VariableDeclarator", "nextAdjusted", "MethodInvocation", "nextTransition", "BinaryOperation", "MemberReference", "instantLocal", "-", "MemberReference", "offsetAdjusted", "IfStatement", "BinaryOperation", "MemberReference", "nextLocal", "!=", "MemberReference", "nextAdjusted", "BlockStatement", "ReturnStatement", "MemberReference", "offsetLocal", "IfStatement", "BinaryOperation", "MemberReference", "offsetLocal", ">", "Literal", "0", "BlockStatement", "LocalVariableDeclaration", "BasicType", "long", "VariableDeclarator", "prev", "MethodInvocation", "previousTransition", "MemberReference", "instantAdjusted", "IfStatement", "BinaryOperation", "MemberReference", "prev", "<", "MemberReference", "instantAdjusted", "BlockStatement", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "offsetPrev", "MethodInvocation", "getOffset", "MemberReference", "prev", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "diff", "BinaryOperation", "MemberReference", "offsetPrev", "-", "MemberReference", "offsetLocal", "IfStatement", "BinaryOperation", "BinaryOperation", "MemberReference", "instantAdjusted", "-", "MemberReference", "prev", "<=", "MemberReference", "diff", "BlockStatement", "ReturnStatement", "MemberReference", "offsetPrev", "ReturnStatement", "MemberReference", "offsetAdjusted"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [5, 8, "name"], [0, 9, "body"], [9, 10, "modifiers"], [9, 11, "type"], [11, 12, "name"], [9, 13, "declarators"], [13, 14, "name"], [13, 15, "initializer"], [15, 16, "member"], [15, 17, "arguments"], [17, 18, "member"], [0, 19, "body"], [19, 20, "modifiers"], [19, 21, "type"], [21, 22, "name"], [19, 23, "declarators"], [23, 24, "name"], [23, 25, "initializer"], [25, 26, "operandl"], [26, 27, "member"], [25, 28, "operator"], [25, 29, "operandr"], [29, 30, "member"], [0, 31, "body"], [31, 32, "modifiers"], [31, 33, "type"], [33, 34, "name"], [31, 35, "declarators"], [35, 36, "name"], [35, 37, "initializer"], [37, 38, "member"], [37, 39, "arguments"], [39, 40, "member"], [0, 41, "body"], [41, 42, "condition"], [42, 43, "operandl"], [43, 44, "member"], [42, 45, "operator"], [42, 46, "operandr"], [46, 47, "member"], [41, 48, "then_statement"], [48, 49, "statements"], [49, 50, "condition"], [50, 51, "operandl"], [51, 52, "operandl"], [52, 53, "member"], [51, 54, "operator"], [51, 55, "operandr"], [55, 56, "member"], [50, 57, "operator"], [50, 58, "operandr"], [58, 59, "value"], [49, 60, "then_statement"], [60, 61, "statements"], [61, 62, "type"], [62, 63, "name"], [61, 64, "declarators"], [64, 65, "name"], [64, 66, "initializer"], [66, 67, "member"], [66, 68, "arguments"], [68, 69, "member"], [60, 70, "statements"], [70, 71, "type"], [71, 72, "name"], [70, 73, "declarators"], [73, 74, "name"], [73, 75, "initializer"], [75, 76, "member"], [75, 77, "arguments"], [77, 78, "operandl"], [78, 79, "member"], [77, 80, "operator"], [77, 81, "operandr"], [81, 82, "member"], [60, 83, "statements"], [83, 84, "condition"], [84, 85, "operandl"], [85, 86, "member"], [84, 87, "operator"], [84, 88, "operandr"], [88, 89, "member"], [83, 90, "then_statement"], [90, 91, "statements"], [91, 92, "expression"], [92, 93, "member"], [41, 94, "else_statement"], [94, 95, "condition"], [95, 96, "operandl"], [96, 97, "member"], [95, 98, "operator"], [95, 99, "operandr"], [99, 100, "value"], [94, 101, "then_statement"], [101, 102, "statements"], [102, 103, "type"], [103, 104, "name"], [102, 105, "declarators"], [105, 106, "name"], [105, 107, "initializer"], [107, 108, "member"], [107, 109, "arguments"], [109, 110, "member"], [101, 111, "statements"], [111, 112, "condition"], [112, 113, "operandl"], [113, 114, "member"], [112, 115, "operator"], [112, 116, "operandr"], [116, 117, "member"], [111, 118, "then_statement"], [118, 119, "statements"], [119, 120, "type"], [120, 121, "name"], [119, 122, "declarators"], [122, 123, "name"], [122, 124, "initializer"], [124, 125, "member"], [124, 126, "arguments"], [126, 127, "member"], [118, 128, "statements"], [128, 129, "type"], [129, 130, "name"], [128, 131, "declarators"], [131, 132, "name"], [131, 133, "initializer"], [133, 134, "operandl"], [134, 135, "member"], [133, 136, "operator"], [133, 137, "operandr"], [137, 138, "member"], [118, 139, "statements"], [139, 140, "condition"], [140, 141, "operandl"], [141, 142, "operandl"], [142, 143, "member"], [141, 144, "operator"], [141, 145, "operandr"], [145, 146, "member"], [140, 147, "operator"], [140, 148, "operandr"], [148, 149, "member"], [139, 150, "then_statement"], [150, 151, "statements"], [151, 152, "expression"], [152, 153, "member"], [0, 154, "body"], [154, 155, "expression"], [155, 156, "member"]], "rem_roots": [95], "add_roots": []}, {"id": 146, "mappings": {"compare": "VAR_1", "newTypes": "VAR_2", "iChronology": "VAR_3", "iValues": "VAR_4", "iTypes": "VAR_5", "rangeField": "VAR_6", "value": "VAR_7", "unitField": "VAR_8", "length": "VAR_9", "index": "VAR_10", "i": "VAR_11", "newValues": "VAR_12", "loopUnitField": "VAR_13", "newPartial": "VAR_14", "loopType": "VAR_15", "loopRangeField": "VAR_16", "fieldType": "VAR_17", "System": "TYPE_1", "Partial": "TYPE_2", "IllegalArgumentException": "TYPE_3", "DateTimeFieldType": "TYPE_4", "DurationField": "TYPE_5", "compareTo": "METHOD_1", "arraycopy": "METHOD_2", "getRangeDurationType": "METHOD_3", "indexOf": "METHOD_4", "validate": "METHOD_5", "set": "METHOD_6", "getValues": "METHOD_7", "getField": "METHOD_8", "isSupported": "METHOD_9", "with": "METHOD_10", "getDurationType": "METHOD_11", "getValue": "METHOD_12", "0": "INT_1", "1": "INT_2", "\"The field type must not be null\"": "STRING_1"}, "nodes": ["MethodDeclaration", "public", "ReferenceType", "Partial", "with", "FormalParameter", "ReferenceType", "DateTimeFieldType", "fieldType", "FormalParameter", "BasicType", "int", "value", "IfStatement", "BinaryOperation", "MemberReference", "fieldType", "==", "Literal", "null", "BlockStatement", "ThrowStatement", "ClassCreator", "ReferenceType", "IllegalArgumentException", "Literal", "\"The field type must not be null\"", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "index", "MethodInvocation", "indexOf", "MemberReference", "fieldType", "IfStatement", "BinaryOperation", "MemberReference", "index", "==", "Literal", "-", "1", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "DateTimeFieldType", "None", "VariableDeclarator", "newTypes", "ArrayCreator", "ReferenceType", "DateTimeFieldType", "BinaryOperation", "MemberReference", "iTypes", "length", "+", "Literal", "1", "LocalVariableDeclaration", "BasicType", "int", "None", "VariableDeclarator", "newValues", "ArrayCreator", "BasicType", "int", "MemberReference", "newTypes", "length", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "i", "Literal", "0", "LocalVariableDeclaration", "ReferenceType", "DurationField", "VariableDeclarator", "unitField", "MethodInvocation", "fieldType", "getDurationType", "MethodInvocation", "getField", "MemberReference", "iChronology", "IfStatement", "MethodInvocation", "unitField", "isSupported", "BlockStatement", "ForStatement", "ForControl", "BinaryOperation", "MemberReference", "i", "<", "MemberReference", "iTypes", "length", "MemberReference", "i", "++", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "DateTimeFieldType", "VariableDeclarator", "loopType", "MemberReference", "iTypes", "ArraySelector", "MemberReference", "i", "LocalVariableDeclaration", "ReferenceType", "DurationField", "VariableDeclarator", "loopUnitField", "MethodInvocation", "loopType", "getDurationType", "MethodInvocation", "getField", "MemberReference", "iChronology", "IfStatement", "MethodInvocation", "loopUnitField", "isSupported", "BlockStatement", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "compare", "MethodInvocation", "unitField", "compareTo", "MemberReference", "loopUnitField", "IfStatement", "BinaryOperation", "MemberReference", "compare", ">", "Literal", "0", "BlockStatement", "BreakStatement", "IfStatement", "BinaryOperation", "MemberReference", "compare", "==", "Literal", "0", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "DurationField", "VariableDeclarator", "rangeField", "MethodInvocation", "fieldType", "getRangeDurationType", "MethodInvocation", "getField", "MemberReference", "iChronology", "LocalVariableDeclaration", "ReferenceType", "DurationField", "VariableDeclarator", "loopRangeField", "MethodInvocation", "loopType", "getRangeDurationType", "MethodInvocation", "getField", "MemberReference", "iChronology", "IfStatement", "BinaryOperation", "MethodInvocation", "rangeField", "compareTo", "MemberReference", "loopRangeField", ">", "Literal", "0", "BlockStatement", "BreakStatement", "StatementExpression", "MethodInvocation", "System", "arraycopy", "MemberReference", "iTypes", "Literal", "0", "MemberReference", "newTypes", "Literal", "0", "MemberReference", "i", "StatementExpression", "MethodInvocation", "System", "arraycopy", "MemberReference", "iValues", "Literal", "0", "MemberReference", "newValues", "Literal", "0", "MemberReference", "i", "StatementExpression", "Assignment", "MemberReference", "newTypes", "ArraySelector", "MemberReference", "i", "=", "MemberReference", "fieldType", "StatementExpression", "Assignment", "MemberReference", "newValues", "ArraySelector", "MemberReference", "i", "=", "MemberReference", "value", "StatementExpression", "MethodInvocation", "System", "arraycopy", "MemberReference", "iTypes", "MemberReference", "i", "MemberReference", "newTypes", "BinaryOperation", "MemberReference", "i", "+", "Literal", "1", "BinaryOperation", "BinaryOperation", "MemberReference", "newTypes", "length", "-", "MemberReference", "i", "-", "Literal", "1", "StatementExpression", "MethodInvocation", "System", "arraycopy", "MemberReference", "iValues", "MemberReference", "i", "MemberReference", "newValues", "BinaryOperation", "MemberReference", "i", "+", "Literal", "1", "BinaryOperation", "BinaryOperation", "MemberReference", "newValues", "length", "-", "MemberReference", "i", "-", "Literal", "1", "LocalVariableDeclaration", "ReferenceType", "Partial", "VariableDeclarator", "newPartial", "ClassCreator", "ReferenceType", "Partial", "MemberReference", "iChronology", "MemberReference", "newTypes", "MemberReference", "newValues", "StatementExpression", "MethodInvocation", "iChronology", "validate", "MemberReference", "newPartial", "MemberReference", "newValues", "ReturnStatement", "MemberReference", "newPartial", "IfStatement", "BinaryOperation", "MemberReference", "value", "==", "MethodInvocation", "getValue", "MemberReference", "index", "BlockStatement", "ReturnStatement", "This", "LocalVariableDeclaration", "BasicType", "int", "None", "VariableDeclarator", "newValues", "MethodInvocation", "getValues", "StatementExpression", "Assignment", "MemberReference", "newValues", "=", "MethodInvocation", "getField", "MemberReference", "index", "MethodInvocation", "set", "This", "MemberReference", "index", "MemberReference", "newValues", "MemberReference", "value", "ReturnStatement", "ClassCreator", "ReferenceType", "Partial", "This", "MemberReference", "newValues"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [5, 8, "name"], [0, 9, "parameters"], [9, 10, "type"], [10, 11, "name"], [9, 12, "name"], [0, 13, "body"], [13, 14, "condition"], [14, 15, "operandl"], [15, 16, "member"], [14, 17, "operator"], [14, 18, "operandr"], [18, 19, "value"], [13, 20, "then_statement"], [20, 21, "statements"], [21, 22, "expression"], [22, 23, "type"], [23, 24, "name"], [22, 25, "arguments"], [25, 26, "value"], [0, 27, "body"], [27, 28, "type"], [28, 29, "name"], [27, 30, "declarators"], [30, 31, "name"], [30, 32, "initializer"], [32, 33, "member"], [32, 34, "arguments"], [34, 35, "member"], [0, 36, "body"], [36, 37, "condition"], [37, 38, "operandl"], [38, 39, "member"], [37, 40, "operator"], [37, 41, "operandr"], [41, 42, "prefix_operators"], [41, 43, "value"], [36, 44, "then_statement"], [44, 45, "statements"], [45, 46, "type"], [46, 47, "name"], [46, 48, "dimensions"], [45, 49, "declarators"], [49, 50, "name"], [49, 51, "initializer"], [51, 52, "type"], [52, 53, "name"], [51, 54, "dimensions"], [54, 55, "operandl"], [55, 56, "qualifier"], [55, 57, "member"], [54, 58, "operator"], [54, 59, "operandr"], [59, 60, "value"], [44, 61, "statements"], [61, 62, "type"], [62, 63, "name"], [62, 64, "dimensions"], [61, 65, "declarators"], [65, 66, "name"], [65, 67, "initializer"], [67, 68, "type"], [68, 69, "name"], [67, 70, "dimensions"], [70, 71, "qualifier"], [70, 72, "member"], [44, 73, "statements"], [73, 74, "type"], [74, 75, "name"], [73, 76, "declarators"], [76, 77, "name"], [76, 78, "initializer"], [78, 79, "value"], [44, 80, "statements"], [80, 81, "type"], [81, 82, "name"], [80, 83, "declarators"], [83, 84, "name"], [83, 85, "initializer"], [85, 86, "qualifier"], [85, 87, "member"], [85, 88, "selectors"], [88, 89, "member"], [88, 90, "arguments"], [90, 91, "member"], [44, 92, "statements"], [92, 93, "condition"], [93, 94, "qualifier"], [93, 95, "member"], [92, 96, "then_statement"], [96, 97, "statements"], [97, 98, "control"], [98, 99, "condition"], [99, 100, "operandl"], [100, 101, "member"], [99, 102, "operator"], [99, 103, "operandr"], [103, 104, "qualifier"], [103, 105, "member"], [98, 106, "update"], [106, 107, "member"], [106, 108, "postfix_operators"], [97, 109, "body"], [109, 110, "statements"], [110, 111, "type"], [111, 112, "name"], [110, 113, "declarators"], [113, 114, "name"], [113, 115, "initializer"], [115, 116, "member"], [115, 117, "selectors"], [117, 118, "index"], [118, 119, "member"], [109, 120, "statements"], [120, 121, "type"], [121, 122, "name"], [120, 123, "declarators"], [123, 124, "name"], [123, 125, "initializer"], [125, 126, "qualifier"], [125, 127, "member"], [125, 128, "selectors"], [128, 129, "member"], [128, 130, "arguments"], [130, 131, "member"], [109, 132, "statements"], [132, 133, "condition"], [133, 134, "qualifier"], [133, 135, "member"], [132, 136, "then_statement"], [136, 137, "statements"], [137, 138, "type"], [138, 139, "name"], [137, 140, "declarators"], [140, 141, "name"], [140, 142, "initializer"], [142, 143, "qualifier"], [142, 144, "member"], [142, 145, "arguments"], [145, 146, "member"], [136, 147, "statements"], [147, 148, "condition"], [148, 149, "operandl"], [149, 150, "member"], [148, 151, "operator"], [148, 152, "operandr"], [152, 153, "value"], [147, 154, "then_statement"], [154, 155, "statements"], [147, 156, "else_statement"], [156, 157, "condition"], [157, 158, "operandl"], [158, 159, "member"], [157, 160, "operator"], [157, 161, "operandr"], [161, 162, "value"], [156, 163, "then_statement"], [163, 164, "statements"], [164, 165, "type"], [165, 166, "name"], [164, 167, "declarators"], [167, 168, "name"], [167, 169, "initializer"], [169, 170, "qualifier"], [169, 171, "member"], [169, 172, "selectors"], [172, 173, "member"], [172, 174, "arguments"], [174, 175, "member"], [163, 176, "statements"], [176, 177, "type"], [177, 178, "name"], [176, 179, "declarators"], [179, 180, "name"], [179, 181, "initializer"], [181, 182, "qualifier"], [181, 183, "member"], [181, 184, "selectors"], [184, 185, "member"], [184, 186, "arguments"], [186, 187, "member"], [163, 188, "statements"], [188, 189, "condition"], [189, 190, "operandl"], [190, 191, "qualifier"], [190, 192, "member"], [190, 193, "arguments"], [193, 194, "member"], [189, 195, "operator"], [189, 196, "operandr"], [196, 197, "value"], [188, 198, "then_statement"], [198, 199, "statements"], [44, 200, "statements"], [200, 201, "expression"], [201, 202, "qualifier"], [201, 203, "member"], [201, 204, "arguments"], [204, 205, "member"], [201, 206, "arguments"], [206, 207, "value"], [201, 208, "arguments"], [208, 209, "member"], [201, 210, "arguments"], [210, 211, "value"], [201, 212, "arguments"], [212, 213, "member"], [44, 214, "statements"], [214, 215, "expression"], [215, 216, "qualifier"], [215, 217, "member"], [215, 218, "arguments"], [218, 219, "member"], [215, 220, "arguments"], [220, 221, "value"], [215, 222, "arguments"], [222, 223, "member"], [215, 224, "arguments"], [224, 225, "value"], [215, 226, "arguments"], [226, 227, "member"], [44, 228, "statements"], [228, 229, "expression"], [229, 230, "expressionl"], [230, 231, "member"], [230, 232, "selectors"], [232, 233, "index"], [233, 234, "member"], [229, 235, "type"], [229, 236, "value"], [236, 237, "member"], [44, 238, "statements"], [238, 239, "expression"], [239, 240, "expressionl"], [240, 241, "member"], [240, 242, "selectors"], [242, 243, "index"], [243, 244, "member"], [239, 245, "type"], [239, 246, "value"], [246, 247, "member"], [44, 248, "statements"], [248, 249, "expression"], [249, 250, "qualifier"], [249, 251, "member"], [249, 252, "arguments"], [252, 253, "member"], [249, 254, "arguments"], [254, 255, "member"], [249, 256, "arguments"], [256, 257, "member"], [249, 258, "arguments"], [258, 259, "operandl"], [259, 260, "member"], [258, 261, "operator"], [258, 262, "operandr"], [262, 263, "value"], [249, 264, "arguments"], [264, 265, "operandl"], [265, 266, "operandl"], [266, 267, "qualifier"], [266, 268, "member"], [265, 269, "operator"], [265, 270, "operandr"], [270, 271, "member"], [264, 272, "operator"], [264, 273, "operandr"], [273, 274, "value"], [44, 275, "statements"], [275, 276, "expression"], [276, 277, "qualifier"], [276, 278, "member"], [276, 279, "arguments"], [279, 280, "member"], [276, 281, "arguments"], [281, 282, "member"], [276, 283, "arguments"], [283, 284, "member"], [276, 285, "arguments"], [285, 286, "operandl"], [286, 287, "member"], [285, 288, "operator"], [285, 289, "operandr"], [289, 290, "value"], [276, 291, "arguments"], [291, 292, "operandl"], [292, 293, "operandl"], [293, 294, "qualifier"], [293, 295, "member"], [292, 296, "operator"], [292, 297, "operandr"], [297, 298, "member"], [291, 299, "operator"], [291, 300, "operandr"], [300, 301, "value"], [44, 302, "statements"], [302, 303, "type"], [303, 304, "name"], [302, 305, "declarators"], [305, 306, "name"], [305, 307, "initializer"], [307, 308, "type"], [308, 309, "name"], [307, 310, "arguments"], [310, 311, "member"], [307, 312, "arguments"], [312, 313, "member"], [307, 314, "arguments"], [314, 315, "member"], [44, 316, "statements"], [316, 317, "expression"], [317, 318, "qualifier"], [317, 319, "member"], [317, 320, "arguments"], [320, 321, "member"], [317, 322, "arguments"], [322, 323, "member"], [44, 324, "statements"], [324, 325, "expression"], [325, 326, "member"], [0, 327, "body"], [327, 328, "condition"], [328, 329, "operandl"], [329, 330, "member"], [328, 331, "operator"], [328, 332, "operandr"], [332, 333, "member"], [332, 334, "arguments"], [334, 335, "member"], [327, 336, "then_statement"], [336, 337, "statements"], [337, 338, "expression"], [0, 339, "body"], [339, 340, "type"], [340, 341, "name"], [340, 342, "dimensions"], [339, 343, "declarators"], [343, 344, "name"], [343, 345, "initializer"], [345, 346, "member"], [0, 347, "body"], [347, 348, "expression"], [348, 349, "expressionl"], [349, 350, "member"], [348, 351, "type"], [348, 352, "value"], [352, 353, "member"], [352, 354, "arguments"], [354, 355, "member"], [352, 356, "selectors"], [356, 357, "member"], [356, 358, "arguments"], [356, 359, "arguments"], [359, 360, "member"], [356, 361, "arguments"], [361, 362, "member"], [356, 363, "arguments"], [363, 364, "member"], [0, 365, "body"], [365, 366, "expression"], [366, 367, "type"], [367, 368, "name"], [366, 369, "arguments"], [366, 370, "arguments"], [370, 371, "member"]], "rem_roots": [302], "add_roots": []}, {"id": 147, "mappings": {"insets": "VAR_1", "BOTTOM": "VAR_2", "Math": "VAR_3", "CENTER": "VAR_4", "edge": "VAR_5", "state": "VAR_6", "plotArea": "VAR_7", "LEFT": "VAR_8", "labelBounds": "VAR_9", "g2": "VAR_10", "TOP": "VAR_11", "labelToolTip": "VAR_12", "TextAnchor": "VAR_13", "hotspot": "VAR_14", "fm": "VAR_15", "dataArea": "VAR_16", "plotState": "VAR_17", "labelx": "VAR_18", "labely": "VAR_19", "RIGHT": "VAR_20", "owner": "VAR_21", "rotatedLabelBounds": "VAR_22", "h": "VAR_23", "label": "VAR_24", "labelURL": "VAR_25", "t": "VAR_26", "entities": "VAR_27", "w": "VAR_28", "PI": "VAR_29", "font": "VAR_30", "String": "TYPE_1", "IllegalArgumentException": "TYPE_2", "PlotRenderingInfo": "TYPE_3", "AxisState": "TYPE_4", "Float": "TYPE_5", "TextUtilities": "TYPE_6", "AffineTransform": "TYPE_7", "RectangleEdge": "TYPE_8", "Shape": "TYPE_9", "Font": "TYPE_10", "FontMetrics": "TYPE_11", "ChartRenderingInfo": "TYPE_12", "Rectangle2D": "TYPE_13", "AxisLabelEntity": "TYPE_14", "Graphics2D": "TYPE_15", "EntityCollection": "TYPE_16", "RectangleInsets": "TYPE_17", "getLabelFont": "METHOD_1", "getBottom": "METHOD_2", "getRotateInstance": "METHOD_3", "getOwner": "METHOD_4", "getTop": "METHOD_5", "setFont": "METHOD_6", "getCenterY": "METHOD_7", "getCenterX": "METHOD_8", "setPaint": "METHOD_9", "add": "METHOD_10", "cursorDown": "METHOD_11", "drawLabel": "METHOD_12", "cursorLeft": "METHOD_13", "getWidth": "METHOD_14", "cursorUp": "METHOD_15", "getFontMetrics": "METHOD_16", "getHeight": "METHOD_17", "getLabelPaint": "METHOD_18", "cursorRight": "METHOD_19", "getEntityCollection": "METHOD_20", "getCursor": "METHOD_21", "getTextBounds": "METHOD_22", "createTransformedShape": "METHOD_23", "getLabelAngle": "METHOD_24", "getLabelInsets": "METHOD_25", "getRight": "METHOD_26", "getY": "METHOD_27", "equals": "METHOD_28", "drawRotatedString": "METHOD_29", "getBounds2D": "METHOD_30", "getLeft": "METHOD_31", "\"\"": "STRING_1", "\"Null 'state' argument.\"": "STRING_2", "2.0f": "FLOAT_1", "2.0": "FLOAT_2"}, "nodes": ["MethodDeclaration", "protected", "ReferenceType", "AxisState", "drawLabel", "FormalParameter", "ReferenceType", "String", "label", "FormalParameter", "ReferenceType", "Graphics2D", "g2", "FormalParameter", "ReferenceType", "Rectangle2D", "plotArea", "FormalParameter", "ReferenceType", "Rectangle2D", "dataArea", "FormalParameter", "ReferenceType", "RectangleEdge", "edge", "FormalParameter", "ReferenceType", "AxisState", "state", "FormalParameter", "ReferenceType", "PlotRenderingInfo", "plotState", "IfStatement", "BinaryOperation", "MemberReference", "state", "==", "Literal", "null", "BlockStatement", "ThrowStatement", "ClassCreator", "ReferenceType", "IllegalArgumentException", "Literal", "\"Null 'state' argument.\"", "IfStatement", "BinaryOperation", "BinaryOperation", "MemberReference", "label", "==", "Literal", "null", "||", "MethodInvocation", "label", "equals", "Literal", "\"\"", "BlockStatement", "ReturnStatement", "MemberReference", "state", "LocalVariableDeclaration", "ReferenceType", "Font", "VariableDeclarator", "font", "MethodInvocation", "getLabelFont", "LocalVariableDeclaration", "ReferenceType", "RectangleInsets", "VariableDeclarator", "insets", "MethodInvocation", "getLabelInsets", "StatementExpression", "MethodInvocation", "g2", "setFont", "MemberReference", "font", "StatementExpression", "MethodInvocation", "g2", "setPaint", "MethodInvocation", "getLabelPaint", "LocalVariableDeclaration", "ReferenceType", "FontMetrics", "VariableDeclarator", "fm", "MethodInvocation", "g2", "getFontMetrics", "LocalVariableDeclaration", "ReferenceType", "Rectangle2D", "VariableDeclarator", "labelBounds", "MethodInvocation", "TextUtilities", "getTextBounds", "MemberReference", "label", "MemberReference", "g2", "MemberReference", "fm", "LocalVariableDeclaration", "ReferenceType", "Shape", "VariableDeclarator", "hotspot", "Literal", "null", "IfStatement", "BinaryOperation", "MemberReference", "edge", "==", "MemberReference", "RectangleEdge", "TOP", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "AffineTransform", "VariableDeclarator", "t", "MethodInvocation", "AffineTransform", "getRotateInstance", "MethodInvocation", "getLabelAngle", "MethodInvocation", "labelBounds", "getCenterX", "MethodInvocation", "labelBounds", "getCenterY", "LocalVariableDeclaration", "ReferenceType", "Shape", "VariableDeclarator", "rotatedLabelBounds", "MethodInvocation", "t", "createTransformedShape", "MemberReference", "labelBounds", "StatementExpression", "Assignment", "MemberReference", "labelBounds", "=", "MethodInvocation", "rotatedLabelBounds", "getBounds2D", "LocalVariableDeclaration", "BasicType", "float", "VariableDeclarator", "w", "Cast", "BasicType", "float", "MethodInvocation", "labelBounds", "getWidth", "LocalVariableDeclaration", "BasicType", "float", "VariableDeclarator", "h", "Cast", "BasicType", "float", "MethodInvocation", "labelBounds", "getHeight", "LocalVariableDeclaration", "BasicType", "float", "VariableDeclarator", "labelx", "Cast", "BasicType", "float", "MethodInvocation", "dataArea", "getCenterX", "LocalVariableDeclaration", "BasicType", "float", "VariableDeclarator", "labely", "Cast", "BasicType", "float", "BinaryOperation", "BinaryOperation", "MethodInvocation", "state", "getCursor", "-", "MethodInvocation", "insets", "getBottom", "-", "BinaryOperation", "MemberReference", "h", "/", "Literal", "2.0", "StatementExpression", "MethodInvocation", "TextUtilities", "drawRotatedString", "MemberReference", "label", "MemberReference", "g2", "MemberReference", "labelx", "MemberReference", "labely", "MemberReference", "TextAnchor", "CENTER", "MethodInvocation", "getLabelAngle", "MemberReference", "TextAnchor", "CENTER", "StatementExpression", "Assignment", "MemberReference", "hotspot", "=", "ClassCreator", "ReferenceType", "Rectangle2D", "ReferenceType", "Float", "BinaryOperation", "MemberReference", "labelx", "-", "BinaryOperation", "MemberReference", "w", "/", "Literal", "2.0f", "BinaryOperation", "MemberReference", "labely", "-", "BinaryOperation", "MemberReference", "h", "/", "Literal", "2.0f", "MemberReference", "w", "MemberReference", "h", "StatementExpression", "MethodInvocation", "state", "cursorUp", "BinaryOperation", "BinaryOperation", "MethodInvocation", "insets", "getTop", "+", "MethodInvocation", "labelBounds", "getHeight", "+", "MethodInvocation", "insets", "getBottom", "IfStatement", "BinaryOperation", "MemberReference", "edge", "==", "MemberReference", "RectangleEdge", "BOTTOM", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "AffineTransform", "VariableDeclarator", "t", "MethodInvocation", "AffineTransform", "getRotateInstance", "MethodInvocation", "getLabelAngle", "MethodInvocation", "labelBounds", "getCenterX", "MethodInvocation", "labelBounds", "getCenterY", "LocalVariableDeclaration", "ReferenceType", "Shape", "VariableDeclarator", "rotatedLabelBounds", "MethodInvocation", "t", "createTransformedShape", "MemberReference", "labelBounds", "StatementExpression", "Assignment", "MemberReference", "labelBounds", "=", "MethodInvocation", "rotatedLabelBounds", "getBounds2D", "LocalVariableDeclaration", "BasicType", "float", "VariableDeclarator", "w", "Cast", "BasicType", "float", "MethodInvocation", "labelBounds", "getWidth", "LocalVariableDeclaration", "BasicType", "float", "VariableDeclarator", "h", "Cast", "BasicType", "float", "MethodInvocation", "labelBounds", "getHeight", "LocalVariableDeclaration", "BasicType", "float", "VariableDeclarator", "labelx", "Cast", "BasicType", "float", "MethodInvocation", "dataArea", "getCenterX", "LocalVariableDeclaration", "BasicType", "float", "VariableDeclarator", "labely", "Cast", "BasicType", "float", "BinaryOperation", "BinaryOperation", "MethodInvocation", "state", "getCursor", "+", "MethodInvocation", "insets", "getTop", "+", "BinaryOperation", "MemberReference", "h", "/", "Literal", "2.0", "StatementExpression", "MethodInvocation", "TextUtilities", "drawRotatedString", "MemberReference", "label", "MemberReference", "g2", "MemberReference", "labelx", "MemberReference", "labely", "MemberReference", "TextAnchor", "CENTER", "MethodInvocation", "getLabelAngle", "MemberReference", "TextAnchor", "CENTER", "StatementExpression", "Assignment", "MemberReference", "hotspot", "=", "ClassCreator", "ReferenceType", "Rectangle2D", "ReferenceType", "Float", "BinaryOperation", "MemberReference", "labelx", "-", "BinaryOperation", "MemberReference", "w", "/", "Literal", "2.0f", "BinaryOperation", "MemberReference", "labely", "-", "BinaryOperation", "MemberReference", "h", "/", "Literal", "2.0f", "MemberReference", "w", "MemberReference", "h", "StatementExpression", "MethodInvocation", "state", "cursorDown", "BinaryOperation", "BinaryOperation", "MethodInvocation", "insets", "getTop", "+", "MethodInvocation", "labelBounds", "getHeight", "+", "MethodInvocation", "insets", "getBottom", "IfStatement", "BinaryOperation", "MemberReference", "edge", "==", "MemberReference", "RectangleEdge", "LEFT", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "AffineTransform", "VariableDeclarator", "t", "MethodInvocation", "AffineTransform", "getRotateInstance", "BinaryOperation", "MethodInvocation", "getLabelAngle", "-", "BinaryOperation", "MemberReference", "Math", "PI", "/", "Literal", "2.0", "MethodInvocation", "labelBounds", "getCenterX", "MethodInvocation", "labelBounds", "getCenterY", "LocalVariableDeclaration", "ReferenceType", "Shape", "VariableDeclarator", "rotatedLabelBounds", "MethodInvocation", "t", "createTransformedShape", "MemberReference", "labelBounds", "StatementExpression", "Assignment", "MemberReference", "labelBounds", "=", "MethodInvocation", "rotatedLabelBounds", "getBounds2D", "LocalVariableDeclaration", "BasicType", "float", "VariableDeclarator", "w", "Cast", "BasicType", "float", "MethodInvocation", "labelBounds", "getWidth", "LocalVariableDeclaration", "BasicType", "float", "VariableDeclarator", "h", "Cast", "BasicType", "float", "MethodInvocation", "labelBounds", "getHeight", "LocalVariableDeclaration", "BasicType", "float", "VariableDeclarator", "labelx", "Cast", "BasicType", "float", "BinaryOperation", "BinaryOperation", "MethodInvocation", "state", "getCursor", "-", "MethodInvocation", "insets", "getRight", "-", "BinaryOperation", "MemberReference", "w", "/", "Literal", "2.0", "LocalVariableDeclaration", "BasicType", "float", "VariableDeclarator", "labely", "Cast", "BasicType", "float", "MethodInvocation", "dataArea", "getCenterY", "StatementExpression", "MethodInvocation", "TextUtilities", "drawRotatedString", "MemberReference", "label", "MemberReference", "g2", "MemberReference", "labelx", "MemberReference", "labely", "MemberReference", "TextAnchor", "CENTER", "BinaryOperation", "MethodInvocation", "getLabelAngle", "-", "BinaryOperation", "MemberReference", "Math", "PI", "/", "Literal", "2.0", "MemberReference", "TextAnchor", "CENTER", "StatementExpression", "Assignment", "MemberReference", "hotspot", "=", "ClassCreator", "ReferenceType", "Rectangle2D", "ReferenceType", "Float", "BinaryOperation", "MemberReference", "labelx", "-", "BinaryOperation", "MemberReference", "w", "/", "Literal", "2.0f", "BinaryOperation", "MemberReference", "labely", "-", "BinaryOperation", "MemberReference", "h", "/", "Literal", "2.0f", "MemberReference", "w", "MemberReference", "h", "StatementExpression", "MethodInvocation", "state", "cursorLeft", "BinaryOperation", "BinaryOperation", "MethodInvocation", "insets", "getLeft", "+", "MethodInvocation", "labelBounds", "getWidth", "+", "MethodInvocation", "insets", "getRight", "IfStatement", "BinaryOperation", "MemberReference", "edge", "==", "MemberReference", "RectangleEdge", "RIGHT", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "AffineTransform", "VariableDeclarator", "t", "MethodInvocation", "AffineTransform", "getRotateInstance", "BinaryOperation", "MethodInvocation", "getLabelAngle", "+", "BinaryOperation", "MemberReference", "Math", "PI", "/", "Literal", "2.0", "MethodInvocation", "labelBounds", "getCenterX", "MethodInvocation", "labelBounds", "getCenterY", "LocalVariableDeclaration", "ReferenceType", "Shape", "VariableDeclarator", "rotatedLabelBounds", "MethodInvocation", "t", "createTransformedShape", "MemberReference", "labelBounds", "StatementExpression", "Assignment", "MemberReference", "labelBounds", "=", "MethodInvocation", "rotatedLabelBounds", "getBounds2D", "LocalVariableDeclaration", "BasicType", "float", "VariableDeclarator", "w", "Cast", "BasicType", "float", "MethodInvocation", "labelBounds", "getWidth", "LocalVariableDeclaration", "BasicType", "float", "VariableDeclarator", "h", "Cast", "BasicType", "float", "MethodInvocation", "labelBounds", "getHeight", "LocalVariableDeclaration", "BasicType", "float", "VariableDeclarator", "labelx", "Cast", "BasicType", "float", "BinaryOperation", "BinaryOperation", "MethodInvocation", "state", "getCursor", "+", "MethodInvocation", "insets", "getLeft", "+", "BinaryOperation", "MemberReference", "w", "/", "Literal", "2.0", "LocalVariableDeclaration", "BasicType", "float", "VariableDeclarator", "labely", "Cast", "BasicType", "float", "BinaryOperation", "MethodInvocation", "dataArea", "getY", "+", "BinaryOperation", "MethodInvocation", "dataArea", "getHeight", "/", "Literal", "2.0", "StatementExpression", "MethodInvocation", "TextUtilities", "drawRotatedString", "MemberReference", "label", "MemberReference", "g2", "MemberReference", "labelx", "MemberReference", "labely", "MemberReference", "TextAnchor", "CENTER", "BinaryOperation", "MethodInvocation", "getLabelAngle", "+", "BinaryOperation", "MemberReference", "Math", "PI", "/", "Literal", "2.0", "MemberReference", "TextAnchor", "CENTER", "StatementExpression", "Assignment", "MemberReference", "hotspot", "=", "ClassCreator", "ReferenceType", "Rectangle2D", "ReferenceType", "Float", "BinaryOperation", "MemberReference", "labelx", "-", "BinaryOperation", "MemberReference", "w", "/", "Literal", "2.0f", "BinaryOperation", "MemberReference", "labely", "-", "BinaryOperation", "MemberReference", "h", "/", "Literal", "2.0f", "MemberReference", "w", "MemberReference", "h", "StatementExpression", "MethodInvocation", "state", "cursorRight", "BinaryOperation", "BinaryOperation", "MethodInvocation", "insets", "getLeft", "+", "MethodInvocation", "labelBounds", "getWidth", "+", "MethodInvocation", "insets", "getRight", "IfStatement", "BinaryOperation", "BinaryOperation", "MemberReference", "plotState", "!=", "Literal", "null", "&&", "BinaryOperation", "MemberReference", "hotspot", "!=", "Literal", "null", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "ChartRenderingInfo", "VariableDeclarator", "owner", "MethodInvocation", "plotState", "getOwner", "LocalVariableDeclaration", "ReferenceType", "EntityCollection", "VariableDeclarator", "entities", "MethodInvocation", "owner", "getEntityCollection", "IfStatement", "BinaryOperation", "MemberReference", "entities", "!=", "Literal", "null", "BlockStatement", "StatementExpression", "MethodInvocation", "entities", "add", "ClassCreator", "ReferenceType", "AxisLabelEntity", "This", "MemberReference", "hotspot", "This", "MemberReference", "labelToolTip", "This", "MemberReference", "labelURL", "ReturnStatement", "MemberReference", "state"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [5, 8, "name"], [0, 9, "parameters"], [9, 10, "type"], [10, 11, "name"], [9, 12, "name"], [0, 13, "parameters"], [13, 14, "type"], [14, 15, "name"], [13, 16, "name"], [0, 17, "parameters"], [17, 18, "type"], [18, 19, "name"], [17, 20, "name"], [0, 21, "parameters"], [21, 22, "type"], [22, 23, "name"], [21, 24, "name"], [0, 25, "parameters"], [25, 26, "type"], [26, 27, "name"], [25, 28, "name"], [0, 29, "parameters"], [29, 30, "type"], [30, 31, "name"], [29, 32, "name"], [0, 33, "body"], [33, 34, "condition"], [34, 35, "operandl"], [35, 36, "member"], [34, 37, "operator"], [34, 38, "operandr"], [38, 39, "value"], [33, 40, "then_statement"], [40, 41, "statements"], [41, 42, "expression"], [42, 43, "type"], [43, 44, "name"], [42, 45, "arguments"], [45, 46, "value"], [0, 47, "body"], [47, 48, "condition"], [48, 49, "operandl"], [49, 50, "operandl"], [50, 51, "member"], [49, 52, "operator"], [49, 53, "operandr"], [53, 54, "value"], [48, 55, "operator"], [48, 56, "operandr"], [56, 57, "qualifier"], [56, 58, "member"], [56, 59, "arguments"], [59, 60, "value"], [47, 61, "then_statement"], [61, 62, "statements"], [62, 63, "expression"], [63, 64, "member"], [0, 65, "body"], [65, 66, "type"], [66, 67, "name"], [65, 68, "declarators"], [68, 69, "name"], [68, 70, "initializer"], [70, 71, "member"], [0, 72, "body"], [72, 73, "type"], [73, 74, "name"], [72, 75, "declarators"], [75, 76, "name"], [75, 77, "initializer"], [77, 78, "member"], [0, 79, "body"], [79, 80, "expression"], [80, 81, "qualifier"], [80, 82, "member"], [80, 83, "arguments"], [83, 84, "member"], [0, 85, "body"], [85, 86, "expression"], [86, 87, "qualifier"], [86, 88, "member"], [86, 89, "arguments"], [89, 90, "member"], [0, 91, "body"], [91, 92, "type"], [92, 93, "name"], [91, 94, "declarators"], [94, 95, "name"], [94, 96, "initializer"], [96, 97, "qualifier"], [96, 98, "member"], [0, 99, "body"], [99, 100, "type"], [100, 101, "name"], [99, 102, "declarators"], [102, 103, "name"], [102, 104, "initializer"], [104, 105, "qualifier"], [104, 106, "member"], [104, 107, "arguments"], [107, 108, "member"], [104, 109, "arguments"], [109, 110, "member"], [104, 111, "arguments"], [111, 112, "member"], [0, 113, "body"], [113, 114, "type"], [114, 115, "name"], [113, 116, "declarators"], [116, 117, "name"], [116, 118, "initializer"], [118, 119, "value"], [0, 120, "body"], [120, 121, "condition"], [121, 122, "operandl"], [122, 123, "member"], [121, 124, "operator"], [121, 125, "operandr"], [125, 126, "qualifier"], [125, 127, "member"], [120, 128, "then_statement"], [128, 129, "statements"], [129, 130, "type"], [130, 131, "name"], [129, 132, "declarators"], [132, 133, "name"], [132, 134, "initializer"], [134, 135, "qualifier"], [134, 136, "member"], [134, 137, "arguments"], [137, 138, "member"], [134, 139, "arguments"], [139, 140, "qualifier"], [139, 141, "member"], [134, 142, "arguments"], [142, 143, "qualifier"], [142, 144, "member"], [128, 145, "statements"], [145, 146, "type"], [146, 147, "name"], [145, 148, "declarators"], [148, 149, "name"], [148, 150, "initializer"], [150, 151, "qualifier"], [150, 152, "member"], [150, 153, "arguments"], [153, 154, "member"], [128, 155, "statements"], [155, 156, "expression"], [156, 157, "expressionl"], [157, 158, "member"], [156, 159, "type"], [156, 160, "value"], [160, 161, "qualifier"], [160, 162, "member"], [128, 163, "statements"], [163, 164, "type"], [164, 165, "name"], [163, 166, "declarators"], [166, 167, "name"], [166, 168, "initializer"], [168, 169, "type"], [169, 170, "name"], [168, 171, "expression"], [171, 172, "qualifier"], [171, 173, "member"], [128, 174, "statements"], [174, 175, "type"], [175, 176, "name"], [174, 177, "declarators"], [177, 178, "name"], [177, 179, "initializer"], [179, 180, "type"], [180, 181, "name"], [179, 182, "expression"], [182, 183, "qualifier"], [182, 184, "member"], [128, 185, "statements"], [185, 186, "type"], [186, 187, "name"], [185, 188, "declarators"], [188, 189, "name"], [188, 190, "initializer"], [190, 191, "type"], [191, 192, "name"], [190, 193, "expression"], [193, 194, "qualifier"], [193, 195, "member"], [128, 196, "statements"], [196, 197, "type"], [197, 198, "name"], [196, 199, "declarators"], [199, 200, "name"], [199, 201, "initializer"], [201, 202, "type"], [202, 203, "name"], [201, 204, "expression"], [204, 205, "operandl"], [205, 206, "operandl"], [206, 207, "qualifier"], [206, 208, "member"], [205, 209, "operator"], [205, 210, "operandr"], [210, 211, "qualifier"], [210, 212, "member"], [204, 213, "operator"], [204, 214, "operandr"], [214, 215, "operandl"], [215, 216, "member"], [214, 217, "operator"], [214, 218, "operandr"], [218, 219, "value"], [128, 220, "statements"], [220, 221, "expression"], [221, 222, "qualifier"], [221, 223, "member"], [221, 224, "arguments"], [224, 225, "member"], [221, 226, "arguments"], [226, 227, "member"], [221, 228, "arguments"], [228, 229, "member"], [221, 230, "arguments"], [230, 231, "member"], [221, 232, "arguments"], [232, 233, "qualifier"], [232, 234, "member"], [221, 235, "arguments"], [235, 236, "member"], [221, 237, "arguments"], [237, 238, "qualifier"], [237, 239, "member"], [128, 240, "statements"], [240, 241, "expression"], [241, 242, "expressionl"], [242, 243, "member"], [241, 244, "type"], [241, 245, "value"], [245, 246, "type"], [246, 247, "name"], [246, 248, "sub_type"], [248, 249, "name"], [245, 250, "arguments"], [250, 251, "operandl"], [251, 252, "member"], [250, 253, "operator"], [250, 254, "operandr"], [254, 255, "operandl"], [255, 256, "member"], [254, 257, "operator"], [254, 258, "operandr"], [258, 259, "value"], [245, 260, "arguments"], [260, 261, "operandl"], [261, 262, "member"], [260, 263, "operator"], [260, 264, "operandr"], [264, 265, "operandl"], [265, 266, "member"], [264, 267, "operator"], [264, 268, "operandr"], [268, 269, "value"], [245, 270, "arguments"], [270, 271, "member"], [245, 272, "arguments"], [272, 273, "member"], [128, 274, "statements"], [274, 275, "expression"], [275, 276, "qualifier"], [275, 277, "member"], [275, 278, "arguments"], [278, 279, "operandl"], [279, 280, "operandl"], [280, 281, "qualifier"], [280, 282, "member"], [279, 283, "operator"], [279, 284, "operandr"], [284, 285, "qualifier"], [284, 286, "member"], [278, 287, "operator"], [278, 288, "operandr"], [288, 289, "qualifier"], [288, 290, "member"], [120, 291, "else_statement"], [291, 292, "condition"], [292, 293, "operandl"], [293, 294, "member"], [292, 295, "operator"], [292, 296, "operandr"], [296, 297, "qualifier"], [296, 298, "member"], [291, 299, "then_statement"], [299, 300, "statements"], [300, 301, "type"], [301, 302, "name"], [300, 303, "declarators"], [303, 304, "name"], [303, 305, "initializer"], [305, 306, "qualifier"], [305, 307, "member"], [305, 308, "arguments"], [308, 309, "member"], [305, 310, "arguments"], [310, 311, "qualifier"], [310, 312, "member"], [305, 313, "arguments"], [313, 314, "qualifier"], [313, 315, "member"], [299, 316, "statements"], [316, 317, "type"], [317, 318, "name"], [316, 319, "declarators"], [319, 320, "name"], [319, 321, "initializer"], [321, 322, "qualifier"], [321, 323, "member"], [321, 324, "arguments"], [324, 325, "member"], [299, 326, "statements"], [326, 327, "expression"], [327, 328, "expressionl"], [328, 329, "member"], [327, 330, "type"], [327, 331, "value"], [331, 332, "qualifier"], [331, 333, "member"], [299, 334, "statements"], [334, 335, "type"], [335, 336, "name"], [334, 337, "declarators"], [337, 338, "name"], [337, 339, "initializer"], [339, 340, "type"], [340, 341, "name"], [339, 342, "expression"], [342, 343, "qualifier"], [342, 344, "member"], [299, 345, "statements"], [345, 346, "type"], [346, 347, "name"], [345, 348, "declarators"], [348, 349, "name"], [348, 350, "initializer"], [350, 351, "type"], [351, 352, "name"], [350, 353, "expression"], [353, 354, "qualifier"], [353, 355, "member"], [299, 356, "statements"], [356, 357, "type"], [357, 358, "name"], [356, 359, "declarators"], [359, 360, "name"], [359, 361, "initializer"], [361, 362, "type"], [362, 363, "name"], [361, 364, "expression"], [364, 365, "qualifier"], [364, 366, "member"], [299, 367, "statements"], [367, 368, "type"], [368, 369, "name"], [367, 370, "declarators"], [370, 371, "name"], [370, 372, "initializer"], [372, 373, "type"], [373, 374, "name"], [372, 375, "expression"], [375, 376, "operandl"], [376, 377, "operandl"], [377, 378, "qualifier"], [377, 379, "member"], [376, 380, "operator"], [376, 381, "operandr"], [381, 382, "qualifier"], [381, 383, "member"], [375, 384, "operator"], [375, 385, "operandr"], [385, 386, "operandl"], [386, 387, "member"], [385, 388, "operator"], [385, 389, "operandr"], [389, 390, "value"], [299, 391, "statements"], [391, 392, "expression"], [392, 393, "qualifier"], [392, 394, "member"], [392, 395, "arguments"], [395, 396, "member"], [392, 397, "arguments"], [397, 398, "member"], [392, 399, "arguments"], [399, 400, "member"], [392, 401, "arguments"], [401, 402, "member"], [392, 403, "arguments"], [403, 404, "qualifier"], [403, 405, "member"], [392, 406, "arguments"], [406, 407, "member"], [392, 408, "arguments"], [408, 409, "qualifier"], [408, 410, "member"], [299, 411, "statements"], [411, 412, "expression"], [412, 413, "expressionl"], [413, 414, "member"], [412, 415, "type"], [412, 416, "value"], [416, 417, "type"], [417, 418, "name"], [417, 419, "sub_type"], [419, 420, "name"], [416, 421, "arguments"], [421, 422, "operandl"], [422, 423, "member"], [421, 424, "operator"], [421, 425, "operandr"], [425, 426, "operandl"], [426, 427, "member"], [425, 428, "operator"], [425, 429, "operandr"], [429, 430, "value"], [416, 431, "arguments"], [431, 432, "operandl"], [432, 433, "member"], [431, 434, "operator"], [431, 435, "operandr"], [435, 436, "operandl"], [436, 437, "member"], [435, 438, "operator"], [435, 439, "operandr"], [439, 440, "value"], [416, 441, "arguments"], [441, 442, "member"], [416, 443, "arguments"], [443, 444, "member"], [299, 445, "statements"], [445, 446, "expression"], [446, 447, "qualifier"], [446, 448, "member"], [446, 449, "arguments"], [449, 450, "operandl"], [450, 451, "operandl"], [451, 452, "qualifier"], [451, 453, "member"], [450, 454, "operator"], [450, 455, "operandr"], [455, 456, "qualifier"], [455, 457, "member"], [449, 458, "operator"], [449, 459, "operandr"], [459, 460, "qualifier"], [459, 461, "member"], [291, 462, "else_statement"], [462, 463, "condition"], [463, 464, "operandl"], [464, 465, "member"], [463, 466, "operator"], [463, 467, "operandr"], [467, 468, "qualifier"], [467, 469, "member"], [462, 470, "then_statement"], [470, 471, "statements"], [471, 472, "type"], [472, 473, "name"], [471, 474, "declarators"], [474, 475, "name"], [474, 476, "initializer"], [476, 477, "qualifier"], [476, 478, "member"], [476, 479, "arguments"], [479, 480, "operandl"], [480, 481, "member"], [479, 482, "operator"], [479, 483, "operandr"], [483, 484, "operandl"], [484, 485, "qualifier"], [484, 486, "member"], [483, 487, "operator"], [483, 488, "operandr"], [488, 489, "value"], [476, 490, "arguments"], [490, 491, "qualifier"], [490, 492, "member"], [476, 493, "arguments"], [493, 494, "qualifier"], [493, 495, "member"], [470, 496, "statements"], [496, 497, "type"], [497, 498, "name"], [496, 499, "declarators"], [499, 500, "name"], [499, 501, "initializer"], [501, 502, "qualifier"], [501, 503, "member"], [501, 504, "arguments"], [504, 505, "member"], [470, 506, "statements"], [506, 507, "expression"], [507, 508, "expressionl"], [508, 509, "member"], [507, 510, "type"], [507, 511, "value"], [511, 512, "qualifier"], [511, 513, "member"], [470, 514, "statements"], [514, 515, "type"], [515, 516, "name"], [514, 517, "declarators"], [517, 518, "name"], [517, 519, "initializer"], [519, 520, "type"], [520, 521, "name"], [519, 522, "expression"], [522, 523, "qualifier"], [522, 524, "member"], [470, 525, "statements"], [525, 526, "type"], [526, 527, "name"], [525, 528, "declarators"], [528, 529, "name"], [528, 530, "initializer"], [530, 531, "type"], [531, 532, "name"], [530, 533, "expression"], [533, 534, "qualifier"], [533, 535, "member"], [470, 536, "statements"], [536, 537, "type"], [537, 538, "name"], [536, 539, "declarators"], [539, 540, "name"], [539, 541, "initializer"], [541, 542, "type"], [542, 543, "name"], [541, 544, "expression"], [544, 545, "operandl"], [545, 546, "operandl"], [546, 547, "qualifier"], [546, 548, "member"], [545, 549, "operator"], [545, 550, "operandr"], [550, 551, "qualifier"], [550, 552, "member"], [544, 553, "operator"], [544, 554, "operandr"], [554, 555, "operandl"], [555, 556, "member"], [554, 557, "operator"], [554, 558, "operandr"], [558, 559, "value"], [470, 560, "statements"], [560, 561, "type"], [561, 562, "name"], [560, 563, "declarators"], [563, 564, "name"], [563, 565, "initializer"], [565, 566, "type"], [566, 567, "name"], [565, 568, "expression"], [568, 569, "qualifier"], [568, 570, "member"], [470, 571, "statements"], [571, 572, "expression"], [572, 573, "qualifier"], [572, 574, "member"], [572, 575, "arguments"], [575, 576, "member"], [572, 577, "arguments"], [577, 578, "member"], [572, 579, "arguments"], [579, 580, "member"], [572, 581, "arguments"], [581, 582, "member"], [572, 583, "arguments"], [583, 584, "qualifier"], [583, 585, "member"], [572, 586, "arguments"], [586, 587, "operandl"], [587, 588, "member"], [586, 589, "operator"], [586, 590, "operandr"], [590, 591, "operandl"], [591, 592, "qualifier"], [591, 593, "member"], [590, 594, "operator"], [590, 595, "operandr"], [595, 596, "value"], [572, 597, "arguments"], [597, 598, "qualifier"], [597, 599, "member"], [470, 600, "statements"], [600, 601, "expression"], [601, 602, "expressionl"], [602, 603, "member"], [601, 604, "type"], [601, 605, "value"], [605, 606, "type"], [606, 607, "name"], [606, 608, "sub_type"], [608, 609, "name"], [605, 610, "arguments"], [610, 611, "operandl"], [611, 612, "member"], [610, 613, "operator"], [610, 614, "operandr"], [614, 615, "operandl"], [615, 616, "member"], [614, 617, "operator"], [614, 618, "operandr"], [618, 619, "value"], [605, 620, "arguments"], [620, 621, "operandl"], [621, 622, "member"], [620, 623, "operator"], [620, 624, "operandr"], [624, 625, "operandl"], [625, 626, "member"], [624, 627, "operator"], [624, 628, "operandr"], [628, 629, "value"], [605, 630, "arguments"], [630, 631, "member"], [605, 632, "arguments"], [632, 633, "member"], [470, 634, "statements"], [634, 635, "expression"], [635, 636, "qualifier"], [635, 637, "member"], [635, 638, "arguments"], [638, 639, "operandl"], [639, 640, "operandl"], [640, 641, "qualifier"], [640, 642, "member"], [639, 643, "operator"], [639, 644, "operandr"], [644, 645, "qualifier"], [644, 646, "member"], [638, 647, "operator"], [638, 648, "operandr"], [648, 649, "qualifier"], [648, 650, "member"], [462, 651, "else_statement"], [651, 652, "condition"], [652, 653, "operandl"], [653, 654, "member"], [652, 655, "operator"], [652, 656, "operandr"], [656, 657, "qualifier"], [656, 658, "member"], [651, 659, "then_statement"], [659, 660, "statements"], [660, 661, "type"], [661, 662, "name"], [660, 663, "declarators"], [663, 664, "name"], [663, 665, "initializer"], [665, 666, "qualifier"], [665, 667, "member"], [665, 668, "arguments"], [668, 669, "operandl"], [669, 670, "member"], [668, 671, "operator"], [668, 672, "operandr"], [672, 673, "operandl"], [673, 674, "qualifier"], [673, 675, "member"], [672, 676, "operator"], [672, 677, "operandr"], [677, 678, "value"], [665, 679, "arguments"], [679, 680, "qualifier"], [679, 681, "member"], [665, 682, "arguments"], [682, 683, "qualifier"], [682, 684, "member"], [659, 685, "statements"], [685, 686, "type"], [686, 687, "name"], [685, 688, "declarators"], [688, 689, "name"], [688, 690, "initializer"], [690, 691, "qualifier"], [690, 692, "member"], [690, 693, "arguments"], [693, 694, "member"], [659, 695, "statements"], [695, 696, "expression"], [696, 697, "expressionl"], [697, 698, "member"], [696, 699, "type"], [696, 700, "value"], [700, 701, "qualifier"], [700, 702, "member"], [659, 703, "statements"], [703, 704, "type"], [704, 705, "name"], [703, 706, "declarators"], [706, 707, "name"], [706, 708, "initializer"], [708, 709, "type"], [709, 710, "name"], [708, 711, "expression"], [711, 712, "qualifier"], [711, 713, "member"], [659, 714, "statements"], [714, 715, "type"], [715, 716, "name"], [714, 717, "declarators"], [717, 718, "name"], [717, 719, "initializer"], [719, 720, "type"], [720, 721, "name"], [719, 722, "expression"], [722, 723, "qualifier"], [722, 724, "member"], [659, 725, "statements"], [725, 726, "type"], [726, 727, "name"], [725, 728, "declarators"], [728, 729, "name"], [728, 730, "initializer"], [730, 731, "type"], [731, 732, "name"], [730, 733, "expression"], [733, 734, "operandl"], [734, 735, "operandl"], [735, 736, "qualifier"], [735, 737, "member"], [734, 738, "operator"], [734, 739, "operandr"], [739, 740, "qualifier"], [739, 741, "member"], [733, 742, "operator"], [733, 743, "operandr"], [743, 744, "operandl"], [744, 745, "member"], [743, 746, "operator"], [743, 747, "operandr"], [747, 748, "value"], [659, 749, "statements"], [749, 750, "type"], [750, 751, "name"], [749, 752, "declarators"], [752, 753, "name"], [752, 754, "initializer"], [754, 755, "type"], [755, 756, "name"], [754, 757, "expression"], [757, 758, "operandl"], [758, 759, "qualifier"], [758, 760, "member"], [757, 761, "operator"], [757, 762, "operandr"], [762, 763, "operandl"], [763, 764, "qualifier"], [763, 765, "member"], [762, 766, "operator"], [762, 767, "operandr"], [767, 768, "value"], [659, 769, "statements"], [769, 770, "expression"], [770, 771, "qualifier"], [770, 772, "member"], [770, 773, "arguments"], [773, 774, "member"], [770, 775, "arguments"], [775, 776, "member"], [770, 777, "arguments"], [777, 778, "member"], [770, 779, "arguments"], [779, 780, "member"], [770, 781, "arguments"], [781, 782, "qualifier"], [781, 783, "member"], [770, 784, "arguments"], [784, 785, "operandl"], [785, 786, "member"], [784, 787, "operator"], [784, 788, "operandr"], [788, 789, "operandl"], [789, 790, "qualifier"], [789, 791, "member"], [788, 792, "operator"], [788, 793, "operandr"], [793, 794, "value"], [770, 795, "arguments"], [795, 796, "qualifier"], [795, 797, "member"], [659, 798, "statements"], [798, 799, "expression"], [799, 800, "expressionl"], [800, 801, "member"], [799, 802, "type"], [799, 803, "value"], [803, 804, "type"], [804, 805, "name"], [804, 806, "sub_type"], [806, 807, "name"], [803, 808, "arguments"], [808, 809, "operandl"], [809, 810, "member"], [808, 811, "operator"], [808, 812, "operandr"], [812, 813, "operandl"], [813, 814, "member"], [812, 815, "operator"], [812, 816, "operandr"], [816, 817, "value"], [803, 818, "arguments"], [818, 819, "operandl"], [819, 820, "member"], [818, 821, "operator"], [818, 822, "operandr"], [822, 823, "operandl"], [823, 824, "member"], [822, 825, "operator"], [822, 826, "operandr"], [826, 827, "value"], [803, 828, "arguments"], [828, 829, "member"], [803, 830, "arguments"], [830, 831, "member"], [659, 832, "statements"], [832, 833, "expression"], [833, 834, "qualifier"], [833, 835, "member"], [833, 836, "arguments"], [836, 837, "operandl"], [837, 838, "operandl"], [838, 839, "qualifier"], [838, 840, "member"], [837, 841, "operator"], [837, 842, "operandr"], [842, 843, "qualifier"], [842, 844, "member"], [836, 845, "operator"], [836, 846, "operandr"], [846, 847, "qualifier"], [846, 848, "member"], [0, 849, "body"], [849, 850, "condition"], [850, 851, "operandl"], [851, 852, "operandl"], [852, 853, "member"], [851, 854, "operator"], [851, 855, "operandr"], [855, 856, "value"], [850, 857, "operator"], [850, 858, "operandr"], [858, 859, "operandl"], [859, 860, "member"], [858, 861, "operator"], [858, 862, "operandr"], [862, 863, "value"], [849, 864, "then_statement"], [864, 865, "statements"], [865, 866, "type"], [866, 867, "name"], [865, 868, "declarators"], [868, 869, "name"], [868, 870, "initializer"], [870, 871, "qualifier"], [870, 872, "member"], [864, 873, "statements"], [873, 874, "type"], [874, 875, "name"], [873, 876, "declarators"], [876, 877, "name"], [876, 878, "initializer"], [878, 879, "qualifier"], [878, 880, "member"], [864, 881, "statements"], [881, 882, "condition"], [882, 883, "operandl"], [883, 884, "member"], [882, 885, "operator"], [882, 886, "operandr"], [886, 887, "value"], [881, 888, "then_statement"], [888, 889, "statements"], [889, 890, "expression"], [890, 891, "qualifier"], [890, 892, "member"], [890, 893, "arguments"], [893, 894, "type"], [894, 895, "name"], [893, 896, "arguments"], [893, 897, "arguments"], [897, 898, "member"], [893, 899, "arguments"], [899, 900, "selectors"], [900, 901, "member"], [893, 902, "arguments"], [902, 903, "selectors"], [903, 904, "member"], [0, 905, "body"], [905, 906, "expression"], [906, 907, "member"]], "rem_roots": [873], "add_roots": []}, {"id": 148, "mappings": {"ch": "VAR_1", "currentOption": "VAR_2", "stopAtNonOption": "VAR_3", "i": "VAR_4", "token": "VAR_5", "options": "VAR_6", "tokens": "VAR_7", "String": "TYPE_1", "add": "METHOD_1", "process": "METHOD_2", "burstToken": "METHOD_3", "valueOf": "METHOD_4", "length": "METHOD_5", "getOption": "METHOD_6", "substring": "METHOD_7", "hasOption": "METHOD_8", "hasArg": "METHOD_9", "charAt": "METHOD_10", "1": "INT_1", "\"-\"": "STRING_1"}, "nodes": ["MethodDeclaration", "protected", "void", "burstToken", "FormalParameter", "ReferenceType", "String", "token", "FormalParameter", "BasicType", "boolean", "stopAtNonOption", "ForStatement", "ForControl", "VariableDeclaration", "BasicType", "int", "VariableDeclarator", "i", "Literal", "1", "BinaryOperation", "MemberReference", "i", "<", "MethodInvocation", "token", "length", "MemberReference", "i", "++", "BlockStatement", "LocalVariableDeclaration", "ReferenceType", "String", "VariableDeclarator", "ch", "MethodInvocation", "String", "valueOf", "MethodInvocation", "token", "charAt", "MemberReference", "i", "IfStatement", "MethodInvocation", "options", "hasOption", "MemberReference", "ch", "BlockStatement", "StatementExpression", "MethodInvocation", "tokens", "add", "BinaryOperation", "Literal", "\"-\"", "+", "MemberReference", "ch", "StatementExpression", "Assignment", "MemberReference", "currentOption", "=", "MethodInvocation", "options", "getOption", "MemberReference", "ch", "IfStatement", "BinaryOperation", "MethodInvocation", "currentOption", "hasArg", "&&", "BinaryOperation", "MethodInvocation", "token", "length", "!=", "BinaryOperation", "MemberReference", "i", "+", "Literal", "1", "BlockStatement", "StatementExpression", "MethodInvocation", "tokens", "add", "MethodInvocation", "token", "substring", "BinaryOperation", "MemberReference", "i", "+", "Literal", "1", "BreakStatement", "IfStatement", "MemberReference", "stopAtNonOption", "BlockStatement", "StatementExpression", "MethodInvocation", "process", "MethodInvocation", "token", "substring", "MemberReference", "i", "BlockStatement", "StatementExpression", "MethodInvocation", "tokens", "add", "MemberReference", "token", "BreakStatement"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [0, 3, "name"], [0, 4, "parameters"], [4, 5, "type"], [5, 6, "name"], [4, 7, "name"], [0, 8, "parameters"], [8, 9, "type"], [9, 10, "name"], [8, 11, "name"], [0, 12, "body"], [12, 13, "control"], [13, 14, "init"], [14, 15, "type"], [15, 16, "name"], [14, 17, "declarators"], [17, 18, "name"], [17, 19, "initializer"], [19, 20, "value"], [13, 21, "condition"], [21, 22, "operandl"], [22, 23, "member"], [21, 24, "operator"], [21, 25, "operandr"], [25, 26, "qualifier"], [25, 27, "member"], [13, 28, "update"], [28, 29, "member"], [28, 30, "postfix_operators"], [12, 31, "body"], [31, 32, "statements"], [32, 33, "type"], [33, 34, "name"], [32, 35, "declarators"], [35, 36, "name"], [35, 37, "initializer"], [37, 38, "qualifier"], [37, 39, "member"], [37, 40, "arguments"], [40, 41, "qualifier"], [40, 42, "member"], [40, 43, "arguments"], [43, 44, "member"], [31, 45, "statements"], [45, 46, "condition"], [46, 47, "qualifier"], [46, 48, "member"], [46, 49, "arguments"], [49, 50, "member"], [45, 51, "then_statement"], [51, 52, "statements"], [52, 53, "expression"], [53, 54, "qualifier"], [53, 55, "member"], [53, 56, "arguments"], [56, 57, "operandl"], [57, 58, "value"], [56, 59, "operator"], [56, 60, "operandr"], [60, 61, "member"], [51, 62, "statements"], [62, 63, "expression"], [63, 64, "expressionl"], [64, 65, "member"], [63, 66, "type"], [63, 67, "value"], [67, 68, "qualifier"], [67, 69, "member"], [67, 70, "arguments"], [70, 71, "member"], [51, 72, "statements"], [72, 73, "condition"], [73, 74, "operandl"], [74, 75, "qualifier"], [74, 76, "member"], [73, 77, "operator"], [73, 78, "operandr"], [78, 79, "operandl"], [79, 80, "qualifier"], [79, 81, "member"], [78, 82, "operator"], [78, 83, "operandr"], [83, 84, "operandl"], [84, 85, "member"], [83, 86, "operator"], [83, 87, "operandr"], [87, 88, "value"], [72, 89, "then_statement"], [89, 90, "statements"], [90, 91, "expression"], [91, 92, "qualifier"], [91, 93, "member"], [91, 94, "arguments"], [94, 95, "qualifier"], [94, 96, "member"], [94, 97, "arguments"], [97, 98, "operandl"], [98, 99, "member"], [97, 100, "operator"], [97, 101, "operandr"], [101, 102, "value"], [89, 103, "statements"], [45, 104, "else_statement"], [104, 105, "condition"], [105, 106, "member"], [104, 107, "then_statement"], [107, 108, "statements"], [108, 109, "expression"], [109, 110, "member"], [109, 111, "arguments"], [111, 112, "qualifier"], [111, 113, "member"], [111, 114, "arguments"], [114, 115, "member"], [104, 116, "else_statement"], [116, 117, "statements"], [117, 118, "expression"], [118, 119, "qualifier"], [118, 120, "member"], [118, 121, "arguments"], [121, 122, "member"], [116, 123, "statements"]], "rem_roots": [104], "add_roots": []}, {"id": 149, "mappings": {"str": "VAR_1", "String": "TYPE_1", "stripLeadingHyphens": "METHOD_1", "length": "METHOD_2", "substring": "METHOD_3", "startsWith": "METHOD_4", "1": "INT_1", "2": "INT_2", "\"--\"": "STRING_1", "\"-\"": "STRING_2"}, "nodes": ["MethodDeclaration", "static", "ReferenceType", "String", "stripLeadingHyphens", "FormalParameter", "ReferenceType", "String", "str", "IfStatement", "MethodInvocation", "str", "startsWith", "Literal", "\"--\"", "BlockStatement", "ReturnStatement", "MethodInvocation", "str", "substring", "Literal", "2", "MethodInvocation", "str", "length", "IfStatement", "MethodInvocation", "str", "startsWith", "Literal", "\"-\"", "BlockStatement", "ReturnStatement", "MethodInvocation", "str", "substring", "Literal", "1", "MethodInvocation", "str", "length", "ReturnStatement", "MemberReference", "str"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [5, 8, "name"], [0, 9, "body"], [9, 10, "condition"], [10, 11, "qualifier"], [10, 12, "member"], [10, 13, "arguments"], [13, 14, "value"], [9, 15, "then_statement"], [15, 16, "statements"], [16, 17, "expression"], [17, 18, "qualifier"], [17, 19, "member"], [17, 20, "arguments"], [20, 21, "value"], [17, 22, "arguments"], [22, 23, "qualifier"], [22, 24, "member"], [9, 25, "else_statement"], [25, 26, "condition"], [26, 27, "qualifier"], [26, 28, "member"], [26, 29, "arguments"], [29, 30, "value"], [25, 31, "then_statement"], [31, 32, "statements"], [32, 33, "expression"], [33, 34, "qualifier"], [33, 35, "member"], [33, 36, "arguments"], [36, 37, "value"], [33, 38, "arguments"], [38, 39, "qualifier"], [38, 40, "member"], [0, 41, "body"], [41, 42, "expression"], [42, 43, "member"]], "rem_roots": [10], "add_roots": []}, {"id": 150, "mappings": {"closed": "VAR_1", "IOException": "TYPE_1", "close": "METHOD_1"}, "nodes": ["MethodDeclaration", "public", "void", "close", "IOException", "IfStatement", "This", "!", "MemberReference", "closed", "BlockStatement", "StatementExpression", "SuperMethodInvocation", "close", "StatementExpression", "Assignment", "This", "MemberReference", "closed", "=", "Literal", "true"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [0, 3, "name"], [0, 4, "throws"], [0, 5, "body"], [5, 6, "condition"], [6, 7, "prefix_operators"], [6, 8, "selectors"], [8, 9, "member"], [5, 10, "then_statement"], [10, 11, "statements"], [11, 12, "expression"], [12, 13, "member"], [10, 14, "statements"], [14, 15, "expression"], [15, 16, "expressionl"], [16, 17, "selectors"], [17, 18, "member"], [15, 19, "type"], [15, 20, "value"], [20, 21, "value"]], "rem_roots": [11], "add_roots": []}, {"id": 151, "mappings": {"col": "VAR_1", "mapping": "VAR_2", "values": "VAR_3", "length": "VAR_4", "entry": "VAR_5", "map": "VAR_6", "String": "TYPE_1", "M": "TYPE_2", "Integer": "TYPE_3", "Entry": "TYPE_4", "Map": "TYPE_5", "getKey": "METHOD_1", "entrySet": "METHOD_2", "intValue": "METHOD_3", "put": "METHOD_4", "getValue": "METHOD_5", "putIn": "METHOD_6"}, "nodes": ["MethodDeclaration", "TypeParameter", "M", "ReferenceType", "Map", "TypeArgument", "ReferenceType", "String", "TypeArgument", "ReferenceType", "String", "ReferenceType", "M", "putIn", "FormalParameter", "ReferenceType", "M", "map", "ForStatement", "EnhancedForControl", "VariableDeclaration", "final", "ReferenceType", "Entry", "TypeArgument", "ReferenceType", "String", "TypeArgument", "ReferenceType", "Integer", "VariableDeclarator", "entry", "MethodInvocation", "mapping", "entrySet", "BlockStatement", "LocalVariableDeclaration", "final", "BasicType", "int", "VariableDeclarator", "col", "MethodInvocation", "entry", "getValue", "MethodInvocation", "intValue", "IfStatement", "BinaryOperation", "MemberReference", "col", "<", "MemberReference", "values", "length", "BlockStatement", "StatementExpression", "MethodInvocation", "map", "put", "MethodInvocation", "entry", "getKey", "MemberReference", "values", "ArraySelector", "MemberReference", "col", "ReturnStatement", "MemberReference", "map"], "edges": [[0, 1, "type_parameters"], [1, 2, "name"], [1, 3, "extends"], [3, 4, "name"], [3, 5, "arguments"], [5, 6, "type"], [6, 7, "name"], [3, 8, "arguments"], [8, 9, "type"], [9, 10, "name"], [0, 11, "return_type"], [11, 12, "name"], [0, 13, "name"], [0, 14, "parameters"], [14, 15, "type"], [15, 16, "name"], [14, 17, "name"], [0, 18, "body"], [18, 19, "control"], [19, 20, "var"], [20, 21, "modifiers"], [20, 22, "type"], [22, 23, "name"], [22, 24, "arguments"], [24, 25, "type"], [25, 26, "name"], [22, 27, "arguments"], [27, 28, "type"], [28, 29, "name"], [20, 30, "declarators"], [30, 31, "name"], [19, 32, "iterable"], [32, 33, "qualifier"], [32, 34, "member"], [18, 35, "body"], [35, 36, "statements"], [36, 37, "modifiers"], [36, 38, "type"], [38, 39, "name"], [36, 40, "declarators"], [40, 41, "name"], [40, 42, "initializer"], [42, 43, "qualifier"], [42, 44, "member"], [42, 45, "selectors"], [45, 46, "member"], [35, 47, "statements"], [47, 48, "condition"], [48, 49, "operandl"], [49, 50, "member"], [48, 51, "operator"], [48, 52, "operandr"], [52, 53, "qualifier"], [52, 54, "member"], [47, 55, "then_statement"], [55, 56, "statements"], [56, 57, "expression"], [57, 58, "qualifier"], [57, 59, "member"], [57, 60, "arguments"], [60, 61, "qualifier"], [60, 62, "member"], [57, 63, "arguments"], [63, 64, "member"], [63, 65, "selectors"], [65, 66, "index"], [66, 67, "member"], [0, 68, "body"], [68, 69, "expression"], [69, 70, "member"]], "rem_roots": [18], "add_roots": []}, {"id": 152, "mappings": {"NUMBER": "VAR_1", "NULL": "VAR_2", "in": "VAR_3", "jsonToken": "VAR_4", "LazilyParsedNumber": "TYPE_1", "IOException": "TYPE_2", "JsonSyntaxException": "TYPE_3", "Number": "TYPE_4", "JsonReader": "TYPE_5", "JsonToken": "TYPE_6", "read": "METHOD_1", "nextString": "METHOD_2", "peek": "METHOD_3", "nextNull": "METHOD_4", "\"Expecting number, got: \"": "STRING_1"}, "nodes": ["MethodDeclaration", "public", "ReferenceType", "Number", "read", "FormalParameter", "ReferenceType", "JsonReader", "in", "IOException", "LocalVariableDeclaration", "ReferenceType", "JsonToken", "VariableDeclarator", "jsonToken", "MethodInvocation", "in", "peek", "SwitchStatement", "MemberReference", "jsonToken", "SwitchStatementCase", "NULL", "StatementExpression", "MethodInvocation", "in", "nextNull", "ReturnStatement", "Literal", "null", "SwitchStatementCase", "NUMBER", "ReturnStatement", "ClassCreator", "ReferenceType", "LazilyParsedNumber", "MethodInvocation", "in", "nextString", "SwitchStatementCase", "ThrowStatement", "ClassCreator", "ReferenceType", "JsonSyntaxException", "BinaryOperation", "Literal", "\"Expecting number, got: \"", "+", "MemberReference", "jsonToken"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "parameters"], [5, 6, "type"], [6, 7, "name"], [5, 8, "name"], [0, 9, "throws"], [0, 10, "body"], [10, 11, "type"], [11, 12, "name"], [10, 13, "declarators"], [13, 14, "name"], [13, 15, "initializer"], [15, 16, "qualifier"], [15, 17, "member"], [0, 18, "body"], [18, 19, "expression"], [19, 20, "member"], [18, 21, "cases"], [21, 22, "case"], [21, 23, "statements"], [23, 24, "expression"], [24, 25, "qualifier"], [24, 26, "member"], [21, 27, "statements"], [27, 28, "expression"], [28, 29, "value"], [18, 30, "cases"], [30, 31, "case"], [30, 32, "statements"], [32, 33, "expression"], [33, 34, "type"], [34, 35, "name"], [33, 36, "arguments"], [36, 37, "qualifier"], [36, 38, "member"], [18, 39, "cases"], [39, 40, "statements"], [40, 41, "expression"], [41, 42, "type"], [42, 43, "name"], [41, 44, "arguments"], [44, 45, "operandl"], [45, 46, "value"], [44, 47, "operator"], [44, 48, "operandr"], [48, 49, "member"]], "rem_roots": [32], "add_roots": []}, {"id": 154, "mappings": {"_inputEnd": "VAR_1", "_currInputProcessed": "VAR_2", "start": "VAR_3", "_inputPtr": "VAR_4", "buf": "VAR_5", "_currInputRowStart": "VAR_6", "end": "VAR_7", "_origBufferLen": "VAR_8", "_inputBuffer": "VAR_9", "_endOfInput": "VAR_10", "IOException": "TYPE_1", "feedInput": "METHOD_1", "_reportError": "METHOD_2", "\"Input end (%d) may not be before start (%d)\"": "STRING_1", "\"Still have %d undecoded bytes, should not call 'feedInput'\"": "STRING_2", "\"Already closed, can not feed more input\"": "STRING_3"}, "nodes": ["MethodDeclaration", "public", "void", "feedInput", "FormalParameter", "BasicType", "byte", "None", "buf", "FormalParameter", "BasicType", "int", "start", "FormalParameter", "BasicType", "int", "end", "IOException", "IfStatement", "BinaryOperation", "MemberReference", "_inputPtr", "<", "MemberReference", "_inputEnd", "BlockStatement", "StatementExpression", "MethodInvocation", "_reportError", "Literal", "\"Still have %d undecoded bytes, should not call 'feedInput'\"", "BinaryOperation", "MemberReference", "_inputEnd", "-", "MemberReference", "_inputPtr", "IfStatement", "BinaryOperation", "MemberReference", "end", "<", "MemberReference", "start", "BlockStatement", "StatementExpression", "MethodInvocation", "_reportError", "Literal", "\"Input end (%d) may not be before start (%d)\"", "MemberReference", "end", "MemberReference", "start", "IfStatement", "MemberReference", "_endOfInput", "BlockStatement", "StatementExpression", "MethodInvocation", "_reportError", "Literal", "\"Already closed, can not feed more input\"", "StatementExpression", "Assignment", "MemberReference", "_currInputProcessed", "+=", "MemberReference", "_origBufferLen", "StatementExpression", "Assignment", "MemberReference", "_currInputRowStart", "=", "BinaryOperation", "MemberReference", "start", "-", "BinaryOperation", "MemberReference", "_inputEnd", "-", "MemberReference", "_currInputRowStart", "StatementExpression", "Assignment", "MemberReference", "_inputBuffer", "=", "MemberReference", "buf", "StatementExpression", "Assignment", "MemberReference", "_inputPtr", "=", "MemberReference", "start", "StatementExpression", "Assignment", "MemberReference", "_inputEnd", "=", "MemberReference", "end", "StatementExpression", "Assignment", "MemberReference", "_origBufferLen", "=", "BinaryOperation", "MemberReference", "end", "-", "MemberReference", "start"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [0, 3, "name"], [0, 4, "parameters"], [4, 5, "type"], [5, 6, "name"], [5, 7, "dimensions"], [4, 8, "name"], [0, 9, "parameters"], [9, 10, "type"], [10, 11, "name"], [9, 12, "name"], [0, 13, "parameters"], [13, 14, "type"], [14, 15, "name"], [13, 16, "name"], [0, 17, "throws"], [0, 18, "body"], [18, 19, "condition"], [19, 20, "operandl"], [20, 21, "member"], [19, 22, "operator"], [19, 23, "operandr"], [23, 24, "member"], [18, 25, "then_statement"], [25, 26, "statements"], [26, 27, "expression"], [27, 28, "member"], [27, 29, "arguments"], [29, 30, "value"], [27, 31, "arguments"], [31, 32, "operandl"], [32, 33, "member"], [31, 34, "operator"], [31, 35, "operandr"], [35, 36, "member"], [0, 37, "body"], [37, 38, "condition"], [38, 39, "operandl"], [39, 40, "member"], [38, 41, "operator"], [38, 42, "operandr"], [42, 43, "member"], [37, 44, "then_statement"], [44, 45, "statements"], [45, 46, "expression"], [46, 47, "member"], [46, 48, "arguments"], [48, 49, "value"], [46, 50, "arguments"], [50, 51, "member"], [46, 52, "arguments"], [52, 53, "member"], [0, 54, "body"], [54, 55, "condition"], [55, 56, "member"], [54, 57, "then_statement"], [57, 58, "statements"], [58, 59, "expression"], [59, 60, "member"], [59, 61, "arguments"], [61, 62, "value"], [0, 63, "body"], [63, 64, "expression"], [64, 65, "expressionl"], [65, 66, "member"], [64, 67, "type"], [64, 68, "value"], [68, 69, "member"], [0, 70, "body"], [70, 71, "expression"], [71, 72, "expressionl"], [72, 73, "member"], [71, 74, "type"], [71, 75, "value"], [75, 76, "operandl"], [76, 77, "member"], [75, 78, "operator"], [75, 79, "operandr"], [79, 80, "operandl"], [80, 81, "member"], [79, 82, "operator"], [79, 83, "operandr"], [83, 84, "member"], [0, 85, "body"], [85, 86, "expression"], [86, 87, "expressionl"], [87, 88, "member"], [86, 89, "type"], [86, 90, "value"], [90, 91, "member"], [0, 92, "body"], [92, 93, "expression"], [93, 94, "expressionl"], [94, 95, "member"], [93, 96, "type"], [93, 97, "value"], [97, 98, "member"], [0, 99, "body"], [99, 100, "expression"], [100, 101, "expressionl"], [101, 102, "member"], [100, 103, "type"], [100, 104, "value"], [104, 105, "member"], [0, 106, "body"], [106, 107, "expression"], [107, 108, "expressionl"], [108, 109, "member"], [107, 110, "type"], [107, 111, "value"], [111, 112, "operandl"], [112, 113, "member"], [111, 114, "operator"], [111, 115, "operandr"], [115, 116, "member"]], "rem_roots": [85], "add_roots": []}, {"id": 155, "mappings": {"STATUS_OK_AFTER_COMMA": "VAR_1", "TYPE_ARRAY": "VAR_2", "STATUS_OK_AFTER_SPACE": "VAR_3", "_index": "VAR_4", "STATUS_OK_AS_IS": "VAR_5", "_type": "VAR_6", "_gotName": "VAR_7", "STATUS_OK_AFTER_COLON": "VAR_8", "TYPE_OBJECT": "VAR_9", "ix": "VAR_10", "writeValue": "METHOD_1", "0": "INT_1"}, "nodes": ["MethodDeclaration", "public", "BasicType", "int", "writeValue", "IfStatement", "BinaryOperation", "MemberReference", "_type", "==", "MemberReference", "TYPE_OBJECT", "BlockStatement", "StatementExpression", "Assignment", "MemberReference", "_gotName", "=", "Literal", "false", "StatementExpression", "MemberReference", "++", "_index", "ReturnStatement", "MemberReference", "STATUS_OK_AFTER_COLON", "IfStatement", "BinaryOperation", "MemberReference", "_type", "==", "MemberReference", "TYPE_ARRAY", "BlockStatement", "LocalVariableDeclaration", "BasicType", "int", "VariableDeclarator", "ix", "MemberReference", "_index", "StatementExpression", "MemberReference", "++", "_index", "ReturnStatement", "TernaryExpression", "BinaryOperation", "MemberReference", "ix", "<", "Literal", "0", "MemberReference", "STATUS_OK_AS_IS", "MemberReference", "STATUS_OK_AFTER_COMMA", "StatementExpression", "MemberReference", "++", "_index", "ReturnStatement", "TernaryExpression", "BinaryOperation", "MemberReference", "_index", "==", "Literal", "0", "MemberReference", "STATUS_OK_AS_IS", "MemberReference", "STATUS_OK_AFTER_SPACE"], "edges": [[0, 1, "modifiers"], [0, 2, "return_type"], [2, 3, "name"], [0, 4, "name"], [0, 5, "body"], [5, 6, "condition"], [6, 7, "operandl"], [7, 8, "member"], [6, 9, "operator"], [6, 10, "operandr"], [10, 11, "member"], [5, 12, "then_statement"], [12, 13, "statements"], [13, 14, "expression"], [14, 15, "expressionl"], [15, 16, "member"], [14, 17, "type"], [14, 18, "value"], [18, 19, "value"], [12, 20, "statements"], [20, 21, "expression"], [21, 22, "prefix_operators"], [21, 23, "member"], [12, 24, "statements"], [24, 25, "expression"], [25, 26, "member"], [0, 27, "body"], [27, 28, "condition"], [28, 29, "operandl"], [29, 30, "member"], [28, 31, "operator"], [28, 32, "operandr"], [32, 33, "member"], [27, 34, "then_statement"], [34, 35, "statements"], [35, 36, "type"], [36, 37, "name"], [35, 38, "declarators"], [38, 39, "name"], [38, 40, "initializer"], [40, 41, "member"], [34, 42, "statements"], [42, 43, "expression"], [43, 44, "prefix_operators"], [43, 45, "member"], [34, 46, "statements"], [46, 47, "expression"], [47, 48, "condition"], [48, 49, "operandl"], [49, 50, "member"], [48, 51, "operator"], [48, 52, "operandr"], [52, 53, "value"], [47, 54, "if_true"], [54, 55, "member"], [47, 56, "if_false"], [56, 57, "member"], [0, 58, "body"], [58, 59, "expression"], [59, 60, "prefix_operators"], [59, 61, "member"], [0, 62, "body"], [62, 63, "expression"], [63, 64, "condition"], [64, 65, "operandl"], [65, 66, "member"], [64, 67, "operator"], [64, 68, "operandr"], [68, 69, "value"], [63, 70, "if_true"], [70, 71, "member"], [63, 72, "if_false"], [72, 73, "member"]], "rem_roots": [13], "add_roots": []}, {"id": 158, "mappings": {"selfClosing": "VAR_1", "c": "VAR_2", "Data": "VAR_3", "r": "VAR_4", "t": "VAR_5", "BeforeAttributeName": "VAR_6", "t.tagPending": "VAR_7", "eof": "VAR_8", "CharacterReader": "TYPE_1", "Tokeniser": "TYPE_2", "emitTagPending": "METHOD_1", "read": "METHOD_2", "consume": "METHOD_3", "error": "METHOD_4", "transition": "METHOD_5", "eofError": "METHOD_6", "'>'": "CHAR_1"}, "nodes": ["MethodDeclaration", "void", "read", "FormalParameter", "ReferenceType", "Tokeniser", "t", "FormalParameter", "ReferenceType", "CharacterReader", "r", "LocalVariableDeclaration", "BasicType", "char", "VariableDeclarator", "c", "MethodInvocation", "r", "consume", "SwitchStatement", "MemberReference", "c", "SwitchStatementCase", "Literal", "'>'", "StatementExpression", "Assignment", "MemberReference", "t.tagPending", "selfClosing", "=", "Literal", "true", "StatementExpression", "MethodInvocation", "t", "emitTagPending", "StatementExpression", "MethodInvocation", "t", "transition", "MemberReference", "Data", "BreakStatement", "SwitchStatementCase", "eof", "StatementExpression", "MethodInvocation", "t", "eofError", "This", "StatementExpression", "MethodInvocation", "t", "transition", "MemberReference", "Data", "BreakStatement", "SwitchStatementCase", "StatementExpression", "MethodInvocation", "t", "error", "This", "StatementExpression", "MethodInvocation", "t", "transition", "MemberReference", "BeforeAttributeName"], "edges": [[0, 1, "return_type"], [0, 2, "name"], [0, 3, "parameters"], [3, 4, "type"], [4, 5, "name"], [3, 6, "name"], [0, 7, "parameters"], [7, 8, "type"], [8, 9, "name"], [7, 10, "name"], [0, 11, "body"], [11, 12, "type"], [12, 13, "name"], [11, 14, "declarators"], [14, 15, "name"], [14, 16, "initializer"], [16, 17, "qualifier"], [16, 18, "member"], [0, 19, "body"], [19, 20, "expression"], [20, 21, "member"], [19, 22, "cases"], [22, 23, "case"], [23, 24, "value"], [22, 25, "statements"], [25, 26, "expression"], [26, 27, "expressionl"], [27, 28, "qualifier"], [27, 29, "member"], [26, 30, "type"], [26, 31, "value"], [31, 32, "value"], [22, 33, "statements"], [33, 34, "expression"], [34, 35, "qualifier"], [34, 36, "member"], [22, 37, "statements"], [37, 38, "expression"], [38, 39, "qualifier"], [38, 40, "member"], [38, 41, "arguments"], [41, 42, "member"], [22, 43, "statements"], [19, 44, "cases"], [44, 45, "case"], [44, 46, "statements"], [46, 47, "expression"], [47, 48, "qualifier"], [47, 49, "member"], [47, 50, "arguments"], [44, 51, "statements"], [51, 52, "expression"], [52, 53, "qualifier"], [52, 54, "member"], [52, 55, "arguments"], [55, 56, "member"], [44, 57, "statements"], [19, 58, "cases"], [58, 59, "statements"], [59, 60, "expression"], [60, 61, "qualifier"], [60, 62, "member"], [60, 63, "arguments"], [58, 64, "statements"], [64, 65, "expression"], [65, 66, "qualifier"], [65, 67, "member"], [65, 68, "arguments"], [68, 69, "member"]], "rem_roots": [64], "add_roots": []}]